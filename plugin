<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<Meta name="ExplicitAutoJoints">true</Meta>
	<External>null</External>
	<External>nil</External>
	<Item class="Script" referent="RBX66FE7FD781FE41899E7DE273CD24D963">
		<Properties>
			<string name="AttributesSerialize"></string>
			<bool name="DefinesCapabilities">false</bool>
			<bool name="Disabled">false</bool>
			<UniqueId name="HistoryId">793a702cfff58dd608f229a400000ae8</UniqueId>
			<string name="LinkedSource"></string>
			<string name="Name">Lemonade</string>
			<token name="RunContext">0</token>
			<string name="ScriptGuid">{6bdd3c6f-5741-4608-a21a-7a7f974934ba}</string>
			<string name="Source">--!strict

-- =============================================================================
-- LOGGING CONTROL - Controlled by LogConfig.luau module
-- =============================================================================

local RunService = game:GetService(&quot;RunService&quot;)

if RunService:IsRunning() then
&#9;return
end

local Config = require(script.Config)
local Log = require(script.Log)
local LogConfig = require(script.LogConfig)
local App = require(script.App)
local HttpSync = require(script.Net.HttpSync)

Config.load()

-- Apply logging control
if LogConfig.ENABLE_LOGS then
&#9;Log.__setLevel(Config:get(&quot;LogLevel&quot;))
else
&#9;Log.__setLevel(&quot;Off&quot;) -- Silence all Log.* calls too
end

-- App.new() -- Defer App.new() until PROJECT_ID is confirmed

require(script.Scheduler.Poll)

-- Only listen for LogLevel changes if logs are enabled
if LogConfig.ENABLE_LOGS then
&#9;Config:onChanged(&quot;LogLevel&quot;, function(level)
&#9;&#9;Log.__setLevel(level)
&#9;end)
end

-- Roblox Services

Log.info(&quot;Lemonade plugin initialized&quot;)

-- Store Project ID from settings for easy access
local PROJECT_ID = plugin:GetSetting(&quot;PROJECT_ID&quot;)
-- if not PROJECT_ID or PROJECT_ID == &quot;&quot; then -- Comment out initial warning, fetch it first
-- &#9;Log.warn(&quot;PROJECT_ID setting is not configured in Lemonade plugin.&quot;)
-- end

-- Create a global reference to the App module
local appInstance = nil

-- Function to fetch and store Project ID
local function initializeProjectContext()
&#9;Log.info(&quot;[Lemonade DEBUG] initializeProjectContext: Starting...&quot;)

&#9;-- Clear any previously stored PROJECT_ID on startup
&#9;-- This ensures plugin only connects when project is actively open
&#9;plugin:SetSetting(&quot;PROJECT_ID&quot;, &quot;&quot;)
&#9;Log.info(&quot;[Lemonade DEBUG] Cleared stored PROJECT_ID on startup&quot;)

&#9;-- Check if there&apos;s an actively open project in the web interface
&#9;local function tryGetActiveProject()
&#9;&#9;local success, currentProjectId = pcall(function()
&#9;&#9;&#9;return HttpSync.checkCurrentProject(true)
&#9;&#9;end)

&#9;&#9;if success and currentProjectId and currentProjectId ~= &quot;&quot; then
&#9;&#9;&#9;Log.info(&quot;[Lemonade DEBUG] Found actively open project:&quot;, currentProjectId)
&#9;&#9;&#9;PROJECT_ID = currentProjectId
&#9;&#9;&#9;plugin:SetSetting(&quot;PROJECT_ID&quot;, PROJECT_ID)
&#9;&#9;&#9;return true
&#9;&#9;else
&#9;&#9;&#9;Log.info(&quot;[Lemonade DEBUG] No actively open project found:&quot;, currentProjectId or &quot;network error&quot;)
&#9;&#9;&#9;return false
&#9;&#9;end
&#9;end

&#9;-- Try to get active project from server
&#9;local foundActiveProject = tryGetActiveProject()

&#9;-- Create the refresh callback function
&#9;local function getProjectContextRefresher()
&#9;&#9;return function()
&#9;&#9;&#9;if appInstance then
&#9;&#9;&#9;&#9;Log.info(&quot;[Lemonade DEBUG] Project context refresher called&quot;)

&#9;&#9;&#9;&#9;-- Try to refresh and find actively open project
&#9;&#9;&#9;&#9;local refreshSuccess = tryGetActiveProject()
&#9;&#9;&#9;&#9;if refreshSuccess then
&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[Lemonade DEBUG] Project context refresh found active project&quot;)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[Lemonade DEBUG] Project context refresh found no active project&quot;)
&#9;&#9;&#9;&#9;&#9;-- Clear PROJECT_ID when no active project
&#9;&#9;&#9;&#9;&#9;PROJECT_ID = &quot;&quot;
&#9;&#9;&#9;&#9;&#9;plugin:SetSetting(&quot;PROJECT_ID&quot;, &quot;&quot;)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;appInstance:refreshProjectContext()
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.warn(&quot;[Lemonade DEBUG] Project context refresher called but appInstance is nil&quot;)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;-- Always initialize the app
&#9;Log.info(&quot;[Lemonade DEBUG] Initializing App with PROJECT_ID:&quot;, PROJECT_ID or &quot;nil&quot;)
&#9;appInstance = App.new(getProjectContextRefresher)

&#9;-- Final status log
&#9;if foundActiveProject and PROJECT_ID and PROJECT_ID ~= &quot;&quot; then
&#9;&#9;Log.info(
&#9;&#9;&#9;&quot;[Lemonade DEBUG] initializeProjectContext: Successfully initialized with active PROJECT_ID:&quot;,
&#9;&#9;&#9;PROJECT_ID
&#9;&#9;)
&#9;else
&#9;&#9;Log.info(
&#9;&#9;&#9;&quot;[Lemonade DEBUG] initializeProjectContext: No active project found. Plugin will show &apos;open project&apos; screen.&quot;
&#9;&#9;)
&#9;end

&#9;Log.info(&quot;[Lemonade DEBUG] initializeProjectContext: Finished.&quot;)
end

-- Call initializeProjectContext on plugin startup
-- Ensure HttpService is available; Roblox plugins load in a specific order.
-- A small delay can sometimes help if services aren&apos;t immediately ready.
task.wait(1) -- Brief wait for services to be fully ready
initializeProjectContext()
</string>
			<int64 name="SourceAssetId">-1</int64>
			<string name="Tags"></string>
			<UniqueId name="UniqueId">793a702cfff58dd608f229a400000ffe</UniqueId>
		</Properties>
		<Item class="Folder" referent="RBXB756B0F441F3426AB959A19D8C970A4D">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000ae9</UniqueId>
				<string name="Name">Net</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a400000fff</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBX028A75B73138439098CA4AB52E15CA17">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000aea</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">SyncOps</string>
					<string name="ScriptGuid">{049df1f0-b4d7-42d4-b675-14cc42a0d2c4}</string>
					<string name="Source">--!strict
local HttpCore = require(script.Parent.HttpCore)
local Serialization = require(script.Parent.Serialization)

-- Require Log module
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Log = require(Lemonade.Log)

-- Serialize and POST `{ userId, payload }` to /sync/push
local function pushSync(payload)
&#9;if payload == nil then
&#9;&#9;Log.warn(&quot;[SyncOps.pushSync] Called with nil payload &#226;&#128;&#147; aborting push&quot;)
&#9;&#9;return
&#9;end

&#9;-- Debug: Log the payload structure before processing
&#9;local payloadKeys = {}
&#9;if payload then
&#9;&#9;for key, _ in pairs(payload) do
&#9;&#9;&#9;table.insert(payloadKeys, key)
&#9;&#9;end
&#9;end
&#9;Log.info(&quot;[SyncOps.pushSync] Payload received. Keys:&quot;, table.concat(payloadKeys, &quot;, &quot;))
&#9;Log.debug(&quot;[SyncOps] PUSHING STUDIO CHANGES TO BACKEND. Keys:&quot;, table.concat(payloadKeys, &quot;, &quot;))
&#9;if payload.additions then
&#9;&#9;Log.info(&quot;[SyncOps.pushSync] Additions count:&quot;, #payload.additions)
&#9;end
&#9;if payload.updates then
&#9;&#9;Log.info(&quot;[SyncOps.pushSync] Updates count:&quot;, #payload.updates)
&#9;end
&#9;if payload.moves then
&#9;&#9;Log.info(&quot;[SyncOps.pushSync] Moves count:&quot;, #payload.moves)
&#9;end
&#9;if payload.removals then
&#9;&#9;Log.info(&quot;[SyncOps.pushSync] Removals count:&quot;, #payload.removals)
&#9;end

&#9;-- Convert Changes object to individual change objects for Convex
&#9;local changes = {}

&#9;-- Process additions
&#9;if payload.additions then
&#9;&#9;Log.debug(&quot;[SyncOps] Processing&quot;, #payload.additions, &quot;ADDITIONS&quot;)
&#9;&#9;for i, item in ipairs(payload.additions) do
&#9;&#9;&#9;Log.debug(&quot;[SyncOps] PROCESSING STUDIO ADDITION - name:&quot;, item.name, &quot;class:&quot;, item.class)
&#9;&#9;&#9;-- Previously we skipped non-script additions (except the JSONL pseudo-file). This prevented
&#9;&#9;&#9;-- imported Models/Tools/Folders from appearing on the web until a later full JSONL push.
&#9;&#9;&#9;-- We now allow all additions to flow to the backend. Non-scripts are handled by the server
&#9;&#9;&#9;-- by updating the projectStructure JSONL incrementally.
&#9;&#9;&#9;-- Convert buffer refs to strings
&#9;&#9;&#9;local itemId = item.id
&#9;&#9;&#9;if typeof(itemId) == &quot;buffer&quot; then
&#9;&#9;&#9;&#9;itemId = Serialization.refToString(itemId)
&#9;&#9;&#9;end

&#9;&#9;&#9;local parentId = item.parent
&#9;&#9;&#9;if typeof(parentId) == &quot;buffer&quot; then
&#9;&#9;&#9;&#9;parentId = Serialization.refToString(parentId)
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Handle children if they exist
&#9;&#9;&#9;local processedChildren = nil
&#9;&#9;&#9;if item.children then
&#9;&#9;&#9;&#9;processedChildren = {}
&#9;&#9;&#9;&#9;for childIdx, childSnap in ipairs(item.children) do
&#9;&#9;&#9;&#9;&#9;local cleanedChild = {
&#9;&#9;&#9;&#9;&#9;&#9;id = typeof(childSnap.id) == &quot;buffer&quot; and Serialization.refToString(childSnap.id)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;or childSnap.id,
&#9;&#9;&#9;&#9;&#9;&#9;parent = typeof(childSnap.parent) == &quot;buffer&quot; and Serialization.refToString(childSnap.parent)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;or childSnap.parent,
&#9;&#9;&#9;&#9;&#9;&#9;name = childSnap.name,
&#9;&#9;&#9;&#9;&#9;&#9;robloxClass = childSnap.class, -- VM expects robloxClass, not class
&#9;&#9;&#9;&#9;&#9;&#9;properties = childSnap.properties and Serialization.cleanBufferObjects(childSnap.properties)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;or nil,
&#9;&#9;&#9;&#9;&#9;&#9;content = childSnap.content,
&#9;&#9;&#9;&#9;&#9;&#9;uniqueId = childSnap.uniqueId or childSnap.id,
&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[SyncOps.pushSync] DEBUG: Processing child&quot;, childIdx, &quot;for addition&quot;, i)
&#9;&#9;&#9;&#9;&#9;Serialization.logDeepTable(cleanedChild, &quot;[SyncOps.pushSync] DEBUG Child &quot; .. childIdx .. &quot;: &quot;)
&#9;&#9;&#9;&#9;&#9;table.insert(processedChildren, cleanedChild)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Create change object for Convex
&#9;&#9;&#9;local change = {
&#9;&#9;&#9;&#9;operation = &quot;add&quot;,
&#9;&#9;&#9;&#9;id = itemId,
&#9;&#9;&#9;&#9;parentId = parentId, -- Fixed: backend expects parentId, not parent
&#9;&#9;&#9;&#9;name = item.name,
&#9;&#9;&#9;&#9;robloxClass = item.class, -- VM expects robloxClass, not class
&#9;&#9;&#9;&#9;path = item.filePath or item.path, -- ensure backend receives deterministic path
&#9;&#9;&#9;&#9;content = item.content,
&#9;&#9;&#9;&#9;properties = item.properties and Serialization.cleanBufferObjects(item.properties) or nil,
&#9;&#9;&#9;&#9;children = processedChildren,
&#9;&#9;&#9;&#9;-- Pass along Studio&apos;s 3-char uniqueId for direct lookup in JSONL hierarchy
&#9;&#9;&#9;&#9;uniqueId = item.uniqueId or itemId,
&#9;&#9;&#9;}

&#9;&#9;&#9;Log.info(&quot;[SyncOps.pushSync] DEBUG: Constructed &apos;add&apos; change&quot;, i)
&#9;&#9;&#9;Serialization.logDeepTable(change, &quot;[SyncOps.pushSync] DEBUG Add Change &quot; .. i .. &quot;: &quot;)
&#9;&#9;&#9;table.insert(changes, change)
&#9;&#9;&#9;Log.debug(&quot;[SyncOps.pushSync] Added &apos;add&apos; change for:&quot;, item.name)
&#9;&#9;end
&#9;end

&#9;-- Process updates
&#9;if payload.updates then
&#9;&#9;Log.debug(&quot;[SyncOps] Processing&quot;, #payload.updates, &quot;UPDATES&quot;)
&#9;&#9;for i, item in ipairs(payload.updates) do
&#9;&#9;&#9;local itemId = item.id
&#9;&#9;&#9;if typeof(itemId) == &quot;buffer&quot; then
&#9;&#9;&#9;&#9;itemId = Serialization.refToString(itemId)
&#9;&#9;&#9;end
&#9;&#9;&#9;if item.parent then
&#9;&#9;&#9;&#9;item.parent = Serialization.refToString(item.parent)
&#9;&#9;&#9;end

&#9;&#9;&#9;local content = item.content
&#9;&#9;&#9;if not content and item.properties and item.properties.Source and item.properties.Source.String then
&#9;&#9;&#9;&#9;content = item.properties.Source.String
&#9;&#9;&#9;end

&#9;&#9;&#9;-- DEBUG: Log the complete item structure to understand what ReadProcessor sends
&#9;&#9;&#9;Log.info(&quot;[SyncOps.pushSync] DEBUG: Complete item structure for update&quot;, i)
&#9;&#9;&#9;Serialization.logDeepTable(item, &quot;[SyncOps.pushSync] DEBUG Item &quot; .. i .. &quot;: &quot;)

&#9;&#9;&#9;-- Determine if this update is actually a move (parent change) OR a pure rename (same parent, different name)
&#9;&#9;&#9;-- ReadProcessor sets snapshot.isRename=true for rename operations.
&#9;&#9;&#9;local isParentMove = item.parent ~= nil
&#9;&#9;&#9;local isRename = item.isRename == true
&#9;&#9;&#9;local opType = (isParentMove or isRename) and &quot;move&quot; or &quot;update&quot;

&#9;&#9;&#9;-- Only skip non-script updates when they are truly content/prop updates.
&#9;&#9;&#9;-- Moves/renames for non-scripts must be allowed so the backend can perform
&#9;&#9;&#9;-- subtree path rewrites for descendant scripts.
&#9;&#9;&#9;if
&#9;&#9;&#9;&#9;opType == &quot;update&quot;
&#9;&#9;&#9;&#9;and not Serialization.isScriptClass(item.class)
&#9;&#9;&#9;&#9;and item.name ~= &quot;projectStructure&quot;
&#9;&#9;&#9;then
&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&quot;[SyncOps.pushSync] Skipping non-script update for&quot;,
&#9;&#9;&#9;&#9;&#9;item.path or item.id,
&#9;&#9;&#9;&#9;&#9;&quot;Class:&quot;,
&#9;&#9;&#9;&#9;&#9;item.class
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;end

&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&quot;[SyncOps DEBUG] PROCESSING STUDIO UPDATE - isRename:&quot;,
&#9;&#9;&#9;&#9;isRename,
&#9;&#9;&#9;&#9;&quot;opType:&quot;,
&#9;&#9;&#9;&#9;opType,
&#9;&#9;&#9;&#9;&quot;name:&quot;,
&#9;&#9;&#9;&#9;item.name
&#9;&#9;&#9;)
&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&quot;[SyncOps.pushSync] DEBUG: Classification for item&quot;,
&#9;&#9;&#9;&#9;i,
&#9;&#9;&#9;&#9;&quot;- isParentMove:&quot;,
&#9;&#9;&#9;&#9;isParentMove,
&#9;&#9;&#9;&#9;&quot;isRename:&quot;,
&#9;&#9;&#9;&#9;isRename,
&#9;&#9;&#9;&#9;&quot;opType:&quot;,
&#9;&#9;&#9;&#9;opType
&#9;&#9;&#9;)

&#9;&#9;&#9;local cleanedProperties = item.properties and Serialization.cleanBufferObjects(item.properties) or nil
&#9;&#9;&#9;local hasContent = content ~= nil
&#9;&#9;&#9;local hasProperties = cleanedProperties and next(cleanedProperties) ~= nil

&#9;&#9;&#9;-- Guard: Skip no-op updates that don&apos;t change content or properties.
&#9;&#9;&#9;-- These are commonly produced by generic &apos;Attributes&apos; change events immediately
&#9;&#9;&#9;-- after an instance is created and would otherwise overwrite script content
&#9;&#9;&#9;-- with an empty string on the backend.
&#9;&#9;&#9;if opType == &quot;update&quot; and (not hasContent and not hasProperties) then
&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncOps.pushSync] Skipping empty update for&quot;, item.path or itemId)
&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;end

&#9;&#9;&#9;local newPath = item.filePath or item.path
&#9;&#9;&#9;local change = {
&#9;&#9;&#9;&#9;operation = opType,
&#9;&#9;&#9;&#9;id = itemId,
&#9;&#9;&#9;&#9;name = item.name,
&#9;&#9;&#9;&#9;robloxClass = item.class, -- VM expects robloxClass, not class
&#9;&#9;&#9;&#9;content = content,
&#9;&#9;&#9;&#9;properties = cleanedProperties,
&#9;&#9;&#9;}
&#9;&#9;&#9;-- Always include uniqueId for backend lookups
&#9;&#9;&#9;change.uniqueId = item.uniqueId or itemId

&#9;&#9;&#9;-- Include path handling for both move and non-move operations
&#9;&#9;&#9;if opType ~= &quot;move&quot; then
&#9;&#9;&#9;&#9;change.path = newPath
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;-- For moves, send both source and destination paths for proper backend lookup
&#9;&#9;&#9;&#9;-- For renames, we need to construct the source path using the current path structure
&#9;&#9;&#9;&#9;if isRename then
&#9;&#9;&#9;&#9;&#9;-- For renames, the backend needs to find the existing node by uniqueId
&#9;&#9;&#9;&#9;&#9;-- and use its current path as the source path
&#9;&#9;&#9;&#9;&#9;change.sourcePath = newPath -- Temporary - backend will resolve actual source via uniqueId
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;change.sourcePath = item.oldPath or item.path -- Use oldPath if available, fallback to current path
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;change.destinationPath = newPath
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Add move-specific fields
&#9;&#9;&#9;if opType == &quot;move&quot; then
&#9;&#9;&#9;&#9;change.parentId = item.parent
&#9;&#9;&#9;&#9;-- For renames, the sourcePath should be the original path before the rename
&#9;&#9;&#9;&#9;-- Use the current path without the new name, then append the old name
&#9;&#9;&#9;&#9;if isRename and item.oldName then
&#9;&#9;&#9;&#9;&#9;local pathParts = {}
&#9;&#9;&#9;&#9;&#9;for part in string.gmatch(newPath, &quot;[^/]+&quot;) do
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(pathParts, part)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;-- Replace the last part (new name) with the old name
&#9;&#9;&#9;&#9;&#9;if #pathParts &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;pathParts[#pathParts] = item.oldName
&#9;&#9;&#9;&#9;&#9;&#9;change.sourcePath = table.concat(pathParts, &quot;/&quot;)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;change.sourcePath = item.oldName or newPath
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif not change.sourcePath then
&#9;&#9;&#9;&#9;&#9;-- Fallback: use current path as source if not already set
&#9;&#9;&#9;&#9;&#9;change.sourcePath = newPath
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;Log.info(&quot;[SyncOps.pushSync] DEBUG: Constructed &apos;&quot; .. change.operation .. &quot;&apos; change&quot;, i)
&#9;&#9;&#9;Serialization.logDeepTable(
&#9;&#9;&#9;&#9;change,
&#9;&#9;&#9;&#9;&quot;[SyncOps.pushSync] DEBUG &quot; .. string.upper(change.operation) .. &quot; Change &quot; .. i .. &quot;: &quot;
&#9;&#9;&#9;)
&#9;&#9;&#9;table.insert(changes, change)
&#9;&#9;&#9;Log.debug(&quot;[SyncOps.pushSync] Added &apos;&quot; .. change.operation .. &quot;&apos; change for:&quot;, item.name or itemId)
&#9;&#9;end
&#9;end

&#9;-- Process moves
&#9;if payload.moves then
&#9;&#9;Log.info(&quot;[SyncOps.pushSync] Processing&quot;, #payload.moves, &quot;MOVES&quot;)
&#9;&#9;for i, item in ipairs(payload.moves) do
&#9;&#9;&#9;-- Process all move operations, not just script files
&#9;&#9;&#9;-- Models and parts can now be moved and synced to VM filesystem
&#9;&#9;&#9;local itemId = item.id
&#9;&#9;&#9;if typeof(itemId) == &quot;buffer&quot; then
&#9;&#9;&#9;&#9;itemId = Serialization.refToString(itemId)
&#9;&#9;&#9;end

&#9;&#9;&#9;local newPath = item.filePath or item.path
&#9;&#9;&#9;local change = {
&#9;&#9;&#9;&#9;operation = &quot;move&quot;,
&#9;&#9;&#9;&#9;id = itemId,
&#9;&#9;&#9;&#9;name = item.name,
&#9;&#9;&#9;&#9;path = newPath,
&#9;&#9;&#9;&#9;sourcePath = newPath, -- TODO: Should be old path, but VM can derive from uniqueId
&#9;&#9;&#9;&#9;destinationPath = newPath,
&#9;&#9;&#9;&#9;parentId = item.parent,
&#9;&#9;&#9;&#9;uniqueId = item.uniqueId or itemId, -- Include uniqueId for disambiguation
&#9;&#9;&#9;}
&#9;&#9;&#9;Log.info(&quot;[SyncOps.pushSync] DEBUG: Constructed &apos;move&apos; change&quot;, i)
&#9;&#9;&#9;Serialization.logDeepTable(change, &quot;[SyncOps.pushSync] DEBUG Move Change &quot; .. i .. &quot;: &quot;)
&#9;&#9;&#9;table.insert(changes, change)
&#9;&#9;&#9;Log.debug(&quot;[SyncOps.pushSync] Added &apos;move&apos; change for:&quot;, itemId)
&#9;&#9;end
&#9;end

&#9;-- Process removals
&#9;if payload.removals then
&#9;&#9;for i, item in ipairs(payload.removals) do
&#9;&#9;&#9;local itemId = item
&#9;&#9;&#9;if type(item) == &quot;table&quot; and item.id then -- Check if item itself is a snapshot
&#9;&#9;&#9;&#9;itemId = typeof(item.id) == &quot;buffer&quot; and Serialization.refToString(item.id) or item.id
&#9;&#9;&#9;elseif typeof(item) == &quot;buffer&quot; then -- item is just a Ref buffer
&#9;&#9;&#9;&#9;itemId = Serialization.refToString(item)
&#9;&#9;&#9;end
&#9;&#9;&#9;-- If item is already a string (shouldn&apos;t happen if from Core as Ref), it&apos;s fine.

&#9;&#9;&#9;local change = {
&#9;&#9;&#9;&#9;operation = &quot;remove&quot;,
&#9;&#9;&#9;&#9;id = itemId,
&#9;&#9;&#9;&#9;uniqueId = itemId, -- Use the same ID for uniqueId since ReadProcessor now returns 3-char uniqueId
&#9;&#9;&#9;}
&#9;&#9;&#9;Log.info(&quot;[SyncOps.pushSync] DEBUG: Constructed &apos;remove&apos; change&quot;, i)
&#9;&#9;&#9;Serialization.logDeepTable(change, &quot;[SyncOps.pushSync] DEBUG Remove Change &quot; .. i .. &quot;: &quot;)
&#9;&#9;&#9;table.insert(changes, change)
&#9;&#9;&#9;Log.debug(&quot;[SyncOps.pushSync] Added &apos;remove&apos; change for:&quot;, itemId)
&#9;&#9;end
&#9;end

&#9;Log.info(&quot;[SyncOps.pushSync] Converted to&quot;, #changes, &quot;individual changes for Convex&quot;)

&#9;-- Get project ID from plugin settings
&#9;local projectId = HttpCore.getPlugin():GetSetting(&quot;PROJECT_ID&quot;)

&#9;-- CRITICAL: Log what project we&apos;re pushing to
&#9;Log.debug(&quot;[SyncOps.pushSync] PUSHING TO PROJECT:&quot;, projectId or &quot;NO PROJECT ID&quot;)

&#9;local body = {
&#9;&#9;clientId = HttpCore.CLIENT_ID,
&#9;&#9;robloxUserId = tostring(HttpCore.USER_ID),
&#9;&#9;changes = changes,
&#9;&#9;projectId = projectId, -- Include project ID in request
&#9;}

&#9;-- Debug: Check what&apos;s causing JSON encoding issues
&#9;Log.info(&quot;[SyncOps.pushSync] Constructed body to send. Changes count:&quot;, #changes)

&#9;local url = HttpCore.API_BASE_PATH .. &quot;/sync/push&quot;
&#9;local res = HttpCore.request(&quot;POST&quot;, &quot;sync/push&quot;, body, {
&#9;&#9;[&quot;X-Override-URL&quot;] = url,
&#9;})

&#9;if res then
&#9;&#9;Log.info(&quot;[SyncOps.pushSync] Backend response:&quot;, res.StatusCode, res.Body)

&#9;&#9;-- Parse and log the response to see if server is sending ID mappings
&#9;&#9;if res.StatusCode == 200 and res.Body then
&#9;&#9;&#9;local ok, decoded =
&#9;&#9;&#9;&#9;pcall(game:GetService(&quot;HttpService&quot;).JSONDecode, game:GetService(&quot;HttpService&quot;), res.Body)
&#9;&#9;&#9;if ok and decoded then
&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncOps.pushSync] Decoded response:&quot;, game:GetService(&quot;HttpService&quot;):JSONEncode(decoded))

&#9;&#9;&#9;&#9;-- Check if response contains ID mappings
&#9;&#9;&#9;&#9;if decoded.idMappings then
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncOps.pushSync] Server returned ID mappings!&quot;)
&#9;&#9;&#9;&#9;&#9;for _, mapping in decoded.idMappings do
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;  - Client ID:&quot;, mapping.clientChangeId, &quot;-&gt; Server ID:&quot;, mapping.serverId)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- Check individual change results
&#9;&#9;&#9;&#9;if decoded.results then
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncOps.pushSync] Server returned individual results:&quot;)
&#9;&#9;&#9;&#9;&#9;for i, result in decoded.results do
&#9;&#9;&#9;&#9;&#9;&#9;if result.clientChangeId and result.serverId then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;  - Change&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;i,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Client ID:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;result.clientChangeId,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;-&gt; Server ID:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;result.serverId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- Return the decoded response so Core can handle ID mapping updates
&#9;&#9;&#9;&#9;return decoded
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncOps.pushSync] Failed to decode response:&quot;, decoded)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;Log.warn(&quot;[SyncOps.pushSync] No response object returned from request.&quot;)
&#9;end
&#9;return res
end

local __firstPollDone = false
local __localCursor = nil -- Plugin-managed cursor storage

-- Long-poll the backend for the next payload (if any). The backend returns:
--   200 with JSON payload &#226;&#134;&#146; apply to tree
--   204 No Content       &#226;&#134;&#146; nothing to apply, continue polling
-- *@param timeout* is ignored by the new API but kept for compatibility with older callers.
-- *@param tree* is kept for compatibility but no longer used for Merkle calculations
local function pollSync(_timeout: number?, _projectId: string?)
&#9;-- Build the request body - plugin now manages cursor locally
&#9;local requestBody = {
&#9;&#9;clientId = HttpCore.CLIENT_ID,
&#9;&#9;robloxUserId = tostring(HttpCore.USER_ID),
&#9;&#9;studioVersion = &quot;Studio&quot;,
&#9;&#9;pluginVersion = &quot;1.0.0&quot;,
&#9;&#9;forceInitial = not __firstPollDone,
&#9;&#9;cursor = __localCursor, -- Send cursor from local storage
&#9;}

&#9;Log.trace(&quot;[SyncOps.pollSync] Polling with body:&quot;, requestBody)
&#9;Log.trace(&quot;[SyncOps.pollSync] Local cursor:&quot;, __localCursor or &quot;nil&quot;)
&#9;Log.trace(&quot;[TRACE pollSync] issuing /syncPoll&quot;, HttpCore.CLIENT_ID, _projectId or &quot;(no project)&quot;)

&#9;local headers = {}
&#9;if _projectId then
&#9;&#9;headers[&quot;X-Project-Id&quot;] = _projectId
&#9;&#9;Log.trace(&quot;[SyncOps.pollSync] Using X-Project-Id header:&quot;, _projectId)
&#9;end

&#9;local res = HttpCore.request(&quot;POST&quot;, &quot;syncPoll&quot;, requestBody, headers)
&#9;__firstPollDone = true

&#9;-- Update local cursor from response if provided
&#9;if res and res.Success and res.StatusCode == 200 and res.Body then
&#9;&#9;local ok, decoded = pcall(game:GetService(&quot;HttpService&quot;).JSONDecode, game:GetService(&quot;HttpService&quot;), res.Body)
&#9;&#9;if ok and decoded and decoded.cursor then
&#9;&#9;&#9;local oldCursor = __localCursor
&#9;&#9;&#9;__localCursor = decoded.cursor
&#9;&#9;&#9;Log.trace(&quot;[SyncOps.pollSync] Updated local cursor:&quot;, oldCursor, &quot;-&gt;&quot;, __localCursor)
&#9;&#9;end
&#9;end

&#9;return res -- Changed from sync/poll
end

local SyncOps = {
&#9;pushSync = pushSync,
&#9;pollSync = pollSync,
}

return SyncOps
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001000</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX128AFBB990F2402DB35EDBC27D9BF1AB">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000aeb</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">HttpSync</string>
					<string name="ScriptGuid">{f13cc04a-9dd7-418c-be11-c360a69209df}</string>
					<string name="Source">--!strict
-- Refactored HttpSync - now a facade that re-exports modular components

local SyncOps = require(script.Parent.SyncOps)
local ProjectApi = require(script.Parent.ProjectApi)
local HttpCore = require(script.Parent.HttpCore)
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Log = require(Lemonade.Log)

local bulkSessions = {} :: { [string]: { rootPath: string, nodes: { any } } }

-- Re-export the modular components for backward compatibility
local HttpSync = {
&#9;-- Core sync operations
&#9;pushSync = SyncOps.pushSync,
&#9;pollSync = SyncOps.pollSync,

&#9;-- Project utilities
&#9;fetchDetails = ProjectApi.fetchDetails,
&#9;getSnapshot = ProjectApi.getSnapshot,
&#9;getSnapshotById = ProjectApi.getSnapshotById,
&#9;open = ProjectApi.open,
&#9;currentProject = ProjectApi.currentProject,
&#9;checkCurrentProject = ProjectApi.checkCurrentProject,
&#9;setProjectStructureFast = ProjectApi.setProjectStructureFast,

&#9;-- Full Sync: Direct to VM via Convex action (no database storage)
&#9;fullSyncToVM = function(nodes: { any })
&#9;&#9;Log.info(&quot;[HttpSync.fullSyncToVM] Syncing&quot;, #nodes, &quot;nodes directly to VM&quot;)
&#9;&#9;local projectId = HttpCore.getPlugin():GetSetting(&quot;PROJECT_ID&quot;)
&#9;&#9;local body = {
&#9;&#9;&#9;projectId = projectId,
&#9;&#9;&#9;nodes = nodes,
&#9;&#9;}
&#9;&#9;local url = HttpCore.API_BASE_PATH .. &quot;/fullSyncToVM&quot;
&#9;&#9;local result = HttpCore.request(&quot;POST&quot;, &quot;fullSyncToVM&quot;, body, {
&#9;&#9;&#9;[&quot;X-Override-URL&quot;] = url,
&#9;&#9;&#9;[&quot;X-Project-Id&quot;] = projectId or &quot;&quot;,
&#9;&#9;})
&#9;&#9;Log.info(&quot;[HttpSync.fullSyncToVM] Result:&quot;, result and result.Success or &quot;failed&quot;)
&#9;&#9;return result
&#9;end,

&#9;bulkBegin = function(bulkId: string, rootPath: string, totalNodes: number)
&#9;&#9;Log.debug(&quot;[HttpSync.bulkBegin] Starting bulk session:&quot;, bulkId, &quot;rootPath:&quot;, rootPath, &quot;totalNodes:&quot;, totalNodes)
&#9;&#9;bulkSessions[bulkId] = {
&#9;&#9;&#9;rootPath = rootPath,
&#9;&#9;&#9;nodes = {},
&#9;&#9;}
&#9;&#9;return { success = true }
&#9;end,

&#9;bulkChunk = function(bulkId: string, chunkIndex: number, nodes: { any })
&#9;&#9;local session = bulkSessions[bulkId]
&#9;&#9;if not session then
&#9;&#9;&#9;Log.warn(&quot;[HttpSync.bulkChunk] No session found for bulkId:&quot;, bulkId)
&#9;&#9;&#9;return { error = &quot;Session not found&quot; }
&#9;&#9;end

&#9;&#9;Log.debug(&quot;[HttpSync.bulkChunk] Adding chunk&quot;, chunkIndex, &quot;with&quot;, #nodes, &quot;nodes to bulk session:&quot;, bulkId)

&#9;&#9;for _, node in ipairs(nodes) do
&#9;&#9;&#9;table.insert(session.nodes, node)
&#9;&#9;end

&#9;&#9;return {
&#9;&#9;&#9;ackIndex = chunkIndex,
&#9;&#9;&#9;suggestedChunkSize = 25,
&#9;&#9;&#9;sleepMs = 0,
&#9;&#9;}
&#9;end,

&#9;bulkCommit = function(bulkId: string)
&#9;&#9;local session = bulkSessions[bulkId]
&#9;&#9;if not session then
&#9;&#9;&#9;Log.warn(&quot;[HttpSync.bulkCommit] No session found for bulkId:&quot;, bulkId)
&#9;&#9;&#9;return { error = &quot;Session not found&quot; }
&#9;&#9;end

&#9;&#9;Log.info(&quot;[HttpSync.bulkCommit] Committing bulk session:&quot;, bulkId, &quot;with&quot;, #session.nodes, &quot;nodes&quot;)

&#9;&#9;if #session.nodes == 0 then
&#9;&#9;&#9;Log.warn(&quot;[HttpSync.bulkCommit] No nodes to commit for bulkId:&quot;, bulkId)
&#9;&#9;&#9;bulkSessions[bulkId] = nil
&#9;&#9;&#9;return { success = true, childrenCreated = 0 }
&#9;&#9;end

&#9;&#9;local parent = session.nodes[1]
&#9;&#9;local children = {}
&#9;&#9;for i = 2, #session.nodes do
&#9;&#9;&#9;table.insert(children, session.nodes[i])
&#9;&#9;end

&#9;&#9;local projectId = HttpCore.getPlugin():GetSetting(&quot;PROJECT_ID&quot;)
&#9;&#9;local body = {
&#9;&#9;&#9;projectId = projectId,
&#9;&#9;&#9;parent = {
&#9;&#9;&#9;&#9;uniqueId = parent.uniqueId,
&#9;&#9;&#9;&#9;name = parent.name,
&#9;&#9;&#9;&#9;robloxClass = parent.class,
&#9;&#9;&#9;&#9;parentId = parent.parentId,
&#9;&#9;&#9;},
&#9;&#9;&#9;children = {},
&#9;&#9;}

&#9;&#9;for _, child in ipairs(children) do
&#9;&#9;&#9;table.insert(body.children, {
&#9;&#9;&#9;&#9;uniqueId = child.uniqueId,
&#9;&#9;&#9;&#9;name = child.name,
&#9;&#9;&#9;&#9;robloxClass = child.class,
&#9;&#9;&#9;&#9;content = child.content,
&#9;&#9;&#9;})
&#9;&#9;end

&#9;&#9;local url = HttpCore.API_BASE_PATH .. &quot;/bulkCreateToVM&quot;
&#9;&#9;local result = HttpCore.request(&quot;POST&quot;, &quot;bulkCreateToVM&quot;, body, {
&#9;&#9;&#9;[&quot;X-Override-URL&quot;] = url,
&#9;&#9;&#9;[&quot;X-Project-Id&quot;] = projectId or &quot;&quot;,
&#9;&#9;})

&#9;&#9;bulkSessions[bulkId] = nil

&#9;&#9;if result and result.Success then
&#9;&#9;&#9;Log.info(&quot;[HttpSync.bulkCommit] Bulk create successful. Response:&quot;, result.Body)
&#9;&#9;&#9;return { success = true, childrenCreated = #children }
&#9;&#9;else
&#9;&#9;&#9;Log.error(&quot;[HttpSync.bulkCommit] Bulk create failed:&quot;, result and result.Body or &quot;no response&quot;)
&#9;&#9;&#9;return { error = &quot;Bulk create failed&quot; }
&#9;&#9;end
&#9;end,
}

return HttpSync
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001001</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX7B12C1A77236454A9065B3FF3E0BA56C">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000aec</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">ProjectApi</string>
					<string name="ScriptGuid">{28718de1-e184-4a62-87af-85454c7dfe50}</string>
					<string name="Source">--!strict
local HttpCore = require(script.Parent.HttpCore)
local HttpService = game:GetService(&quot;HttpService&quot;)

-- Require Log module
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Log = require(Lemonade.Log)

-- Minimal fast-path setter for JSONL project structure on connect
local function setProjectStructureFast(projectId: string, jsonl: string)
&#9;if not projectId or projectId == &quot;&quot; then
&#9;&#9;Log.warn(&quot;[ProjectApi.setProjectStructureFast] Missing projectId, skipping.&quot;)
&#9;&#9;return { Success = false, StatusCode = 400, Body = &quot;Missing projectId&quot; }
&#9;end

&#9;local path = &quot;setProjectStructureFast&quot;
&#9;local fullUrl = HttpCore.API_BASE_PATH .. &quot;/&quot; .. path

&#9;local body = {
&#9;&#9;projectId = projectId,
&#9;&#9;projectStructure = jsonl,
&#9;}

&#9;return HttpCore.request(&quot;POST&quot;, path, body, {
&#9;&#9;[&quot;X-Override-URL&quot;] = fullUrl,
&#9;})
end

local function fetchDetails(projectId)
&#9;-- This function is now intended to get more details after knowing the project ID.
&#9;-- It will call getProjectSnapshot as there&apos;s no direct &quot;details&quot; endpoint anymore.
&#9;if not projectId then
&#9;&#9;Log.warn(&quot;[ProjectApi.fetchDetails] Called without projectId.&quot;)
&#9;&#9;return {
&#9;&#9;&#9;Success = false,
&#9;&#9;&#9;StatusCode = 400,
&#9;&#9;&#9;StatusMessage = &quot;Bad Request: projectId is required for fetchDetails (uses getProjectSnapshot)&quot;,
&#9;&#9;&#9;Body = &quot;&quot;,
&#9;&#9;}
&#9;end

&#9;local path = &quot;getProjectSnapshot&quot; -- Target endpoint
&#9;local fullUrl = HttpCore.API_BASE_PATH .. &quot;/&quot; .. path .. &quot;?projectId=&quot; .. projectId
&#9;local body = {
&#9;&#9;userId = tostring(HttpCore.USER_ID),
&#9;}

&#9;Log.info(
&#9;&#9;&quot;[ProjectApi.fetchDetails] Calling POST to &quot;
&#9;&#9;&#9;.. fullUrl
&#9;&#9;&#9;.. &quot; for userId: &quot;
&#9;&#9;&#9;.. tostring(HttpCore.USER_ID)
&#9;&#9;&#9;.. &quot;, projectId: &quot;
&#9;&#9;&#9;.. projectId
&#9;)

&#9;return HttpCore.request(
&#9;&#9;&quot;POST&quot;,
&#9;&#9;path .. &quot;?projectId=&quot; .. projectId,
&#9;&#9;body,
&#9;&#9;{ -- Add projectId to path for request function
&#9;&#9;&#9;[&quot;X-Override-URL&quot;] = fullUrl,
&#9;&#9;}
&#9;)
end

local function getSnapshot(projectId)
&#9;local path = &quot;getProjectSnapshot&quot; -- Ensure this uses the correct active path from http.ts
&#9;local fullUrl = HttpCore.API_BASE_PATH .. &quot;/&quot; .. path -- Construct the full URL

&#9;local body = {
&#9;&#9;userId = tostring(HttpCore.USER_ID),
&#9;&#9;projectId = projectId, -- Add projectId if it&apos;s expected by the backend
&#9;}

&#9;Log.info(
&#9;&#9;&quot;[ProjectApi.getSnapshot] Calling POST to &quot;
&#9;&#9;&#9;.. fullUrl
&#9;&#9;&#9;.. &quot; for userId: &quot;
&#9;&#9;&#9;.. tostring(HttpCore.USER_ID)
&#9;&#9;&#9;.. (projectId and (&quot;, projectId: &quot; .. projectId) or &quot;&quot;)
&#9;)

&#9;return HttpCore.request(&quot;POST&quot;, path, body, { -- Path relative, fullUrl for override
&#9;&#9;[&quot;X-Override-URL&quot;] = fullUrl,
&#9;})
end

-- Fetch a specific instance snapshot by Ref/ID for LiveHydrate
local function getSnapshotById(id)
&#9;local refString
&#9;if typeof(id) == &quot;buffer&quot; then
&#9;&#9;-- The buffer is expected to contain a Base64-encoded path string
&#9;&#9;local ok, str_val = pcall(buffer.tostring, id)
&#9;&#9;if ok and str_val then
&#9;&#9;&#9;refString = str_val
&#9;&#9;else
&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&quot;[ProjectApi.getSnapshotById] Failed to convert Ref buffer to Base64 string. Using tostring fallback.&quot;
&#9;&#9;&#9;)
&#9;&#9;&#9;refString = tostring(id)
&#9;&#9;end
&#9;elseif typeof(id) == &quot;string&quot; then
&#9;&#9;refString = id
&#9;else
&#9;&#9;Log.error(&quot;[ProjectApi.getSnapshotById] Unexpected id type: &quot;, typeof(id), &quot;Value:&quot;, id)
&#9;&#9;refString = tostring(id)
&#9;end

&#9;local path = &quot;snapshot?id=&quot; .. refString
&#9;local url = HttpCore.API_BASE_PATH .. &quot;/&quot; .. path

&#9;return HttpCore.request(&quot;GET&quot;, path, nil, {
&#9;&#9;[&quot;X-Override-URL&quot;] = url,
&#9;})
end

local function open(id, line)
&#9;local url = HttpCore.API_BASE_PATH .. &quot;/open&quot;

&#9;HttpCore.request(&quot;POST&quot;, &quot;open&quot;, { ref = id, line = line }, {
&#9;&#9;[&quot;X-Override-URL&quot;] = url,
&#9;})
end

local function currentProject()
&#9;if HttpCore.USER_ID == 0 then
&#9;&#9;Log.warn(&quot;[ProjectApi.currentProject] Cannot fetch, user not signed into Studio.&quot;)
&#9;&#9;-- Return a simulated error structure
&#9;&#9;return {
&#9;&#9;&#9;Success = false,
&#9;&#9;&#9;StatusCode = 401,
&#9;&#9;&#9;StatusMessage = &quot;Unauthorized: Studio user not signed in&quot;,
&#9;&#9;&#9;Body = &quot;&quot;,
&#9;&#9;}
&#9;end

&#9;local path = &quot;getProjectDetails&quot; -- CHANGED path to match http.ts
&#9;local projectUrl = HttpCore.API_BASE_PATH .. &quot;/&quot; .. path
&#9;local body = { userId = tostring(HttpCore.USER_ID) } -- ADDED body, assuming handler might use it

&#9;Log.info(
&#9;&#9;&quot;[ProjectApi.currentProject] Calling POST to &quot; .. projectUrl .. &quot; for userId: &quot; .. tostring(HttpCore.USER_ID)
&#9;)

&#9;-- Use pcall because this might fail if the backend isn&apos;t running or network issues occur
&#9;local ok, res = pcall(HttpCore.request, &quot;POST&quot;, path, body, { -- CHANGED to POST, added body
&#9;&#9;[&quot;X-Override-URL&quot;] = projectUrl, -- Point to the correct absolute URL
&#9;})

&#9;if not ok then
&#9;&#9;Log.error(&quot;[ProjectApi.currentProject] Request pcall failed:&quot;, res) -- res contains the error message
&#9;&#9;-- Return a simulated error structure
&#9;&#9;return {
&#9;&#9;&#9;Success = false,
&#9;&#9;&#9;StatusCode = 500,
&#9;&#9;&#9;StatusMessage = &quot;Internal Server Error: pcall failed&quot;,
&#9;&#9;&#9;Body = tostring(res),
&#9;&#9;}
&#9;end

&#9;Log.info(
&#9;&#9;&quot;[ProjectApi.currentProject] Response received. Success: &quot;
&#9;&#9;&#9;.. tostring(res.Success)
&#9;&#9;&#9;.. &quot;, StatusCode: &quot;
&#9;&#9;&#9;.. tostring(res.StatusCode)
&#9;)
&#9;return res
end

-- New function to explicitly check for the current project ID (with forced refresh)
local function checkCurrentProject(forceRefresh) -- KEEPING forceRefresh param for now, though backend might not use it for this path
&#9;if HttpCore.USER_ID == 0 then
&#9;&#9;Log.warn(&quot;[ProjectApi.checkCurrentProject] Cannot fetch, user not signed into Studio.&quot;)
&#9;&#9;return nil -- This function returns projectId directly or nil
&#9;end

&#9;local path = &quot;getProjectDetails&quot; -- CORRECT path
&#9;local projectUrl = HttpCore.API_BASE_PATH .. &quot;/&quot; .. path
&#9;local body = { userId = tostring(HttpCore.USER_ID) } -- Body for getProjectDetails

&#9;Log.info(
&#9;&#9;&quot;[ProjectApi.checkCurrentProject] Calling POST to &quot;
&#9;&#9;&#9;.. projectUrl
&#9;&#9;&#9;.. &quot; for userId: &quot;
&#9;&#9;&#9;.. tostring(HttpCore.USER_ID)
&#9;&#9;&#9;.. (forceRefresh and &quot; (forceRefresh was true)&quot; or &quot;&quot;)
&#9;)

&#9;local ok, res = pcall(HttpCore.request, &quot;POST&quot;, path, body, { -- CHANGED to POST, added body
&#9;&#9;[&quot;X-Override-URL&quot;] = projectUrl,
&#9;&#9;[&quot;Cache-Control&quot;] = &quot;no-cache&quot;, -- Keep Cache-Control as it was
&#9;})

&#9;if not ok or not res.Success or res.StatusCode ~= 200 or res.Body == &quot;&quot; then
&#9;&#9;Log.warn(
&#9;&#9;&#9;&quot;[ProjectApi.checkCurrentProject] Failed to get current project details: &quot;
&#9;&#9;&#9;&#9;.. tostring(res and res.StatusCode or &quot;pcall error&quot;)
&#9;&#9;)
&#9;&#9;return nil
&#9;end

&#9;local ok2, decoded = pcall(HttpService.JSONDecode, HttpService, res.Body)
&#9;-- EXPECTING _id FROM THIS RESPONSE NOW
&#9;if not ok2 or not decoded or not decoded._id then -- CHANGED to expect _id
&#9;&#9;Log.warn(&quot;[ProjectApi.checkCurrentProject] Failed to decode project _id from response. Body: &quot; .. res.Body)
&#9;&#9;return nil
&#9;end

&#9;Log.info(&quot;[ProjectApi.checkCurrentProject] Current project _id: &quot; .. decoded._id)
&#9;return decoded._id -- RETURN _id
end

-- New function to post studio logs

local ProjectApi = {
&#9;fetchDetails = fetchDetails,
&#9;getSnapshot = getSnapshot,
&#9;getSnapshotById = getSnapshotById,
&#9;open = open,
&#9;currentProject = currentProject,
&#9;checkCurrentProject = checkCurrentProject,
&#9;setProjectStructureFast = setProjectStructureFast,
}

return ProjectApi
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001002</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX792AB09C4FAD410E8C16005E0B9AD59C">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000aed</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Serialization</string>
					<string name="ScriptGuid">{4942e8d7-a39a-434d-b96b-2a17954f8435}</string>
					<string name="Source">--!strict
local HttpService = game:GetService(&quot;HttpService&quot;)

-- Require Log module
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Log = require(Lemonade.Log)
local Types = require(Lemonade.Types)

local function getKeys(tbl: { [any]: any }?)
&#9;local keys = {}
&#9;if type(tbl) == &quot;table&quot; then
&#9;&#9;for k, _ in pairs(tbl) do
&#9;&#9;&#9;table.insert(keys, tostring(k)) -- Ensure keys are strings for table.concat
&#9;&#9;end
&#9;end
&#9;return keys
end

local function refToString(ref_buffer: Types.Ref)
&#9;local success, str_val = pcall(buffer.tostring, ref_buffer)
&#9;if success and str_val then
&#9;&#9;return str_val
&#9;else
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[Serialization.refToString] CRITICAL: Failed to convert Ref buffer to string. Original ref_buffer:&quot;,
&#9;&#9;&#9;ref_buffer,
&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;str_val or &quot;Unknown error&quot;
&#9;&#9;)
&#9;&#9;return &quot;ERROR_REF_BUFFER_TO_STRING_FAILED_&quot; .. HttpService:GenerateGUID(false)
&#9;end
end

-- Recursively clean buffer objects from any nested table structure
local function cleanBufferObjects(obj)
&#9;if typeof(obj) == &quot;buffer&quot; then
&#9;&#9;return refToString(obj)
&#9;elseif type(obj) == &quot;table&quot; then
&#9;&#9;local cleaned = {}
&#9;&#9;for key, value in pairs(obj) do
&#9;&#9;&#9;-- Ensure the key itself is a string if it was a buffer
&#9;&#9;&#9;local cleanedKey = typeof(key) == &quot;buffer&quot; and refToString(key) or key
&#9;&#9;&#9;cleaned[cleanedKey] = cleanBufferObjects(value)
&#9;&#9;end
&#9;&#9;return cleaned
&#9;else
&#9;&#9;return obj
&#9;end
end

-- Simplified debug helper for data structure inspection
local function logDeepTable(tbl, prefix)
&#9;prefix = prefix or &quot;&quot;
&#9;if type(tbl) ~= &quot;table&quot; then
&#9;&#9;Log.debug(prefix .. &quot;Value: &quot;, tbl)
&#9;&#9;return
&#9;end
&#9;Log.debug(prefix .. &quot;Table with keys: &quot;, table.concat(getKeys(tbl), &quot;, &quot;))
end

local function isScriptClass(className: string?): boolean
&#9;return className == &quot;Script&quot; or className == &quot;ModuleScript&quot; or className == &quot;LocalScript&quot;
end

local Serialization = {
&#9;refToString = refToString,
&#9;cleanBufferObjects = cleanBufferObjects,
&#9;logDeepTable = logDeepTable,
&#9;isScriptClass = isScriptClass,
&#9;getKeys = getKeys,
}

return Serialization
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001003</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX9DA97F733E694CF5875D258C980E0902">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000aee</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">HttpCore</string>
					<string name="ScriptGuid">{c6be4920-d982-4962-93dc-99694f8ada8d}</string>
					<string name="Source">--!strict

local HttpService = game:GetService(&quot;HttpService&quot;)
local plugin = script:FindFirstAncestorWhichIsA(&quot;Plugin&quot;)
local StudioService = game:GetService(&quot;StudioService&quot;)

-- Require Log module
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Log = require(Lemonade.Log)

-- Default to the production Lemonade backend URL
local PRODUCTION_BACKEND_URL = &quot;https://actions.lemonade.gg&quot; -- SET TO PRODUCTION HTTP ACTIONS URL
-- local PRODUCTION_BACKEND_URL = &quot;https://patient-mink-231.convex.site&quot; -- SET TO DEVELOPMENT HTTP ACTIONS URL

-- More robust determination of lemonadeBackendUrl
local devOverrideUrlSetting = plugin:GetSetting(&quot;BACKEND_URL&quot;)
local lemonadeBackendUrl = PRODUCTION_BACKEND_URL -- Default

if type(devOverrideUrlSetting) == &quot;string&quot; and devOverrideUrlSetting ~= &quot;&quot; then
&#9;lemonadeBackendUrl = devOverrideUrlSetting -- Use override only if it&apos;s a non-empty string
&#9;Log.info(&quot;[HttpCore] Using development backend URL override: &quot; .. lemonadeBackendUrl)
elseif devOverrideUrlSetting ~= nil then -- CORRECTED: Changed elif to elseif
&#9;if type(devOverrideUrlSetting) ~= &quot;string&quot; or devOverrideUrlSetting == &quot;&quot; then
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[HttpCore] Invalid BACKEND_URL setting. Type: &quot;,
&#9;&#9;&#9;typeof(devOverrideUrlSetting),
&#9;&#9;&#9;&quot;, Value: &quot;,
&#9;&#9;&#9;tostring(devOverrideUrlSetting),
&#9;&#9;&#9;&quot;. Using PRODUCTION_BACKEND_URL.&quot;
&#9;&#9;)
&#9;end
&#9;-- If it was nil, or a valid non-empty string, those cases are handled.
end

local API_BASE_PATH = lemonadeBackendUrl

-- Capture the authenticated Studio user once; returns 0 if not signed in (rare)
local USER_ID = StudioService:GetUserId()

-- Generate a unique client ID for this plugin session
local function generateClientId(): string
&#9;return &quot;plugin_&quot;
&#9;&#9;.. tostring(USER_ID)
&#9;&#9;.. &quot;_&quot;
&#9;&#9;.. tostring(math.floor(tick() * 1000))
&#9;&#9;.. &quot;_&quot;
&#9;&#9;.. HttpService:GenerateGUID(false):gsub(&quot;-&quot;, &quot;&quot;):sub(1, 8)
end

-- Store the client ID persistently for this session
local CLIENT_ID = plugin:GetSetting(&quot;CLIENT_ID&quot;)
if not CLIENT_ID or CLIENT_ID == &quot;&quot; then
&#9;CLIENT_ID = generateClientId()
&#9;plugin:SetSetting(&quot;CLIENT_ID&quot;, CLIENT_ID)
&#9;Log.info(&quot;[HttpCore] Generated new CLIENT_ID: &quot; .. CLIENT_ID)
else
&#9;Log.info(&quot;[HttpCore] Using existing CLIENT_ID: &quot; .. CLIENT_ID)
end

local function getKeys(tbl: { [any]: any }?)
&#9;local keys = {}
&#9;if type(tbl) == &quot;table&quot; then
&#9;&#9;for k, _ in pairs(tbl) do
&#9;&#9;&#9;table.insert(keys, tostring(k)) -- Ensure keys are strings for table.concat
&#9;&#9;end
&#9;end
&#9;return keys
end

local function request(method: string, path: string, body: any?, extraHeaders: { [string]: string }?)
&#9;local headers = {
&#9;&#9;[&quot;Content-Type&quot;] = &quot;application/json&quot;,
&#9;&#9;-- Always tell backend which Roblox account is running the plugin
&#9;&#9;[&quot;X-User-Id&quot;] = tostring(USER_ID),
&#9;}

&#9;if extraHeaders then
&#9;&#9;for k, v in extraHeaders do
&#9;&#9;&#9;headers[k] = v
&#9;&#9;end
&#9;end

&#9;-- Default URL uses the centralized API base path
&#9;local url = string.format(&quot;%s/%s&quot;, API_BASE_PATH, path)

&#9;-- Check for URL override in headers (still useful for potentially hitting non-lemonade endpoints if needed)
&#9;if extraHeaders and extraHeaders[&quot;X-Override-URL&quot;] then
&#9;&#9;url = extraHeaders[&quot;X-Override-URL&quot;]
&#9;&#9;-- Remove from headers to avoid sending it to the server
&#9;&#9;headers[&quot;X-Override-URL&quot;] = nil
&#9;end

&#9;-- Log all requests consistently
&#9;Log.debug(
&#9;&#9;string.format(&quot;[HttpCore] Sending %s request to %s. Body is %s&quot;, method, url, body and &quot;PRESENT&quot; or &quot;NIL&quot;)
&#9;)
&#9;Log.debug(string.format(&quot;[HttpCore] Headers: X-User-Id=%s&quot;, headers[&quot;X-User-Id&quot;] or &quot;nil&quot;))

&#9;local encodedBodyJson
&#9;local jsonEncodeSuccess = true

&#9;if body then
&#9;&#9;jsonEncodeSuccess, encodedBodyJson = pcall(HttpService.JSONEncode, HttpService, body)
&#9;&#9;if not jsonEncodeSuccess then
&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&quot;[HttpCore FATAL] HttpService:JSONEncode FAILED for path: &quot;,
&#9;&#9;&#9;&#9;path,
&#9;&#9;&#9;&#9;&quot; Error: &quot;,
&#9;&#9;&#9;&#9;tostring(encodedBodyJson)
&#9;&#9;&#9;) -- encodedBodyJson is error here
&#9;&#9;&#9;-- Optionally, log the body itself if it&apos;s not too large or complex, or parts of it
&#9;&#9;&#9;if type(body) == &quot;table&quot; and body.changes and type(body.changes) == &quot;table&quot; then
&#9;&#9;&#9;&#9;Log.error(&quot;[HttpCore FATAL] JSONEncode FAILED. Number of changes in body: &quot;, #body.changes)
&#9;&#9;&#9;elseif type(body) == &quot;table&quot; then
&#9;&#9;&#9;&#9;Log.error(&quot;[HttpCore FATAL] JSONEncode FAILED. Body keys: &quot;, table.concat(getKeys(body), &quot;, &quot;)) -- Helper needed for getKeys
&#9;&#9;&#9;end
&#9;&#9;&#9;return nil -- Exit early if JSON encoding fails, as the request can&apos;t be made
&#9;&#9;end
&#9;&#9;Log.debug(&quot;[HttpCore] Successfully JSONEncoded body for path: &quot;, path)
&#9;else
&#9;&#9;encodedBodyJson = nil
&#9;end

&#9;local pcallSuccess, res = pcall(HttpService.RequestAsync, HttpService, {
&#9;&#9;Url = url,
&#9;&#9;Method = method,
&#9;&#9;Headers = headers,
&#9;&#9;Body = encodedBodyJson, -- Use the result of the pcalled JSONEncode
&#9;})

&#9;if not pcallSuccess then
&#9;&#9;Log.warn(&quot;[HttpCore] pcall to HttpService.RequestAsync FAILED. Error: &quot;, tostring(res)) -- &apos;res&apos; here is the error message
&#9;elseif res then
&#9;&#9;Log.debug(
&#9;&#9;&#9;string.format(
&#9;&#9;&#9;&#9;&quot;[HttpCore] Response Success: %s, StatusCode: %s&quot;,
&#9;&#9;&#9;&#9;tostring(res.Success),
&#9;&#9;&#9;&#9;tostring(res.StatusCode)
&#9;&#9;&#9;)
&#9;&#9;)
&#9;&#9;if type(res.Body) == &quot;string&quot; and #res.Body &lt; 500 then -- Log short bodies
&#9;&#9;&#9;Log.debug(&quot;[HttpCore] Response Body: &quot;, res.Body)
&#9;&#9;else
&#9;&#9;&#9;Log.debug(&quot;[HttpCore] Response Body: (Too long to log fully or not a string)&quot;)
&#9;&#9;end
&#9;else
&#9;&#9;Log.warn(&quot;[HttpCore] pcall to HttpService.RequestAsync succeeded but &apos;res&apos; object is nil. This is unexpected.&quot;)
&#9;end

&#9;-- Defensive formatting for logging
&#9;local statusCodeNum = (res and res.StatusCode and tonumber(res.StatusCode)) or -1

&#9;-- Log response details for debugging
&#9;if statusCodeNum &gt;= 400 then
&#9;&#9;Log.warn(string.format(&quot;[HttpCore] Error response %d: %s&quot;, statusCodeNum, res.Body or &quot;&quot;))
&#9;else
&#9;&#9;Log.debug(string.format(&quot;[HttpCore] Response %d received&quot;, statusCodeNum))
&#9;end

&#9;return res
end

local HttpCore = {
&#9;request = request,
&#9;CLIENT_ID = CLIENT_ID,
&#9;USER_ID = USER_ID,
&#9;API_BASE_PATH = API_BASE_PATH,
&#9;getPlugin = function()
&#9;&#9;return plugin
&#9;end,
}

return HttpCore
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001004</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBXC4514A4AABFE409B9427626F2A660224">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000aef</UniqueId>
				<string name="LinkedSource"></string>
				<string name="Name">Core</string>
				<string name="ScriptGuid">{94c23c93-caa9-4692-8011-5d76d7e5711e}</string>
				<string name="Source">--!strict

--[[
&#9;Core/init.luau
&#9;
&#9;Thin orchestrator that creates managers, wires signals, and provides public API.
&#9;This module has been refactored to delegate most functionality to specialized managers
&#9;while maintaining the same external interface.
&#9;
&#9;Primary responsibilities:
&#9;- Initialize and coordinate managers (ProjectManager, InstanceManager, SyncCoordinator)
&#9;- Provide public API surface for external code
&#9;- Handle lightweight operations like callbacks and status management
&#9;- Orchestrate the startup sequence (project &#226;&#134;&#146; instance &#226;&#134;&#146; sync)
]]

local LogConfig = require(script.Parent.LogConfig)
local ScriptEditorService = game:GetService(&quot;ScriptEditorService&quot;)
-- Project hierarchy and JSONL logic moved to ProjectManager.luau

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Promise = require(Lemonade.Packages.Promise)

local Config = require(Lemonade.Config)
local Log = require(Lemonade.Log)
local Util = require(Lemonade.Util)
local Types = require(Lemonade.Types)
local Watcher = require(Lemonade.Watcher)
-- Legacy imports and Executor stub removed - no longer needed for ID-based workflow

local Processor = require(script.Processor)
local Changes = require(script.Changes)
local Tree = require(script.Tree)
local Error = require(script.Error)
local HttpSync = require(script.Parent.Net.HttpSync)

local ProjectManager = require(script.ProjectManager)
local InstanceManager = require(script.InstanceManager)
local SyncCoordinator = require(script.SyncCoordinator)
local BulkImport = require(script.BulkImport)

-- Sync timing constants moved to SyncCoordinator.luau

-- (helpers removed &#226;&#128;&#147; see rationale comment above)

local Core = {
&#9;Status = {
&#9;&#9;Disconnected = 0,
&#9;&#9;Connecting = 1,
&#9;&#9;Connected = 2,
&#9;&#9;Disconnecting = 3,
&#9;},
}
Core.__index = Core

function Core.new(pluginArg, projectId: string?, getProjectContextRefresherCb: (() -&gt; () -&gt; ())?)
&#9;-- host/port params kept for backward compatibility but unused; connection handled by HttpSync now
&#9;local self = setmetatable({}, Core)

&#9;self.plugin = pluginArg -- Store the plugin instance
&#9;self.getProjectContextRefresherCb = getProjectContextRefresherCb -- Store the callback getter
&#9;self.rootInstances = {}
&#9;self.connections = {}
&#9;self.status = Core.Status.Disconnected -- Start disconnected
&#9;-- Initialize lastSync far in the past so initial local events are not debounce-skipped
&#9;self.lastSync = 0
&#9;self.lastLocalChangeTime = os.clock() -- Initialize time of last local change

&#9;-- Initialize managers as specified in the refactor plan
&#9;self.projectManager = ProjectManager.new(pluginArg)
&#9;self.tree = Tree.new()
&#9;self.processor = Processor.new(self.tree, HttpSync)
&#9;self.watcher = Watcher.new(self.tree)
&#9;self.instanceManager = InstanceManager.new(self.tree, self.processor)
&#9;self.bulkImport = BulkImport.new(self.tree, self.processor.read, HttpSync)
&#9;-- Expose bulkImport to watcher to allow hot-path suppression
&#9;self.watcher.bulkImport = self.bulkImport
&#9;-- SyncCoordinator will be initialized after actualProjectContextRefresher is set

&#9;self.__prompt = function(_message: string, _changes: Types.Changes?): boolean
&#9;&#9;return true
&#9;end
&#9;self.__ready = function(_project: Types.Project) end
&#9;self.__sync = function(_kind: Types.MessageKind | string, _data: any) end -- Allow string kind for poll loop

&#9;self:__handleOpenInEditor(Config:get(&quot;OpenInEditor&quot;))

&#9;-- Store the actual refresher function if the getter is present
&#9;if self.getProjectContextRefresherCb then
&#9;&#9;self.actualProjectContextRefresher = self.getProjectContextRefresherCb()
&#9;else
&#9;&#9;self.actualProjectContextRefresher = nil
&#9;end

&#9;-- Initialize SyncCoordinator with proper dependencies as per refactor plan
&#9;self.syncCoordinator = SyncCoordinator.new(
&#9;&#9;self.tree,
&#9;&#9;self.instanceManager,
&#9;&#9;self.watcher,
&#9;&#9;self.processor,
&#9;&#9;pluginArg,
&#9;&#9;self.actualProjectContextRefresher
&#9;)
&#9;-- Provide back-reference so SyncCoordinator can access bulkImport
&#9;self.syncCoordinator.core = self
&#9;self.syncCoordinator:setStatus(self.status, Core.Status)
&#9;self.syncCoordinator:setSyncCallback(function(kind, data)
&#9;&#9;self.__sync(kind, data)
&#9;end)

&#9;-- Set initial project ID if provided
&#9;if projectId and self.plugin then
&#9;&#9;self.projectManager:updateProjectId(projectId)
&#9;end

&#9;table.insert(
&#9;&#9;self.connections,
&#9;&#9;Config:onChanged(&quot;OpenInEditor&quot;, function(enabled)
&#9;&#9;&#9;self:__handleOpenInEditor(enabled)
&#9;&#9;end)
&#9;)

&#9;table.insert(
&#9;&#9;self.connections,
&#9;&#9;Config:onChanged(&quot;TwoWaySync&quot;, function(enabled)
&#9;&#9;&#9;if self.status == Core.Status.Connected then
&#9;&#9;&#9;&#9;if enabled then
&#9;&#9;&#9;&#9;&#9;self.watcher:start(self.rootInstances)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;self.watcher:stop()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;)

&#9;return self
end

-- Helper method to get current project ID - delegates to ProjectManager
function Core:getProjectId(): string
&#9;return self.projectManager:getProjectId()
end

-- Manual sync method - delegates to InstanceManager
function Core:manualSyncInstance(instance: Instance)
&#9;self.instanceManager:manualSyncInstance(instance)
end

-- Force a full sync - delegates to InstanceManager
function Core:forceFullSync(batchSize: number?, onProgress: ((number) -&gt; ())?, onDone: (() -&gt; ())?)
&#9;self.instanceManager:forceFullSync(self.rootInstances, self.watcher, batchSize, onProgress, onDone)
end

function Core:run(): Promise.Promise
&#9;Log.debug(&quot;[Core DEBUG] ==== CORE RUN FUNCTION STARTED ====&quot;)
&#9;Log.debug(&quot;[Core DEBUG] TwoWaySync setting:&quot;, Config:get(&quot;TwoWaySync&quot;))
&#9;return Promise.new(function(_, reject)
&#9;&#9;self.status = Core.Status.Connected -- Assume connected immediately
&#9;&#9;self.syncCoordinator:setStatus(self.status, Core.Status)

&#9;&#9;local initialSyncPriority = Config:get(&quot;InitialSyncPriority&quot;)

&#9;&#9;-- Phase 1: Project initialization - delegate to ProjectManager
&#9;&#9;Log.trace(&quot;[Core] Step 1: ProjectManager initialization&quot;)
&#9;&#9;local projectResult, projectError = self.projectManager:initialize()
&#9;&#9;if not projectResult then
&#9;&#9;&#9;return reject(Error.new(Error.Disconnected, projectError))
&#9;&#9;end

&#9;&#9;local projectProperties = projectResult.projectProperties
&#9;&#9;local snapshotArray = projectResult.snapshotArray

&#9;&#9;-- If connecting to an empty web project, auto-detect and use Client priority
&#9;&#9;-- to push Studio content to the web
&#9;&#9;local snapshotArrayEmpty = not snapshotArray or #snapshotArray == 0
&#9;&#9;local shouldUseClientPriority = snapshotArrayEmpty and initialSyncPriority == &quot;Server&quot;

&#9;&#9;if shouldUseClientPriority then
&#9;&#9;&#9;Log.info(&quot;[Core] Detected empty web project - switching to Client priority to push Studio content&quot;)
&#9;&#9;&#9;initialSyncPriority = &quot;Client&quot;
&#9;&#9;end

&#9;&#9;-- Phase 2: Instance hydration - delegate to InstanceManager
&#9;&#9;Log.trace(&quot;[Core] Step 2: InstanceManager hydration&quot;)
&#9;&#9;local rootSnapshot = self.instanceManager:hydrate(snapshotArray, projectProperties)

&#9;&#9;-- Phase 2.5: First-time setup - create hello lemonade script
&#9;&#9;self:__checkFirstTimeSetup(snapshotArrayEmpty)

&#9;&#9;self.project = projectProperties -- Assign the parsed properties object

&#9;&#9;self:__verifyProject(projectProperties, true):expect() -- Verify compatibility etc. using projectProperties

&#9;&#9;Log.trace(&quot;[Core] Initializing processor with snapshot...&quot;)
&#9;&#9;local changes = self.processor:init(rootSnapshot, initialSyncPriority)

&#9;&#9;-- CRITICAL: Rebuild rootRefs AFTER hydration completes
&#9;&#9;-- Hydration may overwrite IDs in the tree, so we need to get fresh IDs
&#9;&#9;-- from the tree after hydration to ensure rootRefs matches tree state
&#9;&#9;if projectProperties then
&#9;&#9;&#9;Log.debug(&quot;[Core] Rebuilding rootRefs after hydration&quot;)
&#9;&#9;&#9;projectProperties.rootRefs = {}

&#9;&#9;&#9;-- Get all services and add their current tree IDs to rootRefs
&#9;&#9;&#9;local standardServices = {
&#9;&#9;&#9;&#9;&quot;Workspace&quot;,
&#9;&#9;&#9;&#9;&quot;ReplicatedStorage&quot;,
&#9;&#9;&#9;&#9;&quot;ReplicatedFirst&quot;,
&#9;&#9;&#9;&#9;&quot;ServerScriptService&quot;,
&#9;&#9;&#9;&#9;&quot;ServerStorage&quot;,
&#9;&#9;&#9;&#9;&quot;StarterGui&quot;,
&#9;&#9;&#9;&#9;&quot;StarterPack&quot;,
&#9;&#9;&#9;&#9;&quot;StarterPlayer&quot;,
&#9;&#9;&#9;}

&#9;&#9;&#9;for _, serviceName in ipairs(standardServices) do
&#9;&#9;&#9;&#9;local service = game:GetService(serviceName)
&#9;&#9;&#9;&#9;if service then
&#9;&#9;&#9;&#9;&#9;local serviceIdBuffer = self.tree:getId(service) -- Returns buffer, not string
&#9;&#9;&#9;&#9;&#9;if serviceIdBuffer then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(projectProperties.rootRefs, serviceIdBuffer)
&#9;&#9;&#9;&#9;&#9;&#9;local serviceIdString = buffer.tostring(serviceIdBuffer)
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Core] Added&quot;, serviceName, &quot;to rootRefs with ID:&quot;, serviceIdString)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[Core] Service&quot;, serviceName, &quot;has no ID in tree after hydration&quot;)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;Log.info(&quot;[Core] Rebuilt rootRefs with&quot;, #projectProperties.rootRefs, &quot;entries after hydration&quot;)
&#9;&#9;end

&#9;&#9;-- Debug logging for initial changes
&#9;&#9;Log.info(&quot;[Core] Initial diff complete. Changes detected:&quot;)
&#9;&#9;Log.info(&quot;[Core] - Additions:&quot;, #changes.additions)
&#9;&#9;Log.info(&quot;[Core] - Updates:&quot;, #changes.updates)
&#9;&#9;Log.info(&quot;[Core] - Removals:&quot;, #changes.removals)
&#9;&#9;Log.info(&quot;[Core] Initial sync priority:&quot;, initialSyncPriority)

&#9;&#9;-- CORRUPTION DETECTION: Disabled - rootRef counts can legitimately exceed 8
&#9;&#9;-- when reconnecting to projects with existing content (services + children)
&#9;&#9;-- If tree corruption becomes an issue, implement smarter duplicate detection
&#9;&#9;-- instead of a simple count threshold

&#9;&#9;-- Populate self.rootInstances from projectProperties.rootRefs
&#9;&#9;-- rootRefs was rebuilt after hydration, so all IDs should be valid
&#9;&#9;if projectProperties and projectProperties.rootRefs then
&#9;&#9;&#9;Log.debug(&quot;[Core] Populating rootInstances from&quot;, #projectProperties.rootRefs, &quot;rootRefs&quot;)
&#9;&#9;&#9;for i, id in ipairs(projectProperties.rootRefs) do
&#9;&#9;&#9;&#9;local inst = self.tree:getInstance(id)
&#9;&#9;&#9;&#9;if inst then
&#9;&#9;&#9;&#9;&#9;table.insert(self.rootInstances, inst)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Core] Added rootInstance:&quot;, inst:GetFullName())
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[Core ERROR] Could not find instance for rootRef ID - this should not happen!&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Index:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;i,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Type:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;typeof(id)
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;Log.info(&quot;[Core] Populated&quot;, #self.rootInstances, &quot;rootInstances&quot;)
&#9;&#9;else
&#9;&#9;&#9;Log.warn(&quot;[Core] projectProperties.rootRefs is nil&quot;)
&#9;&#9;end

&#9;&#9;-- Fallback: If no valid rootInstances, use standard Roblox services for Lemonade
&#9;&#9;if #self.rootInstances == 0 then
&#9;&#9;&#9;Log.debug(&quot;[Core DEBUG] No valid rootInstances found, using standard Roblox services as fallback&quot;)
&#9;&#9;&#9;local standardServices = {
&#9;&#9;&#9;&#9;&quot;Workspace&quot;,
&#9;&#9;&#9;&#9;&quot;ReplicatedStorage&quot;,
&#9;&#9;&#9;&#9;&quot;ReplicatedFirst&quot;,
&#9;&#9;&#9;&#9;&quot;ServerScriptService&quot;,
&#9;&#9;&#9;&#9;&quot;ServerStorage&quot;,
&#9;&#9;&#9;&#9;&quot;StarterGui&quot;,
&#9;&#9;&#9;&#9;&quot;StarterPack&quot;,
&#9;&#9;&#9;&#9;&quot;StarterPlayer&quot;,
&#9;&#9;&#9;}

&#9;&#9;&#9;for _, serviceName in ipairs(standardServices) do
&#9;&#9;&#9;&#9;local service = game:GetService(serviceName)
&#9;&#9;&#9;&#9;if service then
&#9;&#9;&#9;&#9;&#9;table.insert(self.rootInstances, service)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Core DEBUG] Added fallback root instance:&quot;, service:GetFullName())
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;Log.info(&quot;[Core] Final rootInstances count:&quot;, #self.rootInstances)

&#9;&#9;if initialSyncPriority ~= &quot;None&quot; then
&#9;&#9;&#9;Log.trace(&quot;Processing initial snapshot..&quot;)

&#9;&#9;&#9;if initialSyncPriority == &quot;Server&quot; then
&#9;&#9;&#9;&#9;Log.info(&quot;[Core] APPLYING SERVER CHANGES - verifying and applying&quot;, #changes.additions, &quot;additions&quot;)
&#9;&#9;&#9;&#9;self:__verifyChanges(changes, true):expect()
&#9;&#9;&#9;&#9;self.processor.write:applyChanges(changes, true)
&#9;&#9;&#9;&#9;Log.info(&quot;[Core] Server sync complete - changes applied&quot;)
&#9;&#9;&#9;elseif initialSyncPriority == &quot;Client&quot; then
&#9;&#9;&#9;&#9;Log.debug(&quot;[Core DEBUG] BRANCH: Client priority - initial push disabled (use manual Full Sync)&quot;)
&#9;&#9;&#9;&#9;-- Do not auto-push or force a full sync on connect. Subsequent Studio changes will
&#9;&#9;&#9;&#9;-- be synced by the watcher; users can trigger Full Sync from the UI when desired.
&#9;&#9;&#9;elseif initialSyncPriority == &quot;Merge&quot; then
&#9;&#9;&#9;&#9;Log.debug(&quot;[Core DEBUG] BRANCH: Merge priority - two-way sync&quot;)
&#9;&#9;&#9;&#9;-- Two-way union: pull server additions/updates, push client additions/updates.

&#9;&#9;&#9;&#9;-- 1) Pull (ignore removals coming from server)
&#9;&#9;&#9;&#9;local pullChanges = Changes.new(&quot;Core-pullChanges&quot;)
&#9;&#9;&#9;&#9;for _, add in ipairs(changes.additions) do
&#9;&#9;&#9;&#9;&#9;pullChanges:add(add)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;for _, upd in ipairs(changes.updates) do
&#9;&#9;&#9;&#9;&#9;pullChanges:update(upd)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if not pullChanges:isEmpty() then
&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[Core DEBUG] [MERGE] Applying pullChanges A:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;#pullChanges.additions,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;U:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;#pullChanges.updates
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;self:__verifyChanges(pullChanges, true):expect()
&#9;&#9;&#9;&#9;&#9;self.processor.write:applyChanges(pullChanges, true)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;if LogConfig.ENABLE_LOGS then
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Core] [MERGE] No pullChanges to apply (empty)&quot;)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- 2) Do not push client-side changes on connect; defer to watcher or manual full sync
&#9;&#9;&#9;&#9;-- 3) Do not scan/push extra additions on connect; avoid implicit sync-all
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;if LogConfig.ENABLE_LOGS then
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Core] BRANCH: Unknown priority:&quot;, tostring(initialSyncPriority))
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;Log.warn(&quot;[Core] Unknown InitialSyncPriority value: &quot;, tostring(initialSyncPriority))
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;Log.debug(&quot;[Core DEBUG] Skipping initial sync - priority is None&quot;)
&#9;&#9;end

&#9;&#9;-- Do not push JSONL on connect; only user-initiated Full Sync should produce a sync-all JSONL write

&#9;&#9;if Config:get(&quot;TwoWaySync&quot;) then
&#9;&#9;&#9;Log.debug(&quot;[Core DEBUG] TwoWaySync is ENABLED, starting watcher&quot;)
&#9;&#9;&#9;Log.debug(&quot;[Core DEBUG] Root instances count:&quot;, #self.rootInstances)
&#9;&#9;&#9;for i, instance in ipairs(self.rootInstances) do
&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&quot;[Core DEBUG] Root instance &quot;
&#9;&#9;&#9;&#9;&#9;&#9;.. i
&#9;&#9;&#9;&#9;&#9;&#9;.. &quot;: &quot;
&#9;&#9;&#9;&#9;&#9;&#9;.. tostring(instance)
&#9;&#9;&#9;&#9;&#9;&#9;.. (instance and (&quot; (&quot; .. instance.ClassName .. &quot;)&quot;) or &quot;&quot;)
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;end
&#9;&#9;&#9;self.watcher:start(self.rootInstances)
&#9;&#9;&#9;Log.debug(&quot;[Core DEBUG] Watcher start() called&quot;)
&#9;&#9;else
&#9;&#9;&#9;Log.debug(&quot;[Core DEBUG] TwoWaySync is DISABLED - watcher NOT started&quot;)
&#9;&#9;end

&#9;&#9;-- Phase 3: Start sync coordination - delegate to SyncCoordinator
&#9;&#9;Log.trace(&quot;[Core] Step 3: SyncCoordinator startup&quot;)

&#9;&#9;-- Status already set to Connected
&#9;&#9;self.__ready(projectProperties)

&#9;&#9;self.syncCoordinator:start():catch(function(err)
&#9;&#9;&#9;return reject(err)
&#9;&#9;end)

&#9;&#9;-- Removed temporary inlined poll loop; Scheduler/Poll handles server &#226;&#134;&#146; plugin updates

&#9;&#9;-- Keep the promise alive indefinitely until stop() is called
&#9;&#9;return Promise.new(function() end)
&#9;end)
end

function Core:stop()
&#9;Log.trace(&quot;Stopping Lemonade core..&quot;)

&#9;-- DEBUG: Print full project hierarchy on disconnect
&#9;self.projectManager:printProjectHierarchy()

&#9;self.status = Core.Status.Disconnecting
&#9;self.syncCoordinator:setStatus(self.status, Core.Status)
&#9;self.watcher:stop()
&#9;self.syncCoordinator:stop() -- Stop the sync coordination

&#9;-- CRITICAL: Clean up connection state to prevent corruption on reconnect
&#9;self:cleanupConnectionState()

&#9;-- No client:unsubscribe needed

&#9;Util.clean(self.connections)
end

-- Clean up all connection-dependent state to prevent reconnection corruption
function Core:cleanupConnectionState()
&#9;Log.debug(&quot;[Core] Starting connection state cleanup...&quot;)

&#9;-- Reset Tree state to clean slate
&#9;if self.tree then
&#9;&#9;if self.tree.resetState then
&#9;&#9;&#9;Log.debug(&quot;[Core] Resetting Tree state...&quot;)
&#9;&#9;&#9;self.tree:resetState()
&#9;&#9;else
&#9;&#9;&#9;Log.warn(&quot;[Core] Tree:resetState method not available - Tree corruption may persist&quot;)
&#9;&#9;end
&#9;end

&#9;-- Clear root instances array
&#9;self.rootInstances = {}
&#9;Log.debug(&quot;[Core] Cleared rootInstances array&quot;)

&#9;-- Reset processor state if available
&#9;if self.processor then
&#9;&#9;Log.debug(&quot;[Core] Processor state reset (no explicit method)&quot;)
&#9;end

&#9;-- Clear project reference
&#9;self.project = nil
&#9;Log.debug(&quot;[Core] Cleared project reference&quot;)

&#9;-- Reset sync timestamps to prevent stale debounce windows
&#9;self.lastSync = 0
&#9;self.lastLocalChangeTime = os.clock()
&#9;Log.debug(&quot;[Core] Reset sync timestamps&quot;)

&#9;Log.info(&quot;[Core] Connection state cleanup completed - ready for clean reconnection&quot;)
end

function Core:onPrompt(callback: (message: string, changes: Types.Changes?) -&gt; boolean)
&#9;self.__prompt = function(message, changes)
&#9;&#9;if self.status == Core.Status.Disconnecting then
&#9;&#9;&#9;return false
&#9;&#9;end

&#9;&#9;return callback(message, changes)
&#9;end
end

function Core:onReady(callback: (project: Types.Project) -&gt; ())
&#9;self.__ready = function(project)
&#9;&#9;if self.status == Core.Status.Disconnecting then
&#9;&#9;&#9;return
&#9;&#9;end

&#9;&#9;return callback(project)
&#9;end
end

function Core:onSync(callback: (kind: Types.MessageKind | string, data: any) -&gt; ())
&#9;self.__sync = function(kind, data)
&#9;&#9;if self.status == Core.Status.Disconnecting then
&#9;&#9;&#9;return
&#9;&#9;end

&#9;&#9;return callback(kind, data)
&#9;end
end

function Core.wasExitGraceful(err: Error.Error)
&#9;return err == Error.GameId or err == Error.PlaceIds or err == Error.TooManyChanges or err == Error.Terminated
end

-- Internal functions

function Core:__verifyProject(project: Types.Project, initial: boolean?): Promise.Promise
&#9;if not self:__shouldPrompt(initial) then
&#9;&#9;return Promise.resolve()
&#9;end

&#9;if project.gameId and project.gameId ~= game.GameId then
&#9;&#9;local err = Error.new(Error.GameId, game.GameId, project.gameId)

&#9;&#9;if not self.__prompt(err.message) then
&#9;&#9;&#9;return Promise.reject(err)
&#9;&#9;end
&#9;end

&#9;if #project.placeIds &gt; 0 and not table.find(project.placeIds, game.PlaceId) then
&#9;&#9;local err = Error.new(Error.PlaceIds, game.PlaceId, project.placeIds)

&#9;&#9;if not self.__prompt(err.message) then
&#9;&#9;&#9;return Promise.reject(err)
&#9;&#9;end
&#9;end

&#9;-- Version check might need adjustment based on Lemonade backend versioning
&#9;-- if not SemVer.parse(project.version):isCompatible(SemVer.parse(manifest.package.version)) then
&#9;-- &#9;local err = Error.new(Error.Version, manifest.package.version, project.version)
&#9;-- &#9;return Promise.reject(err)
&#9;-- end

&#9;return Promise.resolve()
end

function Core:__verifyChanges(changes: Types.Changes, initial: boolean?): Promise.Promise
&#9;if not self:__shouldPrompt(initial) then
&#9;&#9;return Promise.resolve()
&#9;end

&#9;if Changes.Total(changes) &gt; Config:get(&quot;ChangesThreshold&quot;) then
&#9;&#9;local err = Error.new(Error.TooManyChanges, #changes.additions, #changes.updates, #changes.removals)

&#9;&#9;if not self.__prompt(err.message, changes) then
&#9;&#9;&#9;return Promise.reject(err)
&#9;&#9;end
&#9;end

&#9;return Promise.resolve()
end

-- Syncback loop moved to SyncCoordinator.luau

function Core:__handleOpenInEditor(enabled: boolean)
&#9;if not enabled then
&#9;&#9;self:__cleanConnection(&quot;openInEditor&quot;)
&#9;&#9;return
&#9;end

&#9;self.connections[&quot;openInEditor&quot;] = ScriptEditorService.TextDocumentDidOpen:Connect(function(document)
&#9;&#9;if self.status ~= Core.Status.Connected then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;if document:IsCommandBar() then
&#9;&#9;&#9;return
&#9;&#9;end

&#9;&#9;local id = self.tree:getId(document:GetScript())
&#9;&#9;if not id then
&#9;&#9;&#9;return
&#9;&#9;end

&#9;&#9;local line = document:GetSelectionStart()

&#9;&#9;-- Replaced self.client:open with HttpSync.open
&#9;&#9;HttpSync.open(id, line)
&#9;&#9;&#9;:andThen(function()
&#9;&#9;&#9;&#9;document:CloseAsync()
&#9;&#9;&#9;end)
&#9;&#9;&#9;:catch(function(err)
&#9;&#9;&#9;&#9;Log.debug(&quot;Failed to open document in editor:&quot;, err)
&#9;&#9;&#9;end)
&#9;end)
end

function Core:__cleanConnection(id: string)
&#9;local connection = self.connections[id]
&#9;if connection then
&#9;&#9;connection:Disconnect()
&#9;&#9;self.connections[id] = nil
&#9;end
end

function Core:__shouldPrompt(initial: boolean?): boolean
&#9;local mode = Config:get(&quot;DisplayPrompts&quot;)
&#9;if mode == &quot;Always&quot; then
&#9;&#9;return true
&#9;elseif mode == &quot;Initial&quot; and initial then
&#9;&#9;return true
&#9;else
&#9;&#9;return false
&#9;end
end

function Core:__checkFirstTimeSetup(_isEmptyProject: boolean)
&#9;-- Simple flag approach - create script if it doesn&apos;t exist
&#9;local serverScriptService = game:GetService(&quot;ServerScriptService&quot;)
&#9;local existingHelloScript = serverScriptService:FindFirstChild(&quot;HelloLemonade&quot;)

&#9;-- If script already exists, don&apos;t create again
&#9;if existingHelloScript then
&#9;&#9;return
&#9;end

&#9;Log.info(&quot;[Core] HelloLemonade script not found - creating welcome script&quot;)

&#9;-- Create hello lemonade script with proper error handling
&#9;local success, err = pcall(function()
&#9;&#9;local helloScript = Instance.new(&quot;Script&quot;)
&#9;&#9;helloScript.Name = &quot;HelloLemonade&quot;
&#9;&#9;helloScript.Source = [[-- Welcome to Lemonade! &#240;&#159;&#141;&#139;
&#9;&#9;print(&quot;Hello from Lemonade!&quot;)
&#9;&#9;]]

&#9;&#9;helloScript.Parent = serverScriptService
&#9;end)

&#9;if success then
&#9;&#9;Log.info(&quot;[Core] Created HelloLemonade script in ServerScriptService&quot;)
&#9;else
&#9;&#9;-- Silently handle permission errors - don&apos;t show to user
&#9;&#9;Log.debug(&quot;[Core] Could not create HelloLemonade script (permission required):&quot;, err)
&#9;end
end

function Core:onChange(instance: Instance)
&#9;Log.info(&quot;Instance changed in Studio:&quot;, instance:GetFullName())
&#9;if not self.ready or not self.tree then
&#9;&#9;Log.warn(&quot;[Core:onChange] Called when Core not ready or tree not available. Aborting.&quot;)
&#9;&#9;return
&#9;end
&#9;-- TODO: Implement actual logic for onChange if needed
end

-- Method to update lastSync timestamp - delegates to SyncCoordinator
function Core:recordServerSyncApplied()
&#9;self.syncCoordinator:recordServerSyncApplied()
end

-- Add new handler for peerClientDisconnected event
function Core:handlePeerClientDisconnected(eventData)
&#9;Log.info(&quot;[Core] Peer client disconnected event received:&quot;, eventData)
&#9;-- Example: Update UI or internal state to reflect the disconnection.
&#9;-- self:updateConnectionStatusIndicator(&quot;Web UI disconnected: &quot; .. (eventData.disconnectedUserId or &quot;Unknown User&quot;))

&#9;-- You might want to call self.__sync here if you have a generic way to pass status messages to your UI
&#9;self.__sync(&quot;peerDisconnected&quot;, eventData) -- Call __sync to notify the App/UI layer
end

function Core:updateProjectId(newProjectId: string)
&#9;self.projectManager:updateProjectId(newProjectId)
end

return Core
</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a400001005</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBXF500E7DF054A4071AC4D10A09D510474">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000af0</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Error</string>
					<string name="ScriptGuid">{a9a5184d-46e4-4746-866a-5406a68d9116}</string>
					<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Util = require(Lemonade.Util)

export type Error = {
&#9;message: string,
&#9;kind: string,
}

local Error = {
&#9;Unknown = &quot;Unknown Core error: $1&quot;,
&#9;-- Initial prompts
&#9;GameId = &quot;Current GameId: $1 does not match the server gameId: $2&quot;,
&#9;PlaceIds = &quot;Current PlaceId: $1 is not included in the server placeIds: $2&quot;,
&#9;Version = &quot;Client version: $1 is not compatible with the server version: $2&quot;,
&#9;TooManyChanges = &quot;There are $1 additions, $2 updates, $3 deletions compared to the server&quot;,
&#9;Terminated = &quot;Terminated connection by the user&quot;,
&#9;-- Core errors
&#9;UnknownEvent = &quot;Received an unknown event from the server: $1, with data: $2&quot;,
&#9;Disconnected = &quot;Disconnected from the server: $1&quot;,
&#9;-- Process errors
&#9;DecodeFailed = &quot;Failed to decode snapshot property: $1 with value: $2&quot;,
&#9;EncodeFailed = &quot;Failed to encode snapshot property: $1 with value: $2&quot;,
&#9;ReadFailed = &quot;Failed to read property: $1 from instance: $2, reason: $3&quot;,
&#9;WriteFailed = &quot;Failed to write property: $1 for instance: $2, reason: $3&quot;,
&#9;NoInstanceAdd = &quot;Tried to add an instance whose parent that does not exist in the tree: $1&quot;,
&#9;NoInstanceUpdate = &quot;Tried to update an instance that does not exist in the tree: $1&quot;,
&#9;NoInstanceRemove = &quot;Tried to remove an instance that does not exist in the tree: $1&quot;,
&#9;NotCreatable = &quot;Tried to create an instance of class: $1 that is not creatable&quot;,
&#9;NotRemovable = &quot;Tried to remove an instance of class: $1 that is not removable&quot;,
&#9;HydrationFailed = &quot;Failed to hydrate root service, snapshot: $1&quot;,
&#9;MeshLoadFailed = &quot;Failed to load MeshPart: $1. If you just updated Roblox Studio, please restart Lemonade session!&quot;,
}

function Error.__new(message: string, kind: string): Error
&#9;local err = setmetatable({
&#9;&#9;message = message,
&#9;&#9;kind = kind,
&#9;}, Error)

&#9;return err
end

function Error.new(err: Error, ...): Error
&#9;err = table.clone(err)

&#9;for i, v in { ... } do
&#9;&#9;err.message = err.message:gsub(&quot;$&quot; .. i, Util.stringify(v))
&#9;end

&#9;return err
end

function Error:__eq(other: Error): boolean
&#9;return self.kind == other.kind
end

function Error:__tostring(): string
&#9;return self.message
end

-- Convert all strings to Error objects
for kind, message in Error do
&#9;if type(message) == &quot;string&quot; then
&#9;&#9;Error[kind] = Error.__new(message, kind)
&#9;end
end

return Error
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001006</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX2AC528C4BC89468DA352EC87D7FFEBD3">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000af1</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">BulkImport</string>
					<string name="ScriptGuid">{835a16b4-7044-4330-a7bb-a05856d46fc5}</string>
					<string name="Source">--!strict
-- BulkImport.luau
-- Stream large subtree additions in small chunks with backpressure.

local HttpService = game:GetService(&quot;HttpService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Log = require(Lemonade.Log)
local getPathFromInstance = require(Lemonade.Helpers.getPathFromInstance)

export type BulkNode = {
&#9;name: string,
&#9;class: string,
&#9;path: string,
&#9;parentPath: string?,
&#9;uniqueId: string?,
&#9;parentId: string?, -- CRITICAL: Parent&apos;s uniqueId for hierarchy
}

type ReadProcessor = {
&#9;buildSubtreeSnapshotBfs: (
&#9;&#9;self: any,
&#9;&#9;root: Instance
&#9;) -&gt; { nodesByLevel: { [number]: { BulkNode } }, flat: { BulkNode } },
}

type HttpSyncType = {
&#9;bulkBegin: (bulkId: string, rootPath: string, totalNodes: number) -&gt; any,
&#9;bulkChunk: (
&#9;&#9;bulkId: string,
&#9;&#9;chunkIndex: number,
&#9;&#9;nodes: { BulkNode }
&#9;) -&gt; { ackIndex: number?, suggestedChunkSize: number?, sleepMs: number? } | any,
&#9;bulkCommit: (bulkId: string) -&gt; any,
}

local BulkImport = {}
BulkImport.__index = BulkImport

function BulkImport.new(tree, readProcessor: ReadProcessor, httpSync: HttpSyncType)
&#9;local self = setmetatable({}, BulkImport)
&#9;self.tree = tree
&#9;self.read = readProcessor
&#9;self.http = httpSync
&#9;self.bulkRoots = {} :: { [Instance]: string }
&#9;self.activeBulkId = nil :: string?
&#9;self.defaultChunkSize = 25
&#9;return self
end

function BulkImport:isActive(): boolean
&#9;return self.activeBulkId ~= nil
end

function BulkImport:isUnderBulkRoot(inst: Instance): boolean
&#9;for root in pairs(self.bulkRoots) do
&#9;&#9;if inst == root or inst:IsDescendantOf(root) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

-- Heuristic: treat as bulk if subtree is large (descendant count &gt;= threshold)
function BulkImport:shouldHandleAsBulk(root: Instance, threshold: number?): boolean
&#9;local TH = threshold or 50
&#9;local descendants = root:GetDescendants()
&#9;return #descendants &gt;= TH
end

function BulkImport:start(root: Instance)
&#9;if self:isActive() then
&#9;&#9;Log.warn(&quot;[BulkImport] A bulk session is already active; ignoring new start request&quot;)
&#9;&#9;return
&#9;end

&#9;local bulkId = HttpService:GenerateGUID(false)
&#9;self.activeBulkId = bulkId
&#9;self.bulkRoots[root] = bulkId

&#9;-- Build BFS nodes (structure only)
&#9;local snapshot = self.read:buildSubtreeSnapshotBfs(root)
&#9;local nodes = snapshot.flat

&#9;-- Begin session with server
&#9;local rootPath = getPathFromInstance(root, self.tree)
&#9;if not rootPath then
&#9;&#9;Log.warn(&quot;[BulkImport] Could not compute root path; aborting bulk import&quot;)
&#9;&#9;self.activeBulkId = nil
&#9;&#9;self.bulkRoots[root] = nil
&#9;&#9;return
&#9;end

&#9;Log.debug(&quot;[BulkImport] BEGIN bulk session:&quot;, bulkId, &quot;nodes:&quot;, #nodes, &quot;root:&quot;, rootPath)

&#9;self.http.bulkBegin(bulkId, rootPath, #nodes)

&#9;-- Register nodes in tree BEFORE streaming to maintain proper hierarchy
&#9;-- Include the root instance itself
&#9;local allInstances = { root }
&#9;for _, child in ipairs(root:GetDescendants()) do
&#9;&#9;table.insert(allInstances, child)
&#9;end

&#9;for _, node in ipairs(nodes) do
&#9;&#9;local inst = nil
&#9;&#9;-- Find the instance by uniqueId
&#9;&#9;for _, potentialInst in ipairs(allInstances) do
&#9;&#9;&#9;if potentialInst:GetAttribute(&quot;uniqueId&quot;) == node.uniqueId then
&#9;&#9;&#9;&#9;inst = potentialInst
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if inst then
&#9;&#9;&#9;-- Register with uniqueId as buffer ID for consistent lookup
&#9;&#9;&#9;local nodeId = buffer.fromstring(node.uniqueId)
&#9;&#9;&#9;self.tree:insertInstance(inst, nodeId, { isBulkImport = true })
&#9;&#9;&#9;Log.debug(&quot;[BulkImport] Registered in tree:&quot;, inst:GetFullName(), &quot;ID:&quot;, node.uniqueId)
&#9;&#9;end
&#9;end

&#9;-- Stream chunks with backpressure
&#9;local chunkSize = self.defaultChunkSize
&#9;local idx = 0
&#9;local i = 1
&#9;while i &lt;= #nodes do
&#9;&#9;local j = math.min(i + chunkSize - 1, #nodes)
&#9;&#9;local chunk = {}
&#9;&#9;for k = i, j do
&#9;&#9;&#9;chunk[#chunk + 1] = nodes[k]
&#9;&#9;end

&#9;&#9;idx += 1
&#9;&#9;local ack = self.http.bulkChunk(bulkId, idx, chunk)
&#9;&#9;-- Basic backpressure hints
&#9;&#9;if type(ack) == &quot;table&quot; then
&#9;&#9;&#9;if typeof(ack.suggestedChunkSize) == &quot;number&quot; and ack.suggestedChunkSize &gt; 0 then
&#9;&#9;&#9;&#9;chunkSize = math.max(10, math.floor(ack.suggestedChunkSize))
&#9;&#9;&#9;end
&#9;&#9;&#9;if typeof(ack.sleepMs) == &quot;number&quot; and ack.sleepMs &gt; 0 then
&#9;&#9;&#9;&#9;task.wait((ack.sleepMs :: number) / 1000)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;task.wait() -- yield per chunk to keep Studio responsive
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;-- still yield to keep responsiveness
&#9;&#9;&#9;task.wait()
&#9;&#9;end

&#9;&#9;i = j + 1
&#9;end

&#9;-- Commit session
&#9;self.http.bulkCommit(bulkId)
&#9;Log.debug(&quot;[BulkImport] COMMIT bulk session:&quot;, bulkId)

&#9;-- Clear suppression
&#9;self.bulkRoots[root] = nil
&#9;self.activeBulkId = nil
end

return BulkImport
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001007</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXE5415666ED9A44CFBE819D2F73488AF5">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000af2</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Processor</string>
					<string name="ScriptGuid">{32f3110c-44ec-4df6-917a-c24438451af7}</string>
					<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Dom = require(Lemonade.Dom)
local Log = require(Lemonade.Log)
local Types = require(Lemonade.Types)

local equals = require(Lemonade.Helpers.equals)

local Error = require(script.Parent.Error)
local Changes = require(script.Parent.Changes)
local Snapshot = require(script.Parent.Snapshot)

-- All processors
local ReadProcessor = require(script.Read)
local WriteProcessor = require(script.Write)

-- Map snapshot paths under `src/` to real Roblox services
local STANDARD_MAPPINGS = {
&#9;[&quot;Workspace&quot;] = game.Workspace,
&#9;[&quot;ReplicatedStorage&quot;] = game.ReplicatedStorage,
&#9;[&quot;ReplicatedFirst&quot;] = game.ReplicatedFirst,
&#9;[&quot;StarterPlayer&quot;] = game.StarterPlayer,
&#9;[&quot;StarterGui&quot;] = game.StarterGui,
&#9;[&quot;StarterPack&quot;] = game.StarterPack,
&#9;[&quot;ServerScriptService&quot;] = game.ServerScriptService,
&#9;[&quot;ServerStorage&quot;] = game.ServerStorage,
}

local Processor = {}
Processor.__index = Processor

function Processor.new(tree, client)
&#9;local self = {
&#9;&#9;tree = tree,
&#9;&#9;read = ReadProcessor.new(tree),
&#9;&#9;write = WriteProcessor.new(tree, client),
&#9;}

&#9;return setmetatable(self, Processor)
end

-- Simple hydrate that matches existing instances to snapshot IDs
function Processor:hydrate(snapshot: Types.Snapshot, instance: Instance)
&#9;-- Store the instance with the server-provided ID
&#9;self.tree:insertInstance(instance, snapshot.id, snapshot.meta)

&#9;local children = instance:GetChildren()
&#9;local hydrated = table.create(#children, false)

&#9;-- Match snapshot children to Studio children
&#9;for _, snapshotChild in snapshot.children do
&#9;&#9;for index, child in children do
&#9;&#9;&#9;if hydrated[index] then
&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Try exact name/class matching
&#9;&#9;&#9;if child.Name == snapshotChild.name and child.ClassName == snapshotChild.class then
&#9;&#9;&#9;&#9;self:hydrate(snapshotChild, child)
&#9;&#9;&#9;&#9;hydrated[index] = true
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Handle service mapping where snapshot has &quot;Folder&quot; but service has specific class
&#9;&#9;&#9;if child.Name == snapshotChild.name and snapshotChild.class == &quot;Folder&quot; then
&#9;&#9;&#9;&#9;local expectedService = STANDARD_MAPPINGS[snapshotChild.name]
&#9;&#9;&#9;&#9;if expectedService and child == expectedService then
&#9;&#9;&#9;&#9;&#9;self:hydrate(snapshotChild, child)
&#9;&#9;&#9;&#9;&#9;hydrated[index] = true
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Special case: if this is the &quot;src&quot; folder, hydrate services inside it
&#9;&#9;&#9;if snapshotChild.name == &quot;src&quot; and snapshotChild.children then
&#9;&#9;&#9;&#9;Log.debug(&quot;[Processor:hydrate] Found src folder, hydrating services inside it&quot;)
&#9;&#9;&#9;&#9;for _, serviceSnapshot in ipairs(snapshotChild.children) do
&#9;&#9;&#9;&#9;&#9;local serviceInstance = STANDARD_MAPPINGS[serviceSnapshot.name]
&#9;&#9;&#9;&#9;&#9;if serviceInstance then
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Processor:hydrate] Hydrating service:&quot;, serviceSnapshot.name)
&#9;&#9;&#9;&#9;&#9;&#9;self:hydrate(serviceSnapshot, serviceInstance)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;hydrated[index] = true -- Mark src as processed
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

-- Modified init function - skip DOM comparison to prevent uniqueId regeneration
function Processor:init(snapshot: Types.Snapshot, initialSyncPriority: string): Types.Changes
&#9;Log.trace(&quot;Hydrating initial snapshot..&quot;)

&#9;self:hydrate(snapshot, game) -- Primary hydration: links existing Studio instances to snapshot IDs in self.tree

&#9;if initialSyncPriority == &quot;None&quot; then
&#9;&#9;Log.warn(&quot;[Processor:init] No valid sync priority specified&quot;)
&#9;&#9;return Changes.new(&quot;Processor-empty&quot;)
&#9;end

&#9;-- REMOVED: DOM comparison logic that was causing uniqueId regeneration
&#9;-- The hydrated snapshot data from the server doesn&apos;t contain uniqueId attributes,
&#9;-- so comparing it with Studio instances (which do have uniqueId) always shows differences
&#9;-- and causes unnecessary uniqueId regeneration.
&#9;--
&#9;-- Instead, JSONL comparison should happen at the ProjectManager level by comparing
&#9;-- the locally generated JSONL with the projectStructure stored in the database.
&#9;--
&#9;-- For now, we skip all diffing during initialization to preserve existing uniqueId values.

&#9;Log.trace(&quot;[Processor:init] Skipping DOM comparison to preserve uniqueId attributes&quot;)
&#9;return Changes.new(&quot;Processor-empty&quot;)
end

-- Modified diff function (closer to original Lemonade logic)
function Processor:diff(snapshot: Types.Snapshot, parentRef: Types.Ref, clientPriority: boolean): Types.Changes
&#9;local instance = self.tree:getInstance(snapshot.id)

&#9;local changes = Changes.new(&quot;Processor-diff&quot;)

&#9;if not instance then
&#9;&#9;-- Add using the parent snapshot&apos;s Ref
&#9;&#9;changes:add(snapshot, parentRef)
&#9;&#9;-- Recursively diff children (if any exist in the snapshot being added)
&#9;&#9;-- Pass the *new* snapshot&apos;s ID as the parent ref for its children
&#9;&#9;for _, childSnap in ipairs(snapshot.children or {}) do
&#9;&#9;&#9;Log.debug(&quot;[Processor] *** CALLING changes:join FROM PROCESSOR ADD CASE ***&quot;)
&#9;&#9;&#9;changes:join(self:diff(childSnap, snapshot.id, clientPriority))
&#9;&#9;end
&#9;&#9;Log.debug(
&#9;&#9;&#9;string.format(
&#9;&#9;&#9;&#9;&quot;[Processor:diff] END (ADD case) for snapshot: %s Changes: %dA %dU %dR&quot;,
&#9;&#9;&#9;&#9;snapshot.name,
&#9;&#9;&#9;&#9;#changes.additions,
&#9;&#9;&#9;&#9;#changes.updates,
&#9;&#9;&#9;&#9;#changes.removals
&#9;&#9;&#9;)
&#9;&#9;)
&#9;&#9;return changes
&#9;end

&#9;-- Instance exists, check for class mismatch
&#9;if instance.ClassName ~= snapshot.class then
&#9;&#9;Log.debug(
&#9;&#9;&#9;string.format(&quot;[Processor:diff] Class mismatch (%s vs %s) -&gt; REPLACE&quot;, instance.ClassName, snapshot.class)
&#9;&#9;)
&#9;&#9;changes:remove(instance)
&#9;&#9;-- Add the new snapshot using the parent snapshot&apos;s Ref
&#9;&#9;changes:add(snapshot, parentRef)
&#9;&#9;-- Recursively diff children of the *new* snapshot
&#9;&#9;-- Pass the *new* snapshot&apos;s ID as the parent ref for its children
&#9;&#9;for _, childSnap in ipairs(snapshot.children or {}) do
&#9;&#9;&#9;Log.debug(&quot;[Processor] *** CALLING changes:join FROM PROCESSOR REPLACE CASE ***&quot;)
&#9;&#9;&#9;changes:join(self:diff(childSnap, snapshot.id, clientPriority))
&#9;&#9;end
&#9;&#9;Log.debug(
&#9;&#9;&#9;string.format(
&#9;&#9;&#9;&#9;&quot;[Processor:diff] END (REPLACE class case) for snapshot: %s Changes: %dA %dU %dR&quot;,
&#9;&#9;&#9;&#9;snapshot.name,
&#9;&#9;&#9;&#9;#changes.additions,
&#9;&#9;&#9;&#9;#changes.updates,
&#9;&#9;&#9;&#9;#changes.removals
&#9;&#9;&#9;)
&#9;&#9;)
&#9;&#9;return changes
&#9;end

&#9;-- Handle property updates (logic remains similar)
&#9;local propertyChangesCount = 0

&#9;-- Previously we skipped property updates for visual instances during initial sync.
&#9;-- That optimisation is no longer required now that only script files are stored in the DB.
&#9;if not clientPriority or ReadProcessor.shouldSyncProperties(instance) then
&#9;&#9;local updatedProperties = {}

&#9;&#9;--[[ Removed outdated HelloWorld debug traces below
&#9;&#9;if snapshot.name == &quot;HelloWorld&quot; then
&#9;&#9;&#9;if LogConfig.ENABLE_LOGS then
&#9;&#9;&#9;&#9;print(
&#9;&#9;&#9;&#9;&#9;&quot;[Processor:diff TRACE] HelloWorld - Checking properties. ClientPriority:&quot;,
&#9;&#9;&#9;&#9;&#9;clientPriority,
&#9;&#9;&#9;&#9;&#9;&quot;ShouldSync:&quot;,
&#9;&#9;&#9;&#9;&#9;ReadProcessor.shouldSyncProperties(instance)
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;]]
&#9;&#9;for property, default in Dom.getDefaultProperties(instance.ClassName) do
&#9;&#9;&#9;local value = snapshot.properties[property]

&#9;&#9;&#9;if value then
&#9;&#9;&#9;&#9;local readSuccess, instanceValue = Dom.readProperty(instance, property)

&#9;&#9;&#9;&#9;if not readSuccess then
&#9;&#9;&#9;&#9;&#9;local err = Error.new(
&#9;&#9;&#9;&#9;&#9;&#9;Error.ReadFailed,
&#9;&#9;&#9;&#9;&#9;&#9;property,
&#9;&#9;&#9;&#9;&#9;&#9;instance,
&#9;&#9;&#9;&#9;&#9;&#9;(instanceValue and instanceValue.kind) or &quot;unknown&quot;
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local decodeSuccess, snapshotValue = Dom.EncodedValue.decode(value)

&#9;&#9;&#9;&#9;if not decodeSuccess then
&#9;&#9;&#9;&#9;&#9;local err = Error.new(Error.DecodeFailed, property, value)
&#9;&#9;&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if not equals(instanceValue, snapshotValue) then
&#9;&#9;&#9;&#9;&#9;updatedProperties[property] = value
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;local readSuccess, instanceValue = Dom.readProperty(instance, property)

&#9;&#9;&#9;&#9;if not readSuccess then
&#9;&#9;&#9;&#9;&#9;local err = Error.new(
&#9;&#9;&#9;&#9;&#9;&#9;Error.ReadFailed,
&#9;&#9;&#9;&#9;&#9;&#9;property,
&#9;&#9;&#9;&#9;&#9;&#9;instance,
&#9;&#9;&#9;&#9;&#9;&#9;(instanceValue and instanceValue.kind) or &quot;unknown&quot;
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local _, defaultValue = Dom.EncodedValue.decode(default)

&#9;&#9;&#9;&#9;if not equals(instanceValue, defaultValue) then
&#9;&#9;&#9;&#9;&#9;local encodeSuccess, encodedDefault = Dom.EncodedValue.encode(defaultValue, next(default))
&#9;&#9;&#9;&#9;&#9;if encodeSuccess then
&#9;&#9;&#9;&#9;&#9;&#9;updatedProperties[property] = encodedDefault
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;Failed to encode default value for property:&quot;, property)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;-- Handle content comparison for script instances

&#9;&#9;if
&#9;&#9;&#9;snapshot.content
&#9;&#9;&#9;and (
&#9;&#9;&#9;&#9;instance.ClassName == &quot;ModuleScript&quot;
&#9;&#9;&#9;&#9;or instance.ClassName == &quot;Script&quot;
&#9;&#9;&#9;&#9;or instance.ClassName == &quot;LocalScript&quot;
&#9;&#9;&#9;)
&#9;&#9;then
&#9;&#9;&#9;-- Direct content comparison in event-driven architecture
&#9;&#9;&#9;local contentNeedsUpdate = false
&#9;&#9;&#9;local studioContent = instance.Source or &quot;&quot;
&#9;&#9;&#9;local serverContent = snapshot.content

&#9;&#9;&#9;if studioContent ~= serverContent then
&#9;&#9;&#9;&#9;contentNeedsUpdate = true
&#9;&#9;&#9;end

&#9;&#9;&#9;if contentNeedsUpdate then
&#9;&#9;&#9;&#9;-- Add Source to updated properties so it gets included in the update
&#9;&#9;&#9;&#9;updatedProperties.Source = snapshot.content
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;-- Create update if we have property changes (including Source/content changes)
&#9;&#9;if next(updatedProperties) then
&#9;&#9;&#9;propertyChangesCount = 0
&#9;&#9;&#9;for _ in pairs(updatedProperties) do
&#9;&#9;&#9;&#9;propertyChangesCount = propertyChangesCount + 1
&#9;&#9;&#9;end
&#9;&#9;&#9;Log.debug(&quot;[Processor:diff] Detected &quot; .. propertyChangesCount .. &quot; property updates.&quot;)
&#9;&#9;&#9;changes:update({
&#9;&#9;&#9;&#9;id = snapshot.id,
&#9;&#9;&#9;&#9;properties = updatedProperties,
&#9;&#9;&#9;&#9;meta = snapshot.meta.meshSource and snapshot.meta or nil,
&#9;&#9;&#9;})
&#9;&#9;end
&#9;end -- Close the elseif condition

&#9;-- Handle children diff (closer to original Lemonade logic)
&#9;local instanceChildren = instance:GetChildren() -- Get actual children from the existing Studio instance
&#9;local snapshotChildrenMap = {} -- Map Ref (string) -&gt; SnapshotChild
&#9;local snapshotChildrenRefs = {} -- Set of Refs (string) present in snapshot children
&#9;for _, childSnap in ipairs(snapshot.children or {}) do
&#9;&#9;local childRefStr = buffer.tostring(childSnap.id)
&#9;&#9;snapshotChildrenMap[childRefStr] = childSnap
&#9;&#9;snapshotChildrenRefs[childRefStr] = true
&#9;end

&#9;Log.debug(&quot;[Processor:diff] Snapshot children count:&quot;, #snapshot.children)
&#9;Log.debug(&quot;[Processor:diff] Actual Studio children count:&quot;, #instanceChildren)

&#9;-- Iterate Studio children to find removals and recursively diff existing children
&#9;local removalsDetected = 0
&#9;for _, childInst in ipairs(instanceChildren) do
&#9;&#9;local childId = self.tree:getId(childInst)
&#9;&#9;if childId then
&#9;&#9;&#9;local childIdStr = buffer.tostring(childId)
&#9;&#9;&#9;local childSnap = snapshotChildrenMap[childIdStr]
&#9;&#9;&#9;if childSnap then
&#9;&#9;&#9;&#9;-- Child exists in both: Recursively diff
&#9;&#9;&#9;&#9;Log.debug(&quot;[Processor:diff] Diffing matching child:&quot;, childInst:GetFullName())
&#9;&#9;&#9;&#9;Log.debug(&quot;[Processor] *** CALLING changes:join FROM PROCESSOR CHILD DIFF ***&quot;)
&#9;&#9;&#9;&#9;changes:join(self:diff(childSnap, snapshot.id, clientPriority))
&#9;&#9;&#9;&#9;snapshotChildrenRefs[childIdStr] = nil -- Mark as processed
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;-- Child in Studio (and tree) but not in snapshot: Remove
&#9;&#9;&#9;&#9;Log.debug(&quot;[Processor:diff] REMOVE detected (tracked child not in snapshot):&quot;, childInst:GetFullName())
&#9;&#9;&#9;&#9;changes:remove(childId)
&#9;&#9;&#9;&#9;removalsDetected = removalsDetected + 1
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;-- Child in Studio but not tracked by tree: Remove if configured
&#9;&#9;&#9;if not clientPriority then
&#9;&#9;&#9;&#9;Log.debug(&quot;[Processor:diff] REMOVE detected (untracked instance):&quot;, childInst:GetFullName())
&#9;&#9;&#9;&#9;changes:remove(childInst) -- Remove the instance itself
&#9;&#9;&#9;&#9;removalsDetected = removalsDetected + 1
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;Log.debug(&quot;[Processor:diff] Removals detected in Studio pass:&quot;, removalsDetected)

&#9;-- Iterate remaining snapshot children (those not matched with Studio children) to find additions
&#9;local additionsDetected = 0
&#9;for childRefStr, _ in pairs(snapshotChildrenRefs) do
&#9;&#9;local childSnap = snapshotChildrenMap[childRefStr]
&#9;&#9;if childSnap then -- Should always be true here
&#9;&#9;&#9;Log.debug(&quot;[Processor:diff] ADD detected (snapshot child not in Studio/tree):&quot;, childSnap.name)
&#9;&#9;&#9;changes:add(childSnap, snapshot.id) -- Add with current snapshot ID as parent
&#9;&#9;&#9;additionsDetected = additionsDetected + 1
&#9;&#9;&#9;-- Recursively diff grandchildren (needed if adding a Folder with contents)
&#9;&#9;&#9;for _, grandChildSnap in ipairs(childSnap.children or {}) do
&#9;&#9;&#9;&#9;Log.debug(&quot;[Processor] *** CALLING changes:join FROM PROCESSOR GRANDCHILD DIFF ***&quot;)
&#9;&#9;&#9;&#9;changes:join(self:diff(grandChildSnap, childSnap.id, clientPriority))
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;Log.debug(&quot;[Processor:diff] Additions detected in Snapshot pass:&quot;, additionsDetected)

&#9;Log.debug(
&#9;&#9;string.format(
&#9;&#9;&#9;&quot;[Processor:diff] END (Update/Children case) for snapshot: %s Changes: %dA %dU %dR&quot;,
&#9;&#9;&#9;snapshot.name,
&#9;&#9;&#9;#changes.additions,
&#9;&#9;&#9;#changes.updates,
&#9;&#9;&#9;#changes.removals
&#9;&#9;)
&#9;)

&#9;return changes
end

function Processor:reverseChanges(changes: Types.Changes): Types.Changes
&#9;Log.trace(&quot;Reversing changes..&quot;)

&#9;local reversed = Changes.new(&quot;Processor-reversed&quot;)

&#9;for _, snapshot in changes.additions do
&#9;&#9;reversed:remove(snapshot.id)
&#9;end

&#9;for _, snapshot in changes.updates do
&#9;&#9;local instance = self.tree:getInstance(snapshot.id)

&#9;&#9;if instance then
&#9;&#9;&#9;local read = self.read:onChange(instance)

&#9;&#9;&#9;if read then
&#9;&#9;&#9;&#9;-- This is an UpdatedSnapshot
&#9;&#9;&#9;&#9;reversed:update(read)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;for _, object in changes.removals do
&#9;&#9;local instance = (typeof(object) == &quot;Instance&quot; and object or self.tree:getInstance(object)) :: Instance?

&#9;&#9;if instance then
&#9;&#9;&#9;local read = self.read:onAdd(instance)

&#9;&#9;&#9;if read then
&#9;&#9;&#9;&#9;reversed:add(read)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;for _, snapshot in changes.moves do
&#9;&#9;local instance = self.tree:getInstance(snapshot.id)

&#9;&#9;if instance then
&#9;&#9;&#9;-- For a move, we need to reverse it by creating a move back to the original location
&#9;&#9;&#9;local reversedMove =
&#9;&#9;&#9;&#9;Snapshot.newMove(snapshot.id):withName(snapshot.name):withClass(snapshot.class):withTimestamp(tick())

&#9;&#9;&#9;reversed:move(reversedMove)
&#9;&#9;end
&#9;end

&#9;return reversed
end

return Processor
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001008</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX1793573AC5FB435991684C191FAE0DD1">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000af3</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Write</string>
						<string name="ScriptGuid">{cd6d6644-c897-43b0-8677-c9400af682ae}</string>
						<string name="Source">local ChangeHistoryService = game:GetService(&quot;ChangeHistoryService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Types = require(Lemonade.Types)
local Log = require(Lemonade.Log)

-- Import operation modules
local AdditionProcessor = require(script.AdditionProcessor)
local UpdateProcessor = require(script.UpdateProcessor)
local RemovalProcessor = require(script.RemovalProcessor)
local MoveProcessor = require(script.MoveProcessor)
local CloneProcessor = require(script.CloneProcessor)
local CreateProcessor = require(script.CreateProcessor)
local ToolboxImportProcessor = require(script:FindFirstChild(&quot;ToolboxImportProcessor&quot;))

local function setWaypoint(action: string, name: string?)
&#9;name = name and ` &quot;{name}&quot;` or &quot;&quot;
&#9;ChangeHistoryService:SetWaypoint(`Lemonade: {action}{name} [{DateTime.now():FormatLocalTime(&quot;LTS&quot;, &quot;en-us&quot;)}]`)
end

local WriteProcessor = {}
WriteProcessor.__index = WriteProcessor

function WriteProcessor.new(tree, HttpSync)
&#9;local self = setmetatable({
&#9;&#9;tree = tree,
&#9;&#9;HttpSync = HttpSync,
&#9;&#9;watcher = nil, -- Will be set by Core after construction
&#9;}, WriteProcessor)

&#9;-- Initialize operation processors with self reference
&#9;self.additionProcessor = AdditionProcessor.new(self)
&#9;self.updateProcessor = UpdateProcessor.new(self)
&#9;self.removalProcessor = RemovalProcessor.new(self)
&#9;self.moveProcessor = MoveProcessor.new(self)
&#9;self.cloneProcessor = CloneProcessor.new(self)
&#9;self.createProcessor = CreateProcessor.new(self)
&#9;self.toolboxImportProcessor = if ToolboxImportProcessor then ToolboxImportProcessor.new(self) else nil

&#9;return self
end

function WriteProcessor:applyChanges(changes: Types.Changes, initial: boolean?)
&#9;setWaypoint(&quot;Sync&quot;)

&#9;-- Safer ordering: additions and moves before updates, removals last
&#9;for _, snapshot in changes.additions do
&#9;&#9;self.additionProcessor:applyAddition(snapshot, initial)
&#9;end

&#9;for _, moveSnapshot in changes.moves do
&#9;&#9;self.moveProcessor:applyMove(moveSnapshot, initial)
&#9;end

&#9;for _, snapshotItem in changes.updates do
&#9;&#9;local id_str = snapshotItem.id
&#9;&#9;local id_buffer: Types.Ref

&#9;&#9;if type(id_str) == &quot;string&quot; then
&#9;&#9;&#9;id_buffer = buffer.fromstring(id_str)
&#9;&#9;elseif type(id_str) == &quot;buffer&quot; then
&#9;&#9;&#9;id_buffer = id_str
&#9;&#9;else
&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&quot;[applyChanges] Snapshot update item has an invalid ID type:&quot;,
&#9;&#9;&#9;&#9;type(id_str),
&#9;&#9;&#9;&#9;&quot;Value:&quot;,
&#9;&#9;&#9;&#9;id_str,
&#9;&#9;&#9;&#9;&quot;Skipping update.&quot;
&#9;&#9;&#9;)
&#9;&#9;&#9;continue
&#9;&#9;end

&#9;&#9;self.updateProcessor:applyUpdate(id_buffer, snapshotItem, initial)
&#9;end

&#9;for _, object in changes.removals do
&#9;&#9;self.removalProcessor:applyRemoval(object, initial)
&#9;end

&#9;if initial then
&#9;&#9;setWaypoint(&quot;Initial Sync&quot;)
&#9;end

&#9;Log.trace(&quot;[WriteProcessor DEBUG] Finished applying changes.&quot;)
end

-- Delegate methods to operation processors for backward compatibility
function WriteProcessor:applyAddition(
&#9;snapshot: Types.AddedSnapshot,
&#9;initial: boolean?,
&#9;skipExisting: boolean?
): Instance?
&#9;return self.additionProcessor:applyAddition(snapshot, initial, skipExisting)
end

function WriteProcessor:applyUpdate(id: Types.Ref, snapshotUpdate: Types.SnapshotUpdate, initial: boolean?)
&#9;return self.updateProcessor:applyUpdate(id, snapshotUpdate, initial)
end

function WriteProcessor:applyRemoval(object: Types.Ref | Instance, initial: boolean?): Instance?
&#9;return self.removalProcessor:applyRemoval(object, initial)
end

function WriteProcessor:applyMove(moveSnapshot: Types.MoveSnapshot, initial: boolean?)
&#9;return self.moveProcessor:applyMove(moveSnapshot, initial)
end

-- Add clone processing method
function WriteProcessor:processCloneEvent(eventPayload): boolean
&#9;return self.cloneProcessor:processCloneEvent(eventPayload)
end

-- Add create processing method
function WriteProcessor:processCreateEvent(eventPayload): boolean
&#9;return self.createProcessor:processCreateEvent(eventPayload)
end

-- Add toolbox import processing method
function WriteProcessor:processToolboxImportEvent(eventPayload): boolean
&#9;if not self.toolboxImportProcessor then
&#9;&#9;Log.warn(&quot;[WriteProcessor] ToolboxImportProcessor not available&quot;)
&#9;&#9;return false
&#9;end
&#9;return self.toolboxImportProcessor:processToolboxImportEvent(eventPayload)
end

return WriteProcessor
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001009</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXF0EC166584AA4B3284C2E90416F7EC0F">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000af4</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">ToolboxImportProcessor</string>
							<string name="ScriptGuid">{3a932a08-ffd0-4c76-a8b3-24fcf16e5c89}</string>
							<string name="Source">local Selection = game:GetService(&quot;Selection&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Log = require(Lemonade.Log)

local ToolboxImportProcessor = {}
ToolboxImportProcessor.__index = ToolboxImportProcessor

function ToolboxImportProcessor.new(writeProcessor)
&#9;return setmetatable({
&#9;&#9;writeProcessor = writeProcessor,
&#9;}, ToolboxImportProcessor)
end

-- Simple path &#226;&#134;&#146; Instance navigator (service-rooted, e.g. &quot;ReplicatedStorage/_Assets&quot;)
local function getOrCreatePath(destinationPath: string): Instance?
&#9;local parts = {}
&#9;for part in destinationPath:gmatch(&quot;[^/]+&quot;) do
&#9;&#9;table.insert(parts, part)
&#9;end

&#9;if #parts == 0 then
&#9;&#9;return nil
&#9;end

&#9;local current: Instance
&#9;local serviceName = parts[1]
&#9;local ok, svc = pcall(function()
&#9;&#9;return game:GetService(serviceName)
&#9;end)
&#9;if not ok or not svc then
&#9;&#9;Log.warn(&quot;[ToolboxImport] Unknown service:&quot;, serviceName)
&#9;&#9;return nil
&#9;end
&#9;current = svc

&#9;for i = 2, #parts do
&#9;&#9;local name = parts[i]
&#9;&#9;local child = current:FindFirstChild(name)
&#9;&#9;if not child then
&#9;&#9;&#9;local folder = Instance.new(&quot;Folder&quot;)
&#9;&#9;&#9;folder.Name = name
&#9;&#9;&#9;folder.Parent = current
&#9;&#9;&#9;-- Mark as server-created to prevent sync echo
&#9;&#9;&#9;folder:SetAttribute(&quot;_serverCreated&quot;, true)
&#9;&#9;&#9;child = folder
&#9;&#9;&#9;Log.info(&quot;[ToolboxImport] Created folder:&quot;, child:GetFullName())
&#9;&#9;end
&#9;&#9;current = child
&#9;end

&#9;return current
end

local function sanitizeModel(root: Instance)
&#9;for _, inst in ipairs(root:GetDescendants()) do
&#9;&#9;if inst:IsA(&quot;Script&quot;) or inst:IsA(&quot;LocalScript&quot;) or inst:IsA(&quot;ModuleScript&quot;) then
&#9;&#9;&#9;inst:Destroy()
&#9;&#9;end
&#9;end
end

-- Import asset using game:GetObjects (more reliable than InsertService)
local function insertByGetObjects(assetId: number, parent: Instance?)
&#9;parent = parent or workspace
&#9;local ok, arr = pcall(game.GetObjects, game, &quot;rbxassetid://&quot; .. assetId)
&#9;if not ok or not arr or #arr == 0 then
&#9;&#9;return nil, &quot;getobjects_failed&quot;
&#9;end

&#9;local inst
&#9;if #arr == 1 then
&#9;&#9;inst = arr[1]
&#9;else
&#9;&#9;local folder = Instance.new(&quot;Folder&quot;)
&#9;&#9;folder.Name = &quot;Imported_&quot; .. assetId
&#9;&#9;-- Mark as server-created to prevent sync echo
&#9;&#9;folder:SetAttribute(&quot;_serverCreated&quot;, true)
&#9;&#9;for _, obj in ipairs(arr) do
&#9;&#9;&#9;obj.Parent = folder
&#9;&#9;end
&#9;&#9;inst = folder
&#9;end

&#9;inst.Parent = parent
&#9;Selection:Set({ inst })
&#9;return inst
end

-- payload = { assetId: number, destinationPath: string, name: string }
function ToolboxImportProcessor:processToolboxImportEvent(payload): boolean
&#9;local assetId = tonumber(payload.assetId)
&#9;local destPath = (payload.destinationPath :: string) or &quot;ReplicatedStorage/_Assets&quot;
&#9;local inputName = (payload.name :: string) or &quot;ImportedAsset&quot;

&#9;if not assetId or assetId &lt;= 0 then
&#9;&#9;Log.error(&quot;[ToolboxImport] Invalid assetId:&quot;, payload.assetId)
&#9;&#9;return false
&#9;end

&#9;-- Use provided name as-is; do not append assetId to the name
&#9;local finalName = inputName

&#9;local parent = getOrCreatePath(destPath)
&#9;if not parent then
&#9;&#9;Log.error(&quot;[ToolboxImport] Destination path not found:&quot;, destPath)
&#9;&#9;return false
&#9;end

&#9;Log.info(&quot;[ToolboxImport] Loading asset via GetObjects:&quot;, assetId)
&#9;local root, err = insertByGetObjects(assetId, parent)

&#9;if not root then
&#9;&#9;Log.error(&quot;[ToolboxImport] GetObjects failed:&quot;, err)
&#9;&#9;return false
&#9;end

&#9;-- Sanitize the imported model (remove scripts)
&#9;sanitizeModel(root)

&#9;-- Ensure unique name under parent
&#9;local name = finalName
&#9;local counter = 2
&#9;while parent:FindFirstChild(name) and parent:FindFirstChild(name) ~= root do
&#9;&#9;name = finalName .. &quot;_&quot; .. counter
&#9;&#9;counter += 1
&#9;&#9;if counter &gt; 100 then
&#9;&#9;&#9;name = finalName .. &quot;_&quot; .. tostring(os.clock())
&#9;&#9;&#9;break
&#9;&#9;end
&#9;end

&#9;root.Name = name

&#9;-- Persist assetId on the root model for traceability without encoding it in the name
&#9;pcall(function()
&#9;&#9;root:SetAttribute(&quot;assetId&quot;, tostring(assetId))
&#9;end)

&#9;Log.info(&quot;[ToolboxImport] Imported asset:&quot;, assetId, &quot;&#226;&#134;&#146;&quot;, root:GetFullName())
&#9;return true
end

return ToolboxImportProcessor
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a40000100a</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX9E3F61E05AA840909AC83045A7FA1BBC">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000af5</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">RemovalProcessor</string>
							<string name="ScriptGuid">{e77fc406-9590-4cbb-a03b-bd4431341241}</string>
							<string name="Source">local HttpService = game:GetService(&quot;HttpService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Types = require(Lemonade.Types)
local Log = require(Lemonade.Log)
local Dom = require(Lemonade.Dom)
local Error = require(Lemonade.Core.Error)
local Helpers = require(script.Parent.Helpers)

local RemovalProcessor = {}
RemovalProcessor.__index = RemovalProcessor

function RemovalProcessor.new(parent)
&#9;return setmetatable({
&#9;&#9;parent = parent,
&#9;&#9;tree = parent.tree,
&#9;&#9;HttpSync = parent.HttpSync,
&#9;}, RemovalProcessor)
end

function RemovalProcessor:applyRemoval(
&#9;object: Types.Ref | Instance | Types.RemovalPayload,
&#9;initial: boolean?
): Instance?
&#9;local id_to_lookup: Types.Ref
&#9;local original_object_for_log = object -- For logging the original input
&#9;local id_str_for_logs: string -- For consistent logging of the ID string form

&#9;if typeof(object) == &quot;Instance&quot; then
&#9;&#9;Log.debug(&quot;[WriteProcessor:applyRemoval] Received Instance for removal:&quot;, object:GetFullName())
&#9;&#9;local id_from_tree = self.tree:getId(object)
&#9;&#9;if not id_from_tree then
&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor:applyRemoval] Could not get ID from Tree for instance:&quot;,
&#9;&#9;&#9;&#9;object:GetFullName(),
&#9;&#9;&#9;&#9;&quot;. Cannot reliably remove by ID from tree if it was by Ref. Instance will be removed from hierarchy if possible.&quot;
&#9;&#9;&#9;)
&#9;&#9;&#9;-- Create a dummy buffer; this instance won&apos;t be found by ID in the tree if it wasn&apos;t there.
&#9;&#9;&#9;-- The goal is to primarily remove the passed &apos;object&apos; (Instance) from the hierarchy.
&#9;&#9;&#9;-- Tree removal will be a no-op for this dummy ID.
&#9;&#9;&#9;id_to_lookup = buffer.fromstring(&quot;FALLBACK_NO_ID_FOR_INSTANCE_&quot; .. HttpService:GenerateGUID(false))
&#9;&#9;&#9;id_str_for_logs = &quot;ID_UNKNOWN_FROM_TREE&quot;
&#9;&#9;else
&#9;&#9;&#9;id_to_lookup = id_from_tree
&#9;&#9;&#9;id_str_for_logs = buffer.tostring(id_to_lookup)
&#9;&#9;end
&#9;elseif typeof(object) == &quot;buffer&quot; then
&#9;&#9;id_to_lookup = object
&#9;&#9;id_str_for_logs = buffer.tostring(id_to_lookup)
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[WriteProcessor:applyRemoval] Received Buffer Ref for removal. ID (string form):&quot;,
&#9;&#9;&#9;id_str_for_logs,
&#9;&#9;&#9;&quot;Buffer:&quot;,
&#9;&#9;&#9;id_to_lookup
&#9;&#9;)
&#9;elseif type(object) == &quot;table&quot; and object.id and object.uniqueId and object.path then
&#9;&#9;-- New RemovalPayload type with path + uniqueId info
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[RemovalProcessor DEBUG] Received RemovalPayload with path:&quot;,
&#9;&#9;&#9;object.path,
&#9;&#9;&#9;&quot;uniqueId:&quot;,
&#9;&#9;&#9;object.uniqueId
&#9;&#9;)
&#9;&#9;id_to_lookup = object.id
&#9;&#9;id_str_for_logs = object.uniqueId
&#9;else
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[WriteProcessor:applyRemoval] Invalid object type for removal. Expected Instance, buffer, or RemovalPayload, got:&quot;,
&#9;&#9;&#9;typeof(object),
&#9;&#9;&#9;&quot;Value:&quot;,
&#9;&#9;&#9;object
&#9;&#9;)
&#9;&#9;return nil
&#9;end

&#9;-- &lt;&lt;&lt; LOGGING FOR ID USED IN LOOKUP &gt;&gt;&gt;
&#9;Log.debug(
&#9;&#9;&quot;[WriteProcessor:applyRemoval] Using ID for lookup. String form:&quot;,
&#9;&#9;id_str_for_logs,
&#9;&#9;&quot;Buffer:&quot;,
&#9;&#9;id_to_lookup
&#9;)

&#9;local instance: Instance?
&#9;if typeof(object) == &quot;Instance&quot; then
&#9;&#9;instance = object -- Already have the instance if input was an Instance
&#9;elseif type(object) == &quot;table&quot; and object.uniqueId and object.path then
&#9;&#9;-- Use consistent path + uniqueId lookup strategy (no fallbacks)
&#9;&#9;Log.debug(&quot;[RemovalProcessor] Using path + uniqueId lookup for removal&quot;)
&#9;&#9;local targetPath = object.path
&#9;&#9;local targetUniqueId = object.uniqueId

&#9;&#9;Log.debug(&quot;  - Searching for path:&quot;, targetPath, &quot;AND uniqueId:&quot;, targetUniqueId)

&#9;&#9;for _, inst in ipairs(game:GetDescendants()) do
&#9;&#9;&#9;if inst:GetAttribute(&quot;uniqueId&quot;) == targetUniqueId then
&#9;&#9;&#9;&#9;local instancePath = inst:GetFullName():gsub(&quot;^game%.&quot;, &quot;&quot;):gsub(&quot;%.([^%.]+)$&quot;, &quot;/%1&quot;):gsub(&quot;%.&quot;, &quot;/&quot;)
&#9;&#9;&#9;&#9;if instancePath == targetPath then
&#9;&#9;&#9;&#9;&#9;instance = inst
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;  - FOUND instance for removal:&quot;, inst:GetFullName(), &quot;(&quot; .. inst.ClassName .. &quot;)&quot;)
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if not instance then
&#9;&#9;&#9;Log.debug(&quot;  - NO INSTANCE FOUND for removal with path:&quot;, targetPath, &quot;AND uniqueId:&quot;, targetUniqueId)
&#9;&#9;end
&#9;else
&#9;&#9;instance = self.tree:getInstance(id_to_lookup) -- Legacy tree lookup for buffer-only cases
&#9;end

&#9;local _instanceNameForLogs: string = instance and instance:GetFullName()
&#9;&#9;or (&quot;Ref (string form): &quot; .. id_str_for_logs)

&#9;if not instance then
&#9;&#9;-- Non-silent handling: record explicit warning so desyncs are visible
&#9;&#9;Log.warn(Error.new(Error.NoInstanceRemove, id_str_for_logs))
&#9;&#9;return nil
&#9;end

&#9;-- If we got here, &apos;instance&apos; is valid (either passed directly or found by ID Ref).
&#9;Log.debug(
&#9;&#9;&quot;[WriteProcessor:applyRemoval] Instance to be processed for removal:&quot;,
&#9;&#9;instance:GetFullName(),
&#9;&#9;&quot;(Class:&quot;,
&#9;&#9;instance.ClassName,
&#9;&#9;&quot;) linked to ID (string form):&quot;,
&#9;&#9;id_str_for_logs
&#9;)

&#9;-- Remove from tree map
&#9;-- If original object was an Instance, remove by that Instance (handles if its ID changed or wasn&apos;t in tree correctly)
&#9;-- If original object was a buffer (id_to_lookup should be this buffer)
&#9;if typeof(original_object_for_log) == &quot;Instance&quot; then
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[WriteProcessor:applyRemoval] Original object was Instance, removing from tree by instance:&quot;,
&#9;&#9;&#9;instance:GetFullName()
&#9;&#9;)
&#9;&#9;self.tree:removeByInstance(instance) -- This uses the instance&apos;s current ID in the tree
&#9;else
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[WriteProcessor:applyRemoval] Original object was Buffer, removing from tree by ID (string form):&quot;,
&#9;&#9;&#9;id_str_for_logs
&#9;&#9;)
&#9;&#9;self.tree:removeById(id_to_lookup)
&#9;end

&#9;if not Dom.isCreatable(instance.ClassName) then
&#9;&#9;Log.warn(Error.new(Error.NotRemovable, instance.ClassName))
&#9;&#9;Log.warn(
&#9;&#9;&#9;(&quot;[WriteProcessor WARNING] Instance %s (%s) is not creatable (e.g., a service). Removed from Tree, but skipping removal from Studio hierarchy.&quot;):format(
&#9;&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&#9;instance.ClassName
&#9;&#9;&#9;)
&#9;&#9;)
&#9;&#9;if not initial then
&#9;&#9;&#9;Helpers.setWaypoint(&quot;Remove (from Tree, service skipped)&quot;, instance.Name)
&#9;&#9;end
&#9;&#9;return instance -- Return the service instance, as it&apos;s still in the game
&#9;end

&#9;local removalSuccess = false -- Initialize removalSuccess for this specific instance removal operation

&#9;-- Actual removal from Studio hierarchy
&#9;if instance and instance.Parent then
&#9;&#9;-- Pause watcher for removal operations
&#9;&#9;if self.parent.watcher then
&#9;&#9;&#9;self.parent.watcher:pause(function()
&#9;&#9;&#9;&#9;local nilParentFunc = function()
&#9;&#9;&#9;&#9;&#9;instance.Parent = nil
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local success, _ = pcall(nilParentFunc)
&#9;&#9;&#9;&#9;if not success then
&#9;&#9;&#9;&#9;&#9;local destroyInstanceFunc = function()
&#9;&#9;&#9;&#9;&#9;&#9;instance:Destroy()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;local destroySuccess, _ = pcall(destroyInstanceFunc)
&#9;&#9;&#9;&#9;&#9;if destroySuccess then
&#9;&#9;&#9;&#9;&#9;&#9;removalSuccess = true -- Considered success if Destroy works
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;removalSuccess = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;else
&#9;&#9;&#9;local nilParentFunc = function()
&#9;&#9;&#9;&#9;instance.Parent = nil
&#9;&#9;&#9;end
&#9;&#9;&#9;local success, _ = pcall(nilParentFunc)
&#9;&#9;&#9;if not success then
&#9;&#9;&#9;&#9;local destroyInstanceFunc = function()
&#9;&#9;&#9;&#9;&#9;instance:Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local destroySuccess, _ = pcall(destroyInstanceFunc)
&#9;&#9;&#9;&#9;if destroySuccess then
&#9;&#9;&#9;&#9;&#9;removalSuccess = true -- Considered success if Destroy works
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;removalSuccess = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;removalSuccess = true -- Considered success if already gone
&#9;end

&#9;if not initial then
&#9;&#9;if removalSuccess then
&#9;&#9;&#9;Helpers.setWaypoint(&quot;Remove&quot;, (instance :: Instance).Name)
&#9;&#9;end
&#9;end

&#9;-- Removal status tracked in removalSuccess variable
&#9;return instance
end

return RemovalProcessor
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a40000100b</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXECBAE3C715E1461588615850D85075DF">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000af6</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">UpdateProcessor</string>
							<string name="ScriptGuid">{aba64307-fbe2-4ead-b04c-4e78c70508bf}</string>
							<string name="Source">local HttpService = game:GetService(&quot;HttpService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Types = require(Lemonade.Types)
local Log = require(Lemonade.Log)
local Dom = require(Lemonade.Dom)
local Config = require(Lemonade.Config)
local Error = require(Lemonade.Core.Error)
local Helpers = require(script.Parent.Helpers)

local UpdateProcessor = {}
UpdateProcessor.__index = UpdateProcessor

function UpdateProcessor.new(parent)
&#9;return setmetatable({
&#9;&#9;parent = parent,
&#9;&#9;tree = parent.tree,
&#9;&#9;HttpSync = parent.HttpSync,
&#9;}, UpdateProcessor)
end

function UpdateProcessor:applyUpdate(id: Types.Ref, snapshot: Types.SnapshotUpdate, initial: boolean?): Instance?
&#9;Log.debug(&quot;[UpdateProcessor] applyUpdate called:&quot;, {
&#9;&#9;id = type(id) == &quot;string&quot; and id or buffer.tostring(id),
&#9;&#9;name = snapshot.name,
&#9;&#9;class = snapshot.class,
&#9;&#9;contentExists = snapshot.content ~= nil,
&#9;&#9;contentLength = snapshot.content and string.len(snapshot.content) or nil,
&#9;})

&#9;-- If an &quot;add&quot; event was mistakenly routed to UpdateProcessor and is missing
&#9;-- critical fields (path or uniqueId), attempt to recover by fetching the
&#9;-- complete AddedSnapshot and delegating to AdditionProcessor.
&#9;local function isScriptClassName(className: string?): boolean
&#9;&#9;return className == &quot;Script&quot; or className == &quot;LocalScript&quot; or className == &quot;ModuleScript&quot;
&#9;end

&#9;local missingPath = (snapshot.path == nil or snapshot.path == &quot;&quot;)
&#9;local missingUniqueId = (snapshot.uniqueId == nil)
&#9;local looksLikeMisroutedAdd = (missingPath or missingUniqueId) and not isScriptClassName(snapshot.class)

&#9;if looksLikeMisroutedAdd then
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[UpdateProcessor DEBUG] Detected possible misrouted ADD (non-script) with missing path/uniqueId. Attempting fallback to AdditionProcessor via snapshot fetch...&quot;
&#9;&#9;)

&#9;&#9;local res = self.HttpSync.getSnapshotById(id)
&#9;&#9;if res and res.Success then
&#9;&#9;&#9;local ok, addedSnapshot = pcall(HttpService.JSONDecode, HttpService, res.Body)
&#9;&#9;&#9;if
&#9;&#9;&#9;&#9;ok
&#9;&#9;&#9;&#9;and addedSnapshot
&#9;&#9;&#9;&#9;and addedSnapshot.id
&#9;&#9;&#9;&#9;and addedSnapshot.name
&#9;&#9;&#9;&#9;and addedSnapshot.class
&#9;&#9;&#9;&#9;and addedSnapshot.parent
&#9;&#9;&#9;then
&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&quot;[UpdateProcessor DEBUG] Fallback fetched AddedSnapshot successfully. Delegating to AdditionProcessor.&quot;
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;return self.parent:applyAddition(addedSnapshot, initial)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&quot;[UpdateProcessor DEBUG] Fallback fetch returned incomplete snapshot; continuing with normal update flow.&quot;
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;Log.debug(&quot;[UpdateProcessor] Fallback snapshot fetch failed; continuing with normal update flow.&quot;)
&#9;&#9;end
&#9;end

&#9;-- TIMESTAMP CHECK
&#9;local newTimestamp = snapshot.timestamp
&#9;local existingTimestamp = self.tree:getTimestamp(id)
&#9;Log.debug(&quot;[UpdateProcessor] Timestamp check:&quot;)
&#9;Log.debug(&quot;  - newTimestamp:&quot;, newTimestamp or &quot;nil&quot;)
&#9;Log.debug(&quot;  - existingTimestamp:&quot;, existingTimestamp or &quot;nil&quot;)
&#9;Log.debug(
&#9;&#9;&quot;  - will skip update:&quot;,
&#9;&#9;(newTimestamp and existingTimestamp and newTimestamp &lt;= existingTimestamp) and &quot;YES&quot; or &quot;NO&quot;
&#9;)

&#9;if newTimestamp and existingTimestamp and newTimestamp &lt;= existingTimestamp then
&#9;&#9;Log.debug(&quot;[UpdateProcessor] SKIPPING UPDATE due to timestamp check!&quot;)
&#9;&#9;Log.trace(
&#9;&#9;&#9;string.format(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor:applyUpdate] Skipping UPDATE for %s (ID: %s), incoming timestamp (%s) is not newer than existing (%s).&quot;,
&#9;&#9;&#9;&#9;snapshot.name or &quot;N/A&quot;,
&#9;&#9;&#9;&#9;buffer.tostring(id),
&#9;&#9;&#9;&#9;tostring(newTimestamp),
&#9;&#9;&#9;&#9;tostring(existingTimestamp)
&#9;&#9;&#9;)
&#9;&#9;)
&#9;&#9;return self.tree:getInstance(id) -- Return existing instance if any
&#9;end

&#9;Log.debug(&quot;[UpdateProcessor] Timestamp check passed, continuing with update...&quot;)

&#9;-- Convert string IDs to buffers for internal processing
&#9;local internalId: Types.Ref
&#9;Log.debug(&quot;[UpdateProcessor] Converting ID:&quot;)
&#9;Log.debug(&quot;  - original id type:&quot;, type(id))
&#9;Log.debug(&quot;  - original id value:&quot;, tostring(id))

&#9;if type(id) == &quot;string&quot; then
&#9;&#9;Log.trace(&quot;[applyUpdate] id is a string, converting to buffer. Value:&quot;, id)
&#9;&#9;internalId = buffer.fromstring(id)
&#9;&#9;Log.debug(&quot;  - converted to buffer:&quot;, buffer.tostring(internalId))
&#9;elseif type(id) == &quot;buffer&quot; then
&#9;&#9;internalId = id
&#9;&#9;Log.debug(&quot;  - already buffer:&quot;, buffer.tostring(internalId))
&#9;else
&#9;&#9;assert(false, &quot;[applyUpdate] id must be a string or buffer. Got type: &quot; .. type(id))
&#9;&#9;return -- Should not happen due to assert
&#9;end

&#9;Log.debug(&quot;[UpdateProcessor] Looking up instance by path + uniqueId (no fallbacks)&quot;)

&#9;-- Preferred: path + uniqueId lookup when provided; otherwise fallback to tree by ID
&#9;local targetUniqueId = snapshot.uniqueId
&#9;local targetPath = snapshot.path
&#9;local instance = nil

&#9;if targetPath and targetUniqueId then
&#9;&#9;Log.debug(&quot;  - Searching for path:&quot;, targetPath, &quot;AND uniqueId:&quot;, targetUniqueId)
&#9;&#9;for _, inst in ipairs(game:GetDescendants()) do
&#9;&#9;&#9;if inst:GetAttribute(&quot;uniqueId&quot;) == targetUniqueId then
&#9;&#9;&#9;&#9;local instancePath = inst:GetFullName():gsub(&quot;^game%.&quot;, &quot;&quot;):gsub(&quot;%.([^%.]+)$&quot;, &quot;/%1&quot;):gsub(&quot;%.&quot;, &quot;/&quot;)
&#9;&#9;&#9;&#9;if instancePath == targetPath then
&#9;&#9;&#9;&#9;&#9;instance = inst
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;  - FOUND instance:&quot;, inst:GetFullName(), &quot;(&quot; .. inst.ClassName .. &quot;)&quot;)
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;-- Fallback: use tree mapping by ID when path/uniqueId are missing (common after Full Sync)
&#9;&#9;instance = self.tree:getInstance(internalId)
&#9;&#9;Log.debug(&quot;  - Using tree fallback lookup by ID. Found:&quot;, instance and instance:GetFullName() or &quot;nil&quot;)
&#9;end

&#9;if not instance and targetPath and targetUniqueId then
&#9;&#9;Log.debug(&quot;  - NO INSTANCE FOUND with path:&quot;, targetPath, &quot;AND uniqueId:&quot;, targetUniqueId)
&#9;&#9;Log.debug(&quot;  - Checking if any instance exists at path (ignoring uniqueId)...&quot;)
&#9;&#9;for _, inst in ipairs(game:GetDescendants()) do
&#9;&#9;&#9;local instancePath = inst:GetFullName():gsub(&quot;^game%.&quot;, &quot;&quot;):gsub(&quot;%.([^%.]+)$&quot;, &quot;/%1&quot;):gsub(&quot;%.&quot;, &quot;/&quot;)
&#9;&#9;&#9;if instancePath == targetPath then
&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&quot;  - FOUND instance at path:&quot;,
&#9;&#9;&#9;&#9;&#9;inst:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&quot;with uniqueId:&quot;,
&#9;&#9;&#9;&#9;&#9;inst:GetAttribute(&quot;uniqueId&quot;)
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;if not instance then
&#9;&#9;Log.debug(&quot;[UpdateProcessor] INSTANCE NOT FOUND - attempting LiveHydrate fallback&quot;)
&#9;&#9;Log.warn(&quot;[WriteProcessor] Failed to update instance: instance is nil. ID:&quot;, buffer.tostring(internalId))

&#9;&#9;if Config:get(&quot;LiveHydrate&quot;) then
&#9;&#9;&#9;local res = self.HttpSync.getSnapshotById(id)

&#9;&#9;&#9;if not res.Success then
&#9;&#9;&#9;&#9;Log.warn(&quot;LiveHydrate: Failed to get snapshot for&quot;, id, res.Body)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;local ok, addedSnapshot = pcall(HttpService.JSONDecode, HttpService, res.Body)

&#9;&#9;&#9;&#9;if ok and addedSnapshot then
&#9;&#9;&#9;&#9;&#9;-- Ensure required fields exist
&#9;&#9;&#9;&#9;&#9;if
&#9;&#9;&#9;&#9;&#9;&#9;not addedSnapshot.id
&#9;&#9;&#9;&#9;&#9;&#9;or not addedSnapshot.name
&#9;&#9;&#9;&#9;&#9;&#9;or not addedSnapshot.class
&#9;&#9;&#9;&#9;&#9;&#9;or not addedSnapshot.parent
&#9;&#9;&#9;&#9;&#9;then
&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[LiveHydrate UPDATE] Fetched snapshot is incomplete. Skipping applyAddition.&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[LiveHydrate DETAIL] ID:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;addedSnapshot.id,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Name:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;addedSnapshot.name,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Class:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;addedSnapshot.class,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;ParentRef:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;addedSnapshot.parent
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;instance = self.parent:applyAddition(addedSnapshot, initial)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;Live hydrated instance:&quot;, instance and instance:GetFullName() or &quot;NIL&quot;)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;LiveHydrate: Failed to decode snapshot for&quot;, id, res.Body)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if not instance then
&#9;&#9;&#9;local err = Error.new(Error.NoInstanceUpdate, internalId)
&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;return
&#9;&#9;end
&#9;end

&#9;-- UPDATE: If the instance is parented and the snapshot indicates a rename, apply it here
&#9;if instance.Parent and snapshot.name and snapshot.name ~= instance.Name then
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[WriteProcessor:applyUpdate] Detected name change for instance. Old:&quot;,
&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&quot;New:&quot;,
&#9;&#9;&#9;snapshot.name
&#9;&#9;)

&#9;&#9;-- Pause watcher during rename
&#9;&#9;if self.parent.watcher then
&#9;&#9;&#9;self.parent.watcher:pause(function()
&#9;&#9;&#9;&#9;instance.Name = snapshot.name
&#9;&#9;&#9;end)
&#9;&#9;else
&#9;&#9;&#9;instance.Name = snapshot.name
&#9;&#9;end

&#9;&#9;Log.trace(&quot;[WriteProcessor:applyUpdate] Applied name change. Instance is now:&quot;, instance.Name)
&#9;end

&#9;-- Apply property updates
&#9;if snapshot.properties then
&#9;&#9;for property, value in snapshot.properties do
&#9;&#9;&#9;local decodedValue
&#9;&#9;&#9;local decodeSuccess = true

&#9;&#9;&#9;-- Handle both encoded format ({ String: &quot;value&quot; }) and raw values
&#9;&#9;&#9;if typeof(value) == &quot;string&quot; then
&#9;&#9;&#9;&#9;-- Value is already a raw string, use it directly
&#9;&#9;&#9;&#9;decodedValue = value
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;-- Value is in encoded format or unknown type, try to decode
&#9;&#9;&#9;&#9;decodeSuccess, decodedValue = Dom.EncodedValue.decode(value)
&#9;&#9;&#9;&#9;if not decodeSuccess then
&#9;&#9;&#9;&#9;&#9;local err = Error.new(Error.DecodeFailed, property, value)
&#9;&#9;&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Handle Source property for Parts - Parts don&apos;t have Source properties, but Source contains Part JSON data
&#9;&#9;&#9;if property == &quot;Source&quot; and snapshot.class == &quot;Part&quot; then
&#9;&#9;&#9;&#9;-- decodedValue should contain the JSON string, parse it to get Part properties
&#9;&#9;&#9;&#9;local parseSuccess, partData = pcall(function()
&#9;&#9;&#9;&#9;&#9;return HttpService:JSONDecode(decodedValue)
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;&#9;if parseSuccess and partData then
&#9;&#9;&#9;&#9;&#9;-- Define read-only properties that shouldn&apos;t be set
&#9;&#9;&#9;&#9;&#9;local readOnlyProperties = {
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Assembly&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Attributes&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Tags&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Origin&quot;, -- Skip Origin - we use its data in CFrame processing but don&apos;t set it directly
&#9;&#9;&#9;&#9;&#9;&#9;&quot;AssemblyAngularVelocity&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;AssemblyCenterOfMass&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;AssemblyLinearVelocity&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;AssemblyMass&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;AssemblyRootPart&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;CenterOfMass&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;CurrentPhysicalProperties&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;ExtentsCFrame&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;ExtentsSize&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Mass&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;ReceiveAge&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;ResizeIncrement&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;ResizeableFaces&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Position&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Orientation&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Rotation&quot;, -- These conflict with CFrame
&#9;&#9;&#9;&#9;&#9;}

&#9;&#9;&#9;&#9;&#9;-- Function to apply Part properties with proper error handling
&#9;&#9;&#9;&#9;&#9;local function applyPartProperties()
&#9;&#9;&#9;&#9;&#9;&#9;local appliedCount = 0
&#9;&#9;&#9;&#9;&#9;&#9;local skippedCount = 0
&#9;&#9;&#9;&#9;&#9;&#9;local failedCount = 0

&#9;&#9;&#9;&#9;&#9;&#9;-- Check network ownership first (variables used for debugging/future use)
&#9;&#9;&#9;&#9;&#9;&#9;-- local canSetNetworkOwnership, ownershipReason = instance:CanSetNetworkOwnership()
&#9;&#9;&#9;&#9;&#9;&#9;-- local currentOwner = instance:GetNetworkOwner()

&#9;&#9;&#9;&#9;&#9;&#9;-- Apply each Part property from the JSON
&#9;&#9;&#9;&#9;&#9;&#9;for propName, propValue in pairs(partData) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Skip read-only properties and complex structures
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local shouldSkip = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for _, readOnlyProp in ipairs(readOnlyProperties) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if propName == readOnlyProp then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;shouldSkip = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;if shouldSkip then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;skippedCount = skippedCount + 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;local applySuccess, applyErr = pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if propName == &quot;CFrame&quot; and type(propValue) == &quot;table&quot; and propValue.Position then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Handle CFrame specially - prefer Origin.Position over CFrame.Position if available
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local pos = propValue.Position
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local orient = propValue.Orientation or { 0, 0, 0 }

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Log current position before change
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local currentCFrame = instance.CFrame

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Check if Origin data exists and intelligently choose between Origin and CFrame
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if partData.Origin and partData.Origin.Position then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local originPos = partData.Origin.Position
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local originOrient = partData.Origin.Orientation or { 0, 0, 0 }
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local cframePos = propValue.Position
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local currentPos = currentCFrame.Position

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Determine which position is the fresh edit by comparing to current Studio position
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local originMatchesCurrent = math.abs(originPos[2] - currentPos.Y) &lt; 0.01
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local cframeMatchesCurrent = math.abs(cframePos[2] - currentPos.Y) &lt; 0.01

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if originMatchesCurrent and not cframeMatchesCurrent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- CFrame differs, Origin matches current - CFrame is the fresh edit
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;pos = propValue.Position
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;orient = propValue.Orientation or { 0, 0, 0 }
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Default to Origin position (covers all other cases)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;pos = originPos
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;orient = originOrient
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local newCFrame = CFrame.new(pos[1], pos[2], pos[3])
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;* CFrame.Angles(math.rad(orient[1]), math.rad(orient[2]), math.rad(orient[3]))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;instance.CFrame = newCFrame

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Verify the change took effect and add delayed verification
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local finalCFrame = instance.CFrame
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if finalCFrame.Position ~= newCFrame.Position then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[WriteProcessor] CFrame position mismatch after setting&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Add delayed verification to catch async overrides
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;task.spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;task.wait(0.1) -- Wait 100ms
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local delayedCFrame = instance.CFrame
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if delayedCFrame.Position.Y ~= newCFrame.Position.Y then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[WriteProcessor] CFrame position changed after 100ms delay&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif propName == &quot;Size&quot; and type(propValue) == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local newSize = Vector3.new(propValue[1], propValue[2], propValue[3])
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;instance.Size = newSize
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif propName == &quot;Color&quot; and type(propValue) == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local newColor =
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Color3.new(propValue[1] / 255, propValue[2] / 255, propValue[3] / 255)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;instance.Color = newColor
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif propName == &quot;Material&quot; and type(propValue) == &quot;string&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local materialEnum = Enum.Material[propValue]
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if materialEnum then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;instance.Material = materialEnum
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;error(&quot;Invalid Material: &quot; .. tostring(propValue))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif propName == &quot;Shape&quot; and type(propValue) == &quot;string&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local shapeEnum = Enum.PartType[propValue]
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if shapeEnum then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;instance.Shape = shapeEnum
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;error(&quot;Invalid Shape: &quot; .. tostring(propValue))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif propName == &quot;BrickColor&quot; and type(propValue) == &quot;string&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Only set BrickColor if Color wasn&apos;t already set (avoid conflicts)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not partData.Color then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local brickColorSuccess, brickColor = pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return BrickColor.new(propValue)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if brickColorSuccess then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;instance.BrickColor = brickColor
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;error(&quot;Invalid BrickColor: &quot; .. tostring(propValue))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif propName == &quot;CustomPhysicalProperties&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- CustomPhysicalProperties expects PhysicalProperties object or nil, not boolean
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if type(propValue) == &quot;boolean&quot; and not propValue then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;instance.CustomPhysicalProperties = nil
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Handle simple property types (boolean, number, string)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;type(propValue) == &quot;boolean&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;or type(propValue) == &quot;number&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;or type(propValue) == &quot;string&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;instance[propName] = propValue
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;if applySuccess then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;appliedCount = appliedCount + 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;failedCount = failedCount + 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor UPDATE] Failed to apply Part property&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;propName,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Value:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;propValue,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;applyErr
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;return appliedCount &gt; 0
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;-- Apply properties with or without watcher pause
&#9;&#9;&#9;&#9;&#9;local applyResult
&#9;&#9;&#9;&#9;&#9;if self.parent.watcher then
&#9;&#9;&#9;&#9;&#9;&#9;self.parent.watcher:pause(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;applyResult = applyPartProperties()
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;applyResult = applyPartProperties()
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;if applyResult then
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[WriteProcessor UPDATE] Part properties applied successfully&quot;)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[WriteProcessor UPDATE] No Part properties were successfully applied&quot;)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor UPDATE] Failed to parse Part JSON from Source property. Error:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;partData
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- Skip normal property handling since we&apos;ve processed the Part data
&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Skip all Part properties handled via JSON Source property to prevent defaults from overwriting correct values
&#9;&#9;&#9;if instance:IsA(&quot;Part&quot;) then
&#9;&#9;&#9;&#9;local partJsonProperties = {
&#9;&#9;&#9;&#9;&#9;&quot;CFrame&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;Size&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;Color&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;BrickColor&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;Material&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;MaterialVariant&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;Reflectance&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;Transparency&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;CastShadow&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;Archivable&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;Locked&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;EnableFluidForces&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;CanCollide&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;CanTouch&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;CollisionGroup&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;Anchored&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;CustomPhysicalProperties&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;Massless&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;RootPriority&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;Shape&quot;,
&#9;&#9;&#9;&#9;}

&#9;&#9;&#9;&#9;local shouldSkip = false
&#9;&#9;&#9;&#9;for _, jsonProp in ipairs(partJsonProperties) do
&#9;&#9;&#9;&#9;&#9;if property == jsonProp then
&#9;&#9;&#9;&#9;&#9;&#9;shouldSkip = true
&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if shouldSkip then
&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Pause watcher during property writes
&#9;&#9;&#9;if self.parent.watcher then
&#9;&#9;&#9;&#9;self.parent.watcher:pause(function()
&#9;&#9;&#9;&#9;&#9;local writeSuccess, reason = Dom.writeProperty(instance, property, decodedValue)
&#9;&#9;&#9;&#9;&#9;if not writeSuccess then
&#9;&#9;&#9;&#9;&#9;&#9;local err = Error.new(Error.WriteFailed, property, instance, reason.kind)
&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;local writeSuccess, reason = Dom.writeProperty(instance, property, decodedValue)
&#9;&#9;&#9;&#9;if not writeSuccess then
&#9;&#9;&#9;&#9;&#9;local err = Error.new(Error.WriteFailed, property, instance, reason.kind)
&#9;&#9;&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;-- Handle content updates for script instances
&#9;Log.debug(&quot;[UpdateProcessor] Checking content update conditions:&quot;)
&#9;Log.debug(&quot;  - snapshot.content exists:&quot;, snapshot.content ~= nil)
&#9;Log.debug(&quot;  - snapshot.content length:&quot;, snapshot.content and string.len(snapshot.content) or &quot;nil&quot;)
&#9;Log.debug(&quot;  - snapshot.class:&quot;, snapshot.class or &quot;nil&quot;)
&#9;Log.debug(&quot;  - instance found:&quot;, instance ~= nil)
&#9;Log.debug(&quot;  - instance name:&quot;, instance and instance.Name or &quot;nil&quot;)
&#9;Log.debug(&quot;  - instance class:&quot;, instance and instance.ClassName or &quot;nil&quot;)

&#9;if
&#9;&#9;snapshot.content
&#9;&#9;and (snapshot.class == &quot;ModuleScript&quot; or snapshot.class == &quot;Script&quot; or snapshot.class == &quot;LocalScript&quot;)
&#9;then
&#9;&#9;Log.debug(&quot;[UpdateProcessor] &#226;&#156;&#133; Conditions met - updating script content&quot;)
&#9;&#9;Log.trace(&quot;[WriteProcessor UPDATE] Setting Source for&quot;, instance.Name, &quot;Length:&quot;, string.len(snapshot.content))

&#9;&#9;-- Pause watcher during source update
&#9;&#9;if self.parent.watcher then
&#9;&#9;&#9;self.parent.watcher:pause(function()
&#9;&#9;&#9;&#9;local contentSuccess, contentErr = pcall(function()
&#9;&#9;&#9;&#9;&#9;-- Use Dom.writeProperty so ScriptEditorService.UpdateSourceAsync is employed,
&#9;&#9;&#9;&#9;&#9;-- refreshing any open script editors immediately.
&#9;&#9;&#9;&#9;&#9;return Dom.writeProperty(instance, &quot;Source&quot;, snapshot.content)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;if contentSuccess then
&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor UPDATE] Successfully updated Source via Dom.writeProperty for&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;instance.Name
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor UPDATE ERROR] Failed to set Source for&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;contentErr
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;else
&#9;&#9;&#9;local contentSuccess, contentErr = pcall(function()
&#9;&#9;&#9;&#9;return Dom.writeProperty(instance, &quot;Source&quot;, snapshot.content)
&#9;&#9;&#9;end)
&#9;&#9;&#9;if contentSuccess then
&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor UPDATE] Successfully updated Source via Dom.writeProperty for&quot;,
&#9;&#9;&#9;&#9;&#9;instance.Name
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.error(&quot;[WriteProcessor UPDATE ERROR] Failed to set Source for&quot;, instance.Name, &quot;Error:&quot;, contentErr)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;-- Skip Part content updates - Parts are handled via Source property above
&#9;elseif snapshot.content and snapshot.class == &quot;Part&quot; then
&#9;&#9;Log.trace(&quot;[WriteProcessor UPDATE] Skipping Part content processing - handled via Source property&quot;)
&#9;elseif snapshot.content then
&#9;&#9;Log.trace(&quot;[WriteProcessor UPDATE] Skipping Source set for non-script/non-Part class:&quot;, snapshot.class)
&#9;end

&#9;-- Update the tree with new metadata and timestamp
&#9;if snapshot.meta then
&#9;&#9;self.tree:updateMeta(internalId, snapshot.meta)
&#9;end
&#9;if newTimestamp then
&#9;&#9;self.tree:setTimestamp(internalId, newTimestamp)
&#9;end

&#9;if not initial then
&#9;&#9;Helpers.setWaypoint(&quot;Update&quot;, instance.Name)
&#9;end

&#9;Log.trace(&quot;[WriteProcessor] Update successful for:&quot;, instance.Name)
&#9;return instance
end

return UpdateProcessor
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a40000100c</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXBACD01E60D804C329557FE3CA0DF3EF0">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000af7</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">CreateProcessor</string>
							<string name="ScriptGuid">{6f667b8f-82d6-4065-ace6-edff08a047a4}</string>
							<string name="Source">local ChangeHistoryService = game:GetService(&quot;ChangeHistoryService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Log = require(Lemonade.Log)

local CreateProcessor = {}
CreateProcessor.__index = CreateProcessor

function CreateProcessor.new(writeProcessor)
&#9;return setmetatable({
&#9;&#9;writeProcessor = writeProcessor,
&#9;}, CreateProcessor)
end

-- Convert database path to Studio instance path
function CreateProcessor:databasePathToStudioPath(dbPath: string): string
&#9;-- Remove src/ prefix if present
&#9;local studioPath = dbPath:gsub(&quot;^src/&quot;, &quot;&quot;)

&#9;-- Convert service names to Studio paths
&#9;local pathParts = {}
&#9;for part in studioPath:gmatch(&quot;[^/]+&quot;) do
&#9;&#9;table.insert(pathParts, part)
&#9;end

&#9;if #pathParts == 0 then
&#9;&#9;return &quot;game&quot;
&#9;end

&#9;local serviceName = pathParts[1]
&#9;pathParts[1] = &quot;game.&quot; .. serviceName

&#9;return table.concat(pathParts, &quot;.&quot;)
end

-- Find parent instance for the new instance
function CreateProcessor:findParentInstanceByPath(destinationPath: string): Instance?
&#9;-- Extract parent path (remove the instance name)
&#9;local pathParts = {}
&#9;for part in destinationPath:gmatch(&quot;[^/]+&quot;) do
&#9;&#9;table.insert(pathParts, part)
&#9;end

&#9;if #pathParts &lt;= 1 then
&#9;&#9;-- Root level - parent is the service itself
&#9;&#9;return game
&#9;end

&#9;-- Get parent path (all parts except the last one)
&#9;local parentPath = table.concat(pathParts, &quot;/&quot;, 1, #pathParts - 1)
&#9;local studioParentPath = self:databasePathToStudioPath(parentPath)

&#9;Log.info(&quot;[CreateProcessor] Looking for parent at studio path:&quot;, studioParentPath)

&#9;-- Parse the studio path to find the actual instance
&#9;local currentInstance = game
&#9;local pathPartsStudio = {}
&#9;for part in studioParentPath:gmatch(&quot;[^%.]+&quot;) do
&#9;&#9;table.insert(pathPartsStudio, part)
&#9;end

&#9;-- Skip &quot;game&quot; if it&apos;s the first part
&#9;local startIndex = 1
&#9;if pathPartsStudio[1] == &quot;game&quot; then
&#9;&#9;startIndex = 2
&#9;end

&#9;for i = startIndex, #pathPartsStudio do
&#9;&#9;local partName = pathPartsStudio[i]

&#9;&#9;local child = currentInstance:FindFirstChild(partName)
&#9;&#9;if not child then
&#9;&#9;&#9;Log.warn(&quot;[CreateProcessor] Parent path part not found:&quot;, partName, &quot;in&quot;, currentInstance:GetFullName())
&#9;&#9;&#9;return nil
&#9;&#9;end

&#9;&#9;currentInstance = child
&#9;end

&#9;Log.info(&quot;[CreateProcessor] Found parent instance:&quot;, currentInstance:GetFullName())
&#9;return currentInstance
end

-- Set default properties for different instance types
function CreateProcessor:setDefaultProperties(instance: Instance, robloxClass: string)
&#9;if robloxClass == &quot;Tool&quot; then
&#9;&#9;-- Instance.new(&quot;Tool&quot;) should create a Tool with all default properties already set
&#9;&#9;-- Only override specific properties if needed
&#9;&#9;local tool = instance :: Tool

&#9;&#9;-- Set RequiresHandle = false so the tool is usable even before the Handle is added.
&#9;&#9;tool.RequiresHandle = false
&#9;&#9;-- NOTE: The Handle will be created *after* the Tool itself has been synced to Studio.
&#9;&#9;Log.info(
&#9;&#9;&#9;&quot;[CreateProcessor] Tool created with default properties (Handle will be added after sync):&quot;,
&#9;&#9;&#9;instance.Name
&#9;&#9;)
&#9;elseif robloxClass == &quot;Folder&quot; then
&#9;&#9;-- Folders don&apos;t need any special properties
&#9;&#9;Log.info(&quot;[CreateProcessor] Created Folder (no special properties needed):&quot;, instance.Name)
&#9;else
&#9;&#9;Log.warn(&quot;[CreateProcessor] Unknown robloxClass for property setup:&quot;, robloxClass)
&#9;end
end

-- Process a create operation from a project change event
function CreateProcessor:processCreateEvent(eventPayload): boolean
&#9;Log.info(
&#9;&#9;&quot;[CreateProcessor] Processing create operation:&quot;,
&#9;&#9;eventPayload.robloxClass,
&#9;&#9;eventPayload.name,
&#9;&#9;&quot;&#226;&#134;&#146;&quot;,
&#9;&#9;eventPayload.destinationPath
&#9;)

&#9;-- Validate robloxClass whitelist
&#9;local allowedClasses = { &quot;Tool&quot;, &quot;Folder&quot;, &quot;RemoteEvent&quot; }
&#9;local isAllowed = false
&#9;for _, allowedClass in ipairs(allowedClasses) do
&#9;&#9;if eventPayload.robloxClass == allowedClass then
&#9;&#9;&#9;isAllowed = true
&#9;&#9;&#9;break
&#9;&#9;end
&#9;end

&#9;if not isAllowed then
&#9;&#9;Log.error(&quot;[CreateProcessor] Attempted to create disallowed instance type:&quot;, eventPayload.robloxClass)
&#9;&#9;return false
&#9;end

&#9;-- Find parent instance
&#9;local parentInstance = self:findParentInstanceByPath(eventPayload.destinationPath)
&#9;if not parentInstance then
&#9;&#9;Log.error(&quot;[CreateProcessor] Parent instance not found for path:&quot;, eventPayload.destinationPath)
&#9;&#9;return false
&#9;end

&#9;-- Use name directly since IDs ensure uniqueness
&#9;local uniqueName = eventPayload.name

&#9;-- Create the new instance using Instance.new()
&#9;local success, newInstance = pcall(function()
&#9;&#9;local instance = Instance.new(eventPayload.robloxClass)
&#9;&#9;if not instance then
&#9;&#9;&#9;error(&quot;Instance.new() returned nil for class: &quot; .. eventPayload.robloxClass)
&#9;&#9;end

&#9;&#9;-- Set the name BEFORE parenting (recommended for performance)
&#9;&#9;instance.Name = uniqueName

&#9;&#9;-- Apply default properties for this instance type
&#9;&#9;self:setDefaultProperties(instance, eventPayload.robloxClass)

&#9;&#9;-- Mark as server-created to prevent sync echo
&#9;&#9;instance:SetAttribute(&quot;_serverCreated&quot;, true)

&#9;&#9;-- Parent the instance LAST (recommended for performance)
&#9;&#9;instance.Parent = parentInstance

&#9;&#9;return instance
&#9;end)

&#9;if not success then
&#9;&#9;Log.error(&quot;[CreateProcessor] Instance creation failed:&quot;, newInstance)
&#9;&#9;return false
&#9;end

&#9;if not newInstance then
&#9;&#9;Log.error(&quot;[CreateProcessor] Instance creation resulted in nil instance&quot;)
&#9;&#9;return false
&#9;end

&#9;Log.info(&quot;[CreateProcessor] Instance creation successful:&quot;, newInstance:GetFullName())

&#9;-- DEFERRED HANDLE CREATION ----------------------------------------------------
&#9;-- Historically, the Handle needed to be created *after* the Tool had been
&#9;-- synced to Studio.  Creating it too early leads to the child never
&#9;-- appearing because the Watcher records the Tool before it exists remotely.
&#9;if eventPayload.robloxClass == &quot;Tool&quot; then
&#9;&#9;-- Small delay ensures the parent Tool is fully registered before adding
&#9;&#9;-- its child.  0.25 s is empirically long enough yet imperceptible.
&#9;&#9;task.delay(0.25, function()
&#9;&#9;&#9;-- Re-check the instance in case it was renamed or deleted meanwhile.
&#9;&#9;&#9;if newInstance and newInstance:IsDescendantOf(game) then
&#9;&#9;&#9;&#9;-- Safeguard against duplicate Handles.
&#9;&#9;&#9;&#9;if not newInstance:FindFirstChild(&quot;Handle&quot;) then
&#9;&#9;&#9;&#9;&#9;local handle = Instance.new(&quot;Part&quot;)
&#9;&#9;&#9;&#9;&#9;handle.Name = &quot;Handle&quot;
&#9;&#9;&#9;&#9;&#9;handle.Size = Vector3.new(1, 1, 1)
&#9;&#9;&#9;&#9;&#9;handle.CanCollide = false
&#9;&#9;&#9;&#9;&#9;handle.Anchored = false
&#9;&#9;&#9;&#9;&#9;-- Mark as server-created to prevent sync echo
&#9;&#9;&#9;&#9;&#9;handle:SetAttribute(&quot;_serverCreated&quot;, true)
&#9;&#9;&#9;&#9;&#9;handle.Parent = newInstance
&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[CreateProcessor] Default Handle added after sync:&quot;, newInstance:GetFullName())
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[CreateProcessor] Handle already present, skipping auto-creation for&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;newInstance:GetFullName()
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end

&#9;-- CRITICAL: Force the created instance to be synced back to database
&#9;-- Access the Core instance through the writeProcessor to trigger manual sync
&#9;local coreInstance = self.writeProcessor.coreInstance
&#9;if coreInstance and coreInstance.manualSyncInstance then
&#9;&#9;Log.info(&quot;[CreateProcessor] Manually syncing created instance back to database&quot;)
&#9;&#9;coreInstance:manualSyncInstance(newInstance)
&#9;else
&#9;&#9;Log.warn(&quot;[CreateProcessor] No manual sync method available - relying on Watcher detection&quot;)
&#9;end

&#9;-- Create a waypoint for undo functionality
&#9;ChangeHistoryService:SetWaypoint(`Lemonade: Created ${eventPayload.robloxClass} &quot;${uniqueName}&quot;`)

&#9;return true
end

return CreateProcessor
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a40000100d</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXF0A46D2079A64EDF9BBBC87899D17564">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000af8</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">CloneProcessor</string>
							<string name="ScriptGuid">{de3dc0ed-4094-4513-a37b-41a1be1f1722}</string>
							<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Log = require(Lemonade.Log)

local CloneProcessor = {}
CloneProcessor.__index = CloneProcessor

function CloneProcessor.new(writeProcessor)
&#9;local self = setmetatable({
&#9;&#9;writeProcessor = writeProcessor,
&#9;&#9;tree = writeProcessor.tree,
&#9;}, CloneProcessor)

&#9;return self
end

-- Find instance by traversing Roblox instance hierarchy
function CloneProcessor:findInstanceByPath(path: string): Instance?
&#9;-- Split path into components
&#9;local pathParts = {}
&#9;for part in string.gmatch(path, &quot;[^/]+&quot;) do
&#9;&#9;table.insert(pathParts, part)
&#9;end

&#9;if #pathParts == 0 then
&#9;&#9;return nil
&#9;end

&#9;-- Start from the appropriate service
&#9;local currentInstance: Instance
&#9;local serviceName = pathParts[1]

&#9;if serviceName == &quot;Workspace&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;Workspace&quot;)
&#9;elseif serviceName == &quot;ReplicatedStorage&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;ReplicatedStorage&quot;)
&#9;elseif serviceName == &quot;ServerScriptService&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;ServerScriptService&quot;)
&#9;elseif serviceName == &quot;ReplicatedFirst&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;ReplicatedFirst&quot;)
&#9;elseif serviceName == &quot;ServerStorage&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;ServerStorage&quot;)
&#9;elseif serviceName == &quot;StarterGui&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;StarterGui&quot;)
&#9;elseif serviceName == &quot;StarterPack&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;StarterPack&quot;)
&#9;elseif serviceName == &quot;StarterPlayer&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;StarterPlayer&quot;)
&#9;elseif serviceName == &quot;SoundService&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;SoundService&quot;)
&#9;elseif serviceName == &quot;Lighting&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;Lighting&quot;)
&#9;elseif serviceName == &quot;TextChatService&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;TextChatService&quot;)
&#9;elseif serviceName == &quot;Chat&quot; then
&#9;&#9;currentInstance = game:GetService(&quot;Chat&quot;)
&#9;else
&#9;&#9;Log.warn(&quot;[CloneProcessor] Unknown service in path:&quot;, serviceName)
&#9;&#9;return nil
&#9;end

&#9;-- Traverse the remaining path parts
&#9;for i = 2, #pathParts do
&#9;&#9;local partName = pathParts[i]

&#9;&#9;Log.info(&quot;[CloneProcessor] Looking for part:&quot;, partName, &quot;in&quot;, currentInstance:GetFullName())

&#9;&#9;-- Try to find child with exact name first
&#9;&#9;local child = currentInstance:FindFirstChild(partName)

&#9;&#9;if not child then
&#9;&#9;&#9;Log.warn(&quot;[CloneProcessor] Child not found for:&quot;, partName, &quot;in&quot;, currentInstance:GetFullName())
&#9;&#9;&#9;-- List available children for debugging
&#9;&#9;&#9;local children = currentInstance:GetChildren()
&#9;&#9;&#9;local childNames = {}
&#9;&#9;&#9;for _, c in pairs(children) do
&#9;&#9;&#9;&#9;table.insert(childNames, c.Name)
&#9;&#9;&#9;end
&#9;&#9;&#9;Log.warn(&quot;[CloneProcessor] Available children:&quot;, table.concat(childNames, &quot;, &quot;))
&#9;&#9;&#9;return nil
&#9;&#9;end
&#9;&#9;currentInstance = child
&#9;end

&#9;return currentInstance
end

-- Generate unique name using Studio-side collision detection
function CloneProcessor:generateUniqueCloneName(baseName: string, parentInstance: Instance): string
&#9;local finalName = baseName
&#9;local counter = 2

&#9;-- Check if name exists in parent
&#9;while parentInstance:FindFirstChild(finalName) do
&#9;&#9;-- Extract base name and number if it already has one
&#9;&#9;local baseNameMatch = string.match(baseName, &quot;^(.+)(%d+)$&quot;)
&#9;&#9;if baseNameMatch then
&#9;&#9;&#9;-- Already has a number, increment it
&#9;&#9;&#9;local nameBase = string.match(baseName, &quot;^(.+)%d+$&quot;)
&#9;&#9;&#9;finalName = nameBase .. counter
&#9;&#9;else
&#9;&#9;&#9;-- No number yet, add one
&#9;&#9;&#9;finalName = baseName .. counter
&#9;&#9;end
&#9;&#9;counter = counter + 1

&#9;&#9;-- Safety check to avoid infinite loops
&#9;&#9;if counter &gt; 100 then
&#9;&#9;&#9;finalName = baseName .. &quot;_&quot; .. tick()
&#9;&#9;&#9;break
&#9;&#9;end
&#9;end

&#9;return finalName
end

-- Process a clone operation from a project change event
function CloneProcessor:processCloneEvent(eventPayload): boolean
&#9;Log.info(
&#9;&#9;&quot;[CloneProcessor] Processing clone operation:&quot;,
&#9;&#9;eventPayload.sourcePath,
&#9;&#9;&quot;&#226;&#134;&#146;&quot;,
&#9;&#9;eventPayload.destinationPath .. &quot;/&quot; .. eventPayload.cloneName
&#9;)

&#9;-- Extract source path without &apos;src/&apos; prefix for Studio navigation
&#9;local studioSourcePath = string.gsub(eventPayload.sourcePath, &quot;^src/&quot;, &quot;&quot;)
&#9;local studioDestinationPath = string.gsub(eventPayload.destinationPath, &quot;^src/&quot;, &quot;&quot;)

&#9;-- Find source instance by traversing hierarchy
&#9;local sourceInstance = self:findInstanceByPath(studioSourcePath)
&#9;if not sourceInstance then
&#9;&#9;Log.error(&quot;[CloneProcessor] Source instance not found:&quot;, studioSourcePath)
&#9;&#9;return false
&#9;end

&#9;-- Check if source instance is Archivable (required for cloning)
&#9;if not sourceInstance.Archivable then
&#9;&#9;Log.warn(&quot;[CloneProcessor] Source instance is not Archivable, cannot clone:&quot;, sourceInstance.Name)
&#9;&#9;return false
&#9;end

&#9;-- For script instances, verify Source property exists before cloning
&#9;if sourceInstance:IsA(&quot;LuaSourceContainer&quot;) then
&#9;&#9;if not sourceInstance.Source or sourceInstance.Source == &quot;&quot; then
&#9;&#9;&#9;Log.warn(&quot;[CloneProcessor] Source script has no content to clone:&quot;, sourceInstance.Name)
&#9;&#9;&#9;return false
&#9;&#9;end
&#9;&#9;Log.info(&quot;[CloneProcessor] Source script content verified, length:&quot;, string.len(sourceInstance.Source))
&#9;end

&#9;-- CRITICAL: Check for non-Archivable descendants (they won&apos;t be cloned)
&#9;local nonArchivableDescendants = {}
&#9;for _, descendant in pairs(sourceInstance:GetDescendants()) do
&#9;&#9;if not descendant.Archivable then
&#9;&#9;&#9;table.insert(nonArchivableDescendants, descendant:GetFullName())
&#9;&#9;end
&#9;end

&#9;if #nonArchivableDescendants &gt; 0 then
&#9;&#9;Log.warn(
&#9;&#9;&#9;&quot;[CloneProcessor] Warning: The following descendants are not Archivable and will be excluded from clone:&quot;
&#9;&#9;)
&#9;&#9;for _, descendantName in pairs(nonArchivableDescendants) do
&#9;&#9;&#9;Log.warn(&quot;  - &quot; .. descendantName)
&#9;&#9;end
&#9;end

&#9;-- Determine destination parent
&#9;local destinationParent: Instance
&#9;if studioDestinationPath == &quot;&quot; or studioDestinationPath == &quot;Workspace&quot; then
&#9;&#9;destinationParent = game:GetService(&quot;Workspace&quot;)
&#9;elseif studioDestinationPath == &quot;ReplicatedStorage&quot; then
&#9;&#9;destinationParent = game:GetService(&quot;ReplicatedStorage&quot;)
&#9;elseif studioDestinationPath == &quot;ServerScriptService&quot; then
&#9;&#9;destinationParent = game:GetService(&quot;ServerScriptService&quot;)
&#9;elseif studioDestinationPath == &quot;ReplicatedFirst&quot; then
&#9;&#9;destinationParent = game:GetService(&quot;ReplicatedFirst&quot;)
&#9;elseif studioDestinationPath == &quot;ServerStorage&quot; then
&#9;&#9;destinationParent = game:GetService(&quot;ServerStorage&quot;)
&#9;elseif studioDestinationPath == &quot;StarterGui&quot; then
&#9;&#9;destinationParent = game:GetService(&quot;StarterGui&quot;)
&#9;elseif studioDestinationPath == &quot;StarterPack&quot; then
&#9;&#9;destinationParent = game:GetService(&quot;StarterPack&quot;)
&#9;elseif studioDestinationPath == &quot;StarterPlayer&quot; then
&#9;&#9;destinationParent = game:GetService(&quot;StarterPlayer&quot;)
&#9;elseif string.match(studioDestinationPath, &quot;^StarterPlayer/&quot;) then
&#9;&#9;-- Handle StarterPlayerScripts, StarterCharacterScripts, etc.
&#9;&#9;local subPath = string.gsub(studioDestinationPath, &quot;^StarterPlayer/&quot;, &quot;&quot;)
&#9;&#9;local starterPlayerChild = game:GetService(&quot;StarterPlayer&quot;):FindFirstChild(subPath)
&#9;&#9;if not starterPlayerChild then
&#9;&#9;&#9;Log.error(&quot;[CloneProcessor] StarterPlayer subfolder not found:&quot;, subPath)
&#9;&#9;&#9;return false
&#9;&#9;end
&#9;&#9;destinationParent = starterPlayerChild
&#9;else
&#9;&#9;-- Find destination by path using hierarchy traversal
&#9;&#9;destinationParent = self:findInstanceByPath(studioDestinationPath)

&#9;&#9;if not destinationParent then
&#9;&#9;&#9;Log.error(&quot;[CloneProcessor] Destination parent not found:&quot;, studioDestinationPath)
&#9;&#9;&#9;return false
&#9;&#9;end
&#9;end

&#9;-- Generate unique name with collision detection
&#9;local uniqueName = self:generateUniqueCloneName(eventPayload.cloneName, destinationParent)
&#9;if uniqueName ~= eventPayload.cloneName then
&#9;&#9;Log.info(&quot;[CloneProcessor] Name collision detected. Using unique name:&quot;, uniqueName)
&#9;end

&#9;-- CRITICAL: Count source descendants before cloning for validation
&#9;local sourceDescendantCount = #sourceInstance:GetDescendants()
&#9;local archivableDescendantCount = sourceDescendantCount - #nonArchivableDescendants

&#9;-- Perform the clone operation
&#9;local success, clonedInstance = pcall(function()
&#9;&#9;local clone = sourceInstance:Clone()
&#9;&#9;if not clone then
&#9;&#9;&#9;error(&quot;Clone operation returned nil - source may not be Archivable&quot;)
&#9;&#9;end

&#9;&#9;-- CRITICAL: For script instances, verify the clone has the Source property
&#9;&#9;if sourceInstance:IsA(&quot;LuaSourceContainer&quot;) then
&#9;&#9;&#9;if not clone.Source or clone.Source == &quot;&quot; then
&#9;&#9;&#9;&#9;error(&quot;Cloned script has no Source content - clone operation failed&quot;)
&#9;&#9;&#9;end
&#9;&#9;&#9;if clone.Source ~= sourceInstance.Source then
&#9;&#9;&#9;&#9;error(&quot;Cloned script Source does not match original - partial clone&quot;)
&#9;&#9;&#9;end
&#9;&#9;&#9;Log.info(&quot;[CloneProcessor] Clone Source verification passed, length:&quot;, string.len(clone.Source))
&#9;&#9;end

&#9;&#9;-- Set the unique name
&#9;&#9;clone.Name = uniqueName

&#9;&#9;-- Parent the cloned instance
&#9;&#9;clone.Parent = destinationParent

&#9;&#9;return clone
&#9;end)

&#9;if not success then
&#9;&#9;Log.error(&quot;[CloneProcessor] Clone operation failed:&quot;, clonedInstance)
&#9;&#9;return false
&#9;end

&#9;-- CRITICAL: Validate cloned descendants match expected count
&#9;if clonedInstance then
&#9;&#9;local actualClonedDescendants = #clonedInstance:GetDescendants()

&#9;&#9;Log.info(&quot;[CloneProcessor] Clone validation:&quot;)
&#9;&#9;Log.info(&quot;  - Source descendants (total):&quot;, sourceDescendantCount)
&#9;&#9;Log.info(&quot;  - Source descendants (archivable):&quot;, archivableDescendantCount)
&#9;&#9;Log.info(&quot;  - Actually cloned descendants:&quot;, actualClonedDescendants)

&#9;&#9;if actualClonedDescendants ~= archivableDescendantCount then
&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&quot;[CloneProcessor] Descendant count mismatch! Expected&quot;,
&#9;&#9;&#9;&#9;archivableDescendantCount,
&#9;&#9;&#9;&#9;&quot;but got&quot;,
&#9;&#9;&#9;&#9;actualClonedDescendants
&#9;&#9;&#9;)
&#9;&#9;&#9;-- This is expected behavior per Roblox documentation, but good to log
&#9;&#9;end

&#9;&#9;Log.info(&quot;[CloneProcessor] Clone operation successful:&quot;, clonedInstance:GetFullName())

&#9;&#9;-- CRITICAL: Force the cloned instance to be synced back to database
&#9;&#9;-- Since this is a server-initiated operation, we need to explicitly sync it back
&#9;&#9;Log.info(&quot;[CloneProcessor] Manually syncing cloned instance back to database&quot;)

&#9;&#9;-- Access the Core instance to trigger manual sync of the cloned instance
&#9;&#9;-- We&apos;ll add this instance to the sync queue to ensure it gets saved to database
&#9;&#9;local coreInstance = self.writeProcessor.coreInstance
&#9;&#9;if coreInstance and coreInstance.manualSyncInstance then
&#9;&#9;&#9;Log.info(&quot;[CloneProcessor] Calling manual sync for cloned instance&quot;)
&#9;&#9;&#9;-- Since we&apos;ve already verified the clone has proper content, sync immediately
&#9;&#9;&#9;coreInstance:manualSyncInstance(clonedInstance)
&#9;&#9;else
&#9;&#9;&#9;Log.warn(&quot;[CloneProcessor] No manual sync method available - relying on Watcher detection&quot;)
&#9;&#9;&#9;-- Small delay to ensure ChildAdded event propagates before returning
&#9;&#9;&#9;task.wait(0.1)
&#9;&#9;end

&#9;&#9;return true
&#9;else
&#9;&#9;Log.error(&quot;[CloneProcessor] Clone operation resulted in nil instance&quot;)
&#9;&#9;return false
&#9;end
end

return CloneProcessor
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a40000100e</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXA3387D053ED54F03A9D47F4A518FCD2F">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000af9</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">AdditionProcessor</string>
							<string name="ScriptGuid">{b8ec99aa-6ed1-4bc7-9006-8092799bc75f}</string>
							<string name="Source">local HttpService = game:GetService(&quot;HttpService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Types = require(Lemonade.Types)
local Log = require(Lemonade.Log)
local Dom = require(Lemonade.Dom)
local Config = require(Lemonade.Config)
local Error = require(Lemonade.Core.Error)
local generateRef = require(Lemonade.Helpers.generateRef)

local Helpers = require(script.Parent.Helpers)

local AdditionProcessor = {}
AdditionProcessor.__index = AdditionProcessor

function AdditionProcessor.new(parent)
&#9;return setmetatable({
&#9;&#9;parent = parent,
&#9;&#9;tree = parent.tree,
&#9;&#9;HttpSync = parent.HttpSync,
&#9;}, AdditionProcessor)
end

function AdditionProcessor:applyAddition(
&#9;snapshot: Types.AddedSnapshot,
&#9;initial: boolean?,
&#9;skipExisting: boolean?
): Instance?
&#9;-- Ensure non-script instance additions are always handled here (never via UpdateProcessor)
&#9;-- This function already creates instances; no change needed other than being the authoritative path.
&#9;-- Skip structural project items that shouldn&apos;t be created as Roblox instances
&#9;local shouldSkip = Helpers.STRUCTURAL_ITEMS[snapshot.name]
&#9;if shouldSkip then
&#9;&#9;if type(shouldSkip) == &quot;function&quot; then
&#9;&#9;&#9;shouldSkip = shouldSkip(snapshot)
&#9;&#9;end
&#9;&#9;if shouldSkip then
&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor] Skipping structural project item:&quot;,
&#9;&#9;&#9;&#9;snapshot.name,
&#9;&#9;&#9;&#9;&quot;Path:&quot;,
&#9;&#9;&#9;&#9;snapshot.path or &quot;N/A&quot;
&#9;&#9;&#9;)
&#9;&#9;&#9;return
&#9;&#9;end
&#9;end

&#9;-- Ensure snapshot.id is converted to buffer internally for this function
&#9;local internalSnapshotId: Types.Ref
&#9;if type(snapshot.id) == &quot;string&quot; then
&#9;&#9;Log.trace(&quot;[applyAddition] snapshot.id is a string, converting to buffer. Value:&quot;, snapshot.id)
&#9;&#9;internalSnapshotId = buffer.fromstring(snapshot.id)
&#9;elseif type(snapshot.id) == &quot;buffer&quot; then
&#9;&#9;internalSnapshotId = snapshot.id
&#9;else
&#9;&#9;assert(false, &quot;[applyAddition] snapshot.id must be a string or buffer. Got type: &quot; .. type(snapshot.id))
&#9;&#9;return -- Should not happen due to assert
&#9;end

&#9;-- Ensure snapshot.parent is converted to buffer internally for this function
&#9;local internalSnapshotParent: Types.Ref?
&#9;if type(snapshot.parent) == &quot;string&quot; then
&#9;&#9;Log.trace(&quot;[applyAddition] snapshot.parent is a string, converting to buffer. Value:&quot;, snapshot.parent)
&#9;&#9;internalSnapshotParent = buffer.fromstring(snapshot.parent)
&#9;elseif type(snapshot.parent) == &quot;buffer&quot; then
&#9;&#9;internalSnapshotParent = snapshot.parent
&#9;elseif snapshot.parent == nil then
&#9;&#9;internalSnapshotParent = nil
&#9;else
&#9;&#9;assert(
&#9;&#9;&#9;false,
&#9;&#9;&#9;&quot;[applyAddition] snapshot.parent must be a string, buffer, or nil. Got type: &quot; .. type(snapshot.parent)
&#9;&#9;)
&#9;&#9;return -- Should not happen due to assert
&#9;end

&#9;-- TIMESTAMP CHECK
&#9;local newTimestamp = snapshot.timestamp
&#9;local existingTimestamp = self.tree:getTimestamp(internalSnapshotId)
&#9;if newTimestamp and existingTimestamp and newTimestamp &lt;= existingTimestamp then
&#9;&#9;Log.trace(
&#9;&#9;&#9;string.format(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor:applyAddition] Skipping ADDITION for %s (ID: %s), incoming timestamp (%s) is not newer than existing (%s).&quot;,
&#9;&#9;&#9;&#9;snapshot.name or &quot;N/A&quot;,
&#9;&#9;&#9;&#9;buffer.tostring(internalSnapshotId),
&#9;&#9;&#9;&#9;tostring(newTimestamp),
&#9;&#9;&#9;&#9;tostring(existingTimestamp)
&#9;&#9;&#9;)
&#9;&#9;)
&#9;&#9;return self.tree:getInstance(internalSnapshotId) -- Return existing instance if any
&#9;end

&#9;-- FAST-PATH: If snapshot.uniqueId maps to an existing instance in Tree, reuse and no-op
&#9;if snapshot.uniqueId and type(snapshot.uniqueId) == &quot;string&quot; and #snapshot.uniqueId == 3 then
&#9;&#9;local existingInst = self.tree.getByUniqueId and self.tree:getByUniqueId(snapshot.uniqueId)
&#9;&#9;if existingInst then
&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&quot;[AdditionProcessor DEDUP] Tree contains uniqueId:&quot;,
&#9;&#9;&#9;&#9;snapshot.uniqueId,
&#9;&#9;&#9;&#9;&quot;-&gt;&quot;,
&#9;&#9;&#9;&#9;existingInst:GetFullName()
&#9;&#9;&#9;)
&#9;&#9;&#9;return existingInst
&#9;&#9;end
&#9;end

&#9;-- Also check under resolved parent by name+class as a fallback (already implemented below)

&#9;-- FAST-PATH: If we already have an instance mapped for this ID, avoid duplicating.
&#9;local already = self.tree:getInstance(internalSnapshotId)

&#9;-- CRITICAL FIX: If this is a server response for a file we created locally,
&#9;-- we need to preserve our local Base64 path-based ID instead of using the server&apos;s hash ID
&#9;if already then
&#9;&#9;-- Get the existing local ID for this instance
&#9;&#9;local existingLocalId = self.tree:getId(already)

&#9;&#9;if existingLocalId then
&#9;&#9;&#9;local existingIdStr = buffer.tostring(existingLocalId)
&#9;&#9;&#9;local serverIdStr = buffer.tostring(internalSnapshotId)

&#9;&#9;&#9;-- Check if the existing ID looks like a Base64 path (our local ID)
&#9;&#9;&#9;-- and the server ID looks like a hash (server&apos;s ID)
&#9;&#9;&#9;local isExistingIdBase64Path = existingIdStr:match(&quot;^[A-Za-z0-9+/]+=*$&quot;) and #existingIdStr &gt; 20
&#9;&#9;&#9;local isServerIdHash = not serverIdStr:match(&quot;^[A-Za-z0-9+/]+=*$&quot;) or #serverIdStr &lt; 20

&#9;&#9;&#9;if isExistingIdBase64Path and isServerIdHash then
&#9;&#9;&#9;&#9;Log.warn(&quot;[WriteProcessor:applyAddition] PRESERVING local Base64 path ID instead of server hash ID&quot;)
&#9;&#9;&#9;&#9;Log.warn(&quot;[WriteProcessor:applyAddition] Local ID (Base64 path):&quot;, existingIdStr)
&#9;&#9;&#9;&#9;Log.warn(&quot;[WriteProcessor:applyAddition] Server ID (hash):&quot;, serverIdStr)

&#9;&#9;&#9;&#9;-- Use the existing local ID instead of the server ID
&#9;&#9;&#9;&#9;internalSnapshotId = existingLocalId

&#9;&#9;&#9;&#9;-- Store server ID in metadata for reference if needed
&#9;&#9;&#9;&#9;if snapshot.meta then
&#9;&#9;&#9;&#9;&#9;snapshot.meta.serverHashId = serverIdStr
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;snapshot.meta = { serverHashId = serverIdStr }
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;Log.debug(&quot;[applyAddition] Instance already exists for ID. Treating as an update to apply properties.&quot;)
&#9;&#9;-- Create a SnapshotUpdate-like table from the incoming AddedSnapshot
&#9;&#9;local updatePayload: Types.SnapshotUpdate = {
&#9;&#9;&#9;id = snapshot.id, -- Must be the Ref
&#9;&#9;&#9;name = snapshot.name,
&#9;&#9;&#9;class = snapshot.class,
&#9;&#9;&#9;properties = snapshot.properties,
&#9;&#9;&#9;meta = snapshot.meta,
&#9;&#9;&#9;content = snapshot.content, -- ADDED: Include content for script updates
&#9;&#9;&#9;-- Note: children are not part of SnapshotUpdate, they are handled by separate additions/removals
&#9;&#9;}
&#9;&#9;return self.parent:applyUpdate(internalSnapshotId, updatePayload, initial)
&#9;end

&#9;-- From here, use internalSnapshotId and internalSnapshotParent
&#9;assert(
&#9;&#9;internalSnapshotId and type(internalSnapshotId) == &quot;buffer&quot;,
&#9;&#9;&quot;[applyAddition] internalSnapshotId is not a valid buffer.&quot;
&#9;)
&#9;assert(
&#9;&#9;internalSnapshotParent == nil or type(internalSnapshotParent) == &quot;buffer&quot;,
&#9;&#9;&quot;[applyAddition] internalSnapshotParent is not nil or a valid buffer.&quot;
&#9;)

&#9;local id_str = buffer.tostring(internalSnapshotId)
&#9;local parent_str = if internalSnapshotParent then buffer.tostring(internalSnapshotParent) else &quot;nil&quot;

&#9;Log.trace((&quot;[WriteProcessor DEBUG] Applying ADDITION for: %s (%s) with ID: %s Target Parent Ref: %s&quot;):format(
&#9;&#9;snapshot.name or &quot;N/A&quot;,
&#9;&#9;snapshot.class or &quot;N/A&quot;,
&#9;&#9;id_str, -- Log as string
&#9;&#9;parent_str -- Log as string
&#9;))

&#9;Log.trace(&quot;[WriteProcessor DETAIL] snapshot.parent type:&quot;, typeof(snapshot.parent), &quot;value:&quot;, snapshot.parent)
&#9;Log.trace(
&#9;&#9;&quot;[WriteProcessor DETAIL] internalSnapshotParent type:&quot;,
&#9;&#9;typeof(internalSnapshotParent),
&#9;&#9;&quot;value:&quot;,
&#9;&#9;internalSnapshotParent
&#9;)

&#9;local parent = nil
&#9;if internalSnapshotParent then
&#9;&#9;-- DEBUG: Log what we&apos;re trying to resolve
&#9;&#9;local parentBufferStr = &quot;FAILED_TO_CONVERT&quot;
&#9;&#9;pcall(function()
&#9;&#9;&#9;parentBufferStr = buffer.tostring(internalSnapshotParent)
&#9;&#9;end)
&#9;&#9;Log.info(&quot;[WriteProcessor DEBUG] Resolving parent buffer:&quot;, parentBufferStr, &quot;for instance:&quot;, snapshot.name)
&#9;&#9;Log.debug(&quot;[AdditionProcessor] Looking for parent with buffer:&quot;, parentBufferStr)

&#9;&#9;-- CRITICAL FIX: Check if this is ROOT_DATAMODEL_ID and directly use game
&#9;&#9;if parentBufferStr == &quot;ROOT_DATAMODEL_ID&quot; then
&#9;&#9;&#9;Log.info(&quot;[WriteProcessor FIX] Detected ROOT_DATAMODEL_ID, using game as parent&quot;)
&#9;&#9;&#9;parent = game
&#9;&#9;else
&#9;&#9;&#9;parent = self.tree:getInstance(internalSnapshotParent)
&#9;&#9;end

&#9;&#9;-- If parent not found in tree, check if this is a service based on the path
&#9;&#9;if not parent and snapshot.path then
&#9;&#9;&#9;-- DEBUG: More detailed logging
&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor DEBUG] Failed to resolve parent buffer:&quot;,
&#9;&#9;&#9;&#9;parentBufferStr,
&#9;&#9;&#9;&#9;&quot;for instance:&quot;,
&#9;&#9;&#9;&#9;snapshot.name,
&#9;&#9;&#9;&#9;&quot;Path:&quot;,
&#9;&#9;&#9;&#9;snapshot.path
&#9;&#9;&#9;)

&#9;&#9;&#9;-- DEBUG: Let&apos;s check what&apos;s in the tree for services
&#9;&#9;&#9;local workspace = self.tree:getId(game.Workspace)
&#9;&#9;&#9;if workspace then
&#9;&#9;&#9;&#9;local workspaceIdStr = buffer.tostring(workspace)
&#9;&#9;&#9;&#9;Log.info(&quot;[WriteProcessor DEBUG] Workspace is registered in tree with ID:&quot;, workspaceIdStr)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.warn(&quot;[WriteProcessor DEBUG] Workspace is NOT registered in tree!&quot;)
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Extract service name from path (e.g., &quot;src/Workspace/file.lua&quot; -&gt; &quot;Workspace&quot; or &quot;Workspace/file.lua&quot; -&gt; &quot;Workspace&quot;)
&#9;&#9;&#9;local pathParts = string.split(snapshot.path, &quot;/&quot;)
&#9;&#9;&#9;local serviceName = nil

&#9;&#9;&#9;if #pathParts &gt;= 2 and pathParts[1] == &quot;src&quot; then
&#9;&#9;&#9;&#9;-- Normalized path: src/ServiceName/file
&#9;&#9;&#9;&#9;serviceName = pathParts[2]
&#9;&#9;&#9;elseif #pathParts &gt;= 1 then
&#9;&#9;&#9;&#9;-- Denormalized path: ServiceName/file or just ServiceName
&#9;&#9;&#9;&#9;serviceName = pathParts[1]
&#9;&#9;&#9;end

&#9;&#9;&#9;if serviceName then
&#9;&#9;&#9;&#9;Log.info(&quot;[WriteProcessor] Attempting to resolve service from path. Service name:&quot;, serviceName)
&#9;&#9;&#9;&#9;Log.debug(&quot;[AdditionProcessor] Extracted service name:&quot;, serviceName)
&#9;&#9;&#9;&#9;Log.debug(&quot;[AdditionProcessor] Looking in SERVICE_MAPPING for:&quot;, serviceName)

&#9;&#9;&#9;&#9;-- Try to find the service instance
&#9;&#9;&#9;&#9;local serviceInstance = Helpers.SERVICE_MAPPING[serviceName]
&#9;&#9;&#9;&#9;if serviceInstance then
&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor] Found service instance for:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;serviceName,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Instance:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;serviceInstance:GetFullName()
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[AdditionProcessor] SUCCESS: Found service:&quot;, serviceInstance:GetFullName())

&#9;&#9;&#9;&#9;&#9;-- NEW LOGIC: Attempt to resolve nested parent paths (e.g. StarterPlayerScripts)
&#9;&#9;&#9;&#9;&#9;local targetParentInstance = serviceInstance
&#9;&#9;&#9;&#9;&#9;if snapshot.path then
&#9;&#9;&#9;&#9;&#9;&#9;local pathParts = string.split(snapshot.path, &quot;/&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;-- Remove the root service name (e.g. &quot;StarterPlayer&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;table.remove(pathParts, 1)
&#9;&#9;&#9;&#9;&#9;&#9;-- Remove the filename (last part) to get the parent path
&#9;&#9;&#9;&#9;&#9;&#9;if #pathParts &gt; 1 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(pathParts, #pathParts)
&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;if #pathParts &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[AdditionProcessor FIX] Traversing path parts:&quot;, table.concat(pathParts, &quot;/&quot;))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Walk down the hierarchy to find (or verify) the desired parent instance
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local current = serviceInstance
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for _, partName in ipairs(pathParts) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[AdditionProcessor FIX] Looking for child:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;partName,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;in&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;current:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local nextChild = current:FindFirstChild(partName)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not nextChild then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[AdditionProcessor FIX] Child not found:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;partName,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;in&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;current:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;current = nil
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break -- Stop traversal on first missing segment
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;current = nextChild
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[AdditionProcessor FIX] Found child:&quot;, current:GetFullName())
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if current then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;targetParentInstance = current
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[AdditionProcessor FIX] Resolved nested parent instance:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;current:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[AdditionProcessor FIX] Could not resolve nested parent beyond service for path:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;snapshot.path
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[AdditionProcessor FIX] No nested path parts, using service as parent&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;parent = targetParentInstance

&#9;&#9;&#9;&#9;&#9;-- Register the **resolved** parent Instance (service or nested folder) with the provided database ID
&#9;&#9;&#9;&#9;&#9;if internalSnapshotParent then
&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[WriteProcessor] Registering parent in tree with database ID:&quot;, parentBufferStr)
&#9;&#9;&#9;&#9;&#9;&#9;self.tree:insertInstance(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;targetParentInstance,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;internalSnapshotParent,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;{ isService = (targetParentInstance == serviceInstance) }
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[WriteProcessor] Could not find service instance for:&quot;, serviceName)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[AdditionProcessor] FAILED: Service not found in SERVICE_MAPPING:&quot;, serviceName)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.warn(&quot;[WriteProcessor] Could not extract service name from path:&quot;, snapshot.path)
&#9;&#9;&#9;&#9;Log.debug(&quot;[AdditionProcessor] FAILED: Could not extract service name from path:&quot;, snapshot.path)
&#9;&#9;&#9;end
&#9;&#9;elseif not parent then
&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor DEBUG] Failed to resolve parent buffer:&quot;,
&#9;&#9;&#9;&#9;parentBufferStr,
&#9;&#9;&#9;&#9;&quot;for instance:&quot;,
&#9;&#9;&#9;&#9;snapshot.name
&#9;&#9;&#9;)
&#9;&#9;end
&#9;end

&#9;-- NO FALLBACKS - backend must provide proper parent information

&#9;-- Final parent check
&#9;if parent then
&#9;&#9;Log.info(&quot;[WriteProcessor DEBUG] Resolved parent to:&quot;, parent:GetFullName(), &quot;for instance:&quot;, snapshot.name)
&#9;&#9;Log.debug(&quot;[AdditionProcessor] FINAL SUCCESS: Parent found:&quot;, parent:GetFullName())
&#9;else
&#9;&#9;-- Parent is still nil after all resolution attempts
&#9;&#9;Log.error(&quot;[WriteProcessor] Parent is NIL for instance:&quot;, snapshot.name)
&#9;&#9;Log.debug(&quot;[AdditionProcessor] FINAL FAILURE: Parent is NIL for:&quot;, snapshot.name)
&#9;&#9;-- Don&apos;t proceed without a valid parent
&#9;&#9;return nil
&#9;end

&#9;local instance
&#9;-- Defensive deduplication: if a matching instance already exists under the resolved parent,
&#9;-- reuse it instead of creating a new one. Prefer 3-char uniqueId match, fallback to name+class.
&#9;if parent then
&#9;&#9;if snapshot.uniqueId and type(snapshot.uniqueId) == &quot;string&quot; and #snapshot.uniqueId == 3 then
&#9;&#9;&#9;for _, child in ipairs(parent:GetChildren()) do
&#9;&#9;&#9;&#9;if child:IsA(snapshot.class) then
&#9;&#9;&#9;&#9;&#9;local uid = child:GetAttribute(&quot;uniqueId&quot;)
&#9;&#9;&#9;&#9;&#9;if uid == snapshot.uniqueId then
&#9;&#9;&#9;&#9;&#9;&#9;instance = child
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[AdditionProcessor DEDUP] Reusing existing instance by uniqueId:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;snapshot.uniqueId,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;-&gt;&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;child:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if not instance then
&#9;&#9;&#9;local existingByName = parent:FindFirstChild(snapshot.name)
&#9;&#9;&#9;if existingByName and existingByName:IsA(snapshot.class) then
&#9;&#9;&#9;&#9;instance = existingByName
&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&quot;[AdditionProcessor DEDUP] Reusing existing instance by name+class:&quot;,
&#9;&#9;&#9;&#9;&#9;snapshot.name,
&#9;&#9;&#9;&#9;&#9;existingByName:GetFullName()
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;if Dom.isCreatable(snapshot.class) then
&#9;&#9;if not instance then
&#9;&#9;&#9;instance = Instance.new(snapshot.class)
&#9;&#9;end

&#9;&#9;-- DEBUG: Log uniqueId values at AdditionProcessor level
&#9;&#9;Log.debug(&quot;[AdditionProcessor] snapshot.uniqueId:&quot;, snapshot.uniqueId, &quot;type:&quot;, type(snapshot.uniqueId))
&#9;&#9;Log.debug(&quot;[AdditionProcessor] snapshot.id (nodeId):&quot;, id_str)
&#9;&#9;Log.debug(&quot;[AdditionProcessor] snapshot.name:&quot;, snapshot.name)
&#9;&#9;Log.debug(&quot;[AdditionProcessor] snapshot.class:&quot;, snapshot.class)
&#9;&#9;Log.debug(&quot;[AdditionProcessor] snapshot.path:&quot;, snapshot.path)

&#9;&#9;-- Enforce VM uniqueId authority: set or correct attribute to match snapshot.uniqueId when provided
&#9;&#9;local ok, _ = pcall(function()
&#9;&#9;&#9;local incomingUid = nil
&#9;&#9;&#9;if snapshot.uniqueId and type(snapshot.uniqueId) == &quot;string&quot; and string.len(snapshot.uniqueId) == 3 then
&#9;&#9;&#9;&#9;incomingUid = snapshot.uniqueId
&#9;&#9;&#9;end
&#9;&#9;&#9;if incomingUid then
&#9;&#9;&#9;&#9;local currentUid = instance:GetAttribute(&quot;uniqueId&quot;)
&#9;&#9;&#9;&#9;if currentUid ~= incomingUid then
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[AdditionProcessor] Enforcing uniqueId attribute:&quot;, currentUid, &quot;-&gt;&quot;, incomingUid)
&#9;&#9;&#9;&#9;&#9;instance:SetAttribute(&quot;uniqueId&quot;, incomingUid)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;-- Mark as server-created to prevent sync echo
&#9;&#9;&#9;&#9;instance:SetAttribute(&quot;_serverCreated&quot;, true)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;&#9;if not ok then
&#9;&#9;&#9;Log.warn(&quot;[AdditionProcessor] Failed to set uniqueId attribute on instance&quot;, snapshot.name)
&#9;&#9;end
&#9;else
&#9;&#9;-- Handle Roblox services that already exist and can&apos;t be created
&#9;&#9;instance = Helpers.SERVICE_MAPPING[snapshot.name]
&#9;&#9;if instance then
&#9;&#9;&#9;Log.trace(&quot;[WriteProcessor] Using existing service for:&quot;, snapshot.name, &quot;Class:&quot;, instance.ClassName)
&#9;&#9;&#9;-- Mark service as server-created to prevent sync echo
&#9;&#9;&#9;instance:SetAttribute(&quot;_serverCreated&quot;, true)

&#9;&#9;&#9;-- Services are already parented to game and cannot be reparented
&#9;&#9;&#9;-- Register the service in the tree and skip the normal parenting flow
&#9;&#9;&#9;local newTimestamp = snapshot.timestamp or os.clock() * 1000
&#9;&#9;&#9;self.tree:insertInstance(instance, internalSnapshotId, snapshot.meta, newTimestamp)

&#9;&#9;&#9;-- Apply any property updates if needed
&#9;&#9;&#9;if snapshot.properties then
&#9;&#9;&#9;&#9;for property, value in snapshot.properties do
&#9;&#9;&#9;&#9;&#9;local decodeSuccess, decodedValue = Dom.EncodedValue.decode(value)
&#9;&#9;&#9;&#9;&#9;if decodeSuccess then
&#9;&#9;&#9;&#9;&#9;&#9;local writeSuccess, reason = Dom.writeProperty(instance, property, decodedValue)
&#9;&#9;&#9;&#9;&#9;&#9;if not writeSuccess then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Failed to write property&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;property,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;to service&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;snapshot.name,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;reason:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;reason.kind
&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;Log.trace(&quot;[WriteProcessor] Service handling complete for:&quot;, snapshot.name)
&#9;&#9;&#9;return instance
&#9;&#9;else
&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor] Class not creatable and no service mapping for:&quot;,
&#9;&#9;&#9;&#9;snapshot.class,
&#9;&#9;&#9;&#9;&quot;Name:&quot;,
&#9;&#9;&#9;&#9;snapshot.name
&#9;&#9;&#9;)
&#9;&#9;end
&#9;end

&#9;if not instance then
&#9;&#9;Log.warn(&quot;[WriteProcessor] Could not create or find instance for:&quot;, snapshot.name, &quot;Class:&quot;, snapshot.class)
&#9;&#9;return nil
&#9;end

&#9;if skipExisting then
&#9;&#9;local existingInstance = parent:FindFirstChild(snapshot.name)
&#9;&#9;if existingInstance and existingInstance:IsA(snapshot.class) then
&#9;&#9;&#9;return existingInstance
&#9;&#9;end
&#9;end

&#9;if not parent then
&#9;&#9;Log.error(&quot;[WriteProcessor] Parent is NIL for instance:&quot;, snapshot.name)

&#9;&#9;if Config:get(&quot;LiveHydrate&quot;) and internalSnapshotParent then
&#9;&#9;&#9;local res = self.HttpSync.getSnapshotById(internalSnapshotParent)
&#9;&#9;&#9;if not res.Success then
&#9;&#9;&#9;&#9;Log.warn(&quot;LiveHydrate: Failed to get snapshot for parent&quot;, internalSnapshotParent, res.Body)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;local ok, addedSnapshot = pcall(HttpService.JSONDecode, HttpService, res.Body)
&#9;&#9;&#9;&#9;if ok and addedSnapshot then
&#9;&#9;&#9;&#9;&#9;-- ADDED CHECKS for LiveHydrate snapshot completeness
&#9;&#9;&#9;&#9;&#9;if
&#9;&#9;&#9;&#9;&#9;&#9;not addedSnapshot.id
&#9;&#9;&#9;&#9;&#9;&#9;or not addedSnapshot.name
&#9;&#9;&#9;&#9;&#9;&#9;or not addedSnapshot.class
&#9;&#9;&#9;&#9;&#9;&#9;or not addedSnapshot.parent
&#9;&#9;&#9;&#9;&#9;then
&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[LiveHydrate CRITICAL] Fetched parent snapshot is incomplete. Skipping recursive applyAddition.&quot;
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[LiveHydrate DETAIL] ID:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;addedSnapshot.id,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Name:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;addedSnapshot.name,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Class:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;addedSnapshot.class,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;ParentRef:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;addedSnapshot.parent
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;parent = self:applyAddition(addedSnapshot, initial, true)
&#9;&#9;&#9;&#9;&#9;&#9;skipExisting = true
&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;Live hydrated parent:&quot;, parent)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;LiveHydrate: Failed to decode snapshot for parent&quot;, internalSnapshotParent, res.Body)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if not parent then
&#9;&#9;&#9;local err = Error.new(Error.NoInstanceAdd, snapshot)
&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;return
&#9;&#9;end
&#9;end

&#9;if skipExisting then
&#9;&#9;local existingInstance = parent:FindFirstChild(snapshot.name)
&#9;&#9;if existingInstance and existingInstance:IsA(snapshot.class) then
&#9;&#9;&#9;return existingInstance
&#9;&#9;end
&#9;end

&#9;-- Retain the exact filename (including extension) from the snapshot.
&#9;-- Stripping the extension caused divergences between Studio names and server paths,
&#9;-- breaking two-way sync and leading to duplicate instances on reconnect.

&#9;-- Pause watcher to prevent circular change detection during WriteProcessor operations
&#9;if self.parent.watcher then
&#9;&#9;self.parent.watcher:pause(function()
&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor PRE-NAME] Keeping original snapshot.name: &apos;&quot;,
&#9;&#9;&#9;&#9;snapshot.name,
&#9;&#9;&#9;&#9;&quot;&apos; Current instance.Name: &apos;&quot;,
&#9;&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&#9;&quot;&apos;&quot;
&#9;&#9;&#9;)
&#9;&#9;&#9;instance.Name = snapshot.name
&#9;&#9;&#9;Log.trace(&quot;[WriteProcessor DEBUG] Set instance Name to:&quot;, instance.Name)

&#9;&#9;&#9;for property, value in snapshot.properties do
&#9;&#9;&#9;&#9;local decodeSuccess, decodedValue = Dom.EncodedValue.decode(value)

&#9;&#9;&#9;&#9;if not decodeSuccess then
&#9;&#9;&#9;&#9;&#9;local err = Error.new(Error.DecodeFailed, property, value)
&#9;&#9;&#9;&#9;&#9;Log.warn(err)

&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local writeSuccess, reason = Dom.writeProperty(instance, property, decodedValue)

&#9;&#9;&#9;&#9;if not writeSuccess then
&#9;&#9;&#9;&#9;&#9;local err = Error.new(Error.WriteFailed, property, instance, reason.kind)
&#9;&#9;&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;else
&#9;&#9;Log.trace(
&#9;&#9;&#9;&quot;[WriteProcessor PRE-NAME] Keeping original snapshot.name: &apos;&quot;,
&#9;&#9;&#9;snapshot.name,
&#9;&#9;&#9;&quot;&apos; Current instance.Name: &apos;&quot;,
&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&quot;&apos;&quot;
&#9;&#9;)
&#9;&#9;instance.Name = snapshot.name
&#9;&#9;Log.trace(&quot;[WriteProcessor DEBUG] Set instance Name to:&quot;, instance.Name)

&#9;&#9;for property, value in snapshot.properties do
&#9;&#9;&#9;local decodeSuccess, decodedValue = Dom.EncodedValue.decode(value)

&#9;&#9;&#9;if not decodeSuccess then
&#9;&#9;&#9;&#9;local err = Error.new(Error.DecodeFailed, property, value)
&#9;&#9;&#9;&#9;Log.warn(err)

&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;end

&#9;&#9;&#9;local writeSuccess, reason = Dom.writeProperty(instance, property, decodedValue)

&#9;&#9;&#9;if not writeSuccess then
&#9;&#9;&#9;&#9;local err = Error.new(Error.WriteFailed, property, instance, reason.kind)
&#9;&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;local parentingSuccess = false

&#9;if not instance then
&#9;&#9;Log.warn(&quot;[WriteProcessor CRITICAL] Instance is nil before parenting.&quot;)
&#9;&#9;return
&#9;end

&#9;-- Pause watcher for parenting operation
&#9;if self.parent.watcher then
&#9;&#9;self.parent.watcher:pause(function()
&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor PRE-PARENT] instance.Name: &apos;&quot;,
&#9;&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&#9;&quot;&apos;, target parent.Name: &apos;&quot;,
&#9;&#9;&#9;&#9;parent.Name,
&#9;&#9;&#9;&#9;&quot;&apos;, target parent.ClassName: &apos;&quot;,
&#9;&#9;&#9;&#9;parent.ClassName,
&#9;&#9;&#9;&#9;&quot;&apos;&quot;
&#9;&#9;&#9;)
&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor DEBUG] Attempting to set Parent via pcall:&quot;,
&#9;&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&#9;&quot;-&gt;&quot;,
&#9;&#9;&#9;&#9;parent:GetFullName()
&#9;&#9;&#9;)
&#9;&#9;&#9;local success, err = pcall(function()
&#9;&#9;&#9;&#9;instance.Parent = parent -- *** CRITICAL: Parenting wrapped in pcall ***
&#9;&#9;&#9;end)

&#9;&#9;&#9;if not success then
&#9;&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor CRITICAL] pcall FAILED during Parent assignment for&quot;,
&#9;&#9;&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;&#9;&#9;err
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.trace(&quot;[WriteProcessor DEBUG] pcall SUCCEEDED for Parent assignment.&quot;)
&#9;&#9;&#9;&#9;-- Check if it actually worked *after* pcall
&#9;&#9;&#9;&#9;if instance.Parent ~= parent then
&#9;&#9;&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor CRITICAL] PARENT ASSIGNMENT FAILED (checked *after* pcall) for&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Expected parent:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;parent:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Actual parent:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;instance.Parent and instance.Parent:GetFullName() or &quot;NIL&quot;
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor POST-PARENT] instance.Name: &apos;&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;&apos;, actual instance.Parent.Name: &apos;&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;instance.Parent and instance.Parent.Name or &quot;NIL&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;&apos;, actual instance.Parent.ClassName: &apos;&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;instance.Parent and instance.Parent.ClassName or &quot;NIL&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;&apos;&quot;
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor DEBUG] Parent assignment verification: SUCCESS.&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;parent.Name .. &quot;.&quot; .. instance.Name,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;is now child of&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;parent.Name
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;parentingSuccess = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;else
&#9;&#9;Log.trace(
&#9;&#9;&#9;&quot;[WriteProcessor PRE-PARENT] instance.Name: &apos;&quot;,
&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&quot;&apos;, target parent.Name: &apos;&quot;,
&#9;&#9;&#9;parent.Name,
&#9;&#9;&#9;&quot;&apos;, target parent.ClassName: &apos;&quot;,
&#9;&#9;&#9;parent.ClassName,
&#9;&#9;&#9;&quot;&apos;&quot;
&#9;&#9;)
&#9;&#9;Log.trace(
&#9;&#9;&#9;&quot;[WriteProcessor DEBUG] Attempting to set Parent via pcall:&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&quot;-&gt;&quot;,
&#9;&#9;&#9;parent:GetFullName()
&#9;&#9;)
&#9;&#9;local success, err = pcall(function()
&#9;&#9;&#9;instance.Parent = parent -- *** CRITICAL: Parenting wrapped in pcall ***
&#9;&#9;end)

&#9;&#9;if not success then
&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor CRITICAL] pcall FAILED during Parent assignment for&quot;,
&#9;&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;&#9;err
&#9;&#9;&#9;)
&#9;&#9;else
&#9;&#9;&#9;Log.trace(&quot;[WriteProcessor DEBUG] pcall SUCCEEDED for Parent assignment.&quot;)
&#9;&#9;&#9;-- Check if it actually worked *after* pcall
&#9;&#9;&#9;if instance.Parent ~= parent then
&#9;&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor CRITICAL] PARENT ASSIGNMENT FAILED (checked *after* pcall) for&quot;,
&#9;&#9;&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&quot;Expected parent:&quot;,
&#9;&#9;&#9;&#9;&#9;parent:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&quot;Actual parent:&quot;,
&#9;&#9;&#9;&#9;&#9;instance.Parent and instance.Parent:GetFullName() or &quot;NIL&quot;
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor POST-PARENT] instance.Name: &apos;&quot;,
&#9;&#9;&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&#9;&#9;&quot;&apos;, actual instance.Parent.Name: &apos;&quot;,
&#9;&#9;&#9;&#9;&#9;instance.Parent and instance.Parent.Name or &quot;NIL&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;&apos;, actual instance.Parent.ClassName: &apos;&quot;,
&#9;&#9;&#9;&#9;&#9;instance.Parent and instance.Parent.ClassName or &quot;NIL&quot;,
&#9;&#9;&#9;&#9;&#9;&quot;&apos;&quot;
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor DEBUG] Parent assignment verification: SUCCESS.&quot;,
&#9;&#9;&#9;&#9;&#9;parent.Name .. &quot;.&quot; .. instance.Name,
&#9;&#9;&#9;&#9;&#9;&quot;is now child of&quot;,
&#9;&#9;&#9;&#9;&#9;parent.Name
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;parentingSuccess = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;if not parentingSuccess then
&#9;&#9;Log.error(&quot;[WriteProcessor CRITICAL] Failed to parent instance after pcall.&quot;)
&#9;&#9;Log.error(&quot;[WriteProcessor CRITICAL] Instance:&quot;, instance.Name, &quot;Target Parent:&quot;, parent.Name)
&#9;&#9;return
&#9;end

&#9;Log.trace(
&#9;&#9;&quot;[WriteProcessor POST-PARENT] instance.Name: &apos;&quot;,
&#9;&#9;instance.Name,
&#9;&#9;&quot;&apos;, actual instance.Parent.Name: &apos;&quot;,
&#9;&#9;instance.Parent.Name,
&#9;&#9;&quot;&apos;, actual instance.Parent.ClassName: &apos;&quot;,
&#9;&#9;instance.Parent.ClassName,
&#9;&#9;&quot;&apos;&quot;
&#9;)

&#9;Log.trace(
&#9;&#9;&quot;[WriteProcessor DEBUG] Parent assignment verification: SUCCESS.&quot;,
&#9;&#9;parent.Name .. &quot;.&quot; .. instance.Name,
&#9;&#9;&quot;is now child of&quot;,
&#9;&#9;parent.Name
&#9;)

&#9;-- Set content/source for script instances
&#9;Log.trace(&quot;[WriteProcessor CONTENT DEBUG] snapshot.content exists:&quot;, snapshot.content ~= nil)
&#9;Log.trace(&quot;[WriteProcessor CONTENT DEBUG] snapshot.class:&quot;, snapshot.class)
&#9;if snapshot.content then
&#9;&#9;Log.trace(&quot;[WriteProcessor CONTENT DEBUG] Content length:&quot;, string.len(snapshot.content))
&#9;&#9;Log.trace(&quot;[WriteProcessor CONTENT DEBUG] Content preview:&quot;, string.sub(snapshot.content, 1, 50))
&#9;end

&#9;if
&#9;&#9;snapshot.content
&#9;&#9;and (snapshot.class == &quot;ModuleScript&quot; or snapshot.class == &quot;Script&quot; or snapshot.class == &quot;LocalScript&quot;)
&#9;then
&#9;&#9;-- Pause watcher for content/source setting
&#9;&#9;if self.parent.watcher then
&#9;&#9;&#9;self.parent.watcher:pause(function()
&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor CONTENT] Setting Source for&quot;,
&#9;&#9;&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&#9;&#9;&quot;Length:&quot;,
&#9;&#9;&#9;&#9;&#9;string.len(snapshot.content)
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;local contentSuccess, contentErr = pcall(function()
&#9;&#9;&#9;&#9;&#9;instance.Source = snapshot.content
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;if contentSuccess then
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[WriteProcessor CONTENT] Successfully set Source for&quot;, instance.Name)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor CONTENT ERROR] Failed to set Source for&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;contentErr
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;else
&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor CONTENT] Setting Source for&quot;,
&#9;&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&#9;&quot;Length:&quot;,
&#9;&#9;&#9;&#9;string.len(snapshot.content)
&#9;&#9;&#9;)
&#9;&#9;&#9;local contentSuccess, contentErr = pcall(function()
&#9;&#9;&#9;&#9;instance.Source = snapshot.content
&#9;&#9;&#9;end)
&#9;&#9;&#9;if contentSuccess then
&#9;&#9;&#9;&#9;Log.trace(&quot;[WriteProcessor CONTENT] Successfully set Source for&quot;, instance.Name)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&#9;&quot;[WriteProcessor CONTENT ERROR] Failed to set Source for&quot;,
&#9;&#9;&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;&#9;&#9;contentErr
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif snapshot.content then
&#9;&#9;Log.trace(&quot;[WriteProcessor CONTENT] Skipping Source set for non-script class:&quot;, snapshot.class)
&#9;end

&#9;-- 6. Update Internal Tree Map
&#9;-- Only insert into tree if parenting seemed successful (avoids tracking detached instances)
&#9;if parentingSuccess then
&#9;&#9;-- Store metadata
&#9;&#9;if not snapshot.meta then
&#9;&#9;&#9;snapshot.meta = {}
&#9;&#9;end

&#9;&#9;Log.trace(
&#9;&#9;&#9;&quot;[WriteProcessor] Storing instance in tree:&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&quot;ID (string):&quot;,
&#9;&#9;&#9;buffer.tostring(internalSnapshotId),
&#9;&#9;&#9;&quot;Timestamp:&quot;,
&#9;&#9;&#9;newTimestamp
&#9;&#9;)

&#9;&#9;self.tree:insertInstance(instance, internalSnapshotId, snapshot.meta, newTimestamp)

&#9;&#9;-- Verification logs AFTER insertInstance
&#9;&#9;local verifyInstance = self.tree:getInstance(internalSnapshotId)
&#9;&#9;local verifyIdByInstance = self.tree:getId(instance)
&#9;&#9;local verifyIdStrByInstance = if verifyIdByInstance then buffer.tostring(verifyIdByInstance) else &quot;nil&quot;

&#9;&#9;Log.trace(
&#9;&#9;&#9;(&quot;[WriteProcessor TRACE POST-INSERT] Verification: getInstance(id) found: %s. getId(instance) returned (string): %s. Expected ID (string): %s&quot;):format(
&#9;&#9;&#9;&#9;verifyInstance and verifyInstance:GetFullName() or &quot;NIL&quot;,
&#9;&#9;&#9;&#9;verifyIdStrByInstance,
&#9;&#9;&#9;&#9;buffer.tostring(internalSnapshotId)
&#9;&#9;&#9;)
&#9;&#9;)
&#9;&#9;if verifyInstance ~= instance then
&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor WARN POST-INSERT] MISMATCH: getInstance(id) did NOT return the original instance!&quot;
&#9;&#9;&#9;)
&#9;&#9;end
&#9;&#9;if verifyIdStrByInstance ~= buffer.tostring(internalSnapshotId) then
&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&quot;[WriteProcessor WARN POST-INSERT] MISMATCH: getId(instance) did NOT return the original ID buffer (as string)!&quot;
&#9;&#9;&#9;)
&#9;&#9;end
&#9;else
&#9;&#9;Log.warn(&quot;[WriteProcessor WARNING] Skipping tree map insert due to parenting failure.&quot;)
&#9;end

&#9;-- 7. Recurse for Children (if any were included in this add snapshot)
&#9;-- Only recurse if parenting was successful, otherwise children have no valid parent
&#9;if parentingSuccess then
&#9;&#9;if snapshot.children then
&#9;&#9;&#9;for _, child in snapshot.children do
&#9;&#9;&#9;&#9;-- Ensure child has proper ID field for tree registration
&#9;&#9;&#9;&#9;if not child.id and child.name then
&#9;&#9;&#9;&#9;&#9;-- Generate ID if missing (shouldn&apos;t happen from server, but safety check)
&#9;&#9;&#9;&#9;&#9;local childIdStr = generateRef()
&#9;&#9;&#9;&#9;&#9;child.id = childIdStr
&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[WriteProcessor] Child snapshot missing ID, generated:&quot;, childIdStr, &quot;for&quot;, child.name)
&#9;&#9;&#9;&#9;elseif child.id and type(child.id) == &quot;string&quot; then
&#9;&#9;&#9;&#9;&#9;-- ID exists as string, keep it as-is for applyAddition to handle
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[WriteProcessor] Processing child with ID:&quot;, child.id, &quot;Name:&quot;, child.name)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;child.parent = internalSnapshotId
&#9;&#9;&#9;&#9;self:applyAddition(child, initial)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;Log.trace(&quot;[WriteProcessor DEBUG] No snapshot.children field found, skipping child recursion.&quot;)
&#9;&#9;end
&#9;else
&#9;&#9;Log.warn(&quot;[WriteProcessor WARNING] Skipping child recursion due to parent failure.&quot;)
&#9;end

&#9;if not initial then
&#9;&#9;-- Only set waypoint if the core operation succeeded
&#9;&#9;if parentingSuccess then
&#9;&#9;&#9;Helpers.setWaypoint(&quot;Add&quot;, instance.Name)
&#9;&#9;end
&#9;end

&#9;-- Final log based on parenting success
&#9;if parentingSuccess then
&#9;&#9;Log.trace(&quot;[WriteProcessor IMPLEMENTATION] Addition SUCCESSFUL for:&quot;, snapshot.name)
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[AdditionProcessor DEBUG] FINAL SUCCESS: Instance created and parented:&quot;,
&#9;&#9;&#9;snapshot.name,
&#9;&#9;&#9;&quot;-&gt;&quot;,
&#9;&#9;&#9;instance:GetFullName()
&#9;&#9;)
&#9;else
&#9;&#9;Log.error(&quot;[WriteProcessor IMPLEMENTATION] Addition FAILED for:&quot;, snapshot.name, &quot;(Parenting issue)&quot;)
&#9;&#9;Log.debug(&quot;[AdditionProcessor] FINAL FAILURE: Parenting failed for:&quot;, snapshot.name)
&#9;end
&#9;return instance
end

return AdditionProcessor
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a40000100f</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX66D4B9693159452892AFE3CC4FAED932">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000afa</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">MoveProcessor</string>
							<string name="ScriptGuid">{af8e873a-5728-4993-9339-e95a683f2f87}</string>
							<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Types = require(Lemonade.Types)
local Log = require(Lemonade.Log)
local Helpers = require(script.Parent.Helpers)

local MoveProcessor = {}
MoveProcessor.__index = MoveProcessor

function MoveProcessor.new(parent)
&#9;return setmetatable({
&#9;&#9;parent = parent,
&#9;&#9;tree = parent.tree,
&#9;&#9;HttpSync = parent.HttpSync,
&#9;}, MoveProcessor)
end

function MoveProcessor:applyMove(moveSnapshot: Types.MoveSnapshot, initial: boolean?)
&#9;Log.debug(&quot;[MoveProcessor] Apply move has loaded&quot;)
&#9;Log.debug(&quot;[MoveProcessor] Full moveSnapshot received:&quot;, {
&#9;&#9;id = moveSnapshot.id,
&#9;&#9;name = moveSnapshot.name,
&#9;&#9;class = moveSnapshot.class,
&#9;&#9;parent = moveSnapshot.parent,
&#9;&#9;path = moveSnapshot.path,
&#9;&#9;uniqueId = moveSnapshot.uniqueId,
&#9;})

&#9;-- Convert ID to buffer if needed
&#9;local internalSnapshotId: Types.Ref
&#9;if type(moveSnapshot.id) == &quot;string&quot; then
&#9;&#9;Log.debug(&quot;[MoveProcessor] Converting string ID to buffer:&quot;, moveSnapshot.id)
&#9;&#9;internalSnapshotId = buffer.fromstring(moveSnapshot.id)
&#9;elseif type(moveSnapshot.id) == &quot;buffer&quot; then
&#9;&#9;Log.debug(&quot;[MoveProcessor] ID already a buffer&quot;)
&#9;&#9;internalSnapshotId = moveSnapshot.id
&#9;else
&#9;&#9;Log.error(&quot;[applyMove] moveSnapshot.id must be a string or buffer. Got type:&quot;, type(moveSnapshot.id))
&#9;&#9;Log.debug(&quot;[MoveProcessor] FAILED - Invalid ID type:&quot;, type(moveSnapshot.id))
&#9;&#9;return
&#9;end

&#9;local id_str = buffer.tostring(internalSnapshotId)
&#9;Log.debug(&quot;[MoveProcessor] Final ID string:&quot;, id_str)

&#9;Log.debug((&quot;[WriteProcessor:applyMove] Processing move for ID: %s&quot;):format(id_str))

&#9;-- Pre-operation check: ensure Tree is in a consistent state
&#9;if not self.tree or not self.tree.getInstance then
&#9;&#9;Log.error(&quot;[MoveProcessor] Tree is not available or corrupted&quot;)
&#9;&#9;Log.debug(&quot;[MoveProcessor] FAILED - Tree corruption detected&quot;)
&#9;&#9;return
&#9;end

&#9;-- Find the instance to move by ID
&#9;local instance = self.tree:getInstance(internalSnapshotId)

&#9;-- Use consistent path + uniqueId lookup strategy (no fallbacks)
&#9;if not instance and moveSnapshot.path and moveSnapshot.uniqueId then
&#9;&#9;Log.debug(&quot;[MoveProcessor] Tree lookup failed, using path + uniqueId lookup&quot;)
&#9;&#9;local targetPath = moveSnapshot.path
&#9;&#9;local targetUniqueId = moveSnapshot.uniqueId

&#9;&#9;Log.debug(&quot;[MoveProcessor] Searching for path:&quot;, targetPath, &quot;AND uniqueId:&quot;, targetUniqueId)

&#9;&#9;for _, inst in ipairs(game:GetDescendants()) do
&#9;&#9;&#9;if inst:GetAttribute(&quot;uniqueId&quot;) == targetUniqueId then
&#9;&#9;&#9;&#9;local instancePath = inst:GetFullName():gsub(&quot;^game%.&quot;, &quot;&quot;):gsub(&quot;%.([^%.]+)$&quot;, &quot;/%1&quot;):gsub(&quot;%.&quot;, &quot;/&quot;)
&#9;&#9;&#9;&#9;if instancePath == targetPath then
&#9;&#9;&#9;&#9;&#9;instance = inst
&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[MoveProcessor] FOUND instance for move:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;inst:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&#9;&quot;(&quot; .. inst.ClassName .. &quot;)&quot;
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;-- Deterministic path lookup when uniqueId mapping is absent; the sourcePath is authoritative
&#9;if not instance and moveSnapshot.path then
&#9;&#9;Log.debug(&quot;[MoveProcessor] Path-only lookup for:&quot;, moveSnapshot.path)
&#9;&#9;local function resolveByPath(p: string)
&#9;&#9;&#9;local firstSlash = string.find(p, &quot;/&quot;)
&#9;&#9;&#9;local serviceName = if firstSlash then string.sub(p, 1, firstSlash - 1) else p
&#9;&#9;&#9;local current = game:FindFirstChild(serviceName)
&#9;&#9;&#9;if not current then
&#9;&#9;&#9;&#9;return nil
&#9;&#9;&#9;end
&#9;&#9;&#9;if firstSlash then
&#9;&#9;&#9;&#9;local rest = string.sub(p, firstSlash + 1)
&#9;&#9;&#9;&#9;for segment in string.gmatch(rest, &quot;[^/]+&quot;) do
&#9;&#9;&#9;&#9;&#9;current = current:FindFirstChild(segment)
&#9;&#9;&#9;&#9;&#9;if not current then
&#9;&#9;&#9;&#9;&#9;&#9;return nil
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;return current
&#9;&#9;end

&#9;&#9;local byPath = resolveByPath(moveSnapshot.path)
&#9;&#9;if byPath then
&#9;&#9;&#9;instance = byPath
&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] FOUND by path:&quot;, byPath:GetFullName())
&#9;&#9;end
&#9;end

&#9;if not instance then
&#9;&#9;Log.warn(
&#9;&#9;&#9;(&quot;[WriteProcessor:applyMove] Instance not found with ID: %s, path: %s, uniqueId: %s&quot;):format(
&#9;&#9;&#9;&#9;id_str,
&#9;&#9;&#9;&#9;moveSnapshot.path or &quot;nil&quot;,
&#9;&#9;&#9;&#9;moveSnapshot.uniqueId or &quot;nil&quot;
&#9;&#9;&#9;)
&#9;&#9;)
&#9;&#9;Log.debug(&quot;[MoveProcessor] FAILED - No instance found&quot;)
&#9;&#9;return
&#9;end

&#9;Log.debug(&quot;[MoveProcessor] SUCCESS - Found instance:&quot;, instance:GetFullName())
&#9;Log.debug((&quot;[WriteProcessor:applyMove] Found instance to move: %s&quot;):format(instance:GetFullName()))

&#9;-- Get new parent and name from move snapshot
&#9;local newParent = nil
&#9;local newName = moveSnapshot.name or instance.Name

&#9;Log.debug(&quot;[MoveProcessor] Target name:&quot;, newName)

&#9;-- Check if this is a rename (same parent directory) or actual move
&#9;local sourceParentPath = &quot;&quot;
&#9;if moveSnapshot.sourcePath then
&#9;&#9;local sourceParts = {}
&#9;&#9;for part in moveSnapshot.sourcePath:gmatch(&quot;[^/]+&quot;) do
&#9;&#9;&#9;table.insert(sourceParts, part)
&#9;&#9;end
&#9;&#9;if #sourceParts &gt; 1 then
&#9;&#9;&#9;sourceParentPath = table.concat(sourceParts, &quot;/&quot;, 1, #sourceParts - 1)
&#9;&#9;end
&#9;end

&#9;local destParentPath = &quot;&quot;
&#9;if moveSnapshot.destinationPath or moveSnapshot.path then
&#9;&#9;local destParts = {}
&#9;&#9;local destPath = moveSnapshot.destinationPath or moveSnapshot.path
&#9;&#9;for part in destPath:gmatch(&quot;[^/]+&quot;) do
&#9;&#9;&#9;table.insert(destParts, part)
&#9;&#9;end
&#9;&#9;if #destParts &gt; 1 then
&#9;&#9;&#9;destParentPath = table.concat(destParts, &quot;/&quot;, 1, #destParts - 1)
&#9;&#9;end
&#9;end

&#9;Log.debug(&quot;[MoveProcessor] Source parent path:&quot;, sourceParentPath)
&#9;Log.debug(&quot;[MoveProcessor] Dest parent path:&quot;, destParentPath)
&#9;Log.debug(
&#9;&#9;&quot;DEBUG MoveProcessor: sourceParentPath=&quot;,
&#9;&#9;sourceParentPath,
&#9;&#9;&quot;destParentPath=&quot;,
&#9;&#9;destParentPath,
&#9;&#9;&quot;are equal?&quot;,
&#9;&#9;sourceParentPath == destParentPath
&#9;)

&#9;if sourceParentPath == destParentPath and sourceParentPath ~= &quot;&quot; then
&#9;&#9;-- Same parent directory = rename operation, keep current parent
&#9;&#9;newParent = instance.Parent
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[MoveProcessor] Rename detected, keeping current parent:&quot;,
&#9;&#9;&#9;newParent and newParent:GetFullName() or &quot;nil&quot;
&#9;&#9;)
&#9;elseif moveSnapshot.parent then
&#9;&#9;Log.debug(&quot;DEBUG MoveProcessor: Received parent ID:&quot;, moveSnapshot.parent, &quot;type:&quot;, type(moveSnapshot.parent))
&#9;&#9;Log.debug(&quot;[MoveProcessor] Looking for parent by:&quot;, moveSnapshot.parent, &quot;type:&quot;, type(moveSnapshot.parent))

&#9;&#9;-- Parent should always be a buffer ID at this point (normalized in Poll.luau)
&#9;&#9;newParent = self.tree:getInstance(moveSnapshot.parent)
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[MoveProcessor DEBUG] Parent lookup by ID result:&quot;,
&#9;&#9;&#9;newParent and newParent:GetFullName() or &quot;NOT_FOUND&quot;
&#9;&#9;)

&#9;&#9;if not newParent then
&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;(&quot;[WriteProcessor:applyMove] Parent instance not found for move operation. ID: %s&quot;):format(id_str)
&#9;&#9;&#9;)
&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] FAILED - Parent not found for:&quot;, moveSnapshot.parent)
&#9;&#9;&#9;return
&#9;&#9;end
&#9;elseif destParentPath ~= &quot;&quot; and destParentPath ~= sourceParentPath then
&#9;&#9;-- Resolve parent from destination path when parent ID not provided but paths differ
&#9;&#9;Log.debug(&quot;[MoveProcessor] Resolving parent from destParentPath:&quot;, destParentPath)

&#9;&#9;local function resolveByPath(p: string)
&#9;&#9;&#9;local firstSlash = string.find(p, &quot;/&quot;)
&#9;&#9;&#9;local serviceName = if firstSlash then string.sub(p, 1, firstSlash - 1) else p
&#9;&#9;&#9;local current = game:FindFirstChild(serviceName)
&#9;&#9;&#9;if not current then
&#9;&#9;&#9;&#9;return nil
&#9;&#9;&#9;end
&#9;&#9;&#9;if firstSlash then
&#9;&#9;&#9;&#9;local rest = string.sub(p, firstSlash + 1)
&#9;&#9;&#9;&#9;for segment in string.gmatch(rest, &quot;[^/]+&quot;) do
&#9;&#9;&#9;&#9;&#9;current = current:FindFirstChild(segment)
&#9;&#9;&#9;&#9;&#9;if not current then
&#9;&#9;&#9;&#9;&#9;&#9;return nil
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;return current
&#9;&#9;end

&#9;&#9;newParent = resolveByPath(destParentPath)
&#9;&#9;if not newParent then
&#9;&#9;&#9;Log.error(&quot;[MoveProcessor] Failed to resolve parent from path:&quot;, destParentPath)
&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] FAILED - Parent path resolution failed&quot;)
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;Log.debug(&quot;[MoveProcessor] Resolved parent from path:&quot;, newParent:GetFullName())
&#9;else
&#9;&#9;-- Keep current parent if no new parent specified
&#9;&#9;newParent = instance.Parent
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[MoveProcessor DEBUG] No parent specified, keeping current:&quot;,
&#9;&#9;&#9;newParent and newParent:GetFullName() or &quot;nil&quot;
&#9;&#9;)
&#9;end

&#9;Log.debug(&quot;DEBUG MoveProcessor: Final resolved parent:&quot;, newParent and newParent:GetFullName() or &quot;nil&quot;)
&#9;Log.debug((&quot;[WriteProcessor:applyMove] Target parent: %s&quot;):format(newParent and newParent:GetFullName() or &quot;nil&quot;))
&#9;Log.debug(&quot;[MoveProcessor] Final target parent:&quot;, newParent and newParent:GetFullName() or &quot;nil&quot;)

&#9;-- Pause watcher during the move operation
&#9;if self.parent.watcher then
&#9;&#9;Log.debug(&quot;[MoveProcessor] Using watcher pause for move operation&quot;)
&#9;&#9;self.parent.watcher:pause(function()
&#9;&#9;&#9;-- Update instance name if changed
&#9;&#9;&#9;if newName and newName ~= instance.Name then
&#9;&#9;&#9;&#9;Log.debug((&quot;[WriteProcessor:applyMove] Updating name from %s to %s&quot;):format(instance.Name, newName))
&#9;&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] Updating name:&quot;, instance.Name, &quot;-&gt;&quot;, newName)
&#9;&#9;&#9;&#9;instance.Name = newName
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Move to new parent if different
&#9;&#9;&#9;if newParent and newParent ~= instance.Parent then
&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;(&quot;[WriteProcessor:applyMove] Moving from %s to %s&quot;):format(
&#9;&#9;&#9;&#9;&#9;&#9;instance.Parent and instance.Parent:GetFullName() or &quot;nil&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;newParent:GetFullName()
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] Moving from:&quot;, instance.Parent and instance.Parent:GetFullName() or &quot;nil&quot;)
&#9;&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] Moving to:&quot;, newParent:GetFullName())

&#9;&#9;&#9;&#9;-- Update tree mapping BEFORE the move to preserve ID
&#9;&#9;&#9;&#9;if self.tree.moveInstance then
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] Updating tree mapping before move&quot;)
&#9;&#9;&#9;&#9;&#9;self.tree:moveInstance(instance, internalSnapshotId, true) -- preserveExistingMapping = true
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;instance.Parent = newParent
&#9;&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] Move completed - new parent:&quot;, instance.Parent:GetFullName())
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] No parent change needed&quot;)
&#9;&#9;&#9;end

&#9;&#9;&#9;Log.debug((&quot;[WriteProcessor:applyMove] Successfully moved %s&quot;):format(instance:GetFullName()))
&#9;&#9;end)
&#9;else
&#9;&#9;Log.warn(&quot;[WriteProcessor:applyMove] No watcher available - move may cause ID mapping issues&quot;)
&#9;&#9;Log.debug(&quot;[MoveProcessor] No watcher available, performing direct move&quot;)

&#9;&#9;-- Update instance name if changed
&#9;&#9;if newName and newName ~= instance.Name then
&#9;&#9;&#9;Log.debug((&quot;[WriteProcessor:applyMove] Updating name from %s to %s&quot;):format(instance.Name, newName))
&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] Updating name:&quot;, instance.Name, &quot;-&gt;&quot;, newName)
&#9;&#9;&#9;instance.Name = newName
&#9;&#9;end

&#9;&#9;-- Move to new parent if different
&#9;&#9;if newParent and newParent ~= instance.Parent then
&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;(&quot;[WriteProcessor:applyMove] Moving from %s to %s&quot;):format(
&#9;&#9;&#9;&#9;&#9;instance.Parent and instance.Parent:GetFullName() or &quot;nil&quot;,
&#9;&#9;&#9;&#9;&#9;newParent:GetFullName()
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;)
&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] Moving from:&quot;, instance.Parent and instance.Parent:GetFullName() or &quot;nil&quot;)
&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] Moving to:&quot;, newParent:GetFullName())

&#9;&#9;&#9;-- Update tree mapping BEFORE the move to preserve ID
&#9;&#9;&#9;if self.tree.moveInstance then
&#9;&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] Updating tree mapping before move&quot;)
&#9;&#9;&#9;&#9;self.tree:moveInstance(instance, internalSnapshotId, true) -- preserveExistingMapping = true
&#9;&#9;&#9;end

&#9;&#9;&#9;instance.Parent = newParent
&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] Move completed - new parent:&quot;, instance.Parent:GetFullName())
&#9;&#9;else
&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] No parent change needed&quot;)
&#9;&#9;end

&#9;&#9;Log.debug((&quot;[WriteProcessor:applyMove] Successfully moved %s&quot;):format(instance:GetFullName()))
&#9;end

&#9;-- Verify that the ID mapping is preserved after the move
&#9;local verifyId = self.tree:getId(instance)
&#9;if verifyId then
&#9;&#9;local verifyIdStr = buffer.tostring(verifyId)
&#9;&#9;if verifyIdStr == id_str then
&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;(&quot;[WriteProcessor:applyMove] ID mapping preserved successfully for: %s&quot;):format(instance:GetFullName())
&#9;&#9;&#9;)
&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] ID mapping preserved successfully&quot;)
&#9;&#9;else
&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;(&quot;[WriteProcessor:applyMove] ID mapping corruption detected! Expected: %s, Got: %s for: %s&quot;):format(
&#9;&#9;&#9;&#9;&#9;id_str,
&#9;&#9;&#9;&#9;&#9;verifyIdStr,
&#9;&#9;&#9;&#9;&#9;instance:GetFullName()
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;)
&#9;&#9;&#9;Log.error(&quot;[MoveProcessor] This indicates Tree state corruption - reconnection may be required&quot;)
&#9;&#9;&#9;Log.debug(&quot;[MoveProcessor] ERROR - ID mapping changed! Expected:&quot;, id_str, &quot;Got:&quot;, verifyIdStr)

&#9;&#9;&#9;-- For clean operation, we don&apos;t attempt repairs - this should not happen with proper state cleanup
&#9;&#9;&#9;return
&#9;&#9;end
&#9;else
&#9;&#9;Log.error((&quot;[WriteProcessor:applyMove] Lost ID mapping for moved instance: %s&quot;):format(instance:GetFullName()))
&#9;&#9;Log.debug(&quot;[MoveProcessor] ERROR - Lost ID mapping for:&quot;, instance:GetFullName())
&#9;end

&#9;-- Move completed - ID-based sync will handle database updates
&#9;if not initial then
&#9;&#9;Helpers.setWaypoint(&quot;Move&quot;, instance.Name)
&#9;end

&#9;Log.debug(&quot;[MoveProcessor] === MOVE OPERATION COMPLETED ===&quot;)
end

return MoveProcessor
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001010</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXE04A07A5B5854CCFA77ACD3244626C4F">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000afb</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">Helpers</string>
							<string name="ScriptGuid">{391112d8-0ff3-4e87-89d6-0259767f3989}</string>
							<string name="Source">local ChangeHistoryService = game:GetService(&quot;ChangeHistoryService&quot;)
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Dom = require(Lemonade.Dom)
local Log = require(Lemonade.Log)
local Error = require(Lemonade.Core.Error)
local Config = require(Lemonade.Config)
local equals = require(Lemonade.Helpers.equals)

local MESH_RELOAD_PROPERTIES = { &quot;MeshContent&quot;, &quot;InitialSize&quot; }

local Helpers = {}

function Helpers.setWaypoint(action: string, name: string?)
&#9;name = name and ` &quot;{name}&quot;` or &quot;&quot;
&#9;ChangeHistoryService:SetWaypoint(`Lemonade: {action}{name} [{DateTime.now():FormatLocalTime(&quot;LTS&quot;, &quot;en-us&quot;)}]`)
end

function Helpers.loadMesh(path: string)
&#9;local success, mesh = pcall(function()
&#9;&#9;return game:GetObjects(&quot;rbxasset://lemonade/&quot; .. path)[1]
&#9;end)

&#9;if not success then
&#9;&#9;local err = Error.new(Error.MeshLoadFailed, mesh)
&#9;&#9;Log.warn(err)
&#9;&#9;return nil
&#9;end

&#9;return mesh
end

function Helpers.shouldReloadMesh(mesh: MeshPart, properties: { [string]: any }?)
&#9;if not properties then
&#9;&#9;return false
&#9;end

&#9;for _, property in MESH_RELOAD_PROPERTIES do
&#9;&#9;local value = properties[property]
&#9;&#9;if not value then
&#9;&#9;&#9;continue
&#9;&#9;end

&#9;&#9;local decodeSuccess, snapshotValue = Dom.EncodedValue.decode(value)
&#9;&#9;if not decodeSuccess then
&#9;&#9;&#9;local err = Error.new(Error.DecodeFailed, property, value)
&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;continue
&#9;&#9;end

&#9;&#9;property = property == &quot;InitialSize&quot; and &quot;MeshSize&quot; or property
&#9;&#9;if not equals(mesh[property], snapshotValue) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end

&#9;return false
end

function Helpers.warnNotCreatable(class: string)
&#9;local err = Error.new(Error.NotCreatable, class)

&#9;if class == &quot;PackageLink&quot; and not Config:get(&quot;OverridePackages&quot;) then
&#9;&#9;Log.info(err)
&#9;else
&#9;&#9;Log.warn(err)
&#9;end
end

-- Service mapping for non-creatable Roblox services
Helpers.SERVICE_MAPPING = {
&#9;[&quot;Workspace&quot;] = game.Workspace,
&#9;[&quot;ReplicatedStorage&quot;] = game.ReplicatedStorage,
&#9;[&quot;ReplicatedFirst&quot;] = game.ReplicatedFirst,
&#9;[&quot;StarterPlayer&quot;] = game.StarterPlayer,
&#9;[&quot;StarterGui&quot;] = game.StarterGui,
&#9;[&quot;StarterPack&quot;] = game.StarterPack,
&#9;[&quot;ServerScriptService&quot;] = game.ServerScriptService,
&#9;[&quot;ServerStorage&quot;] = game.ServerStorage,
&#9;[&quot;StarterCharacterScripts&quot;] = game.StarterPlayer.StarterCharacterScripts,
&#9;[&quot;StarterPlayerScripts&quot;] = game.StarterPlayer.StarterPlayerScripts,
}

-- Structural items that shouldn&apos;t be created as Roblox instances
Helpers.STRUCTURAL_ITEMS = {
&#9;[&quot;src&quot;] = true,
&#9;[&quot;wally.toml&quot;] = true,
&#9;[&quot;Packages&quot;] = function(snapshot)
&#9;&#9;-- Only skip if it&apos;s at root level (not a service child)
&#9;&#9;return snapshot.path == &quot;Packages&quot;
&#9;end,
}

return Helpers
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001011</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBXE113D132296B4E119C0A58DC60541737">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000afc</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Read</string>
						<string name="ScriptGuid">{aa88fb5f-edef-4849-b8a7-916129c921a8}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Types = require(Lemonade.Types)
local Dom = require(Lemonade.Dom)
local Log = require(Lemonade.Log)
local Config = require(Lemonade.Config)
local HttpService = game:GetService(&quot;HttpService&quot;)

local equals = require(Lemonade.Helpers.equals)
local getPathFromInstance = require(Lemonade.Helpers.getPathFromInstance)
local getClassName = require(Lemonade.Helpers.getClassName)

local Snapshot = require(script.Parent.Parent.Snapshot)
local Error = require(script.Parent.Parent.Error)

local ROOT_REF_BUFFER = buffer.fromstring(&quot;ROOT_DATAMODEL_ID&quot;)

-- Determines if an instance represents a &quot;file&quot; that should be synced to the database.
-- Currently, files are limited to Script-type objects that carry Lua source content.
local function isScriptRelated(instance: Instance): boolean
&#9;return instance.ClassName == &quot;Script&quot; or instance.ClassName == &quot;ModuleScript&quot; or instance.ClassName == &quot;LocalScript&quot;
end

-- Map service names to predictable uniqueIds (must match VM initialization)
local function getServiceUniqueId(serviceName: string): string?
&#9;local serviceIds = {
&#9;&#9;Workspace = &quot;ws1&quot;,
&#9;&#9;StarterPlayer = &quot;sp1&quot;,
&#9;&#9;StarterPlayerScripts = &quot;sps&quot;,
&#9;&#9;StarterCharacterScripts = &quot;scs&quot;,
&#9;&#9;ServerScriptService = &quot;sss&quot;,
&#9;&#9;StarterGui = &quot;sg1&quot;,
&#9;&#9;ServerStorage = &quot;ss1&quot;,
&#9;&#9;ReplicatedStorage = &quot;rs1&quot;,
&#9;&#9;StarterPack = &quot;spk&quot;,
&#9;&#9;ReplicatedFirst = &quot;rf1&quot;,
&#9;}
&#9;return serviceIds[serviceName]
end

local ReadProcessor = {}
ReadProcessor.__index = ReadProcessor

function ReadProcessor.new(tree)
&#9;return setmetatable({
&#9;&#9;tree = tree,
&#9;}, ReadProcessor)
end

function ReadProcessor:onAdd(instance: Instance, __parentId: Types.Ref?): Types.AddedSnapshot?
&#9;Log.trace(&quot;[DEBUG READ] === ReadProcessor:onAdd CALLED ===&quot;)
&#9;Log.trace(&quot;[DEBUG READ] Instance:&quot;, instance:GetFullName(), &quot;Class:&quot;, instance.ClassName)
&#9;Log.info(&quot;[ReadProcessor.onAdd] Processing instance:&quot;, instance:GetFullName())
&#9;Log.debug(&quot;[ReadProcessor] NEW INSTANCE DETECTED:&quot;, instance:GetFullName(), &quot;Class:&quot;, instance.ClassName)

&#9;-- Previous versions skipped non-script instances entirely, which prevented the JSONL hierarchy
&#9;-- from reflecting objects like Parts, Models, Folders, etc. To keep the project structure fully
&#9;-- up-to-date we now ALWAYS build a snapshot, even for non-script instances. Back-end logic will
&#9;-- ignore `content`-less nodes when deciding whether to store separate file rows, so the existing
&#9;-- &quot;scripts-only&quot; persistence contract remains intact.

&#9;-- Use or assign the persistent *3-character* `uniqueId` attribute.
&#9;local uid = instance:GetAttribute(&quot;uniqueId&quot;)
&#9;if not uid then
&#9;&#9;local guid = HttpService:GenerateGUID(false)
&#9;&#9;uid = string.sub(guid:gsub(&quot;-&quot;, &quot;&quot;), 1, 3)
&#9;&#9;instance:SetAttribute(&quot;uniqueId&quot;, uid)
&#9;end

&#9;-- Detect duplication by scanning the live DataModel (not the Tree cache).
&#9;local function uidExists(u: string): boolean
&#9;&#9;for _, inst in ipairs(game:GetDescendants()) do
&#9;&#9;&#9;if inst ~= instance and inst:GetAttribute(&quot;uniqueId&quot;) == u then
&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;return false
&#9;end

&#9;if uidExists(uid) then
&#9;&#9;repeat
&#9;&#9;&#9;uid = string.sub(HttpService:GenerateGUID(false):gsub(&quot;-&quot;, &quot;&quot;), 1, 3)
&#9;&#9;until not uidExists(uid)
&#9;&#9;instance:SetAttribute(&quot;uniqueId&quot;, uid)
&#9;&#9;Log.info(
&#9;&#9;&#9;&quot;[ReadProcessor.onAdd] Duplicate uniqueId detected. Assigned new uniqueId:&quot;,
&#9;&#9;&#9;uid,
&#9;&#9;&#9;&quot;for instance:&quot;,
&#9;&#9;&#9;instance:GetFullName()
&#9;&#9;)
&#9;end

&#9;-- Prepare buffer for Tree registration after uniqueness is guaranteed

&#9;Log.info(&quot;[ReadProcessor.onAdd] Using uniqueId:&quot;, uid, &quot;for instance:&quot;, instance:GetFullName())

&#9;-- If the tree already contains this instance, skip processing
&#9;local existingIdBuffer = self.tree:getId(instance)
&#9;if existingIdBuffer then
&#9;&#9;Log.debug(&quot;[ReadProcessor] Instance already exists in tree, skipping ADD:&quot;, instance:GetFullName())
&#9;&#9;Log.debug(&quot;  - existingIdBuffer:&quot;, buffer.tostring(existingIdBuffer))
&#9;&#9;Log.trace(&quot;Instance already exists. Skipping..&quot;)
&#9;&#9;return nil
&#9;end

&#9;Log.debug(&quot;[ReadProcessor] Instance NOT in tree, processing as ADD:&quot;, instance:GetFullName())

&#9;-- Determine parent reference for snapshot parenting
&#9;local parentInstance = instance.Parent
&#9;local parentIdBuffer

&#9;if __parentId then
&#9;&#9;parentIdBuffer = __parentId
&#9;else
&#9;&#9;if parentInstance then
&#9;&#9;&#9;parentIdBuffer = self.tree:getId(parentInstance)
&#9;&#9;end

&#9;&#9;if not parentIdBuffer then
&#9;&#9;&#9;parentIdBuffer = ROOT_REF_BUFFER
&#9;&#9;end
&#9;end

&#9;-- Resolve relative path for file system representation
&#9;local relativePath = getPathFromInstance(instance, self.tree)
&#9;Log.trace(&quot;[DEBUG READ] getPathFromInstance returned:&quot;, relativePath or &quot;nil&quot;)
&#9;Log.info(&quot;[ReadProcessor.onAdd] Instance:&quot;, instance:GetFullName(), &quot;Calculated relativePath:&quot;, relativePath)
&#9;-- Verification log: ensure we can see when path resolution fails for toolbox inserts
&#9;Log.trace(&quot;[VERIFY Read.onAdd] relativePath:&quot;, relativePath or &quot;nil&quot;, &quot;instance:&quot;, instance:GetFullName())

&#9;if not relativePath then
&#9;&#9;Log.trace(&quot;[DEBUG READ] PATH IS NIL - RETURNING NIL SNAPSHOT&quot;)
&#9;&#9;Log.warn(
&#9;&#9;&#9;&quot;[ReadProcessor.onAdd] Could not determine file path for added instance:&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&quot;Skipping...&quot;
&#9;&#9;)
&#9;&#9;-- Extra verification details to diagnose why path is nil
&#9;&#9;local parentName = &quot;(nil)&quot;
&#9;&#9;local okParent = pcall(function()
&#9;&#9;&#9;parentName = instance.Parent and instance.Parent:GetFullName() or &quot;(nil)&quot;
&#9;&#9;end)
&#9;&#9;local parentInTree = false
&#9;&#9;if instance.Parent then
&#9;&#9;&#9;parentInTree = (self.tree:getId(instance.Parent) ~= nil)
&#9;&#9;end
&#9;&#9;Log.trace(&quot;[VERIFY Read.onAdd] path=nil, parent:&quot;, parentName, &quot;ok:&quot;, okParent, &quot;parentInTree:&quot;, parentInTree)
&#9;&#9;return nil
&#9;end

&#9;local properties = {}
&#9;local children = {}

&#9;for name, value in pairs(instance:GetAttributes()) do
&#9;&#9;properties[name] = {
&#9;&#9;&#9;String = tostring(value),
&#9;&#9;}
&#9;end

&#9;local sourcePropertyName = getClassName(instance)

&#9;if instance:GetAttribute(&quot;Source&quot;) then
&#9;&#9;properties[sourcePropertyName] = {
&#9;&#9;&#9;String = instance:GetAttribute(&quot;Source&quot;),
&#9;&#9;}
&#9;elseif instance:IsA(&quot;LuaSourceContainer&quot;) then
&#9;&#9;properties[sourcePropertyName] = {
&#9;&#9;&#9;String = instance.Source,
&#9;&#9;}
&#9;elseif instance:IsA(&quot;Part&quot;) then
&#9;&#9;-- Serialize Part properties as JSON
&#9;&#9;local partData = {
&#9;&#9;&#9;-- Appearance
&#9;&#9;&#9;BrickColor = instance.BrickColor.Name,
&#9;&#9;&#9;CastShadow = instance.CastShadow,
&#9;&#9;&#9;Color = { instance.Color.R * 255, instance.Color.G * 255, instance.Color.B * 255 },
&#9;&#9;&#9;Material = instance.Material.Name,
&#9;&#9;&#9;MaterialVariant = instance.MaterialVariant,
&#9;&#9;&#9;Reflectance = instance.Reflectance,
&#9;&#9;&#9;Transparency = instance.Transparency,

&#9;&#9;&#9;-- Data
&#9;&#9;&#9;Archivable = instance.Archivable,
&#9;&#9;&#9;Locked = instance.Locked,
&#9;&#9;&#9;Name = instance.Name,

&#9;&#9;&#9;-- Transform - Size only (CFrame handles position/rotation)
&#9;&#9;&#9;Size = { instance.Size.X, instance.Size.Y, instance.Size.Z },

&#9;&#9;&#9;-- CFrame (primary transform)
&#9;&#9;&#9;CFrame = {
&#9;&#9;&#9;&#9;Position = { instance.CFrame.Position.X, instance.CFrame.Position.Y, instance.CFrame.Position.Z },
&#9;&#9;&#9;&#9;Orientation = { instance.Orientation.X, instance.Orientation.Y, instance.Orientation.Z },
&#9;&#9;&#9;},

&#9;&#9;&#9;-- Origin (pivot point) - same as CFrame for Parts
&#9;&#9;&#9;Origin = {
&#9;&#9;&#9;&#9;Position = { instance.CFrame.Position.X, instance.CFrame.Position.Y, instance.CFrame.Position.Z },
&#9;&#9;&#9;&#9;Orientation = { instance.Orientation.X, instance.Orientation.Y, instance.Orientation.Z },
&#9;&#9;&#9;},

&#9;&#9;&#9;-- Behavior
&#9;&#9;&#9;EnableFluidForces = instance.EnableFluidForces,

&#9;&#9;&#9;-- Collision
&#9;&#9;&#9;CanCollide = instance.CanCollide,
&#9;&#9;&#9;CanTouch = instance.CanTouch,
&#9;&#9;&#9;CollisionGroup = instance.CollisionGroup,

&#9;&#9;&#9;-- Part-specific
&#9;&#9;&#9;Anchored = instance.Anchored,
&#9;&#9;&#9;CustomPhysicalProperties = instance.CustomPhysicalProperties ~= nil,
&#9;&#9;&#9;Massless = instance.Massless,
&#9;&#9;&#9;RootPriority = instance.RootPriority,
&#9;&#9;&#9;Shape = instance.Shape.Name,

&#9;&#9;&#9;-- Assembly properties
&#9;&#9;&#9;Assembly = {
&#9;&#9;&#9;&#9;AssemblyLinearVelocity = {
&#9;&#9;&#9;&#9;&#9;instance.AssemblyLinearVelocity.X,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyLinearVelocity.Y,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyLinearVelocity.Z,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;AssemblyAngularVelocity = {
&#9;&#9;&#9;&#9;&#9;instance.AssemblyAngularVelocity.X,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyAngularVelocity.Y,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyAngularVelocity.Z,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;AssemblyCenterOfMass = {
&#9;&#9;&#9;&#9;&#9;instance.AssemblyCenterOfMass.X,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyCenterOfMass.Y,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyCenterOfMass.Z,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;AssemblyMass = instance.AssemblyMass,
&#9;&#9;&#9;},

&#9;&#9;&#9;-- Tags
&#9;&#9;&#9;Tags = instance:GetTags(),

&#9;&#9;&#9;-- Attributes
&#9;&#9;&#9;Attributes = instance:GetAttributes(),
&#9;&#9;}

&#9;&#9;-- Serialize to JSON string
&#9;&#9;local jsonString = HttpService:JSONEncode(partData)
&#9;&#9;properties[sourcePropertyName] = {
&#9;&#9;&#9;String = jsonString,
&#9;&#9;}
&#9;end

&#9;if ReadProcessor.shouldSyncProperties(instance) then
&#9;&#9;for property, default in Dom.getDefaultProperties(instance.ClassName) do
&#9;&#9;&#9;local readSuccess, instanceValue = Dom.readProperty(instance, property)

&#9;&#9;&#9;if not readSuccess then
&#9;&#9;&#9;&#9;local err = Error.new(Error.ReadFailed, property, instance, instanceValue.kind)
&#9;&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;end

&#9;&#9;&#9;local _, defaultValue = Dom.EncodedValue.decode(default)

&#9;&#9;&#9;if not equals(instanceValue, defaultValue) then
&#9;&#9;&#9;&#9;local propertyType = next(default)
&#9;&#9;&#9;&#9;local encodeSuccess, encodedValue = Dom.EncodedValue.encode(instanceValue, propertyType)

&#9;&#9;&#9;&#9;if not encodeSuccess then
&#9;&#9;&#9;&#9;&#9;local err = Error.new(Error.EncodeFailed, property, instanceValue)
&#9;&#9;&#9;&#9;&#9;Log.warn(err)
&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;properties[property] = encodedValue
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;-- Do not recurse here; callers (e.g. full sync) will traverse the tree.

&#9;local snapshotName = instance.Name

&#9;-- Debug logging
&#9;Log.info(
&#9;&#9;&quot;[ReadProcessor.onAdd] Creating snapshot - Instance name:&quot;,
&#9;&#9;instance.Name,
&#9;&#9;&quot;Class:&quot;,
&#9;&#9;instance.ClassName,
&#9;&#9;&quot;RelativePath:&quot;,
&#9;&#9;relativePath
&#9;)

&#9;-- Extract content for script instances to ensure it syncs to web
&#9;local content = nil
&#9;if instance:IsA(&quot;LuaSourceContainer&quot;) then
&#9;&#9;content = instance.Source
&#9;&#9;Log.info(
&#9;&#9;&#9;&quot;[ReadProcessor.onAdd] Extracted script content for:&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&quot;Length:&quot;,
&#9;&#9;&#9;string.len(content or &quot;&quot;)
&#9;&#9;)
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[ReadProcessor DEBUG] Script content extracted - Name:&quot;,
&#9;&#9;&#9;instance.Name,
&#9;&#9;&#9;&quot;Length:&quot;,
&#9;&#9;&#9;string.len(content or &quot;&quot;)
&#9;&#9;)
&#9;end

&#9;-- Return snapshot WITH the persistent uniqueId
&#9;local addedData = {
&#9;&#9;id = uid, -- 3-char uniqueId used as primary identifier
&#9;&#9;uniqueId = uid, -- propagate for database writes
&#9;&#9;filePath = relativePath,
&#9;&#9;parent = parentIdBuffer,
&#9;&#9;name = snapshotName,
&#9;&#9;class = instance.ClassName,
&#9;&#9;properties = properties,
&#9;&#9;children = children,
&#9;&#9;meta = {},
&#9;&#9;content = content, -- Include content field for scripts
&#9;}

&#9;Log.info(
&#9;&#9;&quot;[ReadProcessor.onAdd] Instance:&quot;,
&#9;&#9;instance:GetFullName(),
&#9;&#9;&quot;Final addedData.name:&quot;,
&#9;&#9;addedData.name,
&#9;&#9;&quot;Path:&quot;,
&#9;&#9;relativePath
&#9;)

&#9;local finalSnapshot = addedData
&#9;Log.info(
&#9;&#9;&quot;[ReadProcessor.onAdd] Snapshot prepared - Name:&quot;,
&#9;&#9;finalSnapshot.name,
&#9;&#9;&quot;Path:&quot;,
&#9;&#9;finalSnapshot.filePath,
&#9;&#9;&quot;Children count:&quot;,
&#9;&#9;#finalSnapshot.children
&#9;)

&#9;-- Final logging
&#9;Log.info(
&#9;&#9;&quot;[ReadProcessor.onAdd] Final snapshot - Name:&quot;,
&#9;&#9;finalSnapshot.name,
&#9;&#9;&quot;Path:&quot;,
&#9;&#9;finalSnapshot.filePath or &quot;nil&quot;,
&#9;&#9;&quot;Class:&quot;,
&#9;&#9;finalSnapshot.class,
&#9;&#9;&quot;Has children:&quot;,
&#9;&#9;#finalSnapshot.children &gt; 0
&#9;)

&#9;-- File name is already present in snapshot.name; no need to call :withName on raw table

&#9;Log.debug(&quot;[ReadProcessor] onAdd returning finalSnapshot for:&quot;, instance:GetFullName())
&#9;Log.debug(&quot;  - snapshot.name:&quot;, finalSnapshot.name)
&#9;Log.debug(&quot;  - snapshot.class:&quot;, finalSnapshot.class)
&#9;Log.debug(&quot;  - snapshot.id:&quot;, finalSnapshot.id)
&#9;Log.debug(&quot;  - snapshot.content length:&quot;, finalSnapshot.content and string.len(finalSnapshot.content) or &quot;nil&quot;)
&#9;Log.debug(&quot;  - snapshot is nil:&quot;, finalSnapshot == nil)

&#9;return finalSnapshot
end

function ReadProcessor:onChange(instance: Instance, property: string?): Types.ChangeSnapshot?
&#9;Log.trace(&quot;Detected change of&quot;, instance, property)

&#9;local id = self.tree:getId(instance)

&#9;-- Recovery: if the Tree mapping is missing, try to rebuild it from the
&#9;-- instance&apos;s persistent 3-character uniqueId attribute so content edits
&#9;-- don&apos;t get dropped.
&#9;if not id then
&#9;&#9;local uidAttr = instance:GetAttribute(&quot;uniqueId&quot;)
&#9;&#9;if uidAttr and typeof(uidAttr) == &quot;string&quot; and #uidAttr == 3 then
&#9;&#9;&#9;local ok, uidBuf = pcall(buffer.fromstring, uidAttr)
&#9;&#9;&#9;if ok and uidBuf then
&#9;&#9;&#9;&#9;self.tree:insertInstance(instance, uidBuf, {})
&#9;&#9;&#9;&#9;id = uidBuf
&#9;&#9;&#9;&#9;Log.debug(&quot;[ReadProcessor] Recovered missing Tree ID via uniqueId for:&quot;, instance:GetFullName())
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;if not id then
&#9;&#9;Log.warn(&quot;[ReadProcessor:onChange] Unknown instance. Skipping..&quot;)
&#9;&#9;return nil
&#9;end

&#9;if property and not ReadProcessor.shouldSyncProperties(instance, property) then
&#9;&#9;Log.trace(&quot;Instance does not pass sync filter. Skipping..&quot;)
&#9;&#9;return nil
&#9;end

&#9;-- For parent or name changes, rely on persistent ID and let the server resolve
&#9;-- the correct path/name using the updated instance hierarchy.
&#9;if property == &quot;Parent&quot; or property == &quot;Name&quot; then
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[ReadProcessor DEBUG] RENAME/MOVE DETECTED:&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&quot;Property:&quot;,
&#9;&#9;&#9;property,
&#9;&#9;&#9;&quot;New name:&quot;,
&#9;&#9;&#9;instance.Name
&#9;&#9;)

&#9;&#9;-- Use the 3-character uniqueId from the instance attribute instead of the Tree&apos;s long database ID
&#9;&#9;local uniqueId = instance:GetAttribute(&quot;uniqueId&quot;)
&#9;&#9;if not uniqueId then
&#9;&#9;&#9;-- Fallback to Tree ID if uniqueId attribute is missing (shouldn&apos;t happen)
&#9;&#9;&#9;Log.warn(&quot;[ReadProcessor.onChange] Instance missing uniqueId attribute:&quot;, instance:GetFullName())
&#9;&#9;&#9;uniqueId = buffer.tostring(id)
&#9;&#9;end

&#9;&#9;Log.debug(&quot;[ReadProcessor] Using uniqueId:&quot;, uniqueId, &quot;for rename/move&quot;)

&#9;&#9;-- Create the appropriate snapshot type based on the operation
&#9;&#9;local snapshot
&#9;&#9;if property == &quot;Parent&quot; then
&#9;&#9;&#9;-- For move operations (parent change), use MoveSnapshot
&#9;&#9;&#9;snapshot = Snapshot.newMove(id):withName(instance.Name)
&#9;&#9;&#9;Log.debug(&quot;[ReadProcessor] Created MoveSnapshot for Parent change&quot;)
&#9;&#9;else
&#9;&#9;&#9;-- For rename operations and other updates, use UpdatedSnapshot
&#9;&#9;&#9;snapshot = Snapshot.newUpdated(uniqueId):withName(instance.Name)
&#9;&#9;&#9;Log.debug(&quot;[ReadProcessor] Created UpdatedSnapshot for property:&quot;, property)
&#9;&#9;end

&#9;&#9;-- Always include class so HttpSync treats this as script update
&#9;&#9;snapshot.class = instance.ClassName

&#9;&#9;-- Ensure uniqueId is set on the snapshot for downstream processing
&#9;&#9;snapshot.uniqueId = uniqueId

&#9;&#9;-- Re-calculate the relative file system path after the rename/move
&#9;&#9;local relativePath = getPathFromInstance(instance, self.tree)
&#9;&#9;if relativePath then
&#9;&#9;&#9;-- Include both `filePath` (legacy) and `path` (explicit) so downstream
&#9;&#9;&#9;-- HttpSync can forward the updated location to the backend.
&#9;&#9;&#9;snapshot.filePath = relativePath
&#9;&#9;&#9;snapshot.path = relativePath
&#9;&#9;end

&#9;&#9;-- For RENAMES, ensure parent information is preserved so item stays in correct location
&#9;&#9;if property == &quot;Name&quot; then
&#9;&#9;&#9;local parentInstance = instance.Parent
&#9;&#9;&#9;if parentInstance then
&#9;&#9;&#9;&#9;local parentUniqueId = parentInstance:GetAttribute(&quot;uniqueId&quot;)
&#9;&#9;&#9;&#9;if not parentUniqueId then
&#9;&#9;&#9;&#9;&#9;-- Try to use predictable service ID first
&#9;&#9;&#9;&#9;&#9;local serviceId = getServiceUniqueId(parentInstance.Name)
&#9;&#9;&#9;&#9;&#9;if serviceId then
&#9;&#9;&#9;&#9;&#9;&#9;parentUniqueId = serviceId
&#9;&#9;&#9;&#9;&#9;&#9;parentInstance:SetAttribute(&quot;uniqueId&quot;, serviceId)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;-- Fallback to random ID for non-service folders
&#9;&#9;&#9;&#9;&#9;&#9;local parentGuid = HttpService:GenerateGUID(false)
&#9;&#9;&#9;&#9;&#9;&#9;parentUniqueId = string.sub(parentGuid:gsub(&quot;-&quot;, &quot;&quot;), 1, 3)
&#9;&#9;&#9;&#9;&#9;&#9;parentInstance:SetAttribute(&quot;uniqueId&quot;, parentUniqueId)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;-- Set parent as buffer for SyncOps compatibility (it expects buffer format)
&#9;&#9;&#9;&#9;snapshot.parent = buffer.fromstring(parentUniqueId)
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;-- If this event is a *move* (Parent changed) also attach the new parent Ref.
&#9;&#9;if property == &quot;Parent&quot; then
&#9;&#9;&#9;local parentInstance = instance.Parent
&#9;&#9;&#9;local parentIdBuffer
&#9;&#9;&#9;if parentInstance then
&#9;&#9;&#9;&#9;-- Try to fetch from tree first
&#9;&#9;&#9;&#9;parentIdBuffer = self.tree:getId(parentInstance)
&#9;&#9;&#9;&#9;-- If the parent is missing from the tree (e.g. service folder was never referenced),
&#9;&#9;&#9;&#9;-- fall back to the parent&apos;s uniqueId attribute and register it on-the-fly so we never
&#9;&#9;&#9;&#9;-- send ROOT_REF_BUFFER (&quot;unset&quot;) for legit moves.
&#9;&#9;&#9;&#9;if not parentIdBuffer then
&#9;&#9;&#9;&#9;&#9;local parentUid = parentInstance:GetAttribute(&quot;uniqueId&quot;)
&#9;&#9;&#9;&#9;&#9;if not parentUid then
&#9;&#9;&#9;&#9;&#9;&#9;-- Try to use predictable service ID first
&#9;&#9;&#9;&#9;&#9;&#9;local serviceId = getServiceUniqueId(parentInstance.Name)
&#9;&#9;&#9;&#9;&#9;&#9;if serviceId then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;parentUid = serviceId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;parentInstance:SetAttribute(&quot;uniqueId&quot;, serviceId)
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Fallback to random ID for non-service folders
&#9;&#9;&#9;&#9;&#9;&#9;&#9;parentUid = string.sub(HttpService:GenerateGUID(false):gsub(&quot;-&quot;, &quot;&quot;), 1, 3)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;parentInstance:SetAttribute(&quot;uniqueId&quot;, parentUid)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;parentIdBuffer = buffer.fromstring(parentUid)
&#9;&#9;&#9;&#9;&#9;-- Register parent in tree to keep hierarchy consistent
&#9;&#9;&#9;&#9;&#9;self.tree:insertInstance(parentInstance, parentIdBuffer, {})
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if not parentIdBuffer then
&#9;&#9;&#9;&#9;parentIdBuffer = ROOT_REF_BUFFER
&#9;&#9;&#9;end

&#9;&#9;&#9;snapshot:withParent(parentIdBuffer)
&#9;&#9;&#9;-- Recompute relative path now that parent insertion is ensured
&#9;&#9;&#9;relativePath = getPathFromInstance(instance, self.tree)
&#9;&#9;&#9;if relativePath then
&#9;&#9;&#9;&#9;snapshot.filePath = relativePath
&#9;&#9;&#9;&#9;snapshot.path = relativePath
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;-- Flag this snapshot so downstream SyncOps can treat it as a rename move
&#9;&#9;snapshot.isRename = (property == &quot;Name&quot;)

&#9;&#9;Log.debug(&quot;[ReadProcessor] Created rename/move snapshot:&quot;)
&#9;&#9;Log.debug(&quot;  - uniqueId:&quot;, snapshot.uniqueId)
&#9;&#9;Log.debug(&quot;  - name:&quot;, snapshot.name)
&#9;&#9;Log.debug(&quot;  - path:&quot;, snapshot.path)
&#9;&#9;Log.debug(&quot;  - isRename:&quot;, snapshot.isRename)
&#9;&#9;Log.debug(&quot;  - class:&quot;, snapshot.class)

&#9;&#9;return snapshot
&#9;end

&#9;local snapshot = Snapshot.newUpdated(id)
&#9;-- Carry over the class so downstream SyncOps can correctly detect script updates
&#9;-- (Without this, updates with only property changes such as Source edits are
&#9;-- silently filtered out because `item.class` is nil.)
&#9;snapshot.class = instance.ClassName

&#9;if property == &quot;Source&quot; or getClassName(instance) == property then
&#9;&#9;if instance:IsA(&quot;LuaSourceContainer&quot;) then
&#9;&#9;&#9;snapshot = snapshot:withProperties({
&#9;&#9;&#9;&#9;[property] = {
&#9;&#9;&#9;&#9;&#9;String = instance.Source,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;})
&#9;&#9;end
&#9;end

&#9;-- Always include the persistent uniqueId so the backend can resolve the node
&#9;local uidAttrForUpdate = instance:GetAttribute(&quot;uniqueId&quot;)
&#9;if uidAttrForUpdate and typeof(uidAttrForUpdate) == &quot;string&quot; then
&#9;&#9;snapshot.uniqueId = uidAttrForUpdate
&#9;end

&#9;-- For Parts, re-serialize as JSON for any property change (not just Source/class name)
&#9;if instance:IsA(&quot;Part&quot;) then
&#9;&#9;-- Re-serialize Part as JSON when any property changes
&#9;&#9;local partData = {
&#9;&#9;&#9;-- Appearance
&#9;&#9;&#9;BrickColor = instance.BrickColor.Name,
&#9;&#9;&#9;CastShadow = instance.CastShadow,
&#9;&#9;&#9;Color = { instance.Color.R * 255, instance.Color.G * 255, instance.Color.B * 255 },
&#9;&#9;&#9;Material = instance.Material.Name,
&#9;&#9;&#9;MaterialVariant = instance.MaterialVariant,
&#9;&#9;&#9;Reflectance = instance.Reflectance,
&#9;&#9;&#9;Transparency = instance.Transparency,

&#9;&#9;&#9;-- Data
&#9;&#9;&#9;Archivable = instance.Archivable,
&#9;&#9;&#9;Locked = instance.Locked,
&#9;&#9;&#9;Name = instance.Name,

&#9;&#9;&#9;-- Transform - Size only (CFrame handles position/rotation)
&#9;&#9;&#9;Size = { instance.Size.X, instance.Size.Y, instance.Size.Z },

&#9;&#9;&#9;-- CFrame (primary transform)
&#9;&#9;&#9;CFrame = {
&#9;&#9;&#9;&#9;Position = { instance.CFrame.Position.X, instance.CFrame.Position.Y, instance.CFrame.Position.Z },
&#9;&#9;&#9;&#9;Orientation = { instance.Orientation.X, instance.Orientation.Y, instance.Orientation.Z },
&#9;&#9;&#9;},

&#9;&#9;&#9;-- Origin (pivot point) - same as CFrame for Parts
&#9;&#9;&#9;Origin = {
&#9;&#9;&#9;&#9;Position = { instance.CFrame.Position.X, instance.CFrame.Position.Y, instance.CFrame.Position.Z },
&#9;&#9;&#9;&#9;Orientation = { instance.Orientation.X, instance.Orientation.Y, instance.Orientation.Z },
&#9;&#9;&#9;},

&#9;&#9;&#9;-- Behavior
&#9;&#9;&#9;EnableFluidForces = instance.EnableFluidForces,

&#9;&#9;&#9;-- Collision
&#9;&#9;&#9;CanCollide = instance.CanCollide,
&#9;&#9;&#9;CanTouch = instance.CanTouch,
&#9;&#9;&#9;CollisionGroup = instance.CollisionGroup,

&#9;&#9;&#9;-- Part-specific
&#9;&#9;&#9;Anchored = instance.Anchored,
&#9;&#9;&#9;CustomPhysicalProperties = instance.CustomPhysicalProperties ~= nil,
&#9;&#9;&#9;Massless = instance.Massless,
&#9;&#9;&#9;RootPriority = instance.RootPriority,
&#9;&#9;&#9;Shape = instance.Shape.Name,

&#9;&#9;&#9;-- Assembly properties
&#9;&#9;&#9;Assembly = {
&#9;&#9;&#9;&#9;AssemblyLinearVelocity = {
&#9;&#9;&#9;&#9;&#9;instance.AssemblyLinearVelocity.X,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyLinearVelocity.Y,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyLinearVelocity.Z,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;AssemblyAngularVelocity = {
&#9;&#9;&#9;&#9;&#9;instance.AssemblyAngularVelocity.X,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyAngularVelocity.Y,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyAngularVelocity.Z,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;AssemblyCenterOfMass = {
&#9;&#9;&#9;&#9;&#9;instance.AssemblyCenterOfMass.X,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyCenterOfMass.Y,
&#9;&#9;&#9;&#9;&#9;instance.AssemblyCenterOfMass.Z,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;AssemblyMass = instance.AssemblyMass,
&#9;&#9;&#9;},

&#9;&#9;&#9;-- Tags
&#9;&#9;&#9;Tags = instance:GetTags(),

&#9;&#9;&#9;-- Attributes
&#9;&#9;&#9;Attributes = instance:GetAttributes(),
&#9;&#9;}

&#9;&#9;-- Serialize to JSON string
&#9;&#9;local jsonString = HttpService:JSONEncode(partData)
&#9;&#9;local sourcePropertyName = getClassName(instance)

&#9;&#9;snapshot = snapshot:withProperties({
&#9;&#9;&#9;[sourcePropertyName] = {
&#9;&#9;&#9;&#9;String = jsonString,
&#9;&#9;&#9;},
&#9;&#9;})
&#9;elseif property ~= &quot;Source&quot; and getClassName(instance) ~= property then
&#9;&#9;-- Handle attributes for non-Part instances
&#9;&#9;local value = instance:GetAttribute(property)

&#9;&#9;if value ~= nil then
&#9;&#9;&#9;snapshot = snapshot:withProperties({
&#9;&#9;&#9;&#9;[property] = {
&#9;&#9;&#9;&#9;&#9;String = tostring(value),
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;})
&#9;&#9;end
&#9;end

&#9;-- Always include the file name to assist sync UI in displaying last synced file
&#9;snapshot = snapshot:withName(instance.Name)

&#9;return snapshot
end

function ReadProcessor:onRemove(instance: Instance): Types.Ref?
&#9;Log.trace(&quot;Detected removal of&quot;, instance)

&#9;local id = self.tree:getId(instance)

&#9;if not id then
&#9;&#9;-- Check if the instance has a uniqueId attribute - it might be a valid instance
&#9;&#9;-- that wasn&apos;t in the Tree due to reconnection or other Tree population issues
&#9;&#9;local uniqueId = instance:GetAttribute(&quot;uniqueId&quot;)
&#9;&#9;if uniqueId and typeof(uniqueId) == &quot;string&quot; and #uniqueId == 3 then
&#9;&#9;&#9;-- Convert to buffer and register in Tree
&#9;&#9;&#9;id = buffer.fromstring(uniqueId)
&#9;&#9;&#9;self.tree:insertInstance(instance, id, {})
&#9;&#9;&#9;Log.info(&quot;Recovered unknown instance during removal:&quot;, instance:GetFullName(), &quot;with uniqueId:&quot;, uniqueId)
&#9;&#9;else
&#9;&#9;&#9;Log.trace(&quot;Unknown instance without valid uniqueId. Skipping..&quot;)
&#9;&#9;&#9;return nil
&#9;&#9;end
&#9;end

&#9;-- Get the 3-character uniqueId from the instance attribute for consistent removal processing
&#9;local uniqueId = instance:GetAttribute(&quot;uniqueId&quot;)
&#9;if not uniqueId then
&#9;&#9;Log.warn(&quot;[ReadProcessor.onRemove] Instance missing uniqueId attribute:&quot;, instance:GetFullName())
&#9;&#9;-- Fallback to buffer conversion if uniqueId is missing
&#9;&#9;uniqueId = buffer.tostring(id)
&#9;end

&#9;-- Remove from tree since we&apos;re not using move detection
&#9;self.tree:removeById(id)

&#9;-- Return the 3-character uniqueId string instead of the Tree&apos;s buffer ID
&#9;return uniqueId
end

function ReadProcessor.shouldSyncProperties(instance: Instance, property: string?): boolean
&#9;-- 1. Always allow hierarchy-affecting changes so the JSONL stays correct.
&#9;if property == &quot;Parent&quot; or property == &quot;Name&quot; then
&#9;&#9;return true
&#9;end

&#9;-- 2. Scripts (and other LuaSourceContainers) always sync their properties/content.
&#9;if isScriptRelated(instance) or instance:IsA(&quot;LuaSourceContainer&quot;) then
&#9;&#9;return true
&#9;end

&#9;-- 3. Filter noisy, read-only GUI layout properties universally.
&#9;if property then
&#9;&#9;local readOnlyGuiProperties = {
&#9;&#9;&#9;&quot;AbsolutePosition&quot;,
&#9;&#9;&#9;&quot;AbsoluteSize&quot;,
&#9;&#9;&#9;&quot;AbsoluteCanvasSize&quot;,
&#9;&#9;&#9;&quot;AbsoluteWindowSize&quot;,
&#9;&#9;}
&#9;&#9;for _, readOnlyProp in ipairs(readOnlyGuiProperties) do
&#9;&#9;&#9;if property == readOnlyProp then
&#9;&#9;&#9;&#9;return false
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;-- 4. For Parts we sync all properties (they carry visual state).
&#9;if instance:IsA(&quot;Part&quot;) then
&#9;&#9;return true
&#9;end

&#9;-- 5. For other instance classes, only sync attributes that diverge from default values.
&#9;if property and not Dom.getDefaultProperties(instance.ClassName)[property] then
&#9;&#9;return false
&#9;end

&#9;return Config:get(&quot;SyncbackProperties&quot;)
end

-- Build a structure-only BFS snapshot suitable for bulk import (no heavy properties/content)
function ReadProcessor:buildSubtreeSnapshotBfs(
&#9;root: Instance
): { nodesByLevel: { [number]: { [number]: any } }, flat: { [number]: any } }
&#9;local nodesByLevel = {}
&#9;local flat = {}

&#9;local queue = { root }
&#9;local level = 1
&#9;local visited = {}

&#9;while #queue &gt; 0 do
&#9;&#9;local nextLevel = {}
&#9;&#9;nodesByLevel[level] = {}

&#9;&#9;for _, inst in ipairs(queue) do
&#9;&#9;&#9;if not visited[inst] then
&#9;&#9;&#9;&#9;visited[inst] = true
&#9;&#9;&#9;&#9;local path = getPathFromInstance(inst, self.tree)
&#9;&#9;&#9;&#9;if path then
&#9;&#9;&#9;&#9;&#9;local parentPath
&#9;&#9;&#9;&#9;&#9;local slash = string.find(path, &quot;/[^/]*$&quot;)
&#9;&#9;&#9;&#9;&#9;if slash then
&#9;&#9;&#9;&#9;&#9;&#9;parentPath = string.sub(path, 1, slash - 1)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;local uid = inst:GetAttribute(&quot;uniqueId&quot;)
&#9;&#9;&#9;&#9;&#9;if not uid then
&#9;&#9;&#9;&#9;&#9;&#9;local guid = HttpService:GenerateGUID(false)
&#9;&#9;&#9;&#9;&#9;&#9;uid = string.sub(guid:gsub(&quot;-&quot;, &quot;&quot;), 1, 3)
&#9;&#9;&#9;&#9;&#9;&#9;inst:SetAttribute(&quot;uniqueId&quot;, uid)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;-- Get parent&apos;s uniqueId for proper hierarchy
&#9;&#9;&#9;&#9;&#9;local parentUniqueId = nil
&#9;&#9;&#9;&#9;&#9;if inst.Parent and inst.Parent ~= game then
&#9;&#9;&#9;&#9;&#9;&#9;parentUniqueId = inst.Parent:GetAttribute(&quot;uniqueId&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;if not parentUniqueId then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Try to use predictable service ID first
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local serviceId = getServiceUniqueId(inst.Parent.Name)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if serviceId then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;parentUniqueId = serviceId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;inst.Parent:SetAttribute(&quot;uniqueId&quot;, serviceId)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Fallback to random ID for non-service folders
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local parentGuid = HttpService:GenerateGUID(false)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;parentUniqueId = string.sub(parentGuid:gsub(&quot;-&quot;, &quot;&quot;), 1, 3)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;inst.Parent:SetAttribute(&quot;uniqueId&quot;, parentUniqueId)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;-- Extract script content for bulk import
&#9;&#9;&#9;&#9;&#9;local content = nil
&#9;&#9;&#9;&#9;&#9;if inst:IsA(&quot;LuaSourceContainer&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;content = inst.Source
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;local node = {
&#9;&#9;&#9;&#9;&#9;&#9;name = inst.Name,
&#9;&#9;&#9;&#9;&#9;&#9;class = inst.ClassName,
&#9;&#9;&#9;&#9;&#9;&#9;path = path,
&#9;&#9;&#9;&#9;&#9;&#9;parentPath = parentPath,
&#9;&#9;&#9;&#9;&#9;&#9;uniqueId = uid,
&#9;&#9;&#9;&#9;&#9;&#9;parentId = parentUniqueId, -- CRITICAL: Include parentId for hierarchy
&#9;&#9;&#9;&#9;&#9;&#9;content = content, -- Include script content for bulk import
&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;table.insert(nodesByLevel[level], node)
&#9;&#9;&#9;&#9;&#9;table.insert(flat, node)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;for _, child in ipairs(inst:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;table.insert(nextLevel, child)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;queue = nextLevel
&#9;&#9;level += 1
&#9;end

&#9;return { nodesByLevel = nodesByLevel, flat = flat }
end

return ReadProcessor
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001012</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX4F6923ABF6D64532AE2297C4201A981E">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000afd</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Snapshot</string>
					<string name="ScriptGuid">{54f4e258-423d-4971-b6c5-5bafb7e71702}</string>
					<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Types = require(Lemonade.Types)

local Meta = require(script.Parent.Meta)

-- Temporary solution for empty Luau maps being serialized as arrays
local function validateProperties(properties: Types.Properties): Types.Properties
&#9;if not next(properties) then
&#9;&#9;properties.LemonadeEmpty = {
&#9;&#9;&#9;Bool = true,
&#9;&#9;}
&#9;end

&#9;return properties
end

local Snapshot = {}
Snapshot.__index = Snapshot

local UpdatedSnapshot = {}
UpdatedSnapshot.__index = UpdatedSnapshot

function Snapshot.new(id: Types.Ref)
&#9;local self = setmetatable({}, Snapshot)

&#9;self.id = id
&#9;self.meta = Meta.new()
&#9;self.parent = nil
&#9;self.name = &quot;&quot;
&#9;self.class = &quot;&quot;
&#9;self.properties = validateProperties({})
&#9;self.children = {}

&#9;return self
end

function Snapshot.newUpdated(id: Types.Ref): Types.UpdatedSnapshot
&#9;return setmetatable({
&#9;&#9;id = id,
&#9;&#9;meta = {},
&#9;}, UpdatedSnapshot)
end

function Snapshot.newMove(id: Types.Ref)
&#9;local self = setmetatable({}, Snapshot)

&#9;self.id = id
&#9;self.name = nil
&#9;self.class = nil

&#9;return self
end

function Snapshot:withMeta(meta: Types.Meta)
&#9;self.meta = meta
&#9;return self
end

function Snapshot:withParent(parent: Types.Ref)
&#9;self.parent = parent
&#9;return self
end

function Snapshot:withName(name: string)
&#9;self.name = name
&#9;return self
end

function Snapshot:withClass(class: string)
&#9;self.class = class
&#9;return self
end

function Snapshot:withProperties(properties: Types.Properties)
&#9;self.properties = validateProperties(properties)
&#9;return self
end

function Snapshot:withChildren(children: { Types.Snapshot })
&#9;self.children = children
&#9;return self
end

function Snapshot:withTimestamp(timestamp: number)
&#9;self.timestamp = timestamp
&#9;return self
end

-- UpdatedSnapshot methods
function UpdatedSnapshot:withName(name: string): Types.UpdatedSnapshot
&#9;self.name = name
&#9;return self
end

function UpdatedSnapshot:withProperties(properties: Types.Properties): Types.UpdatedSnapshot
&#9;self.properties = properties
&#9;return self
end

function UpdatedSnapshot:withParent(parentId: Types.Ref): Types.UpdatedSnapshot
&#9;self.parent = parentId
&#9;return self
end

return Snapshot
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001013</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX6F02F9FEA49C43D5A2455FF96A6E3D6F">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000afe</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">SyncCoordinator</string>
					<string name="ScriptGuid">{4a6c95c1-92cc-4737-9a80-daae5e5a0a68}</string>
					<string name="Source">--!strict

--[[
&#9;SyncCoordinator.luau
&#9;
&#9;Handles watcher aggregation loop, debounce &amp; batching, server push/poll plumbing.
&#9;This module encapsulates all logic related to coordinating synchronization between
&#9;Studio changes and the backend server.
&#9;
&#9;Primary responsibilities:
&#9;- Coordinate bidirectional sync between Studio and server
&#9;- Aggregate and debounce watcher events
&#9;- Manage sync timing and batching logic
&#9;- Handle server polling for incoming changes
&#9;- Process ID mappings from server responses
&#9;- Prevent echo effects and duplicate changes
]]

local RunService = game:GetService(&quot;RunService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Log = require(Lemonade.Log)
local LogConfig = require(Lemonade.LogConfig)
local Changes = require(script.Parent.Changes)
local HttpSync = require(Lemonade.Net.HttpSync)
local Poll = require(Lemonade.Scheduler.Poll)
local Promise = require(Lemonade.Packages.Promise)

-- Constants for sync timing
local SYNCBACK_RATE = 0.5
local SYNCBACK_DEBOUNCE = 1.0 -- Extended to 1 second for better web-to-studio echo prevention
local USER_TYPING_DEBOUNCE = 1.5 -- Optimal balance: capture complete editing sessions while maintaining responsive sync
-- Additional back-pressure for bulk operations.  For every pending change we
-- add BULK_DEBOUNCE_PER_CHANGE seconds to the debounce window, capped at
-- BULK_DEBOUNCE_MAX extra seconds.  This means inserting 500 instances will
-- at most delay the push by USER_TYPING_DEBOUNCE + BULK_DEBOUNCE_MAX.
local BULK_DEBOUNCE_PER_CHANGE = 0.03 -- 50 changes &#226;&#134;&#146; +1s, 250 &#226;&#134;&#146; +5s
local BULK_DEBOUNCE_MAX = 6 -- seconds

local SyncCoordinator = {}
SyncCoordinator.__index = SyncCoordinator

function SyncCoordinator.new(tree, instanceManager, watcher, processor, plugin, actualProjectContextRefresher)
&#9;local self = setmetatable({}, SyncCoordinator)

&#9;self.tree = tree
&#9;self.instanceManager = instanceManager
&#9;self.watcher = watcher
&#9;self.processor = processor
&#9;self.plugin = plugin
&#9;self.actualProjectContextRefresher = actualProjectContextRefresher
&#9;self.core = nil -- will be set by Core after construction

&#9;-- Sync timing state
&#9;self.lastSync = os.clock()
&#9;self.lastLocalChangeTime = os.clock()

&#9;-- Status tracking (will be set by Core)
&#9;self.status = nil -- Will be set from Core.Status
&#9;self.StatusEnum = nil -- Will be set from Core.Status

&#9;-- Callback for UI updates
&#9;self.__sync = nil -- Will be set by Core

&#9;return self
end

-- Set status reference from Core
function SyncCoordinator:setStatus(status, statusEnum)
&#9;self.status = status
&#9;self.StatusEnum = statusEnum
end

-- Set sync callback from Core
function SyncCoordinator:setSyncCallback(syncCallback)
&#9;self.__sync = syncCallback
end

-- Method to update lastSync timestamp
function SyncCoordinator:recordServerSyncApplied()
&#9;self.lastSync = os.clock()
&#9;Log.trace(&quot;[SyncCoordinator] Recorded server sync applied. lastSync is now:&quot;, self.lastSync)
end

-- Start the sync coordination (this replaces __startSyncbackLoop)
function SyncCoordinator:start()
&#9;local aggregateChanges = Changes.new(&quot;SyncCoordinator-aggregateChanges-init&quot;)
&#9;self.lastLocalChangeTime = os.clock() -- Reset when loop starts
&#9;-- Phase 2: Per-Instance Change Hashing to detect duplicates
&#9;local changeHashCache = {} -- Hash -&gt; timestamp mapping

&#9;-- --------------------------------------------------------------------
&#9;-- Subtree move suppression &amp; fast-path move flushing
&#9;-- --------------------------------------------------------------------
&#9;-- When a parent instance is reparented (moved), Roblox will fire a burst
&#9;-- of ChildRemoved/ChildAdded/Parent changes for every descendant. We only
&#9;-- need to push a single move for the root; children follow naturally.
&#9;--
&#9;-- movingSubtrees keeps a small set of roots that are currently being
&#9;-- moved. Any events for their descendants are suppressed for a short TTL,
&#9;-- and we also schedule a fast flush for the pending move batch.
&#9;local movingSubtrees = {}
&#9;local MOVING_TTL = 1.0 -- seconds to suppress descendant noise
&#9;local FAST_MOVE_IDLE = 0.1 -- idle time before fast-flushing a move batch
&#9;local pendingMoveDetectedAt = nil

&#9;-- --------------------------------------------------------------------
&#9;-- Simple Addition Batching (Surgical)
&#9;-- --------------------------------------------------------------------
&#9;local additionBatches = {} -- parentFullName -&gt; {children = {}, flushTask = thread}
&#9;local ADDITION_BATCH_WINDOW = 0.2 -- 200ms window for Parts/Models only

&#9;local function flushAdditionBatch(parentKey)
&#9;&#9;local batch = additionBatches[parentKey]
&#9;&#9;if not batch then
&#9;&#9;&#9;return
&#9;&#9;end

&#9;&#9;Log.info(&quot;[SyncCoordinator BATCH] Flushing&quot;, #batch.children, &quot;additions for:&quot;, parentKey)

&#9;&#9;for _, childEvent in ipairs(batch.children) do
&#9;&#9;&#9;-- Check for existing instance first (move detection in batch)
&#9;&#9;&#9;local existingId = self.tree:getId(childEvent.instance)
&#9;&#9;&#9;local snapshot = nil

&#9;&#9;&#9;if existingId then
&#9;&#9;&#9;&#9;-- This is a move operation - use onChange with &quot;Parent&quot;
&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator BATCH] Move detected in batch for:&quot;, childEvent.instance:GetFullName())
&#9;&#9;&#9;&#9;Log.debug(&quot;  - existingId:&quot;, buffer.tostring(existingId))
&#9;&#9;&#9;&#9;snapshot = self.processor.read:onChange(childEvent.instance, &quot;Parent&quot;)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;-- This is a genuine addition
&#9;&#9;&#9;&#9;snapshot = self.processor.read:onAdd(childEvent.instance)
&#9;&#9;&#9;end

&#9;&#9;&#9;if snapshot then
&#9;&#9;&#9;&#9;-- Handle different snapshot types and register in tree if needed
&#9;&#9;&#9;&#9;if existingId then
&#9;&#9;&#9;&#9;&#9;-- This is a move - route to correct collection
&#9;&#9;&#9;&#9;&#9;local processedChangeFromEvent =
&#9;&#9;&#9;&#9;&#9;&#9;Changes.new(&quot;SyncCoordinator-batchedMove-&quot; .. tostring(childEvent.instance:GetFullName()))

&#9;&#9;&#9;&#9;&#9;-- Route based on snapshot type (same logic as main path)
&#9;&#9;&#9;&#9;&#9;local Snapshot = require(script.Parent.Parent.Core.Snapshot)
&#9;&#9;&#9;&#9;&#9;if getmetatable(snapshot) == Snapshot then
&#9;&#9;&#9;&#9;&#9;&#9;-- MoveSnapshot - route to moves collection
&#9;&#9;&#9;&#9;&#9;&#9;processedChangeFromEvent:move(snapshot)
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator BATCH] Added MoveSnapshot to moves collection&quot;)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;-- UpdatedSnapshot - route to updates collection
&#9;&#9;&#9;&#9;&#9;&#9;processedChangeFromEvent:update(snapshot)
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator BATCH] Added UpdatedSnapshot to updates collection&quot;)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;-- Join into aggregate changes
&#9;&#9;&#9;&#9;&#9;aggregateChanges:join(processedChangeFromEvent)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;-- This is a genuine addition - register in tree and add to additions
&#9;&#9;&#9;&#9;&#9;if snapshot.id and snapshot.parent then
&#9;&#9;&#9;&#9;&#9;&#9;-- Convert the clientTemporaryIdString (snapshot.id which is now raw string) to a buffer for Tree:insertInstance
&#9;&#9;&#9;&#9;&#9;&#9;local bufferConversionSuccess, clientTempIdBuffer = pcall(buffer.fromstring, snapshot.id)

&#9;&#9;&#9;&#9;&#9;&#9;if bufferConversionSuccess and clientTempIdBuffer then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;self.tree:insertInstance(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;childEvent.instance,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;clientTempIdBuffer, -- Client temporary ID (buffer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;snapshot.meta -- Meta data from the snapshot
&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;local processedChangeFromEvent =
&#9;&#9;&#9;&#9;&#9;&#9;Changes.new(&quot;SyncCoordinator-batchedAddition-&quot; .. tostring(childEvent.instance:GetFullName()))
&#9;&#9;&#9;&#9;&#9;processedChangeFromEvent:add(snapshot)

&#9;&#9;&#9;&#9;&#9;-- Join into aggregate changes
&#9;&#9;&#9;&#9;&#9;aggregateChanges:join(processedChangeFromEvent)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;additionBatches[parentKey] = nil
&#9;end

&#9;local function isSafeToBatch(instance)
&#9;&#9;local className = instance.ClassName
&#9;&#9;return className == &quot;Part&quot;
&#9;&#9;&#9;or className == &quot;WedgePart&quot;
&#9;&#9;&#9;or className == &quot;CornerWedgePart&quot;
&#9;&#9;&#9;or className == &quot;Model&quot;
&#9;&#9;&#9;or className == &quot;Folder&quot;
&#9;&#9;&#9;or className == &quot;MeshPart&quot;
&#9;&#9;&#9;or className == &quot;Motor6D&quot;
&#9;&#9;&#9;or className == &quot;Weld&quot;
&#9;&#9;&#9;or className == &quot;WeldConstraint&quot;
&#9;&#9;&#9;or className == &quot;Attachment&quot;
&#9;&#9;&#9;or className == &quot;SpecialMesh&quot;
&#9;&#9;&#9;or className == &quot;Decal&quot;
&#9;&#9;&#9;or className == &quot;Texture&quot;
&#9;&#9;&#9;or className == &quot;SurfaceGui&quot;
&#9;end

&#9;local function tryBatchAddition(event)
&#9;&#9;if not isSafeToBatch(event.instance) then
&#9;&#9;&#9;return false -- Don&apos;t batch, process immediately
&#9;&#9;end

&#9;&#9;local parent = event.instance.Parent
&#9;&#9;if not parent then
&#9;&#9;&#9;return false
&#9;&#9;end

&#9;&#9;local parentKey = parent:GetFullName()

&#9;&#9;if not additionBatches[parentKey] then
&#9;&#9;&#9;additionBatches[parentKey] = {
&#9;&#9;&#9;&#9;children = {},
&#9;&#9;&#9;&#9;flushTask = nil,
&#9;&#9;&#9;}
&#9;&#9;end

&#9;&#9;local batch = additionBatches[parentKey]
&#9;&#9;table.insert(batch.children, event)

&#9;&#9;-- Cancel and reschedule flush
&#9;&#9;if batch.flushTask then
&#9;&#9;&#9;task.cancel(batch.flushTask)
&#9;&#9;end

&#9;&#9;batch.flushTask = task.spawn(function()
&#9;&#9;&#9;task.wait(ADDITION_BATCH_WINDOW)
&#9;&#9;&#9;flushAdditionBatch(parentKey)
&#9;&#9;end)

&#9;&#9;return true -- Successfully batched
&#9;end

&#9;local function pruneExpiredMoveRoots()
&#9;&#9;local now = os.clock()
&#9;&#9;for root, openedAt in pairs(movingSubtrees) do
&#9;&#9;&#9;if (now - openedAt) &gt; MOVING_TTL then
&#9;&#9;&#9;&#9;movingSubtrees[root] = nil
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;local function beginMoveGroup(root)
&#9;&#9;movingSubtrees[root] = os.clock()
&#9;&#9;pendingMoveDetectedAt = os.clock()
&#9;end

&#9;local function clearMoveGroups()
&#9;&#9;for k in pairs(movingSubtrees) do
&#9;&#9;&#9;movingSubtrees[k] = nil
&#9;&#9;end
&#9;&#9;pendingMoveDetectedAt = nil
&#9;end

&#9;local function isSuppressedByMoveGroup(inst)
&#9;&#9;for root in pairs(movingSubtrees) do
&#9;&#9;&#9;if inst ~= root and inst:IsDescendantOf(root) then
&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;return false
&#9;end

&#9;-----------------------------------------------------------------------
&#9;-- Bulk operation detection &amp; log-suppression -------------------------
&#9;-----------------------------------------------------------------------
&#9;-- Treat &gt;BULK_THRESHOLD watcher events inside BULK_WINDOW seconds as a
&#9;-- bulk import (e.g. when a large model is dropped).  While in bulk mode
&#9;-- we mute verbose print-based debugging to keep Studio&#226;&#128;&#153;s Output usable.
&#9;local BULK_THRESHOLD = 5
&#9;local BULK_WINDOW = 0.5 -- seconds

&#9;local eventCount = 0
&#9;local windowStart = os.clock()

&#9;-- Track removal names for UI display
&#9;local removalNames = {} -- Map from buffer ID to instance name

&#9;-- Start polling for server changes
&#9;Poll.start(self.plugin, self.tree, HttpSync, self, self.actualProjectContextRefresher)
&#9;Log.debug(&quot;[SyncCoordinator LOOP] Poll started; starting pusher and watcher loops&quot;)

&#9;-- This promise is just to keep the loop running and allow it to be caught by run()
&#9;return Promise.new(function(resolve) -- Removed unused reject parameter
&#9;&#9;Log.info(&quot;[SyncCoordinator DEBUG] start: Promise created. Spawning task for aggregate changes.&quot;)
&#9;&#9;task.spawn(function() -- Pusher Task
&#9;&#9;&#9;Log.info(&quot;[SyncCoordinator DEBUG] start: Aggregate changes task SPAWNED.&quot;)
&#9;&#9;&#9;while self.status == self.StatusEnum.Connected do
&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator LOOP] Pusher tick; pending A/U/R/M:&quot;,
&#9;&#9;&#9;&#9;&#9;#aggregateChanges.additions,
&#9;&#9;&#9;&#9;&#9;#aggregateChanges.updates,
&#9;&#9;&#9;&#9;&#9;#aggregateChanges.removals,
&#9;&#9;&#9;&#9;&#9;#aggregateChanges.moves
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;task.wait(SYNCBACK_RATE)

&#9;&#9;&#9;&#9;if aggregateChanges:isEmpty() then
&#9;&#9;&#9;&#9;&#9;-- Log.info(&quot;[SyncCoordinator DEBUG] start: Aggregate task - aggregateChanges IS empty, continuing.&quot;)
&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- Check for user typing debounce with fast-path for MOVE batches
&#9;&#9;&#9;&#9;local now = os.clock()
&#9;&#9;&#9;&#9;local timeSinceLast = now - self.lastLocalChangeTime
&#9;&#9;&#9;&#9;local shouldFastFlushMove = false
&#9;&#9;&#9;&#9;if pendingMoveDetectedAt ~= nil then
&#9;&#9;&#9;&#9;&#9;local idleSinceMove = now - pendingMoveDetectedAt :: number
&#9;&#9;&#9;&#9;&#9;if idleSinceMove &gt;= FAST_MOVE_IDLE then
&#9;&#9;&#9;&#9;&#9;&#9;shouldFastFlushMove = true
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if not shouldFastFlushMove and timeSinceLast &lt; USER_TYPING_DEBOUNCE then
&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] Pusher: Debounce active (no fast move). elapsed=&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;timeSinceLast,
&#9;&#9;&#9;&#9;&#9;&#9;&quot; required=&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;USER_TYPING_DEBOUNCE
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- Dynamic back-pressure for very large change batches.  If we
&#9;&#9;&#9;&#9;-- still have changes after the basic debounce, extend the
&#9;&#9;&#9;&#9;-- waiting period proportionally to the pending change count.
&#9;&#9;&#9;&#9;local pendingCount = aggregateChanges:total()
&#9;&#9;&#9;&#9;local extraDebounce = 0
&#9;&#9;&#9;&#9;if not shouldFastFlushMove then
&#9;&#9;&#9;&#9;&#9;extraDebounce = math.min(pendingCount * BULK_DEBOUNCE_PER_CHANGE, BULK_DEBOUNCE_MAX)
&#9;&#9;&#9;&#9;&#9;local timeSinceLastChange = now - self.lastLocalChangeTime
&#9;&#9;&#9;&#9;&#9;if timeSinceLastChange &lt; (USER_TYPING_DEBOUNCE + extraDebounce) then
&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] Pusher: Bulk debounce active. pending=&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;pendingCount,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot; elapsed=&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;timeSinceLastChange,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot; required=&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;USER_TYPING_DEBOUNCE + extraDebounce
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if
&#9;&#9;&#9;&#9;&#9;not aggregateChanges:isEmpty()
&#9;&#9;&#9;&#9;&#9;and (shouldFastFlushMove or (now - self.lastLocalChangeTime) &gt;= USER_TYPING_DEBOUNCE)
&#9;&#9;&#9;&#9;then
&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] start: Aggregate task - aggregateChanges NOT empty &amp; typing debounce passed. Preparing to push.&quot;
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator AGGREGATE] About to push changes! aggregateChanges:isEmpty():&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;aggregateChanges:isEmpty()
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator AGGREGATE] Changes to push:&quot;, aggregateChanges)
&#9;&#9;&#9;&#9;&#9;local changesToPush = aggregateChanges
&#9;&#9;&#9;&#9;&#9;aggregateChanges = Changes.new(&quot;SyncCoordinator-aggregateChanges-reset&quot;)
&#9;&#9;&#9;&#9;&#9;-- Clear move suppression once we flush a batch containing the root move
&#9;&#9;&#9;&#9;&#9;clearMoveGroups()

&#9;&#9;&#9;&#9;&#9;-- DEBUG: Check what we&apos;re about to push
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator DEBUG] About to push changesToPush:&quot;)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;  - additions:&quot;, #changesToPush.additions)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;  - updates:&quot;, #changesToPush.updates)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;  - removals:&quot;, #changesToPush.removals)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;  - moves:&quot;, #changesToPush.moves)

&#9;&#9;&#9;&#9;&#9;-- Replaced self.client:write with HttpSync.pushSync
&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[SyncCoordinator DEBUG] start: Aggregate task - CALLING HttpSync.pushSync.&quot;)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator AGGREGATE] Calling HttpSync.pushSync&quot;)
&#9;&#9;&#9;&#9;&#9;local success, response = pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;return HttpSync.pushSync(changesToPush)
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;if not success then
&#9;&#9;&#9;&#9;&#9;&#9;Log.error(&quot;[SyncCoordinator] Failed to push changes to server:&quot;, response)
&#9;&#9;&#9;&#9;&#9;&#9;-- Continue running - next iteration will retry
&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator AGGREGATE] HttpSync.pushSync call completed&quot;)

&#9;&#9;&#9;&#9;&#9;-- Handle ID mapping updates from server response
&#9;&#9;&#9;&#9;&#9;if response and type(response) == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;-- Helper function to convert strings/buffers to Ref buffers
&#9;&#9;&#9;&#9;&#9;&#9;local function toRefBuffer(value)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if typeof(value) == &quot;buffer&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return value
&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif typeof(value) == &quot;string&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return buffer.fromstring(value)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[SyncCoordinator] Invalid ref type:&quot;, typeof(value))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return nil
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;-- Process ID mappings
&#9;&#9;&#9;&#9;&#9;&#9;if response.idMappings then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator AGGREGATE] Processing ID mappings from server response&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for _, mapping in response.idMappings do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local clientIdBuffer = toRefBuffer(mapping.clientChangeId)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local serverIdBuffer = toRefBuffer(mapping.serverId)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if clientIdBuffer and serverIdBuffer then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local instance = self.tree:getInstance(clientIdBuffer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if instance then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator AGGREGATE] Updating tree ID mapping for instance:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;instance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;self.tree:changeInstanceId(instance, clientIdBuffer, serverIdBuffer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator AGGREGATE] WARNING: Could not find instance for client ID:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;mapping.clientChangeId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;-- Process individual results
&#9;&#9;&#9;&#9;&#9;&#9;if response.results then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator AGGREGATE] Processing individual results from server response&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for _, result in response.results do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if result.clientChangeId and result.serverId then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local clientIdBuffer = toRefBuffer(result.clientChangeId)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local serverIdBuffer = toRefBuffer(result.serverId)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if clientIdBuffer and serverIdBuffer then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local instance = self.tree:getInstance(clientIdBuffer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if instance then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator AGGREGATE] Updating tree ID mapping for instance:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;instance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;self.tree:changeInstanceId(instance, clientIdBuffer, serverIdBuffer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator AGGREGATE] WARNING: Could not find instance for client ID:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;result.clientChangeId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;-- Add filename info for removals so UI can display them
&#9;&#9;&#9;&#9;&#9;if #changesToPush.removals &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;changesToPush.removalInfos = changesToPush.removalInfos or {}
&#9;&#9;&#9;&#9;&#9;&#9;for _, removalId in ipairs(changesToPush.removals) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Use captured name from removalNames table
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Handle both buffer (legacy) and string (new uniqueId) formats
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local idStr
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if typeof(removalId) == &quot;buffer&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;idStr = buffer.tostring(removalId)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;idStr = tostring(removalId) -- Convert to string if it&apos;s already a string/number
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local name = removalNames[idStr] or &quot;(deleted)&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(changesToPush.removalInfos, { name = name })
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Clean up after use
&#9;&#9;&#9;&#9;&#9;&#9;&#9;removalNames[idStr] = nil
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if self.__sync then
&#9;&#9;&#9;&#9;&#9;&#9;self.__sync(&quot;SyncbackChanges&quot;, changesToPush)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] start: Aggregate changes task - EXITED while loop (status no longer Connected).&quot;
&#9;&#9;&#9;)
&#9;&#9;end)

&#9;&#9;-- Spawn watcher listener as separate task to avoid blocking
&#9;&#9;Log.info(&quot;[SyncCoordinator DEBUG] start: Starting watcher listener task.&quot;)
&#9;&#9;Log.debug(&quot;[SyncCoordinator LOOP] Watcher listener spawning...&quot;)

&#9;&#9;task.spawn(function()
&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator] Watcher listener task STARTED&quot;)
&#9;&#9;&#9;while self.status == self.StatusEnum.Connected do
&#9;&#9;&#9;&#9;Log.trace(&quot;[SyncCoordinator] *** CALLING watcher:listen() - BLOCKING NOW ***&quot;)
&#9;&#9;&#9;&#9;local success, event = pcall(function()
&#9;&#9;&#9;&#9;&#9;return self.watcher:listen() -- Blocks until signal fires
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;if not success then
&#9;&#9;&#9;&#9;&#9;Log.error(&quot;[SyncCoordinator] Error in watcher:listen():&quot;, event)
&#9;&#9;&#9;&#9;&#9;task.wait(0.1)
&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;Log.trace(&quot;[SyncCoordinator] *** listen() RETURNED, event:&quot;, event and event.kind or &quot;nil&quot;)
&#9;&#9;&#9;&#9;if not event then
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;Log.info(&quot;[SyncCoordinator] Watcher event received:&quot;, event.kind)
&#9;&#9;&#9;&#9;local name = &quot;(unknown)&quot;
&#9;&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;&#9;name = event.instance:GetFullName()
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator EVENT] Received:&quot;, event.kind, name, event.property or &quot;&quot;)

&#9;&#9;&#9;&#9;-- If a large subtree was just added, trigger bulk import and skip normal per-node handling
&#9;&#9;&#9;&#9;if event and event.kind == &quot;Add&quot; then
&#9;&#9;&#9;&#9;&#9;local inst = event.instance
&#9;&#9;&#9;&#9;&#9;-- Heuristic: 50+ descendants
&#9;&#9;&#9;&#9;&#9;local ok, descendants = pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;return inst:GetDescendants()
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;if
&#9;&#9;&#9;&#9;&#9;&#9;ok
&#9;&#9;&#9;&#9;&#9;&#9;and descendants
&#9;&#9;&#9;&#9;&#9;&#9;and #descendants &gt;= 50
&#9;&#9;&#9;&#9;&#9;&#9;and self.core
&#9;&#9;&#9;&#9;&#9;&#9;and self.core.bulkImport
&#9;&#9;&#9;&#9;&#9;&#9;and not self.core.bulkImport:isActive()
&#9;&#9;&#9;&#9;&#9;then
&#9;&#9;&#9;&#9;&#9;&#9;-- Start bulk import asynchronously to avoid blocking the watcher loop
&#9;&#9;&#9;&#9;&#9;&#9;task.spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;self.core.bulkImport:start(inst)
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;-- Skip this add; bulk import will stream the subtree
&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- If we&apos;re getting many property changes, check if they&apos;re part of a large subtree that should use bulk import
&#9;&#9;&#9;&#9;if event and event.kind == &quot;Change&quot; and event.property == &quot;Name&quot; then
&#9;&#9;&#9;&#9;&#9;local inst = event.instance
&#9;&#9;&#9;&#9;&#9;-- Check if this instance has a parent that&apos;s a large model (common for toolbox models)
&#9;&#9;&#9;&#9;&#9;local rootCandidate = inst.Parent
&#9;&#9;&#9;&#9;&#9;while rootCandidate and rootCandidate.Parent and not rootCandidate.Parent:IsA(&quot;DataModel&quot;) do
&#9;&#9;&#9;&#9;&#9;&#9;rootCandidate = rootCandidate.Parent
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;if rootCandidate and rootCandidate.Parent and rootCandidate.Parent:IsA(&quot;DataModel&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;local ok, descendants = pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return rootCandidate:GetDescendants()
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;if
&#9;&#9;&#9;&#9;&#9;&#9;&#9;ok
&#9;&#9;&#9;&#9;&#9;&#9;&#9;and descendants
&#9;&#9;&#9;&#9;&#9;&#9;&#9;and #descendants &gt;= 50
&#9;&#9;&#9;&#9;&#9;&#9;&#9;and self.core
&#9;&#9;&#9;&#9;&#9;&#9;&#9;and self.core.bulkImport
&#9;&#9;&#9;&#9;&#9;&#9;&#9;and not self.core.bulkImport:isActive()
&#9;&#9;&#9;&#9;&#9;&#9;then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Check if we have many pending changes on this subtree
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local pendingChanges = aggregateChanges.updates.size
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if pendingChanges &gt; 10 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] Detected bulk property changes on large subtree, triggering BulkImport for:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;rootCandidate:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Start bulk import asynchronously
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;task.spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;self.core.bulkImport:start(rootCandidate)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Skip this change; bulk import will handle the subtree
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- Prune any expired subtree move guards on each iteration
&#9;&#9;&#9;&#9;pruneExpiredMoveRoots()

&#9;&#9;&#9;&#9;-- ---------------- Bulk-window book-keeping ------------------
&#9;&#9;&#9;&#9;do
&#9;&#9;&#9;&#9;&#9;local now = os.clock()
&#9;&#9;&#9;&#9;&#9;if now - windowStart &gt; BULK_WINDOW then
&#9;&#9;&#9;&#9;&#9;&#9;-- start a fresh window
&#9;&#9;&#9;&#9;&#9;&#9;windowStart = now
&#9;&#9;&#9;&#9;&#9;&#9;eventCount = 0
&#9;&#9;&#9;&#9;&#9;&#9;isBulkOperation = false
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;eventCount += 1
&#9;&#9;&#9;&#9;&#9;if eventCount &gt; BULK_THRESHOLD then
&#9;&#9;&#9;&#9;&#9;&#9;isBulkOperation = true
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if not event then -- Should not happen with listen(), but safety check
&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[SyncCoordinator DEBUG] start: Watcher returned nil event.&quot;)
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- DEBUG: Print every event that reaches this point
&#9;&#9;&#9;&#9;Log.trace(&quot;[DEBUG SYNC] Event received:&quot;, event.kind, event.instance:GetFullName())

&#9;&#9;&#9;&#9;-- Phase 3: Runtime session flag - disable sync during Play Solo
&#9;&#9;&#9;&#9;if RunService:IsRunning() then
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[DEBUG SYNC] BLOCKED BY PLAY SOLO MODE:&quot;, event.kind, event.instance:GetFullName())
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator WATCHER] PHASE 3: Skipping sync during Play Solo mode&quot;)
&#9;&#9;&#9;&#9;&#9;continue -- Skip all sync operations while game is running
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local kind = event.kind

&#9;&#9;&#9;&#9;-- SERVER echo debounce: Skip events that might be echoes from server sync
&#9;&#9;&#9;&#9;-- EXCEPT for Add events which should always be processed (Toolbox/new instances)
&#9;&#9;&#9;&#9;local debounceDiff = os.clock() - self.lastSync
&#9;&#9;&#9;&#9;if debounceDiff &lt;= SYNCBACK_DEBOUNCE then
&#9;&#9;&#9;&#9;&#9;-- Skip all events during debounce window EXCEPT Add events
&#9;&#9;&#9;&#9;&#9;if kind == &quot;Add&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;-- Add events are allowed through even during debounce
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[DEBUG SYNC] Add event allowed through debounce - diff:&quot;, debounceDiff)
&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] start: Watcher listening loop - Add event allowed through during debounce.&quot;
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[DEBUG SYNC] BLOCKED BY DEBOUNCE:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;kind,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;diff:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;debounceDiff
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] start: Watcher listening loop - Debounced due to recent server sync. lastSync:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;self.lastSync,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Current:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;os.clock(),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Diff:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;debounceDiff
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator] Skipping&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;kind,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;event due to SYNCBACK_DEBOUNCE. diff=&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;debounceDiff
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] start: Watcher listening loop - Debounced due to recent server sync. lastSync:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;self.lastSync,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Current:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;os.clock(),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Diff:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;debounceDiff
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] *** PROCESSING EVENT:&quot;,
&#9;&#9;&#9;&#9;&#9;kind,
&#9;&#9;&#9;&#9;&#9;&quot;for instance:&quot;,
&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&quot;property:&quot;,
&#9;&#9;&#9;&#9;&#9;event.property or &quot;none&quot;
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;local processedChangeFromEvent = Changes.new(
&#9;&#9;&#9;&#9;&#9;&quot;SyncCoordinator-processedChangeFromEvent-&quot; .. kind .. &quot;-&quot; .. tostring(event.instance:GetFullName())
&#9;&#9;&#9;&#9;)

&#9;&#9;&#9;&#9;-- Phase 2: Compute change hash for duplicate detection
&#9;&#9;&#9;&#9;local currentTick = tick()
&#9;&#9;&#9;&#9;-- Use the persistent 3-char uniqueId (if present) when computing the
&#9;&#9;&#9;&#9;-- duplicate-detection hash.  This prevents legitimately distinct
&#9;&#9;&#9;&#9;-- instances that share the same name/class (e.g. &quot;ModuleScript&quot;) from
&#9;&#9;&#9;&#9;-- being considered duplicates when they are deleted in the same frame.

&#9;&#9;&#9;&#9;local instanceClass = event.instance.ClassName
&#9;&#9;&#9;&#9;local property = event.property or &quot;nil&quot;

&#9;&#9;&#9;&#9;local uid = event.instance:GetAttribute(&quot;uniqueId&quot;)
&#9;&#9;&#9;&#9;if not uid then
&#9;&#9;&#9;&#9;&#9;-- Fallback to tostring(instance) which contains a unique memory
&#9;&#9;&#9;&#9;&#9;-- address and is therefore safe for deduping.
&#9;&#9;&#9;&#9;&#9;uid = tostring(event.instance)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local changeHash = instanceClass
&#9;&#9;&#9;&#9;&#9;.. &quot;|&quot;
&#9;&#9;&#9;&#9;&#9;.. uid -- unique per instance
&#9;&#9;&#9;&#9;&#9;.. &quot;|&quot;
&#9;&#9;&#9;&#9;&#9;.. kind
&#9;&#9;&#9;&#9;&#9;.. &quot;|&quot;
&#9;&#9;&#9;&#9;&#9;.. property
&#9;&#9;&#9;&#9;&#9;.. &quot;|&quot;
&#9;&#9;&#9;&#9;&#9;.. tostring(math.floor(currentTick * 100)) -- Include 10ms precision

&#9;&#9;&#9;&#9;-- Check if we&apos;ve seen this exact change recently (within 100ms)
&#9;&#9;&#9;&#9;local lastSeenTime = changeHashCache[changeHash]
&#9;&#9;&#9;&#9;if lastSeenTime and (currentTick - lastSeenTime) &lt; 0.1 then
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator WATCHER] PHASE 2: Duplicate change detected, skipping:&quot;, changeHash)
&#9;&#9;&#9;&#9;&#9;continue -- Skip duplicate change
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- Update hash cache with current timestamp
&#9;&#9;&#9;&#9;changeHashCache[changeHash] = currentTick

&#9;&#9;&#9;&#9;-- Clean old entries from cache (older than 1 second)
&#9;&#9;&#9;&#9;for hash, timestamp in pairs(changeHashCache) do
&#9;&#9;&#9;&#9;&#9;if (currentTick - timestamp) &gt; 1.0 then
&#9;&#9;&#9;&#9;&#9;&#9;changeHashCache[hash] = nil
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;Log.trace(&quot;Received event:&quot;, kind)

&#9;&#9;&#9;&#9;-- Suppress descendant noise for subtree moves
&#9;&#9;&#9;&#9;if (kind == &quot;Add&quot;) or (kind == &quot;Remove&quot;) or (kind == &quot;Change&quot; and event.property == &quot;Parent&quot;) then
&#9;&#9;&#9;&#9;&#9;if isSuppressedByMoveGroup(event.instance) then
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Suppressing descendant event during parent move:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- Try batching first (before pcall) - if successful, skip normal processing
&#9;&#9;&#9;&#9;if kind == &quot;Add&quot; then
&#9;&#9;&#9;&#9;&#9;local wasBatched = tryBatchAddition(event)
&#9;&#9;&#9;&#9;&#9;if wasBatched then
&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[SyncCoordinator BATCH] Batched addition:&quot;, event.instance:GetFullName())
&#9;&#9;&#9;&#9;&#9;&#9;-- Update timing but don&apos;t process the change yet
&#9;&#9;&#9;&#9;&#9;&#9;self.lastLocalChangeTime = os.clock()
&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- Wrap event processing in pcall to catch errors from destroyed instances
&#9;&#9;&#9;&#9;local processSuccess, processErr = pcall(function()
&#9;&#9;&#9;&#9;&#9;if kind == &quot;Add&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[DEBUG SYNC] === ADD EVENT PROCESSING ===&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[DEBUG SYNC] Instance:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Class:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance.ClassName
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] NEW INSTANCE ADDED IN STUDIO:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&#9;&quot;Class:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;event.instance.ClassName
&#9;&#9;&#9;&#9;&#9;)

&#9;&#9;&#9;&#9;&#9;-- Process immediately for critical instances (Scripts, RemoteEvents, etc.)
&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Processing Add event immediately for:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName()
&#9;&#9;&#9;&#9;&#9;)

&#9;&#9;&#9;&#9;&#9;-- Check if this instance already exists in the tree (move detection)
&#9;&#9;&#9;&#9;&#9;local existingId = self.tree:getId(event.instance)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator WATCHER] Move detection check:&quot;, event.instance:GetFullName())
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;  - existingId from tree:getId():&quot;, existingId and buffer.tostring(existingId) or &quot;nil&quot;)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;  - instance uniqueId attribute:&quot;, event.instance:GetAttribute(&quot;uniqueId&quot;))
&#9;&#9;&#9;&#9;&#9;if existingId then
&#9;&#9;&#9;&#9;&#9;&#9;-- Check if this was server-created (ignore server echoes)
&#9;&#9;&#9;&#9;&#9;&#9;local isServerCreated = event.instance:GetAttribute(&quot;_serverCreated&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;if isServerCreated then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Ignoring server-created instance echo:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Remove the marker and skip processing this Add event
&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:SetAttribute(&quot;_serverCreated&quot;, nil)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return -- Exit pcall, will be handled as skip outside
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;-- This is a real user move operation, not a new add
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] MOVE DETECTED - instance already exists with ID:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;existingId
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] About to call onChange for:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;with property: Parent&quot;
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;-- Begin a move group for this root to filter out descendant noise
&#9;&#9;&#9;&#9;&#9;&#9;beginMoveGroup(event.instance)
&#9;&#9;&#9;&#9;&#9;&#9;local changeSnapshot = self.processor.read:onChange(event.instance, &quot;Parent&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] onChange returned:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;changeSnapshot and &quot;snapshot&quot; or &quot;nil&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;for:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;if changeSnapshot then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Move snapshot created, adding to processedChangeFromEvent&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Route to the correct collection based on snapshot type
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- MoveSnapshot uses Snapshot metatable, UpdatedSnapshot uses UpdatedSnapshot metatable
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Snapshot = require(script.Parent.Parent.Core.Snapshot)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if getmetatable(changeSnapshot) == Snapshot then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- This is a MoveSnapshot - route to moves collection
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;processedChangeFromEvent:move(changeSnapshot)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator WATCHER] Added MoveSnapshot to moves collection&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- This is an UpdatedSnapshot - route to updates collection
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;processedChangeFromEvent:update(changeSnapshot)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator WATCHER] Added UpdatedSnapshot to updates collection&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Move snapshot was nil for:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;-- Genuine new instance
&#9;&#9;&#9;&#9;&#9;&#9;-- Collision-detection and auto-rename logic removed. ID-based addressing eliminates the need to mutate
&#9;&#9;&#9;&#9;&#9;&#9;-- instance names for uniqueness, simplifying the add-path.

&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[DEBUG SYNC] Calling processor.read:onAdd for:&quot;, event.instance:GetFullName())
&#9;&#9;&#9;&#9;&#9;&#9;local addSnapshot = self.processor.read:onAdd(event.instance)
&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[DEBUG SYNC] onAdd returned:&quot;, addSnapshot and &quot;snapshot&quot; or &quot;nil&quot;)

&#9;&#9;&#9;&#9;&#9;&#9;if addSnapshot then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- CRITICAL FIX: Register the instance in the tree with its client-generated temporary ID
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if addSnapshot.id and addSnapshot.parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Attempting to insert into Tree. Instance:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;ClientTempID (raw string):&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;addSnapshot.id,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;ParentID (buffer):&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;addSnapshot.parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Convert the clientTemporaryIdString (addSnapshot.id which is now raw string) to a buffer for Tree:insertInstance
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local bufferConversionSuccess, clientTempIdBuffer =
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;pcall(buffer.fromstring, addSnapshot.id)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if bufferConversionSuccess and clientTempIdBuffer then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;self.tree:insertInstance(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;clientTempIdBuffer, -- Client temporary ID (buffer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;addSnapshot.meta -- Meta data from the snapshot
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Timestamp is optional and not explicitly carried in snapshot for now
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Instance inserted into Tree with temporary client ID buffer.&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Failed to convert addSnapshot.id (raw string) to buffer. Snapshot ID:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;addSnapshot.id,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Instance:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;tostring(clientTempIdBuffer) -- This would be the error from pcall
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Snapshot for Add event missing id or parent. Instance:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Add snapshot created, adding to processedChangeFromEvent&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;processedChangeFromEvent:add(addSnapshot)
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Add snapshot was nil for:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif kind == &quot;Change&quot; then
&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Processing Change event for:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&#9;&quot;property:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;event.property
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;local snapshot = self.processor.read:onChange(event.instance, event.property)

&#9;&#9;&#9;&#9;&#9;if snapshot then
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Change snapshot created, adding to processedChangeFromEvent&quot;
&#9;&#9;&#9;&#9;&#9;&#9;)

&#9;&#9;&#9;&#9;&#9;&#9;-- Route to the correct collection based on snapshot type
&#9;&#9;&#9;&#9;&#9;&#9;local Snapshot = require(script.Parent.Parent.Core.Snapshot)
&#9;&#9;&#9;&#9;&#9;&#9;if getmetatable(snapshot) == Snapshot then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- This is a MoveSnapshot - route to moves collection
&#9;&#9;&#9;&#9;&#9;&#9;&#9;processedChangeFromEvent:move(snapshot)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Added MoveSnapshot to moves collection (general change)&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- This is an UpdatedSnapshot - route to updates collection
&#9;&#9;&#9;&#9;&#9;&#9;&#9;processedChangeFromEvent:update(snapshot)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Added UpdatedSnapshot to updates collection (general change)&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] Change snapshot was nil for:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName(),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;property:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.property
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif kind == &quot;Remove&quot; then
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator WATCHER] Processing Remove event for:&quot;, event.instance:GetFullName())
&#9;&#9;&#9;&#9;&#9;-- GUARD 1: Skip Remove events that are part of a re-parenting (move) operation.
&#9;&#9;&#9;&#9;&#9;-- When an instance is moved from one parent to another, Roblox fires ChildRemoved on the old
&#9;&#9;&#9;&#9;&#9;-- container while the instance still exists elsewhere in the DataModel. In that case the
&#9;&#9;&#9;&#9;&#9;-- instance still has a valid `Parent` reference (it is *not* nil). We should *not* treat
&#9;&#9;&#9;&#9;&#9;-- such an event as a deletion because the corresponding ChildAdded handler will already
&#9;&#9;&#9;&#9;&#9;-- generate a Move snapshot (Add with existingId) that keeps the instance in the tree.
&#9;&#9;&#9;&#9;&#9;if event.instance.Parent ~= nil then
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] GUARD 1: Remove event detected during re-parent, skipping for:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;event.instance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;return -- Exit pcall, will be handled as skip outside
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;-- Always process Remove events to ensure deletions propagate, even if the instance is
&#9;&#9;&#9;&#9;&#9;-- not currently tracked in the Tree (e.g. duplicate Modules not previously synced).
&#9;&#9;&#9;&#9;&#9;local instanceName = event.instance.Name
&#9;&#9;&#9;&#9;&#9;local id = self.processor.read:onRemove(event.instance)
&#9;&#9;&#9;&#9;&#9;if id then
&#9;&#9;&#9;&#9;&#9;&#9;-- Store name for UI display
&#9;&#9;&#9;&#9;&#9;&#9;-- Handle both buffer (legacy) and string (new uniqueId) formats
&#9;&#9;&#9;&#9;&#9;&#9;local idStr
&#9;&#9;&#9;&#9;&#9;&#9;if typeof(id) == &quot;buffer&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;idStr = buffer.tostring(id)
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;idStr = tostring(id) -- Convert to string if it&apos;s already a string/number
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;removalNames[idStr] = instanceName
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator WATCHER] Remove id created, adding to processedChangeFromEvent&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;processedChangeFromEvent:remove(id)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator WATCHER] Remove id was nil for:&quot;, event.instance:GetFullName())
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;&#9;-- Check if processing failed (not just early return)
&#9;&#9;&#9;&#9;if not processSuccess then
&#9;&#9;&#9;&#9;&#9;-- Only log as error if it&apos;s a real error (not just an early return for skip)
&#9;&#9;&#9;&#9;&#9;if processErr and tostring(processErr) ~= &quot;&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Log.error(&quot;[SyncCoordinator] Error processing event:&quot;, processErr)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;-- Continue to next event (either error or intentional skip)
&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if not processedChangeFromEvent:isEmpty() then
&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] Watcher: Event processed into non-empty changes. Updating lastLocalChangeTime and joining to aggregate.&quot;
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] processedChangeFromEvent is NOT empty - about to join to aggregateChanges&quot;
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[SyncCoordinator WATCHER] processedChangeFromEvent details:&quot;, processedChangeFromEvent)

&#9;&#9;&#9;&#9;&#9;-- DEBUG: Log what we&apos;re about to join
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[SyncCoordinator DEBUG] BEFORE join - processedChangeFromEvent:&quot;)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - additions:&quot;, #processedChangeFromEvent.additions)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - updates:&quot;, #processedChangeFromEvent.updates)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - removals:&quot;, #processedChangeFromEvent.removals)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - moves:&quot;, #processedChangeFromEvent.moves)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[SyncCoordinator DEBUG] BEFORE join - aggregateChanges:&quot;)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - additions:&quot;, #aggregateChanges.additions)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - updates:&quot;, #aggregateChanges.updates)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - removals:&quot;, #aggregateChanges.removals)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - moves:&quot;, #aggregateChanges.moves)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[SyncCoordinator DEBUG] *** SYNCCOORDINATOR - Calling aggregateChanges:join ***&quot;)

&#9;&#9;&#9;&#9;&#9;self.lastLocalChangeTime = os.clock() -- Update on actual change being aggregated
&#9;&#9;&#9;&#9;&#9;aggregateChanges:join(processedChangeFromEvent, true)

&#9;&#9;&#9;&#9;&#9;-- DEBUG: Log what we have after join
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[SyncCoordinator DEBUG] AFTER join - aggregateChanges:&quot;)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - additions:&quot;, #aggregateChanges.additions)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - updates:&quot;, #aggregateChanges.updates)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - removals:&quot;, #aggregateChanges.removals)
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - moves:&quot;, #aggregateChanges.moves)

&#9;&#9;&#9;&#9;&#9;-- GUARD 3: Burst truncation - cap aggregateChanges to prevent spam
&#9;&#9;&#9;&#9;&#9;local MAX_BATCH_SIZE = 200
&#9;&#9;&#9;&#9;&#9;local currentTotal = aggregateChanges:total()
&#9;&#9;&#9;&#9;&#9;if currentTotal &gt; MAX_BATCH_SIZE then
&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] GUARD 3: Burst detected! Truncating from&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;currentTotal,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;to&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;MAX_BATCH_SIZE,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;changes&quot;
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;-- Create a new Changes object with truncated content
&#9;&#9;&#9;&#9;&#9;&#9;local truncatedChanges = Changes.new(&quot;SyncCoordinator-truncatedChanges&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;-- Balanced prioritization: apply moves and updates first, then additions, then removals last
&#9;&#9;&#9;&#9;&#9;&#9;local added = 0
&#9;&#9;&#9;&#9;&#9;&#9;-- 1) Moves
&#9;&#9;&#9;&#9;&#9;&#9;for _, move in ipairs(aggregateChanges.moves) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if added &gt;= MAX_BATCH_SIZE then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;truncatedChanges:move(move)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;added += 1
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;-- 2) Updates
&#9;&#9;&#9;&#9;&#9;&#9;for _, update in ipairs(aggregateChanges.updates) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if added &gt;= MAX_BATCH_SIZE then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;truncatedChanges:update(update)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;added += 1
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;-- 3) Additions
&#9;&#9;&#9;&#9;&#9;&#9;for _, addition in ipairs(aggregateChanges.additions) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if added &gt;= MAX_BATCH_SIZE then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;truncatedChanges:add(addition)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;added += 1
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;-- 4) Removals (last)
&#9;&#9;&#9;&#9;&#9;&#9;for _, removal in ipairs(aggregateChanges.removals) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if added &gt;= MAX_BATCH_SIZE then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;truncatedChanges:remove(removal)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;added += 1
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;-- Replace with truncated version
&#9;&#9;&#9;&#9;&#9;&#9;aggregateChanges = truncatedChanges
&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[SyncCoordinator WATCHER] GUARD 3: Truncated to&quot;, aggregateChanges:total(), &quot;changes&quot;)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] After join - aggregateChanges:isEmpty():&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;aggregateChanges:isEmpty()
&#9;&#9;&#9;&#9;&#9;)

&#9;&#9;&#9;&#9;-- VM FS authoritative: no JSONL refresh in plugin
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator DEBUG] Watcher: Event processed but resulted in empty changes. Not updating lastLocalChangeTime from this event.&quot;
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[SyncCoordinator WATCHER] processedChangeFromEvent is EMPTY - not joining to aggregateChanges&quot;
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;Log.info(&quot;[SyncCoordinator DEBUG] Watcher listener task exited&quot;)
&#9;&#9;end)

&#9;&#9;Log.debug(&quot;[SyncCoordinator] Both tasks spawned, Promise waiting...&quot;)

&#9;&#9;-- Wait for stop() to be called
&#9;&#9;while self.status == self.StatusEnum.Connected do
&#9;&#9;&#9;task.wait(1)
&#9;&#9;end

&#9;&#9;Log.info(&quot;[SyncCoordinator DEBUG] start: Status changed, resolving Promise.&quot;)
&#9;&#9;resolve()
&#9;end)
end

-- Stop the sync coordination
function SyncCoordinator:stop()
&#9;Log.trace(&quot;[SyncCoordinator] Stopping sync coordination..&quot;)
&#9;Poll.stop() -- Stop the polling loop
end

return SyncCoordinator
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001014</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX9FAA2EBA730E4FE7AC7474B328331075">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000aff</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">ProjectManager</string>
					<string name="ScriptGuid">{58500039-b5c2-4655-ba44-e7b30b1c0d1c}</string>
					<string name="Source">--!strict

--[[
&#9;ProjectManager.luau
&#9;
&#9;Handles project bootstrap, configuration parsing, hierarchy &#226;&#134;&#146; JSONL export,
&#9;and projectStructure row tracking. This module encapsulates all logic related
&#9;to project setup and the web &#226;&#134;&#146; studio branch of the new workflow.
&#9;
&#9;Primary responsibilities:
&#9;- Fetch project details from backend
&#9;- Parse project configuration files  
&#9;- Build and export project hierarchy as JSONL
&#9;- Manage projectStructure database row
&#9;- Handle project ID settings
]]

local HttpService = game:GetService(&quot;HttpService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Log = require(Lemonade.Log)

local ProjectManager = {}
ProjectManager.__index = ProjectManager

-- Supported Roblox services for hierarchy collection
local SUPPORTED_ROOT_SERVICES = {
&#9;&quot;ReplicatedFirst&quot;,
&#9;&quot;ReplicatedStorage&quot;,
&#9;&quot;ServerScriptService&quot;,
&#9;&quot;ServerStorage&quot;,
&#9;&quot;StarterGui&quot;,
&#9;&quot;StarterPack&quot;,
&#9;&quot;StarterPlayer&quot;,
&#9;&quot;Workspace&quot;,
}
-- Debounce delay (seconds) before we actually sync the hierarchy after the
-- last detected hierarchy-affecting change. A small value keeps the UI
-- responsive while coalescing hundreds of rapid Add events.
local HIERARCHY_DEBOUNCE_TIME = 0.2

function ProjectManager.new(pluginInstance)
&#9;local self = setmetatable({}, ProjectManager)

&#9;self.pluginInstance = pluginInstance
&#9;self.projectStructureId = nil
&#9;self._lastLoggedProjectId = nil
&#9;-- Debounce state for hierarchy syncs
&#9;self._lastHierarchyDirtyTime = 0 -- os.clock() timestamp of last call
&#9;self._hierarchyDebounceHandle = nil -- thread handle for pending flush task
&#9;-- Guard to ensure we don&apos;t double-push the early JSONL snapshot
&#9;self._earlyJsonlPushed = false

&#9;-- Load any existing project structure ID
&#9;self.projectStructureId = self:_loadSavedProjectStructureId()

&#9;return self
end

-- Helper to ensure each instance has a persistent uniqueId attribute (3-char hash)
function ProjectManager.ensureUniqueId(instance: Instance): string
&#9;local existing = instance:GetAttribute(&quot;uniqueId&quot;)
&#9;if existing and typeof(existing) == &quot;string&quot; then
&#9;&#9;return existing
&#9;end

&#9;-- Generate random 3-character hex string using GUID
&#9;local guid = HttpService:GenerateGUID(false) -- e.g., 0123456789abcdef...
&#9;local hash = string.sub(guid:gsub(&quot;-&quot;, &quot;&quot;), 1, 3)
&#9;pcall(function()
&#9;&#9;instance:SetAttribute(&quot;uniqueId&quot;, hash)
&#9;end)
&#9;return hash
end

-- Build hierarchy tree for a single instance
function ProjectManager:_buildHierarchy(
&#9;inst: Instance,
&#9;pathPrefix: string
): {
&#9;name: string,
&#9;className: string,
&#9;path: string,
&#9;uniqueId: string,
&#9;children: { any },
}
&#9;local currentPath
&#9;if pathPrefix == &quot;&quot; then
&#9;&#9;-- Root call, start with service name (service-rooted)
&#9;&#9;currentPath = inst.Name
&#9;else
&#9;&#9;currentPath = pathPrefix .. &quot;/&quot; .. inst.Name
&#9;end

&#9;-- Ensure attribute exists
&#9;local uid = ProjectManager.ensureUniqueId(inst)
&#9;-- Do not include any descendants under StringValue instances.
&#9;local children = {}
&#9;if not inst:IsA(&quot;StringValue&quot;) then
&#9;&#9;for _, child in ipairs(inst:GetChildren()) do
&#9;&#9;&#9;table.insert(children, self:_buildHierarchy(child, currentPath))
&#9;&#9;end
&#9;end
&#9;return {
&#9;&#9;name = inst.Name,
&#9;&#9;className = inst.ClassName,
&#9;&#9;path = currentPath,
&#9;&#9;uniqueId = uid,
&#9;&#9;children = children,
&#9;}
end

-- Collect complete project hierarchy from supported services
function ProjectManager:_collectProjectHierarchy(): { any }
&#9;local projectHierarchy = {}
&#9;for _, serviceName in ipairs(SUPPORTED_ROOT_SERVICES) do
&#9;&#9;local success, serviceInstance = pcall(function()
&#9;&#9;&#9;return game:GetService(serviceName)
&#9;&#9;end)
&#9;&#9;if success and serviceInstance then
&#9;&#9;&#9;table.insert(projectHierarchy, self:_buildHierarchy(serviceInstance, &quot;&quot;))
&#9;&#9;end
&#9;end
&#9;return projectHierarchy
end

-- Load saved project structure ID from plugin settings
function ProjectManager:_loadSavedProjectStructureId(): string?
&#9;if not self.pluginInstance then
&#9;&#9;return nil
&#9;end
&#9;local currentProjectId = self.pluginInstance:GetSetting(&quot;PROJECT_ID&quot;)
&#9;if not currentProjectId or currentProjectId == &quot;&quot; then
&#9;&#9;return nil
&#9;end
&#9;return self.pluginInstance:GetSetting(&quot;PROJECT_STRUCTURE_ID_&quot; .. tostring(currentProjectId))
end

-- Save project structure ID to plugin settings
function ProjectManager:_saveProjectStructureId(serverId: string)
&#9;if not self.pluginInstance or serverId == nil then
&#9;&#9;return
&#9;end
&#9;local currentProjectId = self:getProjectId()
&#9;if not currentProjectId or currentProjectId == &quot;&quot; then
&#9;&#9;return
&#9;end
&#9;self.pluginInstance:SetSetting(&quot;PROJECT_STRUCTURE_ID_&quot; .. tostring(currentProjectId), serverId)
end

-- Sync project structure to Convex database
function ProjectManager:_syncProjectStructure(jsonlString: string, opts: { immediate: boolean }?)
&#9;-- Require here to avoid nil issues due to declaration order
&#9;local HttpSync = require(script.Parent.Parent.Net.HttpSync)

&#9;-- Ensure per-instance cache reflects current project ID each call
&#9;if self.pluginInstance then
&#9;&#9;local currentProjectId = self:getProjectId()
&#9;&#9;local savedIdForCurrent = self.pluginInstance:GetSetting(&quot;PROJECT_STRUCTURE_ID_&quot; .. tostring(currentProjectId))
&#9;&#9;self.projectStructureId = savedIdForCurrent -- nil if none yet
&#9;end

&#9;-- Build change payload
&#9;local payload = {}
&#9;if self.projectStructureId then
&#9;&#9;payload.updates = {
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;operation = &quot;update&quot;, -- will be converted appropriately by pushSync
&#9;&#9;&#9;&#9;id = self.projectStructureId,
&#9;&#9;&#9;&#9;name = &quot;projectStructure&quot;,
&#9;&#9;&#9;&#9;class = &quot;unset&quot;,
&#9;&#9;&#9;&#9;content = jsonlString,
&#9;&#9;&#9;},
&#9;&#9;}
&#9;else
&#9;&#9;-- Generate deterministic temporary ID to track mapping
&#9;&#9;local tempId = HttpService:GenerateGUID(false):gsub(&quot;-&quot;, &quot;&quot;):sub(1, 12)
&#9;&#9;payload.additions = {
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;operation = &quot;add&quot;,
&#9;&#9;&#9;&#9;id = tempId,
&#9;&#9;&#9;&#9;parent = nil, -- root
&#9;&#9;&#9;&#9;name = &quot;projectStructure&quot;,
&#9;&#9;&#9;&#9;class = &quot;unset&quot;,
&#9;&#9;&#9;&#9;path = &quot;unset&quot;,
&#9;&#9;&#9;&#9;content = jsonlString,
&#9;&#9;&#9;},
&#9;&#9;}
&#9;end

&#9;-- Optionally perform synchronous push (used on initial connect to avoid delay)
&#9;local function performPush()
&#9;&#9;local res = HttpSync.pushSync(payload)
&#9;&#9;-- Capture server ID mapping after first addition
&#9;&#9;if (not self.projectStructureId) and res and res.results then
&#9;&#9;&#9;for _, resultItem in ipairs(res.results) do
&#9;&#9;&#9;&#9;if resultItem.status == &quot;success&quot; and resultItem.serverId then
&#9;&#9;&#9;&#9;&#9;self.projectStructureId = resultItem.serverId
&#9;&#9;&#9;&#9;&#9;self:_saveProjectStructureId(self.projectStructureId)
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;if opts and opts.immediate then
&#9;&#9;performPush() -- synchronous
&#9;else
&#9;&#9;-- Fire-and-forget push
&#9;&#9;task.spawn(function()
&#9;&#9;&#9;performPush()
&#9;&#9;end)
&#9;end
end

-- Print and sync project hierarchy as JSONL
function ProjectManager:printProjectHierarchy(immediate: boolean?)
&#9;-- Mark hierarchy as dirty and (re)schedule a debounced flush. Any number of
&#9;-- rapid calls within HIERARCHY_DEBOUNCE_TIME will collapse into a single
&#9;-- sync, dramatically reducing spam when large models are inserted.

&#9;self._lastHierarchyDirtyTime = os.clock()

&#9;-- If a flush is already scheduled, let it pick up the new dirty-time.
&#9;if self._hierarchyDebounceHandle then
&#9;&#9;return
&#9;end

&#9;-- Immediate path disabled: we do not want to auto-sync JSONL on connect
&#9;if immediate == true then
&#9;&#9;-- Skip immediate push; allow only debounced or manual full sync to send JSONL
&#9;&#9;return
&#9;end

&#9;-- Spawn a task that waits until we have seen no new hierarchy changes for
&#9;-- at least HIERARCHY_DEBOUNCE_TIME seconds, then performs the expensive
&#9;-- hierarchy collection + sync exactly once.
&#9;self._hierarchyDebounceHandle = task.spawn(function()
&#9;&#9;while true do
&#9;&#9;&#9;task.wait(HIERARCHY_DEBOUNCE_TIME)
&#9;&#9;&#9;if os.clock() - self._lastHierarchyDirtyTime &gt;= HIERARCHY_DEBOUNCE_TIME then
&#9;&#9;&#9;&#9;-- Safe to flush now
&#9;&#9;&#9;&#9;self._hierarchyDebounceHandle = (nil :: any) :: thread?
&#9;&#9;&#9;&#9;self:_flushProjectHierarchy(false)
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
end

-- Performs the actual hierarchy collection, JSONL encoding and pushSync. This
-- was previously the body of printProjectHierarchy and is now called after the
-- debounce window expires.
function ProjectManager:_flushProjectHierarchy(immediate: boolean?)
&#9;-- JSONL: one JSON object per line (we&apos;ll emit top-level services as separate lines)
&#9;local hierarchy = self:_collectProjectHierarchy()
&#9;local jsonLines = {}
&#9;for _, serviceEntry in ipairs(hierarchy) do
&#9;&#9;local ok, encoded = pcall(HttpService.JSONEncode, HttpService, serviceEntry)
&#9;&#9;if ok then
&#9;&#9;&#9;table.insert(jsonLines, encoded)
&#9;&#9;end
&#9;end

&#9;if #jsonLines == 0 then
&#9;&#9;warn(&quot;[Plugin HIERARCHY] No hierarchy data to encode&quot;)
&#9;&#9;return
&#9;end

&#9;local jsonlString = table.concat(jsonLines, &quot;\n&quot;)
&#9;-- Sync to Convex database
&#9;self:_syncProjectStructure(jsonlString, { immediate = immediate == true })
end

-- Immediate JSONL push entrypoint for Full Sync (bypasses connect-time immediate guard)
function ProjectManager:pushProjectHierarchyNow()
&#9;self:_flushProjectHierarchy(true)
end

-- Count scripts (Script, LocalScript, ModuleScript) in the current hierarchy
function ProjectManager:countScriptsInHierarchy(): number
&#9;local function countNode(node)
&#9;&#9;local count = 0
&#9;&#9;if type(node) == &quot;table&quot; then
&#9;&#9;&#9;local className = tostring(node.className or &quot;&quot;)
&#9;&#9;&#9;if className == &quot;Script&quot; or className == &quot;LocalScript&quot; or className == &quot;ModuleScript&quot; then
&#9;&#9;&#9;&#9;count += 1
&#9;&#9;&#9;end
&#9;&#9;&#9;if node.children and type(node.children) == &quot;table&quot; then
&#9;&#9;&#9;&#9;for _, child in ipairs(node.children) do
&#9;&#9;&#9;&#9;&#9;count += countNode(child)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;return count
&#9;end

&#9;local hierarchy = self:_collectProjectHierarchy()
&#9;local total = 0
&#9;for _, serviceEntry in ipairs(hierarchy) do
&#9;&#9;total += countNode(serviceEntry)
&#9;end
&#9;return total
end

-- Get current project ID from plugin settings
function ProjectManager:getProjectId(): string
&#9;if self.pluginInstance then
&#9;&#9;local projectId = self.pluginInstance:GetSetting(&quot;PROJECT_ID&quot;) or &quot;local&quot;
&#9;&#9;-- Only log if project ID changed from last check
&#9;&#9;if projectId ~= self._lastLoggedProjectId then
&#9;&#9;&#9;self._lastLoggedProjectId = projectId
&#9;&#9;&#9;Log.info(&quot;[ProjectManager:getProjectId] Plugin PROJECT_ID setting:&quot;, projectId)
&#9;&#9;&#9;Log.info(&quot;Expected: jh791metdn2ks7zv64kckj39cx7hdgq0&quot;)
&#9;&#9;&#9;Log.info(&quot;If these don&apos;t match, you need to reconnect to the correct project&quot;)
&#9;&#9;end
&#9;&#9;return projectId
&#9;end
&#9;return &quot;local&quot;
end

-- Update project ID in plugin settings
function ProjectManager:updateProjectId(newProjectId: string)
&#9;Log.info(&quot;[ProjectManager] Updating projectId from&quot;, self:getProjectId(), &quot;to&quot;, newProjectId)
&#9;if self.pluginInstance then
&#9;&#9;self.pluginInstance:SetSetting(&quot;PROJECT_ID&quot;, newProjectId)
&#9;&#9;-- Print to output for visibility
&#9;&#9;Log.info(&quot;=========================================&quot;)
&#9;&#9;Log.info(&quot;LEMONADE: PROJECT ID UPDATED TO &quot; .. newProjectId)
&#9;&#9;Log.info(&quot;=========================================&quot;)

&#9;&#9;-- Disable early JSONL warmup writes on projectId change; only manual Full Sync should sync-all.
&#9;end
end

-- Initialize project from server snapshot data
-- This method encapsulates the project setup logic that was in Core:run()
function ProjectManager:initialize()
&#9;local HttpSync = require(Lemonade.Net.HttpSync)

&#9;Log.trace(&quot;[ProjectManager] Fetching project details via HttpSync..&quot;)

&#9;-- First, get the actual project details to get the real project name
&#9;local projectDetailsRes = HttpSync.currentProject()
&#9;if not projectDetailsRes.Success then
&#9;&#9;return nil, &quot;Failed to fetch project details: &quot; .. projectDetailsRes.Body
&#9;end

&#9;local actualProjectDetails = HttpService:JSONDecode(projectDetailsRes.Body)
&#9;local actualProjectName = actualProjectDetails.name or &quot;Unknown Project&quot;
&#9;local actualProjectId = actualProjectDetails._id
&#9;Log.info(&quot;[ProjectManager] Got actual project name from backend:&quot;, actualProjectName)
&#9;Log.info(&quot;[ProjectManager] Got actual project ID from backend:&quot;, actualProjectId)

&#9;-- Update the plugin setting with the actual project ID from the response
&#9;if actualProjectId then
&#9;&#9;self:updateProjectId(actualProjectId)
&#9;end

&#9;-- Fetch initial state via HTTP using the actual project ID from the response
&#9;local detailsSnapshotRes = HttpSync.fetchDetails(actualProjectId)
&#9;if not detailsSnapshotRes.Success then
&#9;&#9;return nil, &quot;Failed to fetch project details: &quot; .. detailsSnapshotRes.Body
&#9;end
&#9;local snapshotArray = HttpService:JSONDecode(detailsSnapshotRes.Body)

&#9;-- Log first few items to understand structure
&#9;Log.info(&quot;[ProjectManager] Successfully decoded snapshot with&quot;, #snapshotArray, &quot;items&quot;)
&#9;for i = 1, math.min(3, #snapshotArray) do
&#9;&#9;local item = snapshotArray[i]
&#9;&#9;Log.info(&quot;[ProjectManager] Snapshot item&quot;, i, &quot;:&quot;)
&#9;&#9;Log.info(&quot;  - _id:&quot;, item._id)
&#9;&#9;Log.info(&quot;  - name:&quot;, item.name)
&#9;&#9;Log.info(&quot;  - path:&quot;, item.path)
&#9;&#9;Log.info(&quot;  - parentId:&quot;, item.parentId)
&#9;&#9;Log.info(&quot;  - class:&quot;, item.class)
&#9;&#9;Log.info(&quot;  - children:&quot;, item.children and (#item.children .. &quot; items&quot;) or &quot;nil&quot;)
&#9;end

&#9;-- Detect existing projectStructure file in DB to prevent duplicates
&#9;if not self.projectStructureId then
&#9;&#9;for _, item in ipairs(snapshotArray) do
&#9;&#9;&#9;if item and item.name == &quot;projectStructure&quot; then
&#9;&#9;&#9;&#9;-- _id comes from Convex as a string; ensure we store the raw string
&#9;&#9;&#9;&#9;if typeof(item._id) == &quot;string&quot; and item._id ~= &quot;&quot; then
&#9;&#9;&#9;&#9;&#9;self.projectStructureId = item._id
&#9;&#9;&#9;&#9;&#9;self:_saveProjectStructureId(self.projectStructureId)
&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[ProjectManager] Reusing existing projectStructure node with _id:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;self.projectStructureId
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;-- Build project properties from snapshot
&#9;local projectProperties = self:_buildProjectProperties(snapshotArray, actualProjectName, actualProjectId)

&#9;return {
&#9;&#9;projectProperties = projectProperties,
&#9;&#9;snapshotArray = snapshotArray,
&#9;&#9;actualProjectName = actualProjectName,
&#9;}
end

-- Build project properties from snapshot data
function ProjectManager:_buildProjectProperties(snapshotArray, actualProjectName, actualProjectId)
&#9;-- Find and parse the project configuration file (e.g., default.project.json)
&#9;local projectProperties = nil
&#9;local projectConfigFileName = &quot;default.project.json&quot; -- Or determine dynamically if needed

&#9;if type(snapshotArray) == &quot;table&quot; then
&#9;&#9;for _, item in ipairs(snapshotArray) do
&#9;&#9;&#9;if
&#9;&#9;&#9;&#9;item
&#9;&#9;&#9;&#9;and type(item.name) == &quot;string&quot;
&#9;&#9;&#9;&#9;and item.name == projectConfigFileName
&#9;&#9;&#9;&#9;and type(item.content) == &quot;string&quot;
&#9;&#9;&#9;then
&#9;&#9;&#9;&#9;Log.info(&quot;[ProjectManager] Found project config file: &quot; .. item.name)
&#9;&#9;&#9;&#9;local ok, parsedConfig = pcall(HttpService.JSONDecode, HttpService, item.content)
&#9;&#9;&#9;&#9;if ok and type(parsedConfig) == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;projectProperties = parsedConfig

&#9;&#9;&#9;&#9;&#9;-- Replace $name placeholder with actual project name from backend
&#9;&#9;&#9;&#9;&#9;if projectProperties.name == &quot;$name&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;projectProperties.name = actualProjectName
&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[ProjectManager] Replaced $name placeholder with actual project name:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;actualProjectName
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;projectProperties.id = actualProjectId -- Add the projectId to the properties
&#9;&#9;&#9;&#9;&#9;-- Ensure rootRefs is present, even if empty, to avoid downstream errors
&#9;&#9;&#9;&#9;&#9;if not projectProperties.rootRefs then
&#9;&#9;&#9;&#9;&#9;&#9;projectProperties.rootRefs = {}
&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[ProjectManager] Parsed project config had no rootRefs, initialized as empty table.&quot;)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;-- Ensure placeIds is present, even if empty
&#9;&#9;&#9;&#9;&#9;if not projectProperties.placeIds then
&#9;&#9;&#9;&#9;&#9;&#9;projectProperties.placeIds = {}
&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[ProjectManager] Parsed project config had no placeIds, initialized as empty table.&quot;)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;[ProjectManager] Failed to parse content of &quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;.. projectConfigFileName
&#9;&#9;&#9;&#9;&#9;&#9;&#9;.. &quot;: &quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;.. (parsedConfig or &quot;pcall error&quot;)
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;-- Item doesn&apos;t match expected project config format, skip it
&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&quot;[ProjectManager] Skipping item in snapshotArray: name=&quot;,
&#9;&#9;&#9;&#9;&#9;item and item.name,
&#9;&#9;&#9;&#9;&#9;&quot;type=&quot;,
&#9;&#9;&#9;&#9;&#9;item and type(item.content)
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;else
&#9;&#9;Log.error(&quot;[ProjectManager] snapshotArray is not a table. Cannot find project config.&quot;)
&#9;&#9;return nil
&#9;end

&#9;if not projectProperties then
&#9;&#9;-- The manifest file is optional in the new workflow; construct sane defaults.
&#9;&#9;Log.warn(&quot;[ProjectManager] Project configuration file not found; constructing default properties.&quot;)

&#9;&#9;projectProperties = {
&#9;&#9;&#9;name = actualProjectName,
&#9;&#9;&#9;id = actualProjectId,
&#9;&#9;&#9;rootRefs = {}, -- populated later after snapshot build
&#9;&#9;&#9;placeIds = {},
&#9;&#9;}
&#9;end

&#9;return projectProperties
end

return ProjectManager
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001015</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXA788B114ED3345779823C305F718A166">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b00</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Tree</string>
					<string name="ScriptGuid">{03bc7d80-4909-4b69-aa54-566fe752e903}</string>
					<string name="Source">--!native
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local HttpService = game:GetService(&quot;HttpService&quot;)

local Types = require(Lemonade.Types)
local Log = require(Lemonade.Log)

local Tree = {}
Tree.__index = Tree

function Tree.new()
&#9;local self = {
&#9;&#9;instanceMap = {},
&#9;&#9;metaMap = {},
&#9;&#9;idMap = {},
&#9;&#9;timestampMap = {},
&#9;}

&#9;setmetatable(self, Tree)

&#9;-- Register all Roblox services immediately with VM-compatible IDs
&#9;self:registerServices()

&#9;return self
end

function Tree:registerServices()
&#9;-- Predefined service IDs matching VM (from storage.ts)
&#9;local services = {
&#9;&#9;{ name = &quot;Workspace&quot;, id = &quot;ws1&quot; },
&#9;&#9;{ name = &quot;StarterPlayer&quot;, id = &quot;sp1&quot; },
&#9;&#9;{ name = &quot;ServerScriptService&quot;, id = &quot;sss&quot; },
&#9;&#9;{ name = &quot;StarterGui&quot;, id = &quot;sg1&quot; },
&#9;&#9;{ name = &quot;ServerStorage&quot;, id = &quot;ss1&quot; },
&#9;&#9;{ name = &quot;ReplicatedStorage&quot;, id = &quot;rs1&quot; },
&#9;&#9;{ name = &quot;StarterPack&quot;, id = &quot;spk&quot; },
&#9;&#9;{ name = &quot;ReplicatedFirst&quot;, id = &quot;rf1&quot; },
&#9;}

&#9;for _, svc in ipairs(services) do
&#9;&#9;local success, service = pcall(game.GetService, game, svc.name)
&#9;&#9;if success and service then
&#9;&#9;&#9;-- Remove any existing mapping for this service (in case it has a different ID)
&#9;&#9;&#9;local existingId = self:getId(service)
&#9;&#9;&#9;if existingId then
&#9;&#9;&#9;&#9;self:removeById(existingId)
&#9;&#9;&#9;&#9;Log.debug(&quot;[Tree] Removed old ID mapping for&quot;, svc.name, &quot;- old ID:&quot;, buffer.tostring(existingId))
&#9;&#9;&#9;end

&#9;&#9;&#9;local idBuffer = buffer.fromstring(svc.id)
&#9;&#9;&#9;self:insertInstance(service, idBuffer, {})
&#9;&#9;&#9;service:SetAttribute(&quot;uniqueId&quot;, svc.id)
&#9;&#9;&#9;Log.debug(&quot;[Tree] Registered service:&quot;, svc.name, &quot;with ID:&quot;, svc.id)
&#9;&#9;end
&#9;end

&#9;-- Register child services under StarterPlayer
&#9;local starterPlayer = game:GetService(&quot;StarterPlayer&quot;)
&#9;local childServices = {
&#9;&#9;{ parent = starterPlayer, name = &quot;StarterPlayerScripts&quot;, id = &quot;sps&quot; },
&#9;&#9;{ parent = starterPlayer, name = &quot;StarterCharacterScripts&quot;, id = &quot;scs&quot; },
&#9;}

&#9;for _, child in ipairs(childServices) do
&#9;&#9;local instance = child.parent:FindFirstChild(child.name)
&#9;&#9;if instance then
&#9;&#9;&#9;-- Remove any existing mapping for this instance (in case it has a different ID)
&#9;&#9;&#9;local existingId = self:getId(instance)
&#9;&#9;&#9;if existingId then
&#9;&#9;&#9;&#9;self:removeById(existingId)
&#9;&#9;&#9;&#9;Log.debug(&quot;[Tree] Removed old ID mapping for&quot;, child.name, &quot;- old ID:&quot;, buffer.tostring(existingId))
&#9;&#9;&#9;end

&#9;&#9;&#9;local idBuffer = buffer.fromstring(child.id)
&#9;&#9;&#9;self:insertInstance(instance, idBuffer, {})
&#9;&#9;&#9;instance:SetAttribute(&quot;uniqueId&quot;, child.id)
&#9;&#9;&#9;Log.debug(&quot;[Tree] Registered child service:&quot;, child.name, &quot;with ID:&quot;, child.id)
&#9;&#9;end
&#9;end
end

function Tree:insertInstance(instance: Instance, id_buffer_ref: Types.Ref, meta: Types.Meta, timestamp: number?)
&#9;-- id_buffer_ref is Types.Ref (buffer), which contains the Base64 string of the path.
&#9;-- For map keys and internal storage of the ID associated with an instance, we use the Base64 string.

&#9;local id_base64_string: string
&#9;local success, result = pcall(buffer.tostring, id_buffer_ref)

&#9;if success and result then
&#9;&#9;id_base64_string = result
&#9;else
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[Tree.insertInstance] CRITICAL: Failed to convert id_buffer_ref to string. Instance:&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;result or &quot;Unknown error&quot;
&#9;&#9;)
&#9;&#9;-- Fallback or error handling: if we can&apos;t get a string ID, we can&apos;t reliably map.
&#9;&#9;-- For now, let&apos;s try to use a placeholder or the raw buffer if string conversion fails, though this is risky.
&#9;&#9;-- A more robust solution might be to not insert if the ID is fundamentally broken.
&#9;&#9;id_base64_string = &quot;ERROR_ID_CONVERSION_FAILED_&quot; .. HttpService:GenerateGUID(false)
&#9;end

&#9;-- Ensure any existing mappings for this instance or ID are cleared if re-inserting/updating implicitly
&#9;local existing_id_for_instance = self.idMap[instance]
&#9;if existing_id_for_instance and existing_id_for_instance ~= id_base64_string then
&#9;&#9;self.instanceMap[existing_id_for_instance] = nil -- Clear old ID from instanceMap
&#9;&#9;self.metaMap[existing_id_for_instance] = nil -- Clear old meta
&#9;end

&#9;local existing_instance_for_id = self.instanceMap[id_base64_string]
&#9;if existing_instance_for_id and existing_instance_for_id ~= instance then
&#9;&#9;self.idMap[existing_instance_for_id] = nil -- Clear old instance from idMap
&#9;end

&#9;Log.trace(
&#9;&#9;&quot;[Tree.insertInstance] Storing instance:&quot;,
&#9;&#9;instance:GetFullName(),
&#9;&#9;&quot;with Base64 ID string:&quot;,
&#9;&#9;id_base64_string
&#9;)
&#9;self.instanceMap[id_base64_string] = instance
&#9;self.idMap[instance] = id_base64_string -- Store the Base64 string

&#9;-- insertMeta expects Types.Ref (buffer)
&#9;self:insertMeta(id_buffer_ref, meta)
&#9;-- Store timestamp if provided
&#9;if timestamp then
&#9;&#9;self:setTimestamp(id_buffer_ref, timestamp)
&#9;end
end

function Tree:updateInstance(id_buffer_ref: Types.Ref, instance: Instance, timestamp: number?)
&#9;-- id_buffer_ref is Types.Ref (buffer)
&#9;local id_base64_string: string
&#9;local success, result = pcall(buffer.tostring, id_buffer_ref)
&#9;if not (success and result) then
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[Tree.updateInstance] CRITICAL: Failed to convert id_buffer_ref to string for update. Instance:&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;result or &quot;Unknown error&quot;
&#9;&#9;)
&#9;&#9;return -- Cannot proceed without a valid string key
&#9;end
&#9;id_base64_string = result

&#9;local old_instance = self.instanceMap[id_base64_string]

&#9;if not old_instance then
&#9;&#9;Log.warn(
&#9;&#9;&#9;&quot;[Tree.updateInstance] No old instance found for ID:&quot;,
&#9;&#9;&#9;id_base64_string,
&#9;&#9;&#9;&quot;while trying to update to:&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&quot;. This might be an add disguised as update or a new ID.&quot;
&#9;&#9;)
&#9;&#9;-- To be safe, if it&apos;s not found, maybe this should be an insert? Or log and skip.
&#9;&#9;-- For now, we&apos;ll proceed assuming the intent is to map this new instance to this ID.
&#9;end

&#9;if old_instance then
&#9;&#9;self.idMap[old_instance] = nil -- Remove old instance&apos;s reverse mapping
&#9;end

&#9;self.instanceMap[id_base64_string] = instance
&#9;self.idMap[instance] = id_base64_string -- Store/update the Base64 string for the new instance
&#9;-- Update timestamp if provided
&#9;if timestamp then
&#9;&#9;self:setTimestamp(id_buffer_ref, timestamp)
&#9;end
end

function Tree:getId(instance: Instance): Types.Ref?
&#9;-- Retrieve the stored Base64 string ID for the instance
&#9;if instance == game then
&#9;&#9;Log.warn(&quot;[Tree.getId DEBUG FOR GAME] Trying to get ID for game instance.&quot;)
&#9;&#9;local mappedId = self.idMap[instance]
&#9;&#9;Log.warn(&quot;[Tree.getId DEBUG FOR GAME] ID from self.idMap[game]:&quot;, mappedId or &quot;nil&quot;)
&#9;end

&#9;local id_base64_string = self.idMap[instance]

&#9;if id_base64_string then
&#9;&#9;-- Convert the Base64 string back to a buffer (Types.Ref)
&#9;&#9;local success, ref_buffer = pcall(buffer.fromstring, id_base64_string)
&#9;&#9;if success and ref_buffer then
&#9;&#9;&#9;return ref_buffer
&#9;&#9;else
&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&quot;[Tree.getId] Failed to convert Base64 string ID back to buffer for instance:&quot;,
&#9;&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&#9;&quot;String ID:&quot;,
&#9;&#9;&#9;&#9;id_base64_string,
&#9;&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;&#9;ref_buffer or &quot;Unknown error&quot;
&#9;&#9;&#9;)
&#9;&#9;&#9;return nil
&#9;&#9;end
&#9;else
&#9;&#9;return nil
&#9;end
end

function Tree:getInstance(id_buffer_ref: Types.Ref): Instance?
&#9;-- id_buffer_ref is Types.Ref (buffer)
&#9;local id_base64_string: string
&#9;local success, result = pcall(buffer.tostring, id_buffer_ref)

&#9;if success and result and result == &quot;YWZmcnZiOTI4dXQ0NGE1enNkeGc0Nmp4L3Jvb3Q=&quot; then -- PROJECT_ROOT_ID_PLACEHOLDER
&#9;&#9;Log.warn(&quot;[Tree.getInstance DEBUG FOR GAME ID] Trying to get instance for root project ID string:&quot;, result)
&#9;&#9;local foundInstance = self.instanceMap[result]
&#9;&#9;Log.warn(
&#9;&#9;&#9;&quot;[Tree.getInstance DEBUG FOR GAME ID] Found instance:&quot;,
&#9;&#9;&#9;foundInstance,
&#9;&#9;&#9;(foundInstance == game and &quot;(it IS game)&quot; or &quot;(it IS NOT game)&quot;)
&#9;&#9;)
&#9;end

&#9;if not (success and result) then
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[Tree.getInstance] CRITICAL: Failed to convert id_buffer_ref to string. Value:&quot;,
&#9;&#9;&#9;id_buffer_ref,
&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;result or &quot;Unknown error&quot;
&#9;&#9;)
&#9;&#9;return nil -- Cannot lookup without a string key
&#9;end
&#9;id_base64_string = result

&#9;Log.trace(&quot;[Tree.getInstance] Looking up instance with Base64 ID string:&quot;, id_base64_string)
&#9;local instance = self.instanceMap[id_base64_string]

&#9;return instance
end

function Tree:removeByInstance(instance: Instance): Types.Ref?
&#9;local id_base64_string = self.idMap[instance]

&#9;if not id_base64_string then
&#9;&#9;return nil
&#9;end

&#9;self.instanceMap[id_base64_string] = nil
&#9;self.idMap[instance] = nil

&#9;local success, id_buffer_ref = pcall(buffer.fromstring, id_base64_string)
&#9;if not (success and id_buffer_ref) then
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[Tree.removeByInstance] Failed to convert Base64 string ID to buffer for removal. String ID:&quot;,
&#9;&#9;&#9;id_base64_string,
&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;id_buffer_ref or &quot;Unknown error&quot;
&#9;&#9;)
&#9;&#9;-- Even if conversion fails, we&apos;ve removed mappings. What to return?
&#9;&#9;-- Returning nil indicates original Ref couldn&apos;t be reconstructed.
&#9;&#9;return nil
&#9;end

&#9;-- removeMeta expects Types.Ref (buffer)
&#9;self:removeMeta(id_buffer_ref)
&#9;-- Also remove timestamp
&#9;self:removeTimestamp(id_buffer_ref)

&#9;return id_buffer_ref
end

function Tree:removeById(id_buffer_ref: Types.Ref): Instance?
&#9;-- id_buffer_ref is Types.Ref (buffer)
&#9;local id_base64_string: string
&#9;local success, result = pcall(buffer.tostring, id_buffer_ref)
&#9;if not (success and result) then
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[Tree.removeById] CRITICAL: Failed to convert id_buffer_ref to string. Value:&quot;,
&#9;&#9;&#9;id_buffer_ref,
&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;result or &quot;Unknown error&quot;
&#9;&#9;)
&#9;&#9;return nil -- Cannot proceed
&#9;end
&#9;id_base64_string = result

&#9;local instance = self.instanceMap[id_base64_string]

&#9;if not instance then
&#9;&#9;return nil
&#9;end

&#9;self.instanceMap[id_base64_string] = nil
&#9;self.idMap[instance] = nil

&#9;-- removeMeta expects Types.Ref (buffer)
&#9;self:removeMeta(id_buffer_ref)
&#9;-- Also remove timestamp
&#9;self:removeTimestamp(id_buffer_ref)

&#9;return instance
end

function Tree:insertMeta(id_buffer_ref: Types.Ref, meta: Types.Meta)
&#9;-- id_buffer_ref is Types.Ref (buffer)
&#9;local id_base64_string: string
&#9;local success, result = pcall(buffer.tostring, id_buffer_ref)
&#9;if not (success and result) then
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[Tree.insertMeta] CRITICAL: Failed to convert id_buffer_ref to string. Value:&quot;,
&#9;&#9;&#9;id_buffer_ref,
&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;result or &quot;Unknown error&quot;
&#9;&#9;)
&#9;&#9;return -- Cannot store meta without a string key
&#9;end
&#9;id_base64_string = result

&#9;self.metaMap[id_base64_string] = meta
end

function Tree:getMeta(id_buffer_ref: Types.Ref): Types.Meta?
&#9;-- id_buffer_ref is Types.Ref (buffer)
&#9;local id_base64_string: string
&#9;local success, result = pcall(buffer.tostring, id_buffer_ref)
&#9;if not (success and result) then
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[Tree.getMeta] CRITICAL: Failed to convert id_buffer_ref to string. Value:&quot;,
&#9;&#9;&#9;id_buffer_ref,
&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;result or &quot;Unknown error&quot;
&#9;&#9;)
&#9;&#9;return nil -- Cannot retrieve meta without a string key
&#9;end
&#9;id_base64_string = result

&#9;return self.metaMap[id_base64_string]
end

function Tree:updateMeta(id_buffer_ref: Types.Ref, meta: Types.Meta)
&#9;-- id_buffer_ref is Types.Ref (buffer)
&#9;local id_base64_string: string
&#9;local success, result = pcall(buffer.tostring, id_buffer_ref)
&#9;if not (success and result) then
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[Tree.updateMeta] CRITICAL: Failed to convert id_buffer_ref to string. Value:&quot;,
&#9;&#9;&#9;id_buffer_ref,
&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;result or &quot;Unknown error&quot;
&#9;&#9;)
&#9;&#9;return -- Cannot update meta without a string key
&#9;end
&#9;id_base64_string = result

&#9;local old = self.metaMap[id_base64_string]

&#9;if not old then
&#9;&#9;return
&#9;end

&#9;self.metaMap[id_base64_string] = meta
end

function Tree:removeMeta(id_buffer_ref: Types.Ref): Types.Meta?
&#9;-- id_buffer_ref is Types.Ref (buffer)
&#9;local id_base64_string: string
&#9;local success, result = pcall(buffer.tostring, id_buffer_ref)
&#9;if not (success and result) then
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[Tree.removeMeta] CRITICAL: Failed to convert id_buffer_ref to string. Value:&quot;,
&#9;&#9;&#9;id_buffer_ref,
&#9;&#9;&#9;&quot;Error:&quot;,
&#9;&#9;&#9;result or &quot;Unknown error&quot;
&#9;&#9;)
&#9;&#9;return nil -- Cannot remove meta without a string key
&#9;end
&#9;id_base64_string = result

&#9;local meta = self.metaMap[id_base64_string]

&#9;self.metaMap[id_base64_string] = nil

&#9;return meta
end

function Tree:changeInstanceId(instance: Instance, oldIdRef: Types.Ref, newIdRef: Types.Ref)
&#9;local oldStrId = buffer.tostring(oldIdRef)
&#9;local newStrId = buffer.tostring(newIdRef)

&#9;if oldStrId == newStrId then
&#9;&#9;Log.debug(&quot;[Tree:changeInstanceId] No change needed, IDs are the same:&quot;, oldStrId)
&#9;&#9;return -- No change needed
&#9;end

&#9;Log.debug(&quot;[Tree:changeInstanceId] Updating ID for instance:&quot;, instance:GetFullName())
&#9;Log.debug(&quot;  - Old ID:&quot;, oldStrId)
&#9;Log.debug(&quot;  - New ID:&quot;, newStrId)

&#9;-- Check if the instance provided is indeed currently mapped to oldStrId
&#9;if self.idMap[instance] ~= oldStrId then
&#9;&#9;-- This could happen if the instance\&apos;s ID was already updated or it\&apos;s not the one we expect
&#9;&#9;-- Log warning or error? For now, proceed cautiously.
&#9;&#9;-- This might indicate a logic flaw elsewhere if called incorrectly.
&#9;&#9;Log.warn(
&#9;&#9;&#9;string.format(
&#9;&#9;&#9;&#9;&quot;[Tree:changeInstanceId] Instance &apos;%s&apos; current ID &apos;%s&apos; does not match expected old ID &apos;%s&apos;. Proceeding cautiously.&quot;,
&#9;&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&#9;self.idMap[instance] or &quot;nil&quot;,
&#9;&#9;&#9;&#9;oldStrId
&#9;&#9;&#9;)
&#9;&#9;)
&#9;end

&#9;-- Remove old ID mapping
&#9;self.instanceMap[oldStrId] = nil

&#9;-- Update instance to new ID mapping
&#9;self.idMap[instance] = newStrId
&#9;self.instanceMap[newStrId] = instance

&#9;-- Move meta
&#9;local meta = self.metaMap[oldStrId]
&#9;self.metaMap[oldStrId] = nil
&#9;if meta then
&#9;&#9;self.metaMap[newStrId] = meta
&#9;end

&#9;-- Move timestamp
&#9;local ts = self.timestampMap[oldStrId]
&#9;self.timestampMap[oldStrId] = nil
&#9;if ts then
&#9;&#9;self.timestampMap[newStrId] = ts
&#9;end

&#9;Log.debug(&quot;[Tree:changeInstanceId] Successfully updated ID mapping for:&quot;, instance:GetFullName())
end

-- Timestamp specific methods
function Tree:setTimestamp(id_buffer_ref: Types.Ref, timestamp: number)
&#9;local id_base64_string: string
&#9;local success, result = pcall(buffer.tostring, id_buffer_ref)
&#9;if not (success and result) then
&#9;&#9;Log.error(&quot;[Tree.setTimestamp] CRITICAL: Failed to convert id_buffer_ref to string.&quot;)
&#9;&#9;return
&#9;end
&#9;id_base64_string = result
&#9;self.timestampMap[id_base64_string] = timestamp
end

function Tree:getTimestamp(id_buffer_ref: Types.Ref): number?
&#9;local id_base64_string: string
&#9;local success, result = pcall(buffer.tostring, id_buffer_ref)
&#9;if not (success and result) then
&#9;&#9;Log.error(&quot;[Tree.getTimestamp] CRITICAL: Failed to convert id_buffer_ref to string.&quot;)
&#9;&#9;return nil
&#9;end
&#9;id_base64_string = result
&#9;return self.timestampMap[id_base64_string]
end

function Tree:removeTimestamp(id_buffer_ref: Types.Ref): number?
&#9;local id_base64_string: string
&#9;local success, result = pcall(buffer.tostring, id_buffer_ref)
&#9;if not (success and result) then
&#9;&#9;Log.error(&quot;[Tree.removeTimestamp] CRITICAL: Failed to convert id_buffer_ref to string.&quot;)
&#9;&#9;return nil
&#9;end
&#9;id_base64_string = result
&#9;local ts = self.timestampMap[id_base64_string]
&#9;self.timestampMap[id_base64_string] = nil
&#9;return ts
end

-- Method to be called by Watcher when a tracked instance changes
function Tree:notifyInstanceChanged(instance: Instance, property: string)
&#9;Log.trace(
&#9;&#9;string.format(
&#9;&#9;&#9;&quot;[Tree.notifyInstanceChanged] Received notification for instance: %s, property: %s&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;property
&#9;&#9;)
&#9;)
&#9;-- Check if this instance is actually tracked by the tree
&#9;if self.idMap[instance] then
&#9;&#9;Log.trace(&quot;[Tree.notifyInstanceChanged] Instance is tracked.&quot;)
&#9;else
&#9;&#9;Log.trace(&quot;[Tree.notifyInstanceChanged] Instance is NOT tracked. No action taken.&quot;)
&#9;end
end

function Tree:moveInstance(instance: Instance, newId: Types.Ref?, preserveExistingMapping: boolean?)
&#9;-- This method handles moving an instance while preserving its ID mapping
&#9;-- If preserveExistingMapping is true, we keep the existing ID instead of using newId

&#9;local existingId = self:getId(instance)

&#9;if preserveExistingMapping and existingId then
&#9;&#9;-- Instance is being moved but should keep its existing ID
&#9;&#9;Log.debug(&quot;[Tree:moveInstance] Preserving existing ID for moved instance:&quot;, instance:GetFullName())

&#9;&#9;return existingId
&#9;elseif newId then
&#9;&#9;-- Standard move with new ID
&#9;&#9;if existingId then
&#9;&#9;&#9;-- Remove old mapping
&#9;&#9;&#9;self:removeByInstance(instance)
&#9;&#9;end

&#9;&#9;-- Insert with new ID
&#9;&#9;local id_base64_string = buffer.tostring(newId)
&#9;&#9;self.instanceMap[id_base64_string] = instance
&#9;&#9;self.idMap[instance] = id_base64_string

&#9;&#9;Log.debug(&quot;[Tree:moveInstance] Moved instance to new ID:&quot;, id_base64_string)
&#9;&#9;return newId
&#9;else
&#9;&#9;Log.warn(&quot;[Tree:moveInstance] No ID provided and preserveExistingMapping not set&quot;)
&#9;&#9;return existingId
&#9;end
end

function Tree:updateIdMapping(clientTemporaryIdString: string, newServerIdString: string)
&#9;Log.info(
&#9;&#9;&quot;[Tree.updateIdMapping] Attempting to update ID mapping. Old/Client ID:&quot;,
&#9;&#9;clientTemporaryIdString,
&#9;&#9;&quot;New/Server ID:&quot;,
&#9;&#9;newServerIdString
&#9;)

&#9;-- CORRUPTION PREVENTION: Validate that the server ID is not a path
&#9;if newServerIdString and (string.find(newServerIdString, &quot;/&quot;) or string.len(newServerIdString) &gt; 10) then
&#9;&#9;Log.error(
&#9;&#9;&#9;&quot;[Tree.updateIdMapping] CORRUPTION DETECTED: Server returned path as ID instead of uniqueId!&quot;,
&#9;&#9;&#9;&quot;ServerID:&quot;,
&#9;&#9;&#9;newServerIdString,
&#9;&#9;&#9;&quot;ClientID:&quot;,
&#9;&#9;&#9;clientTemporaryIdString
&#9;&#9;)
&#9;&#9;Log.error(&quot;[Tree.updateIdMapping] This indicates a backend bug - server should return uniqueId, not path&quot;)
&#9;&#9;Log.error(&quot;[Tree.updateIdMapping] Refusing to update mapping to prevent Tree corruption&quot;)
&#9;&#9;return -- Refuse to corrupt the Tree with path-based IDs
&#9;end

&#9;local instance = self.instanceMap[clientTemporaryIdString]

&#9;if instance then
&#9;&#9;Log.trace(&quot;[Tree.updateIdMapping] Instance found for client ID:&quot;, instance:GetFullName())

&#9;&#9;-- Clear old mappings
&#9;&#9;self.instanceMap[clientTemporaryIdString] = nil

&#9;&#9;-- If meta and timestamp maps use string IDs directly, update them here.
&#9;&#9;-- Based on insertInstance/getMeta, they convert from buffer on access or store by buffer.
&#9;&#9;-- For simplicity and assuming string IDs are primary keys for these maps now:
&#9;&#9;local oldMeta = self.metaMap[clientTemporaryIdString]
&#9;&#9;if oldMeta then
&#9;&#9;&#9;self.metaMap[clientTemporaryIdString] = nil
&#9;&#9;&#9;self.metaMap[newServerIdString] = oldMeta
&#9;&#9;&#9;Log.trace(&quot;[Tree.updateIdMapping] Transferred meta to new server ID.&quot;)
&#9;&#9;end

&#9;&#9;local oldTimestamp = self.timestampMap[clientTemporaryIdString]
&#9;&#9;if oldTimestamp then
&#9;&#9;&#9;self.timestampMap[clientTemporaryIdString] = nil
&#9;&#9;&#9;self.timestampMap[newServerIdString] = oldTimestamp
&#9;&#9;&#9;Log.trace(&quot;[Tree.updateIdMapping] Transferred timestamp to new server ID.&quot;)
&#9;&#9;end

&#9;&#9;-- Set new mappings
&#9;&#9;self.instanceMap[newServerIdString] = instance
&#9;&#9;self.idMap[instance] = newServerIdString

&#9;&#9;Log.info(
&#9;&#9;&#9;&quot;[Tree.updateIdMapping] Successfully updated ID for instance:&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&quot;New ID:&quot;,
&#9;&#9;&#9;newServerIdString
&#9;&#9;)
&#9;else
&#9;&#9;Log.warn(
&#9;&#9;&#9;&quot;[Tree.updateIdMapping] No instance found for clientTemporaryIdString:&quot;,
&#9;&#9;&#9;clientTemporaryIdString,
&#9;&#9;&#9;&quot;Cannot update to newServerIdString:&quot;,
&#9;&#9;&#9;newServerIdString
&#9;&#9;)
&#9;end
end

-- Reset Tree to completely clean state for reconnection
function Tree:resetState()
&#9;Log.debug(&quot;[Tree:resetState] Resetting Tree to clean state...&quot;)

&#9;-- Clear all mappings
&#9;self.instanceMap = {}
&#9;self.idMap = {}
&#9;self.metaMap = {}
&#9;self.timestampMap = {}

&#9;-- Re-register services after reset
&#9;self:registerServices()

&#9;Log.debug(&quot;[Tree:resetState] Tree state reset completed, services re-registered&quot;)
end

return Tree
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001016</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX433851EB7ACF40B397F7C5F7E2153A51">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b01</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Meta</string>
					<string name="ScriptGuid">{d70e6f8f-a8a6-47a2-952c-021c0efe8329}</string>
					<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Types = require(Lemonade.Types)

local Meta = {}
Meta.__index = Meta

function Meta.new(): Types.Meta
&#9;local self = setmetatable({}, Meta)

&#9;self.meshSource = nil

&#9;return self
end

return Meta
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001017</UniqueId>
				</Properties>
			</Item>
			<Item class="StringValue" referent="RBX030F8B3EA991466C9B2CC660A3D5A6A7">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b02</UniqueId>
					<string name="Name">init_refactor_plan</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001018</UniqueId>
					<string name="Value">&lt;b&gt;Refactor Plan &#226;&#128;&#147; &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;Core/init.luau&lt;/font&gt; Modularisation&lt;/b&gt;

&lt;i&gt;Goal: split the current, &lt;b&gt;2 000-line&lt;/b&gt; &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;init.luau&lt;/font&gt; into four cohesive modules that match the upcoming &lt;i&gt;JSONL-based&lt;/i&gt; workflow while discarding logic that is now obsolete. All changes listed below &lt;b&gt;only&lt;/b&gt; affect &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;init.luau&lt;/font&gt;; the extracted code will be copied (not removed) into the new modules in subsequent PRs so we keep history intact.&lt;/i&gt;

&lt;b&gt;Target File Layout&lt;/b&gt;

| New file                    | Primary responsibility                                                                      | | --------------------------- | ------------------------------------------------------------------------------------------- | | &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;Core/init.luau&lt;/font&gt;            | Thin orchestrator &#226;&#128;&#147; creates the other managers, wires signals, provides public API          | | &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;Core/ProjectManager.luau&lt;/font&gt;  | Project boot-strap, config parsing, hierarchy &#226;&#134;&#146; JSONL export, projectStructure row tracking | | &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;Core/SyncCoordinator.luau&lt;/font&gt; | Watcher aggregation loop, debounce &amp;amp; batching, server push/poll plumbing                    | | &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;Core/InstanceManager.luau&lt;/font&gt; | &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;Tree&lt;/font&gt; bookkeeping, uniqueId helpers, manual/forced sync utilities                          |

&lt;b&gt;Step-by-Step Tasks&lt;/b&gt;

&lt;b&gt;1 &#226;&#128;&#148; Remove totally obsolete code blocks&lt;/b&gt;

&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] &lt;b&gt;Delete Executor fallback stub&lt;/b&gt; (&lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;lines 190-198&lt;/font&gt;). &lt;i&gt;Why?&lt;/i&gt; Dynamic code evaluation has been banned; no future module needs it.
&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] &lt;b&gt;Delete commented-out legacy imports&lt;/b&gt; (&lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;SemVer&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;manifest&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;equals&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;isSyncableInstance&lt;/font&gt;). &lt;i&gt;Why?&lt;/i&gt; These were already removed in the first cleanup pass; keeping the comments only clutters the file.
&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] &lt;b&gt;Remove collision-detection helpers reference&lt;/b&gt; (now gone, but the &lt;i&gt;rationale&lt;/i&gt; comment block at top of file can be trimmed). &lt;i&gt;Why?&lt;/i&gt; The new ID workflow no longer needs path-based name uniqueness checks.

&lt;b&gt;2 &#226;&#128;&#148; Extract &lt;i&gt;project&lt;/i&gt; concerns &#226;&#134;&#146; &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;ProjectManager&lt;/font&gt;&lt;/b&gt;

&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] Move helpers &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;_ensureUniqueId&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;_buildHierarchy&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;_collectProjectHierarchy&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;_printProjectHierarchy&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;_syncProjectStructure&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;_loadSavedProjectStructureId&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;_saveProjectStructureId&lt;/font&gt;. &lt;i&gt;Decision:&lt;/i&gt; These purely build/ship the project JSONL and manage the persistent &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;projectStructure&lt;/font&gt; row, aligning with the &lt;i&gt;web &#226;&#134;&#146; studio&lt;/i&gt; branch of the new workflow.
&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] Relocate &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;getProjectId&lt;/font&gt;/&lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;updateProjectId&lt;/font&gt; and the settings-key constants. &lt;i&gt;Keeps Core lean &amp;amp; delegates settings IO to a single place.&lt;/i&gt;

&lt;b&gt;3 &#226;&#128;&#148; Extract &lt;i&gt;instance&lt;/i&gt; concerns &#226;&#134;&#146; &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;InstanceManager&lt;/font&gt;&lt;/b&gt;

&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] Move &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;manualSyncInstance&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;forceFullSync&lt;/font&gt;, and the internal duplicate-guard logic. &lt;i&gt;These methods manipulate individual &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;Instance&lt;/font&gt; objects and update the &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;Tree&lt;/font&gt;; perfect fit for an Instance manager.&lt;/i&gt;
&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] Port &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;_ensureUniqueId&lt;/font&gt; (shared by hierarchy builder) so both Project and Instance managers can reuse it. &lt;i&gt;Will expose via &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;InstanceManager.ensureUniqueId&lt;/font&gt;.&lt;/i&gt;

&lt;b&gt;4 &#226;&#128;&#148; Extract &lt;i&gt;sync&lt;/i&gt; concerns &#226;&#134;&#146; &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;SyncCoordinator&lt;/font&gt;&lt;/b&gt;

&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] Cut the entire &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;__startSyncbackLoop&lt;/font&gt; implementation from &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;Core&lt;/font&gt; and paste into &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;SyncCoordinator.start&lt;/font&gt;. &lt;i&gt;The loop is self-contained and only needs access to the Tree + HttpSync.&lt;/i&gt;
&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] Move Poll start/stop wiring (&lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;Scheduler.Poll&lt;/font&gt;) alongside the loop. &lt;i&gt;Keeps all server-communication in one module.&lt;/i&gt;

&lt;b&gt;5 &#226;&#128;&#148; Shrink &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;Core/init.luau&lt;/font&gt;&lt;/b&gt;

&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] Replace direct field instantiation with manager objects:

&lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;self.projectManager = ProjectManager.new(pluginArg)
self.instanceManager = InstanceManager.new(self.tree)
self.syncCoordinator = SyncCoordinator.new(self.tree, self.instanceManager)&lt;/font&gt;
&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] Rewrite &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;run()&lt;/font&gt; to delegate:

1. &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;projectManager:initialize()&lt;/font&gt; &#226;&#128;&#147; fetch snapshot &amp;amp; build tree
2. &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;instanceManager:hydrate()&lt;/font&gt; &#226;&#128;&#147; register services into Tree
3. &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;syncCoordinator:start()&lt;/font&gt; &#226;&#128;&#147; begin watch &amp;amp; poll loops
&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] Keep &lt;i&gt;only&lt;/i&gt; lightweight public helpers (&lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;onPrompt&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;onReady&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;onSync&lt;/font&gt;, &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;stop&lt;/font&gt;, etc.).

&lt;b&gt;6 &#226;&#128;&#148; House-keeping&lt;/b&gt;

&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] Update all &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;require()&lt;/font&gt; paths that the extracted code references so that &lt;b&gt;no circular dependencies&lt;/b&gt; arise.
&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; [x] Add minimal doc-string headers to each new file to describe its role.



&lt;b&gt;Why functionality stays intact&lt;/b&gt;

&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; The &lt;b&gt;core orchestration&lt;/b&gt; remains; we are &lt;i&gt;moving&lt;/i&gt; code, &lt;b&gt;not deleting&lt;/b&gt; it. Each extracted function will be copied verbatim, so runtime behaviour is preserved.
&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; Obsolete stubs (Executor, legacy imports) are not used anywhere else, so their removal does not change execution.
&lt;b&gt;&#226;&#128;&#162;&lt;/b&gt; Splitting logic allows us to implement the &lt;i&gt;new&lt;/i&gt;workflow&lt;i&gt;incrementally &#226;&#128;&#147; future commits will adjust&lt;/i&gt;only_ the relevant module without touching an unwieldy 2 000-line file.



&lt;b&gt;Next Up&lt;/b&gt;

After this refactor skeleton lands we can progressively:

1. Port updated JSONL diff logic into &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;SyncCoordinator&lt;/font&gt;.
2. Move existing tests to target the new modules.
3. Delete the duplicate code left in &lt;font family=&apos;rbxasset://fonts/families/RobotoMono.json&apos;&gt;init.luau&lt;/font&gt; once the move is complete.</string>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXB9DB86B668014A76829E223FB654DBF2">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b03</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Changes</string>
					<string name="ScriptGuid">{10ec16f4-bb54-46ec-92e3-2d3f25d213e9}</string>
					<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Types = require(Lemonade.Types)

local Changes = {}
Changes.__index = Changes

function Changes.new()
&#9;local self = {
&#9;&#9;additions = {} :: { Types.AddedSnapshot },
&#9;&#9;updates = {} :: { Types.UpdatedSnapshot },
&#9;&#9;removals = {} :: { Types.Ref | Instance },
&#9;&#9;moves = {} :: { Types.MoveSnapshot },
&#9;}

&#9;return setmetatable(self, Changes)
end

function Changes:add(snapshot: Types.Snapshot, parent: Types.Ref?)
&#9;local addedSnapshot = snapshot
&#9;addedSnapshot.parent = parent or addedSnapshot.parent

&#9;table.insert(self.additions, addedSnapshot)
end

function Changes:update(snapshot: Types.UpdatedSnapshot)
&#9;table.insert(self.updates, snapshot)
end

function Changes:remove(object: Types.Ref | Instance)
&#9;table.insert(self.removals, object)
end

function Changes:move(snapshot: Types.MoveSnapshot)
&#9;table.insert(self.moves, snapshot)
end

function Changes:join(other: Types.Changes, check: boolean?)
&#9;for _, addition in other.additions do
&#9;&#9;if check then
&#9;&#9;&#9;self:removePrevious(&quot;additions&quot;, addition.id)
&#9;&#9;end

&#9;&#9;self:add(addition)
&#9;end

&#9;for _, update in other.updates do
&#9;&#9;if check then
&#9;&#9;&#9;self:removePrevious(&quot;updates&quot;, update.id)
&#9;&#9;end

&#9;&#9;self:update(update)
&#9;end

&#9;for _, removal in other.removals do
&#9;&#9;if check then
&#9;&#9;&#9;self:removePrevious(&quot;removals&quot;, removal)
&#9;&#9;end

&#9;&#9;self:remove(removal)
&#9;end

&#9;for _, move in other.moves do
&#9;&#9;if check then
&#9;&#9;&#9;self:removePrevious(&quot;moves&quot;, move.id)
&#9;&#9;end

&#9;&#9;self:move(move)
&#9;end
end

function Changes:removePrevious(kind: &quot;additions&quot; | &quot;updates&quot; | &quot;removals&quot; | &quot;moves&quot;, id: Types.Ref)
&#9;local changeId = typeof(id) == &quot;string&quot; and id or (id and buffer.tostring(id) or nil)

&#9;if not changeId then
&#9;&#9;return -- Can&apos;t remove if we don&apos;t have a valid ID
&#9;end

&#9;for index, change in self[kind] do
&#9;&#9;local compareId = nil
&#9;&#9;if kind == &quot;removals&quot; then
&#9;&#9;&#9;-- For removals, change is the ID directly
&#9;&#9;&#9;if change then
&#9;&#9;&#9;&#9;compareId = typeof(change) == &quot;string&quot; and change or buffer.tostring(change)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;-- For other types, change.id is the ID
&#9;&#9;&#9;if change and change.id then
&#9;&#9;&#9;&#9;compareId = typeof(change.id) == &quot;string&quot; and change.id or buffer.tostring(change.id)
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if compareId and compareId == changeId then
&#9;&#9;&#9;table.remove(self[kind], index)
&#9;&#9;&#9;break -- Exit after removing the first match
&#9;&#9;end
&#9;end
end

function Changes:total(): number
&#9;return #self.additions + #self.updates + #self.removals + #self.moves
end

function Changes:isEmpty(): boolean
&#9;return self:total() == 0
end

function Changes.Total(changes: Types.Changes): number
&#9;return #changes.additions + #changes.updates + #changes.removals + #changes.moves
end

return Changes
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001019</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX2741B2BBA39540C8AEDA459577B8EEC5">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b04</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">InstanceManager</string>
					<string name="ScriptGuid">{cff46be7-b5c0-4824-b6c4-fd65f05b737f}</string>
					<string name="Source">--!strict

--[[
&#9;InstanceManager.luau
&#9;
&#9;Handles Tree bookkeeping, uniqueId helpers, manual/forced sync utilities.
&#9;This module encapsulates all logic related to individual Instance objects
&#9;and their synchronization with the backend database.
&#9;
&#9;Primary responsibilities:
&#9;- Manage unique ID attributes for instances
&#9;- Handle manual sync operations for cloned instances
&#9;- Execute batch sync of all syncable instances
&#9;- Build and hydrate tree structure from snapshot data
&#9;- Manage instance-to-ID mappings
]]

local HttpService = game:GetService(&quot;HttpService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Log = require(Lemonade.Log)
local Changes = require(script.Parent.Changes)
local HttpSync = require(Lemonade.Net.HttpSync)

local InstanceManager = {}
InstanceManager.__index = InstanceManager

function InstanceManager.new(tree, processor)
&#9;local self = setmetatable({}, InstanceManager)

&#9;self.tree = tree
&#9;self.processor = processor

&#9;return self
end

-- Helper to ensure each instance has a persistent uniqueId attribute (3-char hash)
-- This is shared with ProjectManager for hierarchy building
function InstanceManager.ensureUniqueId(instance: Instance): string
&#9;local existing = instance:GetAttribute(&quot;uniqueId&quot;)
&#9;if existing and typeof(existing) == &quot;string&quot; then
&#9;&#9;return existing
&#9;end

&#9;-- Generate random 3-character hex string using GUID
&#9;local guid = HttpService:GenerateGUID(false) -- e.g., 0123456789abcdef...
&#9;local hash = string.sub(guid:gsub(&quot;-&quot;, &quot;&quot;), 1, 3)
&#9;pcall(function()
&#9;&#9;instance:SetAttribute(&quot;uniqueId&quot;, hash)
&#9;end)
&#9;return hash
end

-- Manual sync method for clone operations to ensure cloned instances are saved to database
function InstanceManager:manualSyncInstance(instance: Instance)
&#9;Log.info(&quot;[InstanceManager] Manual sync requested for instance:&quot;, instance:GetFullName())

&#9;-- Use the ReadProcessor to generate an add snapshot for the cloned instance
&#9;local addSnapshot = self.processor.read:onAdd(instance)
&#9;if addSnapshot then
&#9;&#9;Log.info(&quot;[InstanceManager] Generated add snapshot for manual sync:&quot;, instance.Name)

&#9;&#9;-- Create a changes object and push it directly to the server
&#9;&#9;local changesToPush = Changes.new()
&#9;&#9;changesToPush:add(addSnapshot)

&#9;&#9;if not changesToPush:isEmpty() then
&#9;&#9;&#9;Log.info(&quot;[InstanceManager] Pushing manual sync changes directly to server&quot;)

&#9;&#9;&#9;-- Push directly using HttpSync (bypassing the normal aggregate loop)
&#9;&#9;&#9;task.spawn(function()
&#9;&#9;&#9;&#9;task.wait(0.05) -- Small delay to ensure processing completes
&#9;&#9;&#9;&#9;Log.info(&quot;[InstanceManager] Calling HttpSync.pushSync for manual sync&quot;)
&#9;&#9;&#9;&#9;local response = HttpSync.pushSync(changesToPush)

&#9;&#9;&#9;&#9;-- Handle server response for ID mapping
&#9;&#9;&#9;&#9;if response and response.results then
&#9;&#9;&#9;&#9;&#9;for _, result in response.results do
&#9;&#9;&#9;&#9;&#9;&#9;if result.clientChangeId and result.serverId then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local clientIdBuffer = buffer.fromstring(result.clientChangeId)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local serverIdBuffer = buffer.fromstring(result.serverId)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;local foundInstance = self.tree:getInstance(clientIdBuffer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if foundInstance then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[InstanceManager] Manual sync: Updating tree ID mapping for instance:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;foundInstance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;self.tree:changeInstanceId(foundInstance, clientIdBuffer, serverIdBuffer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;Log.info(&quot;[InstanceManager] Manual sync completed for:&quot;, instance.Name)
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;else
&#9;&#9;Log.warn(&quot;[InstanceManager] Failed to generate add snapshot for manual sync&quot;)
&#9;end
end

-- Force a full sync of all currently present syncable instances in Studio.
-- Collects entire hierarchy via BFS and sends directly to VM via Convex action.
-- @param rootInstances  The root instances to traverse (usually game services)
-- @param watcher        The file watcher to pause during sync operations
-- @param batchSize      (unused, kept for API compatibility)
-- @param onProgress     Callback to report progress (called with number of nodes synced)
-- @param onDone         Callback to invoke when sync completes
function InstanceManager:forceFullSync(
&#9;rootInstances: { Instance },
&#9;watcher,
&#9;batchSize: number?,
&#9;onProgress: ((number) -&gt; ())?,
&#9;onDone: (() -&gt; ())?
)
&#9;Log.info(&quot;[InstanceManager] Full Sync requested (direct to VM mode)&quot;)

&#9;-- Step 1: Collect all nodes using efficient BFS traversal
&#9;local allNodes = {}
&#9;for _, root in ipairs(rootInstances) do
&#9;&#9;local result = self.processor.read:buildSubtreeSnapshotBfs(root)
&#9;&#9;if result and result.flat then
&#9;&#9;&#9;for _, node in ipairs(result.flat) do
&#9;&#9;&#9;&#9;table.insert(allNodes, node)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;local totalNodes = #allNodes
&#9;Log.info(&quot;[InstanceManager] Full Sync: collected&quot;, totalNodes, &quot;nodes via BFS&quot;)

&#9;if totalNodes == 0 then
&#9;&#9;Log.warn(&quot;[InstanceManager] Full Sync: no nodes to sync&quot;)
&#9;&#9;if onDone then
&#9;&#9;&#9;onDone()
&#9;&#9;end
&#9;&#9;return
&#9;end

&#9;-- Step 2: Send directly to VM via Convex action (with watcher pause)
&#9;local function doSync()
&#9;&#9;local result = HttpSync.fullSyncToVM(allNodes)

&#9;&#9;if not (result and result.Success) then
&#9;&#9;&#9;local errorMsg = &quot;Full Sync failed: could not sync to VM&quot;
&#9;&#9;&#9;Log.error(&quot;[InstanceManager]&quot;, errorMsg)
&#9;&#9;&#9;error(errorMsg)
&#9;&#9;&#9;return
&#9;&#9;end

&#9;&#9;-- Decode response
&#9;&#9;local ok, response = pcall(game:GetService(&quot;HttpService&quot;).JSONDecode, game:GetService(&quot;HttpService&quot;), result.Body)
&#9;&#9;if ok and response then
&#9;&#9;&#9;Log.info(string.format(
&#9;&#9;&#9;&#9;&quot;[InstanceManager] Full Sync completed: %d nodes processed, %d errors&quot;,
&#9;&#9;&#9;&#9;response.nodesProcessed or 0,
&#9;&#9;&#9;&#9;response.errors or 0
&#9;&#9;&#9;))

&#9;&#9;&#9;if response.errors and response.errors &gt; 0 then
&#9;&#9;&#9;&#9;Log.warn(string.format(&quot;[InstanceManager] Full Sync had %d errors&quot;, response.errors))
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;-- Report progress
&#9;&#9;if onProgress then
&#9;&#9;&#9;onProgress(totalNodes)
&#9;&#9;end
&#9;end

&#9;-- Pause watcher during sync
&#9;if watcher and watcher.pause then
&#9;&#9;watcher:pause(doSync)
&#9;else
&#9;&#9;doSync()
&#9;end

&#9;if onDone then
&#9;&#9;onDone()
&#9;end
end

-- Hydrate the tree with snapshot data and register services
-- This method encapsulates the tree building logic that was in Core:run()
function InstanceManager:hydrate(snapshotArray, projectProperties)
&#9;Log.info(&quot;[InstanceManager] Hydrating tree with&quot;, #snapshotArray, &quot;items&quot;)

&#9;-- Create ID mapping for flat items (convert string IDs to buffers)
&#9;local itemsById = {}
&#9;for _, item in ipairs(snapshotArray) do
&#9;&#9;if item._id then
&#9;&#9;&#9;-- Convert string ID to buffer
&#9;&#9;&#9;local bufferId = buffer.fromstring(item._id)
&#9;&#9;&#9;item.id = bufferId
&#9;&#9;&#9;itemsById[item._id] = item

&#9;&#9;&#9;-- Also convert parent ID if it exists and is a string
&#9;&#9;&#9;if item.parentId then
&#9;&#9;&#9;&#9;if typeof(item.parentId) == &quot;string&quot; then
&#9;&#9;&#9;&#9;&#9;item.parent = buffer.fromstring(item.parentId)
&#9;&#9;&#9;&#9;elseif typeof(item.parentId) == &quot;buffer&quot; then
&#9;&#9;&#9;&#9;&#9;-- Already a buffer, use as-is
&#9;&#9;&#9;&#9;&#9;item.parent = item.parentId
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Clear the children array from server (contains string IDs)
&#9;&#9;&#9;-- We&apos;ll rebuild it with actual child objects
&#9;&#9;&#9;item.children = {}
&#9;&#9;end
&#9;end

&#9;-- Build parent-child relationships
&#9;local relationshipsBuilt = 0
&#9;for _, item in ipairs(snapshotArray) do
&#9;&#9;if item.parentId and itemsById[item.parentId] then
&#9;&#9;&#9;local parent = itemsById[item.parentId]
&#9;&#9;&#9;if not parent.children then
&#9;&#9;&#9;&#9;parent.children = {}
&#9;&#9;&#9;end
&#9;&#9;&#9;-- Add the full item as a child, not just the ID
&#9;&#9;&#9;table.insert(parent.children, item)
&#9;&#9;&#9;Log.info(&quot;[InstanceManager] Built relationship:&quot;, item.name, &quot;&#226;&#134;&#146;&quot;, parent.name)
&#9;&#9;&#9;relationshipsBuilt = relationshipsBuilt + 1
&#9;&#9;elseif item.parentId then
&#9;&#9;&#9;Log.warn(&quot;[InstanceManager] Could not find parent for item:&quot;, item.name, &quot;ParentId:&quot;, item.parentId)
&#9;&#9;end
&#9;end
&#9;Log.info(&quot;[InstanceManager] Built&quot;, relationshipsBuilt, &quot;parent-child relationships&quot;)

&#9;-- Create root snapshot structure that Processor expects
&#9;local rootSnapshot = {
&#9;&#9;id = buffer.fromstring(&quot;ROOT_DATAMODEL_ID&quot;),
&#9;&#9;name = &quot;DataModel&quot;,
&#9;&#9;class = &quot;DataModel&quot;,
&#9;&#9;properties = {},
&#9;&#9;meta = {},
&#9;&#9;children = {},
&#9;}

&#9;-- Find all root-level items (no parent or service-level)
&#9;local knownServices = {
&#9;&#9;&quot;Workspace&quot;,
&#9;&#9;&quot;ReplicatedStorage&quot;,
&#9;&#9;&quot;ReplicatedFirst&quot;,
&#9;&#9;&quot;ServerScriptService&quot;,
&#9;&#9;&quot;ServerStorage&quot;,
&#9;&#9;&quot;StarterGui&quot;,
&#9;&#9;&quot;StarterPack&quot;,
&#9;&#9;&quot;StarterPlayer&quot;,
&#9;&#9;&quot;StarterPlayerScripts&quot;,
&#9;&#9;&quot;StarterCharacterScripts&quot;,
&#9;}

&#9;-- Also collect services that exist in the snapshot but aren&apos;t in knownServices
&#9;local foundServices = {}
&#9;for _, item in ipairs(snapshotArray) do
&#9;&#9;-- Check if this item looks like a service (folder at root level)
&#9;&#9;if (not item.parentId or item.parentId == &quot;ROOT_DATAMODEL_ID&quot;) and item.type == &quot;folder&quot; then
&#9;&#9;&#9;foundServices[item.name] = item
&#9;&#9;end
&#9;end

&#9;for _, item in ipairs(snapshotArray) do
&#9;&#9;-- Check if this is a service or root-level item
&#9;&#9;local isService = false
&#9;&#9;for _, serviceName in ipairs(knownServices) do
&#9;&#9;&#9;if item.name == serviceName and (not item.parentId or item.parentId == &quot;ROOT_DATAMODEL_ID&quot;) then
&#9;&#9;&#9;&#9;isService = true
&#9;&#9;&#9;&#9;-- Ensure service has correct class
&#9;&#9;&#9;&#9;item.class = serviceName
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;Log.info(
&#9;&#9;&#9;&quot;[InstanceManager DEBUG] Checking item:&quot;,
&#9;&#9;&#9;item.name,
&#9;&#9;&#9;&quot;isService:&quot;,
&#9;&#9;&#9;isService,
&#9;&#9;&#9;&quot;parentId:&quot;,
&#9;&#9;&#9;item.parentId or &quot;nil&quot;
&#9;&#9;)

&#9;&#9;-- Add root-level items and services to root snapshot
&#9;&#9;if isService or not item.parentId or item.parentId == &quot;ROOT_DATAMODEL_ID&quot; then
&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&quot;[InstanceManager] Adding to rootSnapshot:&quot;,
&#9;&#9;&#9;&#9;item.name,
&#9;&#9;&#9;&#9;&quot;Type:&quot;,
&#9;&#9;&#9;&#9;item.type or item.class,
&#9;&#9;&#9;&#9;&quot;Children:&quot;,
&#9;&#9;&#9;&#9;item.children and #item.children or 0
&#9;&#9;&#9;)
&#9;&#9;&#9;table.insert(rootSnapshot.children, item)
&#9;&#9;else
&#9;&#9;&#9;Log.info(&quot;[InstanceManager DEBUG] Skipping item:&quot;, item.name, &quot;not a root service&quot;)
&#9;&#9;end
&#9;end

&#9;-- Add any found services that weren&apos;t in knownServices
&#9;for serviceName, serviceItem in pairs(foundServices) do
&#9;&#9;local alreadyAdded = false
&#9;&#9;for _, child in ipairs(rootSnapshot.children) do
&#9;&#9;&#9;if child.name == serviceName then
&#9;&#9;&#9;&#9;alreadyAdded = true
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if not alreadyAdded then
&#9;&#9;&#9;Log.info(&quot;[InstanceManager] Adding found service to rootSnapshot:&quot;, serviceName)
&#9;&#9;&#9;serviceItem.class = serviceName -- Assume service name is class name
&#9;&#9;&#9;table.insert(rootSnapshot.children, serviceItem)
&#9;&#9;end
&#9;end

&#9;-- Set rootRefs for project
&#9;if projectProperties then
&#9;&#9;Log.debug(&quot;[InstanceManager] Setting rootRefs&quot;)
&#9;&#9;projectProperties.rootRefs = {}
&#9;&#9;for _, child in ipairs(rootSnapshot.children) do
&#9;&#9;&#9;table.insert(projectProperties.rootRefs, child.id)
&#9;&#9;end

&#9;&#9;-- CRITICAL FIX: Ensure all knownServices are included in rootRefs even if they&apos;re empty
&#9;&#9;-- This is needed so Watcher monitors all services where users might add instances
&#9;&#9;Log.debug(&quot;[InstanceManager] Checking missing services&quot;)

&#9;&#9;-- Use the same service-to-uniqueId mapping as the VM to ensure compatibility
&#9;&#9;local serviceToUniqueId = {
&#9;&#9;&#9;[&quot;Workspace&quot;] = &quot;ws1&quot;,
&#9;&#9;&#9;[&quot;StarterPlayer&quot;] = &quot;sp1&quot;,
&#9;&#9;&#9;[&quot;ServerScriptService&quot;] = &quot;sss&quot;,
&#9;&#9;&#9;[&quot;StarterGui&quot;] = &quot;sg1&quot;,
&#9;&#9;&#9;[&quot;ServerStorage&quot;] = &quot;ss1&quot;,
&#9;&#9;&#9;[&quot;ReplicatedStorage&quot;] = &quot;rs1&quot;,
&#9;&#9;&#9;[&quot;StarterPack&quot;] = &quot;spk&quot;,
&#9;&#9;&#9;[&quot;ReplicatedFirst&quot;] = &quot;rf1&quot;,
&#9;&#9;}

&#9;&#9;for _, serviceName in ipairs(knownServices) do
&#9;&#9;&#9;Log.debug(&quot;[InstanceManager] Checking service:&quot;, serviceName)
&#9;&#9;&#9;local service = game:GetService(serviceName)
&#9;&#9;&#9;if service then
&#9;&#9;&#9;&#9;local serviceId = self.tree:getId(service)
&#9;&#9;&#9;&#9;Log.debug(&quot;[InstanceManager] Service&quot;, serviceName, &quot;ID:&quot;, serviceId and &quot;found&quot; or &quot;nil&quot;)

&#9;&#9;&#9;&#9;-- If service doesn&apos;t have an ID, use the predefined VM-compatible uniqueId
&#9;&#9;&#9;&#9;if not serviceId then
&#9;&#9;&#9;&#9;&#9;local predefinedUniqueId = serviceToUniqueId[serviceName]
&#9;&#9;&#9;&#9;&#9;if predefinedUniqueId then
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[InstanceManager] Using predefined uniqueId for&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;serviceName,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;predefinedUniqueId
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;-- Set the uniqueId attribute to match VM
&#9;&#9;&#9;&#9;&#9;&#9;service:SetAttribute(&quot;uniqueId&quot;, predefinedUniqueId)
&#9;&#9;&#9;&#9;&#9;&#9;-- Convert to buffer and insert into tree
&#9;&#9;&#9;&#9;&#9;&#9;local uidBuffer = buffer.fromstring(predefinedUniqueId)
&#9;&#9;&#9;&#9;&#9;&#9;self.tree:insertInstance(service, uidBuffer, {})
&#9;&#9;&#9;&#9;&#9;&#9;serviceId = uidBuffer
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[InstanceManager] Service&quot;, serviceName, &quot;registered with predefined ID&quot;)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[InstanceManager] No predefined ID for service:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;serviceName,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;- generating random ID&quot;
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;-- Fallback to random ID for services not in VM&apos;s predefined list
&#9;&#9;&#9;&#9;&#9;&#9;local guid = HttpService:GenerateGUID(false)
&#9;&#9;&#9;&#9;&#9;&#9;local uid = string.sub(guid:gsub(&quot;-&quot;, &quot;&quot;), 1, 3)
&#9;&#9;&#9;&#9;&#9;&#9;service:SetAttribute(&quot;uniqueId&quot;, uid)
&#9;&#9;&#9;&#9;&#9;&#9;local uidBuffer = buffer.fromstring(uid)
&#9;&#9;&#9;&#9;&#9;&#9;self.tree:insertInstance(service, uidBuffer, {})
&#9;&#9;&#9;&#9;&#9;&#9;serviceId = uidBuffer
&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[InstanceManager] Service&quot;, serviceName, &quot;registered with random ID:&quot;, uid)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if serviceId then
&#9;&#9;&#9;&#9;&#9;-- Check if this service is already in rootRefs
&#9;&#9;&#9;&#9;&#9;-- Note: Must compare string values, not buffer objects (buffers compare by reference!)
&#9;&#9;&#9;&#9;&#9;local serviceIdString = buffer.tostring(serviceId)
&#9;&#9;&#9;&#9;&#9;local alreadyInRefs = false
&#9;&#9;&#9;&#9;&#9;for _, existingId in ipairs(projectProperties.rootRefs) do
&#9;&#9;&#9;&#9;&#9;&#9;local existingIdString = buffer.tostring(existingId)
&#9;&#9;&#9;&#9;&#9;&#9;if existingIdString == serviceIdString then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;alreadyInRefs = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[InstanceManager] Service&quot;, serviceName, &quot;alreadyInRefs:&quot;, alreadyInRefs)
&#9;&#9;&#9;&#9;&#9;if not alreadyInRefs then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(projectProperties.rootRefs, serviceId)
&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[InstanceManager] Added missing empty service to rootRefs:&quot;, serviceName)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.debug(&quot;[InstanceManager] Could not get service:&quot;, serviceName)
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;Log.info(&quot;[InstanceManager] Final rootRefs with&quot;, #projectProperties.rootRefs, &quot;entries&quot;)
&#9;end

&#9;Log.info(&quot;[InstanceManager] Final rootSnapshot has&quot;, #rootSnapshot.children, &quot;direct children&quot;)

&#9;return rootSnapshot
end

return InstanceManager
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a40000101a</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBXA94F72F94D6F4C1785C4329732394421">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b05</UniqueId>
				<string name="LinkedSource"></string>
				<string name="Name">App</string>
				<string name="ScriptGuid">{38bedb69-84d1-48f0-8bdf-1c234582e06b}</string>
				<string name="Source">local RunService = game:GetService(&quot;RunService&quot;)
local HttpService = game:GetService(&quot;HttpService&quot;)
local TweenService = game:GetService(&quot;TweenService&quot;)

local plugin = script:FindFirstAncestorWhichIsA(&quot;Plugin&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Packages = Lemonade.Packages
local Helpers = Lemonade.Helpers

local Components = script.Components
local Widgets = script.Widgets
local Pages = script.Pages

-- Assuming the correct &apos;Packages&apos; folder remains after manual deletion
local Fusion = require(Packages.Fusion)
local Signal = require(Packages.Signal)

local manifest = require(Lemonade.manifest)
local Config = require(Lemonade.Config)
local Util = require(Lemonade.Util)
local Core = require(Lemonade.Core)
local Log = require(Lemonade.Log)
local describeChanges = require(Helpers.describeChanges)

local Assets = require(script.Assets)
local Loader = require(script.Loader)
local Theme = require(script.Theme)

local Toolbar = require(Components.Plugin.Toolbar)
local ToolbarButton = require(Components.Plugin.ToolbarButton)
local Widget = require(Components.Plugin.Widget)
local Container = require(Components.Container)
local Padding = require(Components.Padding)
local Image = require(Components.Image)
local Text = require(Components.Text)
local List = require(Components.List)
local Prompt = require(Pages.Prompt)

local NotConnected = require(Pages.NotConnected)
local Connecting = require(Pages.Connecting)
local Connected = require(Pages.Connected)
local Unavailable = require(Pages.Unavailable)
local Error = require(Pages.Error)

local Settings = require(Widgets.Settings)
local Help = require(Widgets.Help)

local New = Fusion.New
local Value = Fusion.Value
local Spring = Fusion.Spring
local OnEvent = Fusion.OnEvent
local OnChange = Fusion.OnChange
local Observer = Fusion.Observer
local Computed = Fusion.Computed
local Children = Fusion.Children
local cleanup = Fusion.cleanup
local peek = Fusion.peek

local App = {}
App.__index = App

function App.new(getProjectContextRefresher)
&#9;Loader.load()

&#9;local self = setmetatable({}, App)

&#9;self.core = nil
&#9;self.lastUpdate = os.clock()
&#9;self.onCanceled = Signal.new()

&#9;self.host = &quot;localhost&quot;
&#9;self.port = 4000

&#9;self.lastSync = Value(os.time())
&#9;self.lastSyncKind = Value(&quot;Unknown&quot;)
&#9;self.lastSyncedFile = Value(&quot;Unknown&quot;)

&#9;-- Full sync state
&#9;self.fullSyncInProgress = Value(false)
&#9;self.fullSyncCount = Value(0)
&#9;self.fullSyncTotal = Value(0)
&#9;-- Tracks UI status text for the full-sync button: &quot;idle&quot; | &quot;inProgress&quot; | &quot;nothing&quot;
&#9;self.fullSyncStatus = Value(&quot;idle&quot;)

&#9;self.rootSize = Value(Vector2.new(300, 200))
&#9;self.icon = Value(Assets.Lemonade.Logo)
&#9;self.pages = Value({})

&#9;self.settingsWidget = Value(nil)
&#9;self.helpWidget = Value(nil)
&#9;self.isConnectedState = Value(false)
&#9;self.getProjectContextRefresher = getProjectContextRefresher -- Store the callback

&#9;local isOpen = Value(false)

&#9;local toolbarButton = ToolbarButton {
&#9;&#9;Toolbar = Toolbar {
&#9;&#9;&#9;Name = &quot;Lemonade Labs&quot;,
&#9;&#9;},
&#9;&#9;Name = &quot;Lemonade&quot;,
&#9;&#9;ToolTip = &quot;Open Lemonade UI&quot;,
&#9;&#9;Image = self.icon,

&#9;&#9;[OnEvent &quot;Click&quot;] = function()
&#9;&#9;&#9;isOpen:set(not peek(isOpen))
&#9;&#9;end,
&#9;}

&#9;Widget {
&#9;&#9;Name = &quot;Lemonade&quot;,
&#9;&#9;MinimumSize = peek(self.rootSize),
&#9;&#9;Enabled = isOpen,

&#9;&#9;[OnChange &quot;Enabled&quot;] = function(isEnabled)
&#9;&#9;&#9;isOpen:set(isEnabled)
&#9;&#9;end,
&#9;&#9;[OnChange &quot;AbsoluteSize&quot;] = function(size)
&#9;&#9;&#9;self.rootSize:set(size)
&#9;&#9;end,

&#9;&#9;[Children] = self.pages,
&#9;}

&#9;plugin.Unloading:Connect(Observer(isOpen):onChange(function()
&#9;&#9;toolbarButton:SetActive(peek(isOpen))
&#9;end))

&#9;toolbarButton:SetActive(peek(isOpen))

&#9;if RunService:IsEdit() then
&#9;&#9;-- Check if there&apos;s an actively open project in the web interface
&#9;&#9;Log.info(&quot;[Lemonade] Requesting current project mapping (startup)...&quot;)
&#9;&#9;local success, res = pcall(function()
&#9;&#9;&#9;return require(Lemonade.Net.HttpSync).currentProject()
&#9;&#9;end)

&#9;&#9;if success and res and res.Success and res.StatusCode == 200 and res.Body ~= &quot;&quot; then
&#9;&#9;&#9;local ok, decoded = pcall(HttpService.JSONDecode, HttpService, res.Body)
&#9;&#9;&#9;if ok and decoded and decoded._id and decoded._id ~= &quot;&quot; then
&#9;&#9;&#9;&#9;local pid = decoded._id
&#9;&#9;&#9;&#9;Log.info(&quot;[Lemonade] Project is open in browser, mapped projectId:&quot;, pid)

&#9;&#9;&#9;&#9;-- Store the PROJECT_ID since project is actively open
&#9;&#9;&#9;&#9;plugin:SetSetting(&quot;PROJECT_ID&quot;, pid)
&#9;&#9;&#9;&#9;self.core = Core.new(plugin, pid, self.getProjectContextRefresher)

&#9;&#9;&#9;&#9;self:home()
&#9;&#9;&#9;&#9;-- Manual connection only: do not auto-connect on startup
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.info(&quot;[Lemonade] No project currently open in browser&quot;)
&#9;&#9;&#9;&#9;self:setPage(NotConnected {
&#9;&#9;&#9;&#9;&#9;App = self,
&#9;&#9;&#9;&#9;&#9;Host = self.host,
&#9;&#9;&#9;&#9;&#9;Port = self.port,
&#9;&#9;&#9;&#9;})
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;-- Network error - show connection error
&#9;&#9;&#9;Log.warn(&quot;[Lemonade] Network error checking for open project:&quot;, res and res.StatusCode or &quot;network down&quot;)
&#9;&#9;&#9;self:setPage(Error {
&#9;&#9;&#9;&#9;App = self,
&#9;&#9;&#9;&#9;Message = &quot;Cannot connect to Lemonade server. Check your network connection and ensure the web app is running.&quot;,
&#9;&#9;&#9;})
&#9;&#9;end
&#9;else
&#9;&#9;self:setPage(Unavailable())
&#9;end

&#9;local StudioService = game:GetService(&quot;StudioService&quot;)
&#9;self.userId = tostring(StudioService:GetUserId())

&#9;return self
end

function App:setIcon(icon: (&quot;Ok&quot; | &quot;Warn&quot; | &quot;Error&quot;)?)
&#9;if icon == &quot;Ok&quot; then
&#9;&#9;self.icon:set(Assets.Lemonade.LogoOk)
&#9;elseif icon == &quot;Warn&quot; then
&#9;&#9;self.icon:set(Assets.Lemonade.LogoWarn)
&#9;elseif icon == &quot;Error&quot; then
&#9;&#9;self.icon:set(Assets.Lemonade.LogoError)
&#9;else
&#9;&#9;self.icon:set(Assets.Lemonade.Logo)
&#9;end
end

function App:setPage(pageInput)
&#9;local pages = peek(self.pages)

&#9;for id, child in pages do
&#9;&#9;if child._finished then
&#9;&#9;&#9;pages[id] = nil
&#9;&#9;&#9;continue
&#9;&#9;end

&#9;&#9;task.spawn(function()
&#9;&#9;&#9;if child._destructor and child._value then
&#9;&#9;&#9;&#9;child._destructor(child._value)
&#9;&#9;&#9;&#9;child._finished = true
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end

&#9;local size = Value(UDim2.fromScale(1, 1))

&#9;local processedPage = Computed(function()
&#9;&#9;local headerActions = nil
&#9;&#9;local contentElements = {}

&#9;&#9;if type(pageInput) == &quot;table&quot; and #pageInput &gt; 0 then
&#9;&#9;&#9;if pageInput[1] and pageInput[1].Name == &quot;HeaderActions&quot; and pageInput[1].ClassName == &quot;Frame&quot; then
&#9;&#9;&#9;&#9;headerActions = pageInput[1]
&#9;&#9;&#9;&#9;for i = 2, #pageInput do
&#9;&#9;&#9;&#9;&#9;table.insert(contentElements, pageInput[i])
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;contentElements = pageInput
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;if typeof(pageInput) == &quot;Instance&quot; then
&#9;&#9;&#9;&#9;contentElements = { pageInput }
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.warn(&quot;[Lemonade] Warning: Unexpected pageInput type in setPage:&quot;, typeof(pageInput))
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;return New &quot;Frame&quot; {
&#9;&#9;&#9;AnchorPoint = Vector2.new(0.5, 0.5),
&#9;&#9;&#9;Position = UDim2.fromScale(0.5, 0.5),
&#9;&#9;&#9;Size = Spring(size, 10),
&#9;&#9;&#9;BackgroundColor3 = Theme.Colors.Background,
&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;&#9;HorizontalAlignment = Enum.HorizontalAlignment.Center,
&#9;&#9;&#9;&#9;&#9;VerticalAlignment = Enum.VerticalAlignment.Top,
&#9;&#9;&#9;&#9;&#9;Spacing = 0,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;Padding { Padding = Theme.WidgetPadding },

&#9;&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;&#9;LayoutOrder = 1,
&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 0),
&#9;&#9;&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.Y,
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;FillDirection = Enum.FillDirection.Horizontal,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;HorizontalAlignment = Enum.HorizontalAlignment.Left,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;HorizontalFlex = Enum.UIFlexAlignment.SpaceBetween,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;VerticalAlignment = Enum.VerticalAlignment.Center,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Padding = UDim.new(0, 8),
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.XY,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;LayoutOrder = 1,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;FillDirection = Enum.FillDirection.Horizontal,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;VerticalAlignment = Enum.VerticalAlignment.Center,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Padding = UDim.new(0, 8),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Image {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromOffset(35, 35),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Image = Assets.Lemonade.Banner,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;LayoutOrder = 1,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text = `v{manifest.package.version}`,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Color = Theme.Colors.TextDimmed,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Small,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;LayoutOrder = 2,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;HeaderRightActions&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.XY,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;LayoutOrder = 2,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;[Children] = if headerActions then { headerActions } else {},
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},

&#9;&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;&#9;LayoutOrder = 2,
&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1, 0, 0, Theme.Padding),
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;&#9;},

&#9;&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;&#9;LayoutOrder = 3,
&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 1),
&#9;&#9;&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.Y,
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;&#9;&#9;[Children] = contentElements,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;}
&#9;end, function(pageInstance)
&#9;&#9;if not pageInstance then
&#9;&#9;&#9;return
&#9;&#9;end

&#9;&#9;local TWEEN_INFO = TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
&#9;&#9;TweenService:Create(pageInstance, TWEEN_INFO, { BackgroundTransparency = 1 }):Play()

&#9;&#9;for _, descendant in pageInstance:GetDescendants() do
&#9;&#9;&#9;local properties = {}

&#9;&#9;&#9;if descendant:IsA(&quot;GuiObject&quot;) then
&#9;&#9;&#9;&#9;properties.BackgroundTransparency = 1

&#9;&#9;&#9;&#9;if descendant:IsA(&quot;TextLabel&quot;) or descendant:IsA(&quot;TextButton&quot;) or descendant:IsA(&quot;TextBox&quot;) then
&#9;&#9;&#9;&#9;&#9;properties.TextTransparency = 1
&#9;&#9;&#9;&#9;elseif descendant:IsA(&quot;ImageLabel&quot;) or descendant:IsA(&quot;ImageButton&quot;) then
&#9;&#9;&#9;&#9;&#9;properties.ImageTransparency = 1
&#9;&#9;&#9;&#9;&#9;descendant.ImageColor3 = peek(Theme.Colors.Icon)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if descendant:IsA(&quot;UIStroke&quot;) then
&#9;&#9;&#9;&#9;properties.Transparency = 1
&#9;&#9;&#9;end

&#9;&#9;&#9;if next(properties) then
&#9;&#9;&#9;&#9;TweenService:Create(descendant, TWEEN_INFO, properties):Play()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;pageInstance.ZIndex = 2

&#9;&#9;size:set(UDim2.fromScale(1.2, 1))

&#9;&#9;task.wait(0.2)
&#9;&#9;cleanup(pageInstance)
&#9;end)

&#9;pages[Util.generateGUID()] = processedPage
&#9;self.pages:set(pages)
end

function App:home()
&#9;self.lastUpdate = os.clock()
&#9;self.isConnectedState:set(false) -- Explicitly set to false for home/not connected

&#9;self:setPage(NotConnected {
&#9;&#9;App = self,
&#9;&#9;Host = self.host,
&#9;&#9;Port = self.port,
&#9;})

&#9;self:setIcon()
end

function App:settings()
&#9;local widget = peek(self.settingsWidget)

&#9;if widget then
&#9;&#9;widget:Destroy()
&#9;&#9;widget = nil
&#9;else
&#9;&#9;widget = Settings {
&#9;&#9;&#9;Closed = function()
&#9;&#9;&#9;&#9;peek(self.settingsWidget):Destroy()
&#9;&#9;&#9;&#9;self.settingsWidget:set(nil)
&#9;&#9;&#9;end,
&#9;&#9;}
&#9;end

&#9;self.settingsWidget:set(widget)
end

function App:help()
&#9;local widget = peek(self.helpWidget)

&#9;if widget then
&#9;&#9;widget:Destroy()
&#9;&#9;widget = nil
&#9;else
&#9;&#9;widget = Help {
&#9;&#9;&#9;Closed = function()
&#9;&#9;&#9;&#9;peek(self.helpWidget):Destroy()
&#9;&#9;&#9;&#9;self.helpWidget:set(nil)
&#9;&#9;&#9;end,
&#9;&#9;}
&#9;end

&#9;self.helpWidget:set(widget)
end

function App:connect()
&#9;if not self.core then
&#9;&#9;local pid = &quot;&quot;

&#9;&#9;-- Check if there&apos;s an actively open project in the web interface
&#9;&#9;Log.debug(&quot;[Lemonade] Checking for actively open project in browser...&quot;)
&#9;&#9;local success, res = pcall(function()
&#9;&#9;&#9;return require(Lemonade.Net.HttpSync).currentProject()
&#9;&#9;end)

&#9;&#9;if success and res and res.Success and res.StatusCode == 200 and res.Body ~= &quot;&quot; then
&#9;&#9;&#9;local ok, decoded = pcall(HttpService.JSONDecode, HttpService, res.Body)
&#9;&#9;&#9;if ok and decoded and decoded._id and decoded._id ~= &quot;&quot; then
&#9;&#9;&#9;&#9;pid = decoded._id
&#9;&#9;&#9;&#9;Log.info(&quot;[Lemonade] Project is actively open in browser, projectId:&quot;, pid)

&#9;&#9;&#9;&#9;-- Store the PROJECT_ID since project is actively open
&#9;&#9;&#9;&#9;plugin:SetSetting(&quot;PROJECT_ID&quot;, pid)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.debug(&quot;[Lemonade] No project currently open in browser&quot;)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;Log.warn(&quot;[Lemonade] Network error or no project open:&quot;, res and res.StatusCode or &quot;network down&quot;)
&#9;&#9;end

&#9;&#9;if pid == &quot;&quot; then
&#9;&#9;&#9;self.isConnectedState:set(false)
&#9;&#9;&#9;self:setPage(Error {
&#9;&#9;&#9;&#9;App = self,
&#9;&#9;&#9;&#9;Message = &quot;Open a project in the web first.&quot;,
&#9;&#9;&#9;})
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;self.core = Core.new(plugin, pid, self.getProjectContextRefresher)
&#9;end

&#9;local project = Value({})
&#9;local canceled = false
&#9;local loading = true

&#9;-- Initially, we are attempting to connect, but not yet connected.
&#9;-- isConnectedState will be updated by onReady or onPrompt (if connection fails during prompt)
&#9;-- or by run():catch if a more general error occurs.
&#9;self.isConnectedState:set(false) -- Explicitly false during connection attempt

&#9;task.spawn(function()
&#9;&#9;task.wait(0.2)

&#9;&#9;-- Check connection status reactively via isConnectedState for the Connecting page decision
&#9;&#9;if not peek(self.isConnectedState) and loading then
&#9;&#9;&#9;self:setPage(Connecting {
&#9;&#9;&#9;&#9;App = self,
&#9;&#9;&#9;})
&#9;&#9;end
&#9;end)

&#9;self.onCanceled:Once(function()
&#9;&#9;canceled = true
&#9;&#9;self.isConnectedState:set(false) -- Set on cancel
&#9;end)

&#9;self.core:onPrompt(function(message, changes)
&#9;&#9;loading = false

&#9;&#9;local signal = Signal.new()
&#9;&#9;local result = false

&#9;&#9;self:setIcon(&quot;Warn&quot;)

&#9;&#9;if changes then
&#9;&#9;&#9;local options = { &quot;Accept&quot;, &quot;Diff&quot;, &quot;Cancel&quot; }
&#9;&#9;&#9;message = describeChanges(changes)

&#9;&#9;&#9;self:setPage(Prompt {
&#9;&#9;&#9;&#9;App = self,
&#9;&#9;&#9;&#9;Message = message,
&#9;&#9;&#9;&#9;Options = options,
&#9;&#9;&#9;&#9;Signal = signal,
&#9;&#9;&#9;})

&#9;&#9;&#9;local choice = signal:Wait()

&#9;&#9;&#9;while choice == &quot;Diff&quot; do
&#9;&#9;&#9;&#9;warn(&quot;This feature is not yet implemented!&quot;)
&#9;&#9;&#9;&#9;Log.debug(&quot;You can see raw changes here:&quot;, changes)
&#9;&#9;&#9;&#9;choice = signal:Wait()
&#9;&#9;&#9;end

&#9;&#9;&#9;result = choice == &quot;Accept&quot;
&#9;&#9;else
&#9;&#9;&#9;local options = { &quot;Continue&quot;, &quot;Cancel&quot; }

&#9;&#9;&#9;self:setPage(Prompt {
&#9;&#9;&#9;&#9;App = self,
&#9;&#9;&#9;&#9;Message = message,
&#9;&#9;&#9;&#9;Options = options,
&#9;&#9;&#9;&#9;Signal = signal,
&#9;&#9;&#9;})

&#9;&#9;&#9;result = signal:Wait() == &quot;Continue&quot;
&#9;&#9;end

&#9;&#9;-- Update isConnectedState based on the prompt outcome and actual core status
&#9;&#9;local currentCoreStatus = self.core and self.core.status == Core.Status.Connected
&#9;&#9;self.isConnectedState:set(result and currentCoreStatus)

&#9;&#9;if result and currentCoreStatus then
&#9;&#9;&#9;self:setPage(Connected {
&#9;&#9;&#9;&#9;App = self,
&#9;&#9;&#9;&#9;Project = project,
&#9;&#9;&#9;})
&#9;&#9;&#9;self:setIcon(&quot;Ok&quot;)
&#9;&#9;elseif not result then -- If user chose Cancel or did not accept/continue
&#9;&#9;&#9;self:disconnect() -- Ensure core is stopped
&#9;&#9;&#9;self:home() -- Go to NotConnected page
&#9;&#9;end

&#9;&#9;return result
&#9;end)

&#9;self.core:onReady(function(projectDetails)
&#9;&#9;loading = false
&#9;&#9;project:set(projectDetails)

&#9;&#9;self.lastSync:set(os.time())
&#9;&#9;self.lastSyncKind:set(Config:get(&quot;InitialSyncPriority&quot;))

&#9;&#9;self.isConnectedState:set(true) -- Connected!
&#9;&#9;self:setPage(Connected {
&#9;&#9;&#9;App = self,
&#9;&#9;&#9;Project = project,
&#9;&#9;})

&#9;&#9;self:setIcon(&quot;Ok&quot;)
&#9;end)

&#9;self.core:onSync(function(kind, data)
&#9;&#9;self.lastSync:set(os.time())
&#9;&#9;self.lastSyncKind:set(
&#9;&#9;&#9;(kind == &quot;SyncChanges&quot; or kind == &quot;SyncDetails&quot;) and &quot;Server&quot;
&#9;&#9;&#9;&#9;or kind == &quot;SyncbackChanges&quot; and &quot;Client&quot;
&#9;&#9;&#9;&#9;or &quot;None&quot;
&#9;&#9;)

&#9;&#9;-- Extract file name from sync data (Changes object) but preserve existing when none found
&#9;&#9;local fileName = peek(self.lastSyncedFile) or &quot;Unknown&quot;
&#9;&#9;if data and type(data) == &quot;table&quot; then
&#9;&#9;&#9;-- Check updates first (most common for file changes)
&#9;&#9;&#9;if data.updates and #data.updates &gt; 0 and data.updates[1].name then
&#9;&#9;&#9;&#9;fileName = data.updates[1].name
&#9;&#9;&#9;-- Then check additions
&#9;&#9;&#9;elseif data.additions and #data.additions &gt; 0 and data.additions[1].name then
&#9;&#9;&#9;&#9;fileName = data.additions[1].name
&#9;&#9;&#9;-- Then check moves
&#9;&#9;&#9;elseif data.moves and #data.moves &gt; 0 and data.moves[1].name then
&#9;&#9;&#9;&#9;fileName = data.moves[1].name
&#9;&#9;&#9;-- Finally check removals (though less useful to show)
&#9;&#9;&#9;elseif
&#9;&#9;&#9;&#9;data.removals
&#9;&#9;&#9;&#9;and #data.removals &gt; 0
&#9;&#9;&#9;&#9;and type(data.removals[1]) == &quot;table&quot;
&#9;&#9;&#9;&#9;and data.removals[1].name
&#9;&#9;&#9;then
&#9;&#9;&#9;&#9;fileName = data.removals[1].name
&#9;&#9;&#9;elseif data.removalInfos and #data.removalInfos &gt; 0 and data.removalInfos[1].name then
&#9;&#9;&#9;&#9;fileName = data.removalInfos[1].name
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;-- Filter out HelloLemonade script errors and permission-related messages from display
&#9;&#9;if
&#9;&#9;&#9;fileName
&#9;&#9;&#9;and (fileName:find(&quot;HelloLemonade&quot;) or fileName:find(&quot;script injection&quot;) or fileName:find(&quot;permission&quot;))
&#9;&#9;then
&#9;&#9;&#9;fileName = &quot;Unknown&quot; -- Don&apos;t display these internal errors
&#9;&#9;end

&#9;&#9;-- Only update when we have a meaningful filename (not the placeholder)
&#9;&#9;if fileName ~= &quot;Unknown&quot; then
&#9;&#9;&#9;self.lastSyncedFile:set(fileName)
&#9;&#9;end

&#9;&#9;if kind == &quot;SyncDetails&quot; then
&#9;&#9;&#9;project:set(data)
&#9;&#9;end
&#9;end)

&#9;self.core:run():catch(function(err)
&#9;&#9;loading = false
&#9;&#9;self.isConnectedState:set(false) -- Set on run error

&#9;&#9;if Core.wasExitGraceful(err) or canceled then
&#9;&#9;&#9;self:disconnect(true) -- Pass true if cancellation was the reason for graceful exit
&#9;&#9;&#9;self:home()
&#9;&#9;&#9;return
&#9;&#9;end

&#9;&#9;self:setPage(Error {
&#9;&#9;&#9;App = self,
&#9;&#9;&#9;Message = err.message or tostring(err),
&#9;&#9;})

&#9;&#9;self:setIcon(&quot;Error&quot;)

&#9;&#9;self:disconnect() -- Ensure core is stopped after error
&#9;&#9;-- Manual connection only: do not auto-reconnect automatically
&#9;end)
end

function App:disconnect(cancel: boolean?)
&#9;self.lastUpdate = os.clock()
&#9;self.isConnectedState:set(false) -- Explicitly set to false on disconnect

&#9;if self.core then
&#9;&#9;if cancel then
&#9;&#9;&#9;self.onCanceled:Fire()
&#9;&#9;end

&#9;&#9;self.core:stop()
&#9;&#9;self.core = nil

&#9;&#9;-- Reset full sync UI state
&#9;&#9;if self.fullSyncCount then
&#9;&#9;&#9;self.fullSyncCount:set(0)
&#9;&#9;end
&#9;&#9;if self.fullSyncInProgress then
&#9;&#9;&#9;self.fullSyncInProgress:set(false)
&#9;&#9;end
&#9;&#9;if self.fullSyncStatus then
&#9;&#9;&#9;self.fullSyncStatus:set(&quot;idle&quot;)
&#9;&#9;end
&#9;end
end

function App:isConnected() -- This remains the definitive check for actual core status
&#9;return self.core and self.core.status == Core.Status.Connected
end

-- Add method to refresh project context when project ID changes
function App:refreshProjectContext()
&#9;Log.info(&quot;[App] refreshProjectContext called - checking for actively open project&quot;)

&#9;-- First disconnect from the current project if connected
&#9;if self:isConnected() then
&#9;&#9;Log.info(&quot;[App] Currently connected, disconnecting first&quot;)
&#9;&#9;self:disconnect()
&#9;end

&#9;-- Reset core
&#9;self.core = nil

&#9;-- Check if there&apos;s an actively open project in the web interface
&#9;local function checkForActiveProject()
&#9;&#9;local success, res = pcall(function()
&#9;&#9;&#9;local HttpSync = require(Lemonade.Net.HttpSync)
&#9;&#9;&#9;return HttpSync.currentProject()
&#9;&#9;end)

&#9;&#9;if success and res and res.Success and res.StatusCode == 200 and res.Body ~= &quot;&quot; then
&#9;&#9;&#9;local ok, decoded = pcall(HttpService.JSONDecode, HttpService, res.Body)
&#9;&#9;&#9;if ok and decoded and decoded._id and decoded._id ~= &quot;&quot; then
&#9;&#9;&#9;&#9;Log.info(&quot;[App] Project is actively open in browser:&quot;, decoded._id)
&#9;&#9;&#9;&#9;return decoded._id
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Log.info(&quot;[App] No project currently open in browser&quot;)
&#9;&#9;&#9;&#9;return nil
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;Log.warn(&quot;[App] Network error checking for active project:&quot;, res and res.StatusCode or &quot;network down&quot;)
&#9;&#9;&#9;return nil
&#9;&#9;end
&#9;end

&#9;local activeProjectId = checkForActiveProject()

&#9;if activeProjectId then
&#9;&#9;-- Update the plugin setting with the active project ID
&#9;&#9;plugin:SetSetting(&quot;PROJECT_ID&quot;, activeProjectId)
&#9;&#9;Log.info(&quot;[App] Updated PROJECT_ID setting to active project:&quot;, activeProjectId)

&#9;&#9;-- Do not auto-connect; only update stored project id. User must click Connect.
&#9;&#9;Log.info(&quot;[App] Stored active project ID (manual connect required):&quot;, activeProjectId)
&#9;&#9;self.core = nil
&#9;else
&#9;&#9;-- No project is actively open - clear the stored PROJECT_ID and show not connected
&#9;&#9;plugin:SetSetting(&quot;PROJECT_ID&quot;, &quot;&quot;)
&#9;&#9;Log.info(&quot;[App] No project actively open - cleared PROJECT_ID and showing not connected page&quot;)
&#9;&#9;self:setPage(NotConnected {
&#9;&#9;&#9;App = self,
&#9;&#9;&#9;Host = self.host,
&#9;&#9;&#9;Port = self.port,
&#9;&#9;})
&#9;end
end

-- Public helper to trigger a full project sync from the UI
function App:fullSync()
&#9;if not self.core then
&#9;&#9;Log.warn(&quot;[App.fullSync] Core not initialised &#226;&#128;&#147; cannot perform full sync.&quot;)
&#9;&#9;return
&#9;end

&#9;-- Guard against double-click
&#9;if peek(self.fullSyncInProgress) then
&#9;&#9;return
&#9;end

&#9;-- UI state updates
&#9;self.fullSyncStatus:set(&quot;inProgress&quot;)
&#9;self.fullSyncInProgress:set(true)
&#9;self.fullSyncCount:set(0)
&#9;self.fullSyncTotal:set(0)

&#9;-- Step 1: push JSONL immediately
&#9;self.core.projectManager:pushProjectHierarchyNow()

&#9;-- Step 2: count scripts in hierarchy and set total
&#9;local totalScripts = self.core.projectManager:countScriptsInHierarchy()
&#9;self.fullSyncTotal:set(totalScripts)

&#9;-- Step 3: start script sync (existing behavior) 25-by-25
&#9;local anySynced = false
&#9;self.core:forceFullSync(nil, function(total)
&#9;&#9;if total &gt; 0 then
&#9;&#9;&#9;anySynced = true
&#9;&#9;end
&#9;&#9;self.fullSyncCount:set(total)
&#9;end, function()
&#9;&#9;self.fullSyncInProgress:set(false)
&#9;&#9;if anySynced then
&#9;&#9;&#9;self.fullSyncStatus:set(&quot;idle&quot;)
&#9;&#9;else
&#9;&#9;&#9;self.fullSyncStatus:set(&quot;nothing&quot;)
&#9;&#9;&#9;-- After 2 seconds revert to default idle state
&#9;&#9;&#9;task.delay(2, function()
&#9;&#9;&#9;&#9;if peek(self.fullSyncStatus) == &quot;nothing&quot; then
&#9;&#9;&#9;&#9;&#9;self.fullSyncStatus:set(&quot;idle&quot;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end)
end

return App
</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a40000101b</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBX7B1B868C83164AF7A37528B3E997010C">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b06</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Theme</string>
					<string name="ScriptGuid">{1cf28424-8a0c-46a5-8c40-b95863aaded5}</string>
					<string name="Source">local plugin = script:FindFirstAncestorWhichIsA(&quot;Plugin&quot;)
local Studio = settings().Studio

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Fusion = require(Lemonade.Packages.Fusion)

local Value = Fusion.Value

local function getColors(isDark: boolean): { [string]: { Color3 | { [string]: Color3 } } }
&#9;local background = Studio.Theme:GetColor(Enum.StudioStyleGuideColor.MainBackground)
&#9;local border = Studio.Theme:GetColor(Enum.StudioStyleGuideColor.Shadow)

&#9;if border == background then
&#9;&#9;border = Studio.Theme:GetColor(Enum.StudioStyleGuideColor.ScrollBarBackground)
&#9;end

&#9;local h, s, v = border:ToHSV()
&#9;border = Color3.fromHSV(h, s, v * (isDark and 1.2 or 0.85))

&#9;return {
&#9;&#9;-- It&apos;s actually 130, 120, 230
&#9;&#9;Brand = Color3.fromRGB(120, 110, 220),

&#9;&#9;Background = background,
&#9;&#9;ActiveBackground = Studio.Theme:GetColor(Enum.StudioStyleGuideColor.Titlebar),
&#9;&#9;Border = border,

&#9;&#9;Text = Studio.Theme:GetColor(Enum.StudioStyleGuideColor.BrightText),
&#9;&#9;TextDimmed = Studio.Theme:GetColor(Enum.StudioStyleGuideColor.SubText),
&#9;&#9;TextBranded = isDark and Studio.Theme:GetColor(Enum.StudioStyleGuideColor.BrightText) or background,
&#9;&#9;Icon = Studio.Theme:GetColor(Enum.StudioStyleGuideColor.SubText),

&#9;&#9;Diff = {
&#9;&#9;&#9;Add = Color3.fromRGB(80, 220, 100),
&#9;&#9;&#9;Update = Color3.fromRGB(100, 200, 230),
&#9;&#9;&#9;Remove = Color3.fromRGB(230, 100, 100),
&#9;&#9;},
&#9;}
end

local function init(): Fusion.Value&lt;Color3&gt;
&#9;return Value(Color3.new())
end

local Theme = {
&#9;-- For autocomplete
&#9;Colors = {
&#9;&#9;Brand = init(),

&#9;&#9;Background = init(),
&#9;&#9;ActiveBackground = init(),
&#9;&#9;Border = init(),

&#9;&#9;Text = init(),
&#9;&#9;TextDimmed = init(),
&#9;&#9;TextBranded = init(),
&#9;&#9;Icon = init(),

&#9;&#9;Diff = {
&#9;&#9;&#9;Add = init(),
&#9;&#9;&#9;Update = init(),
&#9;&#9;&#9;Remove = init(),
&#9;&#9;},
&#9;},

&#9;Fonts = {
&#9;&#9;Regular = Font.fromName(&quot;Ubuntu&quot;),
&#9;&#9;Bold = Font.fromName(&quot;Ubuntu&quot;, Enum.FontWeight.Bold),
&#9;&#9;Italic = Font.fromName(&quot;Ubuntu&quot;, Enum.FontWeight.Regular, Enum.FontStyle.Italic),
&#9;&#9;Mono = Font.fromName(&quot;RobotoMono&quot;),

&#9;&#9;-- required for TextService:GetTextSize()
&#9;&#9;Enums = {
&#9;&#9;&#9;Regular = Enum.Font.Ubuntu,
&#9;&#9;&#9;Bold = Enum.Font.Ubuntu,
&#9;&#9;&#9;Italic = Enum.Font.Ubuntu,
&#9;&#9;&#9;Mono = Enum.Font.RobotoMono,
&#9;&#9;},
&#9;},

&#9;BorderThickness = 1,
&#9;CornerRadius = 6,
&#9;ListSpacing = 12,
&#9;WidgetPadding = 16,
&#9;Padding = 8,

&#9;TextSize = {
&#9;&#9;Large = 20,
&#9;&#9;Medium = 18,
&#9;&#9;Small = 16,
&#9;},

&#9;CompSizeY = {
&#9;&#9;Large = 36,
&#9;&#9;Medium = 30,
&#9;&#9;Small = 28,
&#9;},

&#9;SpringSpeed = 30,
&#9;SpringFastSpeed = 60,
&#9;SpringDamping = 1.5,

&#9;IsDark = Value(true),
}

do
&#9;local function updateTheme()
&#9;&#9;local _, _, v = Studio.Theme:GetColor(Enum.StudioStyleGuideColor.MainBackground):ToHSV()
&#9;&#9;local isDark = v &lt;= 0.6

&#9;&#9;Theme.IsDark:set(isDark)

&#9;&#9;for key, color in getColors(isDark) do
&#9;&#9;&#9;if type(color) ~= &quot;table&quot; then
&#9;&#9;&#9;&#9;Theme.Colors[key]:set(color)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;for subKey, subColor in color do
&#9;&#9;&#9;&#9;&#9;if Theme.Colors[key][subKey] and typeof(Theme.Colors[key][subKey].set) == &quot;function&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;Theme.Colors[key][subKey]:set(subColor)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Theme.Colors[key][subKey] = subColor
&#9;&#9;&#9;&#9;&#9;&#9;warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[Lemonade Theme] Unexpected structure for Theme.Colors.&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;.. key
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;.. &quot;.&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;.. subKey
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;.. &quot;. Direct assignment occurred.&quot;
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;updateTheme()

&#9;local connection = Studio.ThemeChanged:Connect(updateTheme)

&#9;plugin.Unloading:Once(function()
&#9;&#9;connection:Disconnect()
&#9;&#9;connection = nil
&#9;end)

&#9;-- :P
&#9;local now = DateTime.now():ToLocalTime()
&#9;if now.Month == 4 and now.Day == 1 then
&#9;&#9;Theme.Colors.Brand = Color3.fromHex(&quot;e13835&quot;)
&#9;&#9;Theme.CornerRadius = 0
&#9;end
end

return Theme
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a40000101c</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX811C2A4B9B744BA4B80E132B02A2CDDC">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b07</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Loader</string>
					<string name="ScriptGuid">{87f95ee9-5eee-437a-bb37-66c08e20c043}</string>
					<string name="Source">local ContentProvider = game:GetService(&quot;ContentProvider&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Util = require(Lemonade.Util)
local Log = require(Lemonade.Log)

local Assets = require(script.Parent.Assets)

local Loader = {}

function Loader.assets(): { string }
&#9;return Util.dictionaryToArray(Assets)
end

function Loader.load()
&#9;local assets = Loader.assets()

&#9;Log.trace(`Loading {#assets} assets..`)

&#9;task.spawn(function()
&#9;&#9;ContentProvider:PreloadAsync(assets)
&#9;end)
end

return Loader
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a40000101d</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBXD4393A0F2D234C5997298FCC34DAD94A">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b08</UniqueId>
					<string name="Name">Components</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a40000101e</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBXDC24A14170C744D59E822F273633634C">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b09</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Box</string>
						<string name="ScriptGuid">{ceb775bf-1899-440e-ba2b-3f77258217a2}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)
local stripProps = require(Util.stripProps)

local Border = require(Components.Border)
local Container = require(Components.Container)

local Hydrate = Fusion.Hydrate
local Children = Fusion.Children

local COMPONENT_ONLY_PROPS = {
&#9;&quot;BackgroundColor&quot;,
&#9;&quot;BorderColor&quot;,
&#9;&quot;BackgroundTransparency&quot;,
&#9;&quot;BorderTransparency&quot;,
}

type Props = {
&#9;BackgroundColor: Fusion.CanBeState&lt;Color3&gt;?,
&#9;BorderColor: Fusion.CanBeState&lt;Color3&gt;?,
&#9;BackgroundTransparency: Fusion.CanBeState&lt;number&gt;?,
&#9;BorderTransparency: Fusion.CanBeState&lt;number&gt;?,
&#9;[any]: any,
}

return function(props: Props): Frame
&#9;return Hydrate(Container {
&#9;&#9;Size = UDim2.fromOffset(120, Theme.CompSizeY.Large),
&#9;&#9;BackgroundColor3 = props.BackgroundColor or Theme.Colors.Background,
&#9;&#9;BackgroundTransparency = props.BackgroundTransparency or 0,

&#9;&#9;[Children] = {
&#9;&#9;&#9;Border {
&#9;&#9;&#9;&#9;Color = props.BorderColor,
&#9;&#9;&#9;&#9;Transparency = props.BorderTransparency,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000101f</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX1BB199B43CC847109A40BC7C55047894">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b0a</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">ScrollingContainer</string>
						<string name="ScriptGuid">{1692045b-30e8-4245-922c-a353c48b477d}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)
local stripProps = require(Util.stripProps)

local New = Fusion.New
local Hydrate = Fusion.Hydrate

local COMPONENT_ONLY_PROPS = {
&#9;&quot;ScrollBar&quot;,
}

type Props = {
&#9;ScrollBar: boolean?,
&#9;[any]: any,
}

return function(props: Props): ScrollingFrame
&#9;return Hydrate(New &quot;ScrollingFrame&quot; {
&#9;&#9;Size = UDim2.fromScale(1, 1),
&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;ScrollBarThickness = props.ScrollBar and 5 or 0,
&#9;&#9;ScrollBarImageColor3 = Theme.Colors.TextDimmed,
&#9;&#9;AutomaticCanvasSize = Enum.AutomaticSize.Y,
&#9;&#9;CanvasSize = UDim2.fromScale(0, 0),
&#9;&#9;BorderSizePixel = 0,
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001020</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX141F4207516A47F9ACDE39CCA8E1ED64">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b0b</UniqueId>
						<string name="Name">Util</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001021</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXEB96AB5A67284129896CED4B8210DA1C">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b0c</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">getState</string>
							<string name="ScriptGuid">{3ec4cf28-04c2-4a1e-b091-73a3b2bd243f}</string>
							<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Fusion = require(Lemonade.Packages.Fusion)

local Computed = Fusion.Computed

type Input = {
&#9;Pressed: Fusion.StateObject&lt;boolean&gt;?,
&#9;Hovered: Fusion.StateObject&lt;boolean&gt;?,
}

return function(input: Input): Fusion.Computed&lt;Enum.GuiState&gt;
&#9;local isPressed = input.Pressed
&#9;local isHovered = input.Hovered

&#9;return Computed(function(use)
&#9;&#9;if use(isPressed) then
&#9;&#9;&#9;return Enum.GuiState.Press
&#9;&#9;elseif use(isHovered) then
&#9;&#9;&#9;return Enum.GuiState.Hover
&#9;&#9;else
&#9;&#9;&#9;return Enum.GuiState.Idle
&#9;&#9;end
&#9;end)
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001022</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX4BAC22FC42364BEAB1BEECFD01D2111B">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b0d</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">filterNumber</string>
							<string name="ScriptGuid">{5e004525-b443-451c-b456-23234621aa77}</string>
							<string name="Source">return function(number: string): string
&#9;return number:gsub(&quot;[^%d]&quot;, &quot;&quot;)
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001023</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXCBE11C4F57C74DDAB7FDDECFDD748E81">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b0e</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">animate</string>
							<string name="ScriptGuid">{9d264a4b-c1d7-47fc-862d-67719323ca57}</string>
							<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)

local Spring = Fusion.Spring
local Computed = Fusion.Computed

return function(
&#9;goal: Fusion.StateObject&lt;Color3&gt;,
&#9;state: Fusion.Computed&lt;Enum.GuiState&gt;,
&#9;speed: Fusion.CanBeState&lt;number&gt;?,
&#9;damping: Fusion.CanBeState&lt;number&gt;?
): Fusion.Spring&lt;Color3&gt;
&#9;return Spring(
&#9;&#9;Computed(function(use)
&#9;&#9;&#9;local goal = use(goal)
&#9;&#9;&#9;local state = use(state)

&#9;&#9;&#9;local isDark = use(Theme.IsDark)
&#9;&#9;&#9;local h, s, v = goal:ToHSV()

&#9;&#9;&#9;if state == Enum.GuiState.Hover then
&#9;&#9;&#9;&#9;return Color3.fromHSV(h, s, v * (isDark and 1.3 or 0.9))
&#9;&#9;&#9;elseif state == Enum.GuiState.Press then
&#9;&#9;&#9;&#9;return Color3.fromHSV(h, s, v * (isDark and 1.5 or 0.8))
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;return goal
&#9;&#9;&#9;end
&#9;&#9;end),
&#9;&#9;speed or Theme.SpringSpeed,
&#9;&#9;damping or Theme.SpringDamping
&#9;)
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001024</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX7B863182E4B44E72B91C99650DF9779C">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b0f</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">stripProps</string>
							<string name="ScriptGuid">{61b5be84-06ef-459c-8fb2-fe28480bd0b6}</string>
							<string name="Source">return function(props: { [any]: any }, strip: { string }): { [any]: any }
&#9;props = table.clone(props)

&#9;for _, prop in strip do
&#9;&#9;props[prop] = nil
&#9;end

&#9;return props
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001025</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXD07DCCBD3D47413F9F5802850DFD5829">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b10</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">filterPort</string>
							<string name="ScriptGuid">{655289cb-799a-4059-9517-d760cb08ef52}</string>
							<string name="Source">return function(port: string): string
&#9;return port:sub(1, 5):gsub(&quot;[^%d]&quot;, &quot;&quot;)
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001026</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX1C9F27249A6C44DB9149D71B7E5BED12">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b11</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">getTextSize</string>
							<string name="ScriptGuid">{0a901aaa-c1ae-4556-aed3-61c775befc57}</string>
							<string name="Source">local TextService = game:GetService(&quot;TextService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App

local Theme = require(App.Theme)

return function(text: string, fontSize: number?, font: Enum.Font?, frameSize: Vector2?): Vector2
&#9;if text:find(&quot;&lt;font&quot;) then
&#9;&#9;text = text:gsub(&quot;&lt;[^&gt;]+&gt;&quot;, &quot;&quot;)
&#9;end

&#9;return TextService:GetTextSize(
&#9;&#9;text,
&#9;&#9;fontSize or Theme.TextSize.Large,
&#9;&#9;font or Theme.Fonts.Enums.Regular,
&#9;&#9;frameSize or Vector2.new(math.huge, math.huge)
&#9;)
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001027</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX8C22E0E8C48B4600BD9C0922C33B1995">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b12</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">filterHost</string>
							<string name="ScriptGuid">{3fc88784-9bf7-44b3-90e8-35d3a84d6091}</string>
							<string name="Source">return function(host: string): string
&#9;return host:gsub(&quot;[^%w%.%-]&quot;, &quot;&quot;)
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001028</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX8863857986874E9C928FAA6200753702">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b13</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">isState</string>
							<string name="ScriptGuid">{f672cf9b-9ccd-4e55-928d-65524652a3e0}</string>
							<string name="Source">return function(target: any): boolean
&#9;return type(target) == &quot;table&quot; and target.type == &quot;State&quot;
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001029</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX5EF77899BF27406591CEEADF08AE5004">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b14</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">default</string>
							<string name="ScriptGuid">{5abe4e14-350f-4270-bb25-19c43587a9ea}</string>
							<string name="Source">return function(value: any, default: any): any
&#9;if value == nil then
&#9;&#9;return default
&#9;else
&#9;&#9;return value
&#9;end
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a40000102a</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBX5D9272C8E378450389704D14B2629C9D">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b15</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Padding</string>
						<string name="ScriptGuid">{73eea3af-70f9-4469-9ce5-8d184218fcc2}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)
local default = require(Util.default)
local stripProps = require(Util.stripProps)

local New = Fusion.New
local Hydrate = Fusion.Hydrate

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Padding&quot;,
&#9;&quot;Horizontal&quot;,
&#9;&quot;Vertical&quot;,
&#9;&quot;Left&quot;,
&#9;&quot;Right&quot;,
&#9;&quot;Top&quot;,
&#9;&quot;Bottom&quot;,
}

type Props = {
&#9;-- Mode 1
&#9;Padding: number?,
&#9;Horizontal: boolean?,
&#9;Vertical: boolean?,
&#9;-- Mode 2
&#9;Left: number?,
&#9;Right: number?,
&#9;Top: number?,
&#9;Bottom: number?,
&#9;[any]: any,
}

return function(props: Props): UIPadding
&#9;local left, right
&#9;local top, bottom

&#9;if props.Left or props.Right or props.Top or props.Bottom then
&#9;&#9;local padding = props.Padding or 0

&#9;&#9;left = UDim.new(0, props.Left or padding)
&#9;&#9;right = UDim.new(0, props.Right or padding)
&#9;&#9;top = UDim.new(0, props.Top or padding)
&#9;&#9;bottom = UDim.new(0, props.Bottom or padding)
&#9;else
&#9;&#9;local padding = UDim.new(0, props.Padding or Theme.Padding)
&#9;&#9;local horizontal = default(props.Horizontal, true)
&#9;&#9;local vertical = default(props.Vertical, true)

&#9;&#9;left = horizontal and padding or nil
&#9;&#9;right = horizontal and padding or nil
&#9;&#9;top = vertical and padding or nil
&#9;&#9;bottom = vertical and padding or nil
&#9;end

&#9;return Hydrate(New &quot;UIPadding&quot; {
&#9;&#9;PaddingLeft = left,
&#9;&#9;PaddingRight = right,
&#9;&#9;PaddingTop = top,
&#9;&#9;PaddingBottom = bottom,
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000102b</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX584C243BFCBA467E96E88423132BDE96">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b16</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">TextButton</string>
						<string name="ScriptGuid">{6789d742-066d-4e4d-ae37-33e87dcf4925}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)
local stripProps = require(Util.stripProps)
local getTextSize = require(Util.getTextSize)

local Border = require(Components.Border)

local New = Fusion.New
local Value = Fusion.Value
local Hydrate = Fusion.Hydrate
local OnEvent = Fusion.OnEvent
local Computed = Fusion.Computed
local Children = Fusion.Children

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Activated&quot;,
&#9;&quot;Solid&quot;,
&#9;&quot;BackgroundColor3&quot;,
}

type Props = {
&#9;Activated: (() -&gt; ())?,
&#9;Solid: any,
&#9;BackgroundColor3: any,
&#9;[any]: any,
}

return function(props: Props): TextButton
&#9;local isHovered = Value(false)
&#9;local isPressed = Value(false)

&#9;local backgroundColor = Computed(function(use)
&#9;&#9;if props.BackgroundColor3 then
&#9;&#9;&#9;return use(props.BackgroundColor3)
&#9;&#9;else
&#9;&#9;&#9;return use(props.Solid) and use(Theme.Colors.Brand) or use(Theme.Colors.Background)
&#9;&#9;end
&#9;end)

&#9;local size = props.Size
&#9;&#9;or Computed(function(use)
&#9;&#9;&#9;local text = use(props.Text)
&#9;&#9;&#9;local size = getTextSize(text)

&#9;&#9;&#9;return UDim2.fromOffset(size.X + 22, Theme.CompSizeY.Large)
&#9;&#9;end)

&#9;return Hydrate(New &quot;TextButton&quot; {
&#9;&#9;Text = &quot;Button&quot;,
&#9;&#9;FontFace = Theme.Fonts.Regular,
&#9;&#9;AutoButtonColor = false,
&#9;&#9;TextSize = Theme.TextSize.Large,
&#9;&#9;Size = size,
&#9;&#9;BackgroundColor3 = backgroundColor,
&#9;&#9;TextColor3 = Computed(function(use)
&#9;&#9;&#9;if props.BackgroundColor3 then
&#9;&#9;&#9;&#9;return Color3.new(1, 1, 1)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;return use(props.Solid) and use(Theme.Colors.TextBranded) or use(Theme.Colors.Text)
&#9;&#9;&#9;end
&#9;&#9;end),

&#9;&#9;[OnEvent &quot;InputBegan&quot;] = function(input)
&#9;&#9;&#9;if input.UserInputType == Enum.UserInputType.MouseMovement then
&#9;&#9;&#9;&#9;isHovered:set(true)
&#9;&#9;&#9;elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
&#9;&#9;&#9;&#9;isPressed:set(true)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[OnEvent &quot;InputEnded&quot;] = function(input)
&#9;&#9;&#9;if input.UserInputType == Enum.UserInputType.MouseMovement then
&#9;&#9;&#9;&#9;isHovered:set(false)
&#9;&#9;&#9;elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
&#9;&#9;&#9;&#9;isPressed:set(false)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[OnEvent &quot;Activated&quot;] = function()
&#9;&#9;&#9;if props.Activated then
&#9;&#9;&#9;&#9;props.Activated()
&#9;&#9;&#9;end
&#9;&#9;end,

&#9;&#9;[Children] = {
&#9;&#9;&#9;Border {
&#9;&#9;&#9;&#9;Color = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;if props.BackgroundColor3 then
&#9;&#9;&#9;&#9;&#9;&#9;return use(backgroundColor)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;return use(props.Solid) and use(backgroundColor) or use(Theme.Colors.Border)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;Transparency = Computed(function()
&#9;&#9;&#9;&#9;&#9;return if props.BackgroundColor3 then 1 else 0
&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;},
&#9;&#9;},
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000102c</UniqueId>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBX0FFF3EFBC2424453B95D3384239343AE">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b17</UniqueId>
						<string name="Name">Plugin</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000102d</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX9D913A09BC4E4AE59F90D086A3C4108C">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b18</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">Widget</string>
							<string name="ScriptGuid">{dbba7d92-03ac-4914-9b95-3130aadd6b2d}</string>
							<string name="Source">local plugin = script:FindFirstAncestorWhichIsA(&quot;Plugin&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local stripProps = require(Util.stripProps)
local isState = require(Util.isState)
local default = require(Util.default)

local Hydrate = Fusion.Hydrate
local peek = Fusion.peek

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Id&quot;,
&#9;&quot;InitialDockTo&quot;,
&#9;&quot;InitialEnabled&quot;,
&#9;&quot;OverrideEnabled&quot;,
&#9;&quot;FloatingSize&quot;,
&#9;&quot;MinimumSize&quot;,
&#9;&quot;Closed&quot;,
}

type WidgetProps = {
&#9;Id: string?,
&#9;InitialDockTo: Enum.InitialDockState?,
&#9;InitialEnabled: boolean?,
&#9;OverrideEnabled: boolean?,
&#9;FloatingSize: Vector2?,
&#9;MinimumSize: Vector2,
&#9;Closed: (() -&gt; ())?,
&#9;[any]: any,
}

return function(props: WidgetProps): DockWidgetPluginGui
&#9;local floatingSize = props.FloatingSize or props.MinimumSize

&#9;local widget = plugin:CreateDockWidgetPluginGui(
&#9;&#9;props.Id or peek(props.Name),
&#9;&#9;DockWidgetPluginGuiInfo.new(
&#9;&#9;&#9;props.InitialDockTo or Enum.InitialDockState.Float,
&#9;&#9;&#9;default(props.InitialEnabled, true),
&#9;&#9;&#9;default(props.OverrideEnabled, false),
&#9;&#9;&#9;floatingSize.X,
&#9;&#9;&#9;floatingSize.Y,
&#9;&#9;&#9;props.MinimumSize.X,
&#9;&#9;&#9;props.MinimumSize.Y
&#9;&#9;)
&#9;)

&#9;if isState(props.Enabled) then
&#9;&#9;props.Enabled:set(widget.Enabled)
&#9;end

&#9;if props.Closed then
&#9;&#9;widget:BindToClose(props.Closed)
&#9;end

&#9;widget.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
&#9;props.Title = props.Name

&#9;return Hydrate(widget)(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a40000102e</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXF8B3F5B260934CA0A68A491AFDFFD427">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b19</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">ToolbarButton</string>
							<string name="ScriptGuid">{4d9526df-f7b4-40a7-93ac-4e3575c39509}</string>
							<string name="Source">local plugin = script:FindFirstAncestorWhichIsA(&quot;Plugin&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local stripProps = require(Util.stripProps)
local isState = require(Util.isState)

local Hydrate = Fusion.Hydrate
local Observer = Fusion.Observer
local peek = Fusion.peek

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Toolbar&quot;,
&#9;&quot;Name&quot;,
&#9;&quot;ToolTip&quot;,
&#9;&quot;Image&quot;,
}

type ToolbarButtonProps = {
&#9;Toolbar: PluginToolbar,
&#9;Name: string,
&#9;ToolTip: string,
&#9;Image: Fusion.CanBeState&lt;string&gt;,
&#9;[any]: any,
}

return function(props: ToolbarButtonProps): PluginToolbarButton
&#9;local button = props.Toolbar:CreateButton(props.Name, props.ToolTip, peek(props.Image))
&#9;button.ClickableWhenViewportHidden = true

&#9;if isState(props.Image) then
&#9;&#9;plugin.Unloading:Once(Observer(props.Image):onChange(function()
&#9;&#9;&#9;button.Icon = peek(props.Image)
&#9;&#9;end))
&#9;end

&#9;return Hydrate(button)(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a40000102f</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX2304E7909B284B4DB056E7AB8CF61B76">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b1a</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">Toolbar</string>
							<string name="ScriptGuid">{333c5817-1789-4a07-a434-f8cd576d3854}</string>
							<string name="Source">local plugin = script:FindFirstAncestorWhichIsA(&quot;Plugin&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local stripProps = require(Util.stripProps)

local Hydrate = Fusion.Hydrate

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Name&quot;,
}

type Props = {
&#9;Name: string,
&#9;[any]: any,
}

return function(props: Props): PluginToolbar
&#9;return Hydrate(plugin:CreateToolbar(props.Name))(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001030</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="ModuleScript" referent="RBXA2898DED3F454A4DBB8C5F4F8FF5AE1E">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b1b</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Spinner</string>
						<string name="ScriptGuid">{dc4ee09c-9241-42dd-8e5b-519e51658d1c}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Assets = require(App.Assets)
local Theme = require(App.Theme)
local stripProps = require(Util.stripProps)

local Image = require(Components.Image)

local Tween = Fusion.Tween
local Value = Fusion.Value
local Hydrate = Fusion.Hydrate

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Duration&quot;,
}

type Props = {
&#9;Duration: number?,
&#9;[any]: any,
}

return function(props: Props): ImageLabel
&#9;local rotation = Value(0)

&#9;task.defer(function()
&#9;&#9;rotation:set(360)
&#9;end)

&#9;return Hydrate(Image {
&#9;&#9;Size = UDim2.fromOffset(Theme.CompSizeY.Medium, Theme.CompSizeY.Medium),
&#9;&#9;Image = Assets.Icons.Spinner,
&#9;&#9;ImageColor3 = Theme.Colors.Text,
&#9;&#9;Rotation = Tween(
&#9;&#9;&#9;rotation,
&#9;&#9;&#9;TweenInfo.new(props.Duration or 1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1)
&#9;&#9;),
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001031</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX6370DA893D4F487F853CAD07C0B59E45">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b1c</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Dropdown</string>
						<string name="ScriptGuid">{6bd1aba8-fc42-4165-b495-01ed266dcdbd}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local GlobalUtil = require(Lemonade.Util)

local Theme = require(App.Theme)
local Assets = require(App.Assets)
local animate = require(Util.animate)
local stripProps = require(Util.stripProps)
local getTextSize = require(Util.getTextSize)
local getState = require(Util.getState)
local isState = require(Util.isState)

local Container = require(Components.Container)
local Padding = require(Components.Padding)
local Corner = require(Components.Corner)
local Image = require(Components.Image)
local List = require(Components.List)
local Box = require(Components.Box)

local New = Fusion.New
local Value = Fusion.Value
local Spring = Fusion.Spring
local Hydrate = Fusion.Hydrate
local OnEvent = Fusion.OnEvent
local Cleanup = Fusion.Cleanup
local Computed = Fusion.Computed
local Children = Fusion.Children
local Observer = Fusion.Observer
local ForValues = Fusion.ForValues
local peek = Fusion.peek

local BUTTON_COMPONENT_ONLY_PROPS = {
&#9;&quot;Activated&quot;,
&#9;&quot;IsSelected&quot;,
&#9;&quot;IsFirst&quot;,
&#9;&quot;IsLast&quot;,
}

type ButtonProps = {
&#9;Activated: () -&gt; (),
&#9;IsSelected: Fusion.Computed&lt;boolean&gt;,
&#9;IsFirst: Fusion.Value&lt;boolean&gt;?,
&#9;IsLast: boolean,
&#9;[any]: any,
}

local function Button(props: ButtonProps): TextButton
&#9;local isHovered = Value(false)
&#9;local isPressed = Value(false)

&#9;local state = getState({
&#9;&#9;Hovered = isHovered,
&#9;&#9;Pressed = isPressed,
&#9;})
&#9;local lastState = peek(state)

&#9;local color = animate(
&#9;&#9;Computed(function(use)
&#9;&#9;&#9;return use(props.IsSelected) and use(Theme.Colors.Brand) or use(Theme.Colors.Background)
&#9;&#9;end),
&#9;&#9;state
&#9;)

&#9;-- Hide very minor hover flicker of the first button when the dropdown is expanded
&#9;local disconnect = Observer(state):onChange(function()
&#9;&#9;if props.IsFirst and not peek(props.IsFirst) then
&#9;&#9;&#9;local state = peek(state)

&#9;&#9;&#9;if state == Enum.GuiState.Idle and lastState == Enum.GuiState.Press then
&#9;&#9;&#9;&#9;task.defer(function()
&#9;&#9;&#9;&#9;&#9;if peek(props.IsFirst) then
&#9;&#9;&#9;&#9;&#9;&#9;color:setPosition(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;peek(props.IsSelected) and peek(Theme.Colors.Brand) or peek(Theme.Colors.Background)
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end

&#9;&#9;&#9;lastState = state
&#9;&#9;end
&#9;end)

&#9;return Hydrate(New &quot;TextButton&quot; {
&#9;&#9;Size = UDim2.new(1, 0, 0, Theme.CompSizeY.Medium),
&#9;&#9;FontFace = Theme.Fonts.Regular,
&#9;&#9;AutoButtonColor = false,
&#9;&#9;TextSize = Theme.TextSize.Large,
&#9;&#9;TextXAlignment = Enum.TextXAlignment.Left,
&#9;&#9;BackgroundColor3 = color,
&#9;&#9;TextColor3 = Computed(function(use)
&#9;&#9;&#9;return use(props.IsSelected) and use(Theme.Colors.TextBranded) or use(Theme.Colors.Text)
&#9;&#9;end),

&#9;&#9;[OnEvent &quot;InputBegan&quot;] = function(input)
&#9;&#9;&#9;if input.UserInputType == Enum.UserInputType.MouseMovement then
&#9;&#9;&#9;&#9;isHovered:set(true)
&#9;&#9;&#9;elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
&#9;&#9;&#9;&#9;isPressed:set(true)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[OnEvent &quot;InputEnded&quot;] = function(input)
&#9;&#9;&#9;if input.UserInputType == Enum.UserInputType.MouseMovement then
&#9;&#9;&#9;&#9;isHovered:set(false)
&#9;&#9;&#9;elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
&#9;&#9;&#9;&#9;isPressed:set(false)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[OnEvent &quot;Activated&quot;] = function()
&#9;&#9;&#9;if props.IsFirst then
&#9;&#9;&#9;&#9;isHovered:set(false)
&#9;&#9;&#9;&#9;isPressed:set(false)
&#9;&#9;&#9;end

&#9;&#9;&#9;props.Activated()
&#9;&#9;end,

&#9;&#9;[Cleanup] = disconnect,
&#9;&#9;[Children] = GlobalUtil.join(
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Padding {
&#9;&#9;&#9;&#9;&#9;Padding = 6,
&#9;&#9;&#9;&#9;&#9;Vertical = false,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;&#9;if props.IsFirst
&#9;&#9;&#9;&#9;then {
&#9;&#9;&#9;&#9;&#9;Corner {},
&#9;&#9;&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0.5, 1),
&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.fromScale(0.5, 1),
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1.2, 0.2),
&#9;&#9;&#9;&#9;&#9;&#9;BackgroundColor3 = color,
&#9;&#9;&#9;&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;&#9;&#9;&#9;Visible = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return use(props.IsFirst)
&#9;&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;elseif props.IsLast then {
&#9;&#9;&#9;&#9;&#9;Corner {},
&#9;&#9;&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0.5, 0),
&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.fromScale(0.5, 0),
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1.2, 0.2),
&#9;&#9;&#9;&#9;&#9;&#9;BackgroundColor3 = color,
&#9;&#9;&#9;&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;else {}
&#9;&#9;),
&#9;})(stripProps(props, BUTTON_COMPONENT_ONLY_PROPS))
end

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Selected&quot;,
&#9;&quot;Options&quot;,
&#9;&quot;Value&quot;,
}

type Props = {
&#9;Selected: ((option: string) -&gt; ())?,
&#9;Options: { string },
&#9;Value: Fusion.CanBeState&lt;boolean&gt;?,
&#9;[any]: any,
}

return function(props: Props): TextButton
&#9;local value = isState(props.Value) and props.Value or Value(props.Value or props.Options[1])
&#9;local isOpen = Value(false)
&#9;local anchor = Value(0)

&#9;local size
&#9;do
&#9;&#9;local maxSize = Vector2.zero

&#9;&#9;for _, option in props.Options do
&#9;&#9;&#9;local textSize = getTextSize(option)

&#9;&#9;&#9;if textSize.X &gt; maxSize.X then
&#9;&#9;&#9;&#9;maxSize = textSize
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;size = UDim2.fromOffset(maxSize.X + 40, Theme.CompSizeY.Medium)
&#9;end

&#9;return Hydrate(Container {
&#9;&#9;AutomaticSize = Enum.AutomaticSize.None,
&#9;&#9;Size = size,

&#9;&#9;[Children] = {
&#9;&#9;&#9;Padding {
&#9;&#9;&#9;&#9;Padding = 6,
&#9;&#9;&#9;&#9;Vertical = false,
&#9;&#9;&#9;},
&#9;&#9;&#9;Image {
&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(1, 0.5),
&#9;&#9;&#9;&#9;Position = UDim2.fromScale(1, 0.5),
&#9;&#9;&#9;&#9;Size = UDim2.fromOffset(16, 16),
&#9;&#9;&#9;&#9;Image = Assets.Icons.Dropdown,
&#9;&#9;&#9;&#9;ImageColor3 = Theme.Colors.Text,
&#9;&#9;&#9;&#9;ZIndex = 2,
&#9;&#9;&#9;&#9;ImageTransparency = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;return use(isOpen) and 1 or 0
&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;},
&#9;&#9;&#9;Box {
&#9;&#9;&#9;&#9;ClipsDescendants = true,
&#9;&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.None,

&#9;&#9;&#9;&#9;Size = Spring(
&#9;&#9;&#9;&#9;&#9;Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;return UDim2.new(1, 12, use(isOpen) and #props.Options or 1, 0)
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;40
&#9;&#9;&#9;&#9;),

&#9;&#9;&#9;&#9;AnchorPoint = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;if use(isOpen) then
&#9;&#9;&#9;&#9;&#9;&#9;local index = table.find(props.Options, peek(value))
&#9;&#9;&#9;&#9;&#9;&#9;anchor:set((index - 1) / #props.Options)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;return Vector2.new(0.5, peek(anchor))
&#9;&#9;&#9;&#9;end),

&#9;&#9;&#9;&#9;Position = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;return UDim2.fromScale(0.5, use(isOpen) and 0 or use(anchor))
&#9;&#9;&#9;&#9;end),

&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, #props.Options),

&#9;&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Spacing = 0,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;ForValues(props.Options, function(_, option)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local isFirst = option == props.Options[1]

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return Button {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if isFirst then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return use(isOpen) and option or use(value)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return option
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end),

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;IsSelected = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return use(value) == option and use(isOpen)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end),

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local open = peek(isOpen)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;isOpen:set(not open)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not open or option == peek(value) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;value:set(option)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if props.Selected then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;props.Selected(option)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end,

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;IsFirst = isFirst and isOpen or nil,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;IsLast = option == props.Options[#props.Options],
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end, Fusion.cleanup),
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001032</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXC896ADC3B30D4EB89A21698A9A34B943">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b1d</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Input</string>
						<string name="ScriptGuid">{97bcd269-c9c9-4f88-b272-28a68fa7cd54}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)
local default = require(Util.default)
local stripProps = require(Util.stripProps)

local New = Fusion.New
local Out = Fusion.Out
local Value = Fusion.Value
local Hydrate = Fusion.Hydrate
local OnEvent = Fusion.OnEvent
local OnChange = Fusion.OnChange
local Children = Fusion.Children
local peek = Fusion.peek

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Started&quot;,
&#9;&quot;Changed&quot;,
&#9;&quot;Finished&quot;,
&#9;&quot;Font&quot;,
&#9;&quot;Color&quot;,
&#9;&quot;PlaceholderColor&quot;,
&#9;&quot;Scaled&quot;,
}

type Props = {
&#9;Started: (() -&gt; ())?,
&#9;Changed: ((text: string) -&gt; ())?,
&#9;Finished: ((text: string) -&gt; ())?,
&#9;AutomaticSize: Enum.AutomaticSize?,
&#9;Font: Fusion.CanBeState&lt;Font&gt;?,
&#9;Color: Fusion.CanBeState&lt;Color3&gt;?,
&#9;PlaceholderColor: Fusion.CanBeState&lt;Color3&gt;?,
&#9;Scaled: boolean?,
&#9;[any]: any,
}

return function(props: Props): TextBox
&#9;local text = Value(&quot;&quot;)

&#9;return Hydrate(New(&quot;TextBox&quot;) {
&#9;&#9;AutomaticSize = default(props.AutomaticSize, Enum.AutomaticSize.None),
&#9;&#9;FontFace = props.Font or Theme.Fonts.Regular,
&#9;&#9;TextColor3 = props.Color or Theme.Colors.Text,
&#9;&#9;PlaceholderColor3 = props.PlaceholderColor or Theme.Colors.TextDimmed,
&#9;&#9;TextXAlignment = Enum.TextXAlignment.Left,
&#9;&#9;TextSize = Theme.TextSize.Large,
&#9;&#9;BorderSizePixel = 0,
&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;PlaceholderText = &quot;...&quot;,
&#9;&#9;TextScaled = props.Scaled,
&#9;&#9;-- If the text is not scaled, enable ClipsDescendants so text scrolling works correctly.
&#9;&#9;ClipsDescendants = not props.Scaled,

&#9;&#9;[OnChange &quot;Text&quot;] = function(text)
&#9;&#9;&#9;if props.Changed then
&#9;&#9;&#9;&#9;props.Changed(text)
&#9;&#9;&#9;end
&#9;&#9;end,

&#9;&#9;[OnEvent &quot;Focused&quot;] = function()
&#9;&#9;&#9;if props.Started then
&#9;&#9;&#9;&#9;props.Started()
&#9;&#9;&#9;end
&#9;&#9;end,

&#9;&#9;[OnEvent &quot;FocusLost&quot;] = function()
&#9;&#9;&#9;if props.Finished then
&#9;&#9;&#9;&#9;props.Finished(peek(text))
&#9;&#9;&#9;end
&#9;&#9;end,

&#9;&#9;[Out &quot;Text&quot;] = text,

&#9;&#9;[Children] = props.Scaled and New(&quot;UITextSizeConstraint&quot;) {
&#9;&#9;&#9;MaxTextSize = props.TextSize or Theme.TextSize.Large,
&#9;&#9;} or nil,
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001033</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX6DD711560BAF4F57BB05F79639B43C34">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b1e</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">List</string>
						<string name="ScriptGuid">{81bf74a0-5e1c-4766-ba80-d3c7fc2d5102}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)
local stripProps = require(Util.stripProps)

local New = Fusion.New
local Hydrate = Fusion.Hydrate

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Spacing&quot;,
}

type Props = {
&#9;Spacing: number?,
&#9;[any]: any,
}

return function(props: Props): UIListLayout
&#9;return Hydrate(New &quot;UIListLayout&quot; {
&#9;&#9;SortOrder = Enum.SortOrder.LayoutOrder,
&#9;&#9;Padding = UDim.new(0, props.Spacing or Theme.ListSpacing),
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001034</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX399B5642FCC447459C31282F2CF2474D">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b1f</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">StatusButton</string>
						<string name="ScriptGuid">{fe0f5871-1922-4e9a-9086-1c533b635edd}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App

local Fusion = require(Lemonade.Packages.Fusion)
local Theme = require(App.Theme)

local New = Fusion.New
local Computed = Fusion.Computed
local Children = Fusion.Children

return function(props)
&#9;return New &quot;Frame&quot; {
&#9;&#9;Name = &quot;StatusButton&quot;,
&#9;&#9;BackgroundColor3 = Color3.fromRGB(68, 68, 68),
&#9;&#9;Size = props.Size or UDim2.new(0, 90, 0, Theme.CompSizeY.Large),
&#9;&#9;BorderSizePixel = 0,
&#9;&#9;LayoutOrder = props.LayoutOrder,

&#9;&#9;[Children] = {
&#9;&#9;&#9;-- Rounded corners
&#9;&#9;&#9;New &quot;UICorner&quot; {
&#9;&#9;&#9;&#9;CornerRadius = UDim.new(0, 6),
&#9;&#9;&#9;},

&#9;&#9;&#9;-- Status text
&#9;&#9;&#9;New &quot;TextLabel&quot; {
&#9;&#9;&#9;&#9;Name = &quot;StatusText&quot;,
&#9;&#9;&#9;&#9;Position = UDim2.fromScale(0, 0.5),
&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0, 0.5),
&#9;&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;&#9;Text = &quot;Status&quot;,
&#9;&#9;&#9;&#9;TextColor3 = Color3.fromRGB(165, 165, 165),
&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Large,
&#9;&#9;&#9;&#9;Size = UDim2.new(0.6, 0, 1, 0),
&#9;&#9;&#9;&#9;FontFace = Theme.Fonts.Regular,
&#9;&#9;&#9;&#9;TextXAlignment = Enum.TextXAlignment.Left,

&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;-- Add padding to the text
&#9;&#9;&#9;&#9;&#9;New &quot;UIPadding&quot; {
&#9;&#9;&#9;&#9;&#9;&#9;PaddingLeft = UDim.new(0, 10),
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},

&#9;&#9;&#9;-- Status indicator dot
&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;Name = &quot;StatusDot&quot;,
&#9;&#9;&#9;&#9;Position = UDim2.new(1, -19, 0.5, 0),
&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0, 0.5),
&#9;&#9;&#9;&#9;BackgroundColor3 = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;local isConnected = props.IsConnected
&#9;&#9;&#9;&#9;&#9;if type(isConnected) == &quot;table&quot; and isConnected.get then
&#9;&#9;&#9;&#9;&#9;&#9;isConnected = use(props.IsConnected)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;return isConnected and Color3.fromRGB(62, 148, 65) -- Green for connected
&#9;&#9;&#9;&#9;&#9;&#9;or Color3.fromRGB(116, 38, 38) -- Red for disconnected
&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;Size = UDim2.fromOffset(8, 8),
&#9;&#9;&#9;&#9;BorderSizePixel = 0,

&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;New &quot;UICorner&quot; {
&#9;&#9;&#9;&#9;&#9;&#9;CornerRadius = UDim.new(0.5, 0),
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001035</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXAC106D20483D4F6AB7A6DB2445C45238">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b20</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Container</string>
						<string name="ScriptGuid">{8b551f70-c2ae-4572-9d5f-3862bab85d14}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Fusion = require(Lemonade.Packages.Fusion)

local New = Fusion.New
local Hydrate = Fusion.Hydrate

type Props = {
&#9;[any]: any,
}

return function(props: Props): Frame
&#9;return Hydrate(New &quot;Frame&quot; {
&#9;&#9;BorderSizePixel = 0,
&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;AutomaticSize = Enum.AutomaticSize.Y,
&#9;})(props)
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001036</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXEE688CB407074044AE9E022663565110">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b21</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Collapsible</string>
						<string name="ScriptGuid">{c0c3ade4-a14e-423c-9d78-eedc944f3006}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)
local Assets = require(App.Assets)
local animate = require(Util.animate)
local getState = require(Util.getState)
local stripProps = require(Util.stripProps)

local Container = require(Components.Container)
local Padding = require(Components.Padding)
local Corner = require(Components.Corner)
local Image = require(Components.Image)
local List = require(Components.List)
local Text = require(Components.Text)
local Box = require(Components.Box)

local New = Fusion.New
local Value = Fusion.Value
local Tween = Fusion.Tween
local Spring = Fusion.Spring
local Hydrate = Fusion.Hydrate
local OnEvent = Fusion.OnEvent
local Computed = Fusion.Computed
local Children = Fusion.Children
local OnChange = Fusion.OnChange
local peek = Fusion.peek

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Title&quot;,
&#9;&quot;Expanded&quot;,
&#9;&quot;Elements&quot;,
}

type Props = {
&#9;Title: string,
&#9;Expanded: boolean?,
&#9;Elements: { Instance },
}

return function(props: Props): Frame
&#9;local isExpanded = Value(props.Expanded or false)
&#9;local absoluteSize = Value(Vector2.zero)

&#9;local isHovered = Value(false)
&#9;local isPressed = Value(false)

&#9;local state = getState({
&#9;&#9;Hovered = isHovered,
&#9;&#9;Pressed = isPressed,
&#9;})

&#9;local color = animate(
&#9;&#9;Computed(function(use)
&#9;&#9;&#9;return use(isExpanded) and use(Theme.Colors.ActiveBackground) or use(Theme.Colors.Background)
&#9;&#9;end),
&#9;&#9;state
&#9;)

&#9;return Hydrate(Box {
&#9;&#9;ClipsDescendants = true,
&#9;&#9;AutomaticSize = Enum.AutomaticSize.None,
&#9;&#9;Size = Spring(
&#9;&#9;&#9;Computed(function(use)
&#9;&#9;&#9;&#9;return UDim2.new(1, 0, 0, Theme.CompSizeY.Large + (use(isExpanded) and use(absoluteSize).Y or 0))
&#9;&#9;&#9;end),
&#9;&#9;&#9;30
&#9;&#9;),

&#9;&#9;[Children] = {
&#9;&#9;&#9;New &quot;TextButton&quot; {
&#9;&#9;&#9;&#9;Text = &quot;&quot;,
&#9;&#9;&#9;&#9;AutoButtonColor = false,
&#9;&#9;&#9;&#9;Size = UDim2.new(1, 0, 0, Theme.CompSizeY.Large),
&#9;&#9;&#9;&#9;BackgroundColor3 = color,

&#9;&#9;&#9;&#9;[OnEvent &quot;InputBegan&quot;] = function(input)
&#9;&#9;&#9;&#9;&#9;if input.UserInputType == Enum.UserInputType.MouseMovement then
&#9;&#9;&#9;&#9;&#9;&#9;isHovered:set(true)
&#9;&#9;&#9;&#9;&#9;elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
&#9;&#9;&#9;&#9;&#9;&#9;isPressed:set(true)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;[OnEvent &quot;InputEnded&quot;] = function(input)
&#9;&#9;&#9;&#9;&#9;if input.UserInputType == Enum.UserInputType.MouseMovement then
&#9;&#9;&#9;&#9;&#9;&#9;isHovered:set(false)
&#9;&#9;&#9;&#9;&#9;elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
&#9;&#9;&#9;&#9;&#9;&#9;isPressed:set(false)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;[OnEvent &quot;Activated&quot;] = function()
&#9;&#9;&#9;&#9;&#9;isExpanded:set(not peek(isExpanded))
&#9;&#9;&#9;&#9;end,

&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;Corner {},
&#9;&#9;&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 1),
&#9;&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Padding {},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text = props.Title,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;FontFace = Theme.Fonts.Bold,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Large,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextXAlignment = Enum.TextXAlignment.Left,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 1),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Color = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return use(Theme.Colors.Text)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Image {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(1, 0.5),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.fromScale(1, 0.5),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromOffset(16, 16),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Image = Assets.Icons.Expand,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ImageColor3 = Theme.Colors.Text,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Rotation = Spring(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return use(isExpanded) and 180 or 0
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;30
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0, 1),
&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.fromScale(0, 1),
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 0.2),
&#9;&#9;&#9;&#9;&#9;&#9;BackgroundColor3 = color,
&#9;&#9;&#9;&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = Tween(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return use(isExpanded) and 0 or 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
&#9;&#9;&#9;&#9;&#9;&#9;),
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 0),
&#9;&#9;&#9;&#9;Position = UDim2.fromOffset(0, Theme.CompSizeY.Large),
&#9;&#9;&#9;&#9;[OnChange &quot;AbsoluteSize&quot;] = function(size)
&#9;&#9;&#9;&#9;&#9;absoluteSize:set(size)
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;&#9;&#9;Spacing = 0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;props.Elements,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001037</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX408CC7DEFD6C42568933A81ECB2ADCC6">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b22</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Checkbox</string>
						<string name="ScriptGuid">{b02b124d-4fd3-4b8a-93d6-a1fd0a9684e3}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Assets = require(App.Assets)
local Theme = require(App.Theme)
local stripProps = require(Util.stripProps)
local isState = require(Util.isState)

local IconButton = require(Components.IconButton)

local Value = Fusion.Value
local peek = Fusion.peek
local Hydrate = Fusion.Hydrate
local Computed = Fusion.Computed

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Changed&quot;,
&#9;&quot;Value&quot;,
}

type Props = {
&#9;Changed: ((value: boolean) -&gt; ())?,
&#9;Value: Fusion.CanBeState&lt;boolean&gt;?,
&#9;[any]: any,
}

return function(props: Props): TextButton
&#9;local value = isState(props.Value) and props.Value or Value(props.Value or false)

&#9;return Hydrate(IconButton {
&#9;&#9;Size = UDim2.fromOffset(Theme.CompSizeY.Medium, Theme.CompSizeY.Medium),
&#9;&#9;Solid = value,
&#9;&#9;Blending = false,
&#9;&#9;Icon = Computed(function(use)
&#9;&#9;&#9;return use(value) and Assets.Icons.Checkmark or &quot;&quot;
&#9;&#9;end),

&#9;&#9;Activated = function()
&#9;&#9;&#9;value:set(not peek(value))

&#9;&#9;&#9;if props.Changed then
&#9;&#9;&#9;&#9;props.Changed(peek(value))
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001038</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX41EF4C8CCEB9495EBE5B69119D7CC525">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b23</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Image</string>
						<string name="ScriptGuid">{7f35a313-0fb7-480a-aeef-4e3187db1f3e}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Fusion = require(Lemonade.Packages.Fusion)

local New = Fusion.New
local Hydrate = Fusion.Hydrate

type Props = {
&#9;[any]: any,
}

return function(props: Props): ImageLabel
&#9;return Hydrate(New(&quot;ImageLabel&quot;) {
&#9;&#9;BorderSizePixel = 0,
&#9;&#9;BackgroundTransparency = 1,
&#9;})(props)
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001039</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX63BB6DF4A0644941A0DC55739F3DCCE1">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b24</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Text</string>
						<string name="ScriptGuid">{9f6fd9a4-0526-4023-a488-ed4fc1c217c5}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)
local stripProps = require(Util.stripProps)

local New = Fusion.New
local Hydrate = Fusion.Hydrate
local Children = Fusion.Children

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Font&quot;,
&#9;&quot;Color&quot;,
&#9;&quot;Scaled&quot;,
}

type Props = {
&#9;Font: Fusion.CanBeState&lt;Font&gt;?,
&#9;Color: Fusion.CanBeState&lt;Color3&gt;?,
&#9;Scaled: boolean?,
&#9;[any]: any,
}

return function(props: Props): TextLabel
&#9;return Hydrate(New(&quot;TextLabel&quot;) {
&#9;&#9;FontFace = props.Font or Theme.Fonts.Regular,
&#9;&#9;TextColor3 = props.Color or Theme.Colors.Text,
&#9;&#9;TextSize = Theme.TextSize.Large,
&#9;&#9;AutomaticSize = props.Scaled and Enum.AutomaticSize.None or Enum.AutomaticSize.XY,
&#9;&#9;TextXAlignment = Enum.TextXAlignment.Left,
&#9;&#9;BorderSizePixel = 0,
&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;TextScaled = props.Scaled,

&#9;&#9;[Children] = props.Scaled and New(&quot;UITextSizeConstraint&quot;) {
&#9;&#9;&#9;MaxTextSize = props.TextSize or Theme.TextSize.Large,
&#9;&#9;} or nil,
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000103a</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXA996167C391C47CEB979868970632FD0">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b25</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Corner</string>
						<string name="ScriptGuid">{60475a66-94b3-4ae8-bf2d-e6d667cb9fc0}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)
local stripProps = require(Util.stripProps)

local New = Fusion.New
local Hydrate = Fusion.Hydrate

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Radius&quot;,
}

type Props = {
&#9;Radius: number?,
&#9;[any]: any,
}

return function(props: Props): UICorner
&#9;return Hydrate(New &quot;UICorner&quot; {
&#9;&#9;CornerRadius = UDim.new(0, props.Radius or Theme.CornerRadius),
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000103b</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX4360FB4975F8459DAB65748F61BB21B3">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b26</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">OptionSelector</string>
						<string name="ScriptGuid">{e35b47af-7ee1-41eb-a7ec-595f0c265381}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)
local animate = require(Util.animate)
local stripProps = require(Util.stripProps)
local getState = require(Util.getState)
local isState = require(Util.isState)

local Corner = require(Components.Corner)
local List = require(Components.List)
local Box = require(Components.Box)

local New = Fusion.New
local Value = Fusion.Value
local Hydrate = Fusion.Hydrate
local OnEvent = Fusion.OnEvent
local Computed = Fusion.Computed
local Children = Fusion.Children
local ForValues = Fusion.ForValues
local peek = Fusion.peek

local BUTTON_COMPONENT_ONLY_PROPS = {
&#9;&quot;Activated&quot;,
&#9;&quot;IsSelected&quot;,
&#9;&quot;IsFirst&quot;,
&#9;&quot;IsLast&quot;,
}

type ButtonProps = {
&#9;Activated: () -&gt; (),
&#9;IsSelected: Fusion.CanBeState&lt;boolean&gt;,
&#9;IsFirst: boolean,
&#9;IsLast: boolean,
&#9;[any]: any,
}

local function Button(props: ButtonProps): TextButton
&#9;local isHovered = Value(false)
&#9;local isPressed = Value(false)

&#9;local state = getState({
&#9;&#9;Hovered = isHovered,
&#9;&#9;Pressed = isPressed,
&#9;})

&#9;local color = animate(
&#9;&#9;Computed(function(use)
&#9;&#9;&#9;return use(props.IsSelected) and use(Theme.Colors.Brand) or use(Theme.Colors.Background)
&#9;&#9;end),
&#9;&#9;state
&#9;)

&#9;local children = if props.IsFirst
&#9;&#9;then {
&#9;&#9;&#9;Corner {},
&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(1, 0),
&#9;&#9;&#9;&#9;Position = UDim2.fromScale(1, 0),
&#9;&#9;&#9;&#9;Size = UDim2.fromScale(0.1, 1),
&#9;&#9;&#9;&#9;BackgroundColor3 = color,
&#9;&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;},
&#9;&#9;}
&#9;&#9;elseif props.IsLast then {
&#9;&#9;&#9;Corner {},
&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;Size = UDim2.fromScale(0.1, 1),
&#9;&#9;&#9;&#9;BackgroundColor3 = color,
&#9;&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;},
&#9;&#9;}
&#9;&#9;else {}

&#9;if not props.IsFirst then
&#9;&#9;table.insert(
&#9;&#9;&#9;children,
&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;Size = UDim2.new(0, Theme.BorderThickness, 1, 0),
&#9;&#9;&#9;&#9;BackgroundColor3 = Theme.Colors.Border,
&#9;&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;}
&#9;&#9;)
&#9;end

&#9;return Hydrate(New &quot;TextButton&quot; {
&#9;&#9;Size = UDim2.fromScale(1, 1),
&#9;&#9;FontFace = Theme.Fonts.Regular,
&#9;&#9;AutoButtonColor = false,
&#9;&#9;TextSize = Theme.TextSize.Large,
&#9;&#9;BackgroundColor3 = color,
&#9;&#9;TextColor3 = Computed(function(use)
&#9;&#9;&#9;return use(props.IsSelected) and use(Theme.Colors.TextBranded) or use(Theme.Colors.Text)
&#9;&#9;end),

&#9;&#9;[OnEvent &quot;InputBegan&quot;] = function(input)
&#9;&#9;&#9;if input.UserInputType == Enum.UserInputType.MouseMovement then
&#9;&#9;&#9;&#9;isHovered:set(true)
&#9;&#9;&#9;elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
&#9;&#9;&#9;&#9;isPressed:set(true)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[OnEvent &quot;InputEnded&quot;] = function(input)
&#9;&#9;&#9;if input.UserInputType == Enum.UserInputType.MouseMovement then
&#9;&#9;&#9;&#9;isHovered:set(false)
&#9;&#9;&#9;elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
&#9;&#9;&#9;&#9;isPressed:set(false)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[OnEvent &quot;Activated&quot;] = function()
&#9;&#9;&#9;if props.Activated then
&#9;&#9;&#9;&#9;props.Activated()
&#9;&#9;&#9;end
&#9;&#9;end,

&#9;&#9;[Children] = children,
&#9;})(stripProps(props, BUTTON_COMPONENT_ONLY_PROPS))
end

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Selected&quot;,
&#9;&quot;Options&quot;,
&#9;&quot;Value&quot;,
}

type Props = {
&#9;Selected: ((option: string) -&gt; ())?,
&#9;Options: { string },
&#9;Value: Fusion.CanBeState&lt;boolean&gt;?,
&#9;[any]: any,
}

return function(props: Props): Frame
&#9;local value = isState(props.Value) and props.Value or Value(props.Value or props.Options[1])

&#9;return Hydrate(Box {
&#9;&#9;Size = UDim2.new(1, 0, 0, Theme.CompSizeY.Small),
&#9;&#9;AutomaticSize = Enum.AutomaticSize.None,

&#9;&#9;[Children] = {
&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;FillDirection = Enum.FillDirection.Horizontal,
&#9;&#9;&#9;&#9;HorizontalFlex = Enum.UIFlexAlignment.Fill,
&#9;&#9;&#9;&#9;Spacing = 0,
&#9;&#9;&#9;},
&#9;&#9;&#9;ForValues(props.Options, function(_, option)
&#9;&#9;&#9;&#9;return Button {
&#9;&#9;&#9;&#9;&#9;Text = option,
&#9;&#9;&#9;&#9;&#9;IsSelected = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;return use(value) == option
&#9;&#9;&#9;&#9;&#9;end),

&#9;&#9;&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;&#9;&#9;if option == peek(value) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;value:set(option)

&#9;&#9;&#9;&#9;&#9;&#9;if props.Selected then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;props.Selected(option)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end,

&#9;&#9;&#9;&#9;&#9;IsFirst = option == props.Options[1],
&#9;&#9;&#9;&#9;&#9;IsLast = option == props.Options[#props.Options],
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;end, Fusion.cleanup),
&#9;&#9;},
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000103c</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX76F4E4C2F6CF447789CD71B8FF6FAE57">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b27</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">IconButton</string>
						<string name="ScriptGuid">{9a8de5c4-58f5-40db-9a81-b12643ba5a98}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)
local animate = require(Util.animate)
local stripProps = require(Util.stripProps)
local getState = require(Util.getState)
local default = require(Util.default)

local Border = require(Components.Border)
local Image = require(Components.Image)

local New = Fusion.New
local Value = Fusion.Value
local Hydrate = Fusion.Hydrate
local OnEvent = Fusion.OnEvent
local Computed = Fusion.Computed
local Children = Fusion.Children

local COMPONENT_ONLY_PROPS = {
&#9;&quot;Activated&quot;,
&#9;&quot;Solid&quot;,
&#9;&quot;Icon&quot;,
&#9;&quot;BackgroundActive&quot;,
&#9;&quot;Blending&quot;,
}

type Props = {
&#9;Activated: (() -&gt; ())?,
&#9;Solid: Fusion.CanBeState&lt;boolean&gt;?,
&#9;Icon: Fusion.CanBeState&lt;string&gt;?,
&#9;BackgroundActive: Fusion.Computed&lt;boolean&gt;?,
&#9;Blending: boolean?,
&#9;[any]: any,
}

return function(props: Props): TextButton
&#9;local isHovered = Value(false)
&#9;local isPressed = Value(false)

&#9;local state = getState({
&#9;&#9;Hovered = isHovered,
&#9;&#9;Pressed = isPressed,
&#9;})

&#9;local color = animate(
&#9;&#9;Computed(function(use)
&#9;&#9;&#9;return if use(props.Solid)
&#9;&#9;&#9;&#9;then use(Theme.Colors.Brand)
&#9;&#9;&#9;&#9;else use(props.BackgroundActive) and use(Theme.Colors.ActiveBackground) or use(
&#9;&#9;&#9;&#9;&#9;Theme.Colors.Background
&#9;&#9;&#9;&#9;)
&#9;&#9;end),
&#9;&#9;state
&#9;)

&#9;return Hydrate(New &quot;TextButton&quot; {
&#9;&#9;Size = UDim2.fromOffset(Theme.CompSizeY.Large, Theme.CompSizeY.Large),
&#9;&#9;Text = &quot;&quot;,
&#9;&#9;AutoButtonColor = false,
&#9;&#9;BackgroundColor3 = color,

&#9;&#9;[OnEvent &quot;InputBegan&quot;] = function(inputObject)
&#9;&#9;&#9;if inputObject.UserInputType == Enum.UserInputType.MouseMovement then
&#9;&#9;&#9;&#9;isHovered:set(true)
&#9;&#9;&#9;elseif inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
&#9;&#9;&#9;&#9;isPressed:set(true)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[OnEvent &quot;InputEnded&quot;] = function(inputObject)
&#9;&#9;&#9;if inputObject.UserInputType == Enum.UserInputType.MouseMovement then
&#9;&#9;&#9;&#9;isHovered:set(false)
&#9;&#9;&#9;elseif inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
&#9;&#9;&#9;&#9;isPressed:set(false)
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;[OnEvent &quot;Activated&quot;] = function()
&#9;&#9;&#9;if props.Activated then
&#9;&#9;&#9;&#9;props.Activated()
&#9;&#9;&#9;end
&#9;&#9;end,

&#9;&#9;[Children] = {
&#9;&#9;&#9;Border {
&#9;&#9;&#9;&#9;Color = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;return use(props.Solid) and use(color) or use(Theme.Colors.Border)
&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;},
&#9;&#9;&#9;Image {
&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0.5, 0.5),
&#9;&#9;&#9;&#9;Position = UDim2.fromScale(0.5, 0.5),
&#9;&#9;&#9;&#9;Size = UDim2.fromScale(0.55, 0.55),
&#9;&#9;&#9;&#9;SizeConstraint = Enum.SizeConstraint.RelativeYY,
&#9;&#9;&#9;&#9;ImageTransparency = default(props.Blending, true) and Computed(function(use)
&#9;&#9;&#9;&#9;&#9;return use(Theme.IsDark) and 0.1 or 0.2
&#9;&#9;&#9;&#9;end) or 0,
&#9;&#9;&#9;&#9;ImageColor3 = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;return use(props.Solid) and use(Theme.Colors.TextBranded) or use(Theme.Colors.Text)
&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;Image = props.Icon,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;})(stripProps(props, COMPONENT_ONLY_PROPS))
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000103d</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX063E40E7E5344F7AB70A355002C802ED">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b28</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Border</string>
						<string name="ScriptGuid">{09acbfda-134d-4cfe-b70a-f527958ece51}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)

local Corner = require(Components.Corner)

local New = Fusion.New

type Props = {
&#9;Color: Fusion.CanBeState&lt;Color3&gt;?,
&#9;Transparency: Fusion.CanBeState&lt;number&gt;?,
&#9;Thickness: Fusion.CanBeState&lt;number&gt;?,
&#9;CornerRadius: Fusion.CanBeState&lt;UDim&gt;?,
}

return function(props: Props): { Instance }
&#9;return {
&#9;&#9;Corner {},
&#9;&#9;New &quot;UIStroke&quot; {
&#9;&#9;&#9;ApplyStrokeMode = Enum.ApplyStrokeMode.Border,
&#9;&#9;&#9;Color = props.Color or Theme.Colors.Border,
&#9;&#9;&#9;Thickness = props.Thickness or Theme.BorderThickness,
&#9;&#9;&#9;Transparency = props.Transparency or 0,
&#9;&#9;},
&#9;}
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000103e</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBXE26A0DED9A79446299B8200214813605">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b29</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Assets</string>
					<string name="ScriptGuid">{f0b6e8fc-2545-45d9-9d7a-f02be072db55}</string>
					<string name="Source">return {
&#9;[&quot;Lemonade&quot;] = {
&#9;&#9;[&quot;Banner&quot;] = &quot;rbxassetid://125092406294780&quot;,
&#9;&#9;[&quot;Logo&quot;] = &quot;rbxassetid://125092406294780&quot;,
&#9;&#9;[&quot;LogoOk&quot;] = &quot;rbxassetid://125092406294780&quot;,
&#9;&#9;[&quot;LogoWarn&quot;] = &quot;rbxassetid://125092406294780&quot;,
&#9;&#9;[&quot;LogoError&quot;] = &quot;rbxassetid://125092406294780&quot;,
&#9;},
&#9;[&quot;Icons&quot;] = {
&#9;&#9;[&quot;Settings&quot;] = &quot;rbxassetid://16549970121&quot;,
&#9;&#9;[&quot;Checkmark&quot;] = &quot;rbxassetid://16528403189&quot;,
&#9;&#9;[&quot;Spinner&quot;] = &quot;rbxassetid://125092406294780&quot;,
&#9;&#9;[&quot;Info&quot;] = &quot;rbxassetid://16549936110&quot;,
&#9;&#9;[&quot;Help&quot;] = &quot;rbxassetid://16549970317&quot;,
&#9;&#9;[&quot;Dropdown&quot;] = &quot;rbxassetid://16698223846&quot;,
&#9;&#9;[&quot;Expand&quot;] = &quot;rbxassetid://82247774782797&quot;,
&#9;},
}</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a40000103f</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX384789FFA1A04B5DBD0D399D5DBEE8E1">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b2a</UniqueId>
					<string name="Name">Pages</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001040</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBX816C5935AB164DC299EAD5A5E8906BE3">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b2b</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Error</string>
						<string name="ScriptGuid">{3467b024-c18c-40f9-9d32-2d66c3250d69}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)
local LogConfig = require(Lemonade.LogConfig)

local Theme = require(App.Theme)
local getTextSize = require(Util.getTextSize)

local TextButton = require(Components.TextButton)
local ScrollingContainer = require(Components.ScrollingContainer)
local Padding = require(Components.Padding)
local Text = require(Components.Text)
local List = require(Components.List)
local Box = require(Components.Box)

local Value = Fusion.Value
local Computed = Fusion.Computed
local OnChange = Fusion.OnChange
local Children = Fusion.Children
local New = Fusion.New

type Props = {
&#9;App: { [string]: any },
&#9;Message: string,
}

return function(props: Props): { Instance }
&#9;local absoluteSize = Value(Vector2.zero)
&#9;local loggingEnabled = Value(LogConfig.getLogging()) -- Track current logging state

&#9;local headerActions = New &quot;Frame&quot; {
&#9;&#9;Name = &quot;HeaderActions&quot;,
&#9;&#9;AutomaticSize = Enum.AutomaticSize.XY,
&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;[Children] = {
&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;FillDirection = Enum.FillDirection.Horizontal,
&#9;&#9;&#9;&#9;HorizontalAlignment = Enum.HorizontalAlignment.Right,
&#9;&#9;&#9;&#9;VerticalAlignment = Enum.VerticalAlignment.Center,
&#9;&#9;&#9;&#9;Padding = UDim.new(0, Theme.Padding),
&#9;&#9;&#9;},

&#9;&#9;&#9;TextButton {
&#9;&#9;&#9;&#9;Text = &quot;Proceed&quot;,
&#9;&#9;&#9;&#9;LayoutOrder = 2,
&#9;&#9;&#9;&#9;Solid = true,
&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.fromRGB(62, 148, 65),
&#9;&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;&#9;props.App:home()
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}

&#9;local pageContent = {
&#9;&#9;List {},
&#9;&#9;Box {
&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.None,
&#9;&#9;&#9;Size = Computed(function(use)
&#9;&#9;&#9;&#9;local currentAbsoluteSize = use(absoluteSize)
&#9;&#9;&#9;&#9;local rootSize = use(props.App.rootSize)

&#9;&#9;&#9;&#9;local textSize = getTextSize(
&#9;&#9;&#9;&#9;&#9;props.Message,
&#9;&#9;&#9;&#9;&#9;Theme.TextSize.Medium,
&#9;&#9;&#9;&#9;&#9;Theme.Fonts.Enums.Mono,
&#9;&#9;&#9;&#9;&#9;Vector2.new(currentAbsoluteSize.X - Theme.Padding * 2 - 2, math.huge)
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;local height = math.min(textSize.Y + Theme.Padding * 2, rootSize.Y - 120)

&#9;&#9;&#9;&#9;return UDim2.new(1, 0, 0, height)
&#9;&#9;&#9;end),

&#9;&#9;&#9;[OnChange &quot;AbsoluteSize&quot;] = function(newSize)
&#9;&#9;&#9;&#9;absoluteSize:set(newSize)
&#9;&#9;&#9;end,

&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;ScrollingContainer {
&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1, -2, 1, 0),
&#9;&#9;&#9;&#9;&#9;ScrollBar = true,
&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;Padding {},
&#9;&#9;&#9;&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text = props.Message,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;RichText = true,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextWrapped = true,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Font = Theme.Fonts.Mono,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Medium,
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},

&#9;&#9;-- Logging toggle button at the bottom
&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;Name = &quot;LoggingToggleContainer&quot;,
&#9;&#9;&#9;Size = UDim2.new(1, 0, 0, 30), -- Small height container
&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;LayoutOrder = 999, -- Ensure it&apos;s at the bottom
&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;TextButton {
&#9;&#9;&#9;&#9;&#9;Text = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;return use(loggingEnabled) and &quot;Logs On&quot; or &quot;Logs Off&quot;
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromOffset(65, 20), -- Very small height as requested
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(1, -65, 0.5, -10), -- Aligned to right edge
&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0, 0.5), -- Left anchor, vertically centered
&#9;&#9;&#9;&#9;&#9;TextSize = 12, -- Smaller text size
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1, -- No background color
&#9;&#9;&#9;&#9;&#9;TextColor3 = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;return use(loggingEnabled) and Color3.fromRGB(180, 50, 50) or Color3.fromRGB(165, 165, 165) -- Red when on, gray when off
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;&#9;&#9;local newState = not LogConfig.getLogging()
&#9;&#9;&#9;&#9;&#9;&#9;LogConfig.setLogging(newState)
&#9;&#9;&#9;&#9;&#9;&#9;loggingEnabled:set(newState)
&#9;&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}

&#9;return { headerActions, unpack(pageContent) }
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001041</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX970D0E533CB74EAB87B5B7687E95AC44">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b2c</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">NotConnected</string>
						<string name="ScriptGuid">{50bdf342-5114-4ef1-86ff-b2f4623fccbb}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components

local Fusion = require(Lemonade.Packages.Fusion)
local LogConfig = require(Lemonade.LogConfig)

local Theme = require(App.Theme)

local Text = require(Components.Text)
local TextButton = require(Components.TextButton)
local List = require(Components.List)
local StatusButton = require(Components.StatusButton)

local Children = Fusion.Children
local New = Fusion.New
local Value = Fusion.Value
local Computed = Fusion.Computed

type Props = {
&#9;App: { [string]: any },
&#9;Host: string,
&#9;Port: number,
}

return function(props: Props): { Instance }
&#9;local loggingEnabled = Value(LogConfig.getLogging()) -- Track current logging state

&#9;local headerActions = New &quot;Frame&quot; {
&#9;&#9;Name = &quot;HeaderActions&quot;,
&#9;&#9;AutomaticSize = Enum.AutomaticSize.XY,
&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;[Children] = {
&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;FillDirection = Enum.FillDirection.Horizontal,
&#9;&#9;&#9;&#9;HorizontalAlignment = Enum.HorizontalAlignment.Right,
&#9;&#9;&#9;&#9;VerticalAlignment = Enum.VerticalAlignment.Center,
&#9;&#9;&#9;&#9;Padding = UDim.new(0, 8),
&#9;&#9;&#9;},

&#9;&#9;&#9;TextButton {
&#9;&#9;&#9;&#9;Solid = true,
&#9;&#9;&#9;&#9;LayoutOrder = 2,
&#9;&#9;&#9;&#9;Text = &quot;Connect&quot;,
&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.fromRGB(62, 148, 65), -- Green connect button
&#9;&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;&#9;props.App:connect()
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;},
&#9;&#9;&#9;StatusButton {
&#9;&#9;&#9;&#9;LayoutOrder = 3,
&#9;&#9;&#9;&#9;IsConnected = props.App.isConnectedState,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}

&#9;local pageContent = {
&#9;&#9;List {},
&#9;&#9;Text {
&#9;&#9;&#9;Text = &quot;Open a project in the browser then press Connect&quot;,
&#9;&#9;&#9;TextSize = Theme.TextSize.Medium,
&#9;&#9;&#9;Color = Theme.Colors.TextDimmed,
&#9;&#9;&#9;TextWrapped = true,
&#9;&#9;&#9;Size = UDim2.fromScale(1, 0),
&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.Y,
&#9;&#9;&#9;TextXAlignment = Enum.TextXAlignment.Center,
&#9;&#9;&#9;LayoutOrder = 1,
&#9;&#9;},

&#9;&#9;-- Logging toggle button at the bottom
&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;Name = &quot;LoggingToggleContainer&quot;,
&#9;&#9;&#9;Size = UDim2.new(1, 0, 0, 30), -- Small height container
&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;LayoutOrder = 999, -- Ensure it&apos;s at the bottom
&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;TextButton {
&#9;&#9;&#9;&#9;&#9;Text = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;return use(loggingEnabled) and &quot;Logs On&quot; or &quot;Logs Off&quot;
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromOffset(65, 20), -- Very small height as requested
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(1, -65, 0.5, -10), -- Aligned to right edge
&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0, 0.5), -- Left anchor, vertically centered
&#9;&#9;&#9;&#9;&#9;TextSize = 12, -- Smaller text size
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1, -- No background color
&#9;&#9;&#9;&#9;&#9;TextColor3 = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;return use(loggingEnabled) and Color3.fromRGB(180, 50, 50) or Color3.fromRGB(165, 165, 165) -- Red when on, gray when off
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;&#9;&#9;local newState = not LogConfig.getLogging()
&#9;&#9;&#9;&#9;&#9;&#9;LogConfig.setLogging(newState)
&#9;&#9;&#9;&#9;&#9;&#9;loggingEnabled:set(newState)
&#9;&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}

&#9;return { headerActions, unpack(pageContent) }
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001042</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXD1CE0F8373D14287978D6604C30019BF">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b2d</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Connected</string>
						<string name="ScriptGuid">{04bf811a-76d0-4998-8a8f-ab612464a4cc}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components

local Fusion = require(Lemonade.Packages.Fusion)
local Theme = require(App.Theme)
local LogConfig = require(Lemonade.LogConfig)

local TextButton = require(Components.TextButton)
local Padding = require(Components.Padding)
local Text = require(Components.Text)
local List = require(Components.List)
local Box = require(Components.Box)
local StatusButton = require(Components.StatusButton)

local Value = Fusion.Value
local Observer = Fusion.Observer
local Computed = Fusion.Computed
local Children = Fusion.Children
local Cleanup = Fusion.Cleanup
local peek = Fusion.peek
local New = Fusion.New

type Props = {
&#9;App: { [string]: any },
&#9;Project: any,
}

return function(props: Props): { Instance }
&#9;local syncedText = Value(&quot;just now&quot;)
&#9;local loggingEnabled = Value(LogConfig.getLogging()) -- Track current logging state

&#9;local function updateSyncedText()
&#9;&#9;return task.spawn(function()
&#9;&#9;&#9;while true do
&#9;&#9;&#9;&#9;local elapsed = os.time() - peek(props.App.lastSync)
&#9;&#9;&#9;&#9;local interval = 1
&#9;&#9;&#9;&#9;local text

&#9;&#9;&#9;&#9;if elapsed &lt; 1 then
&#9;&#9;&#9;&#9;&#9;text = &quot;just now&quot;
&#9;&#9;&#9;&#9;elseif elapsed &lt; 60 then
&#9;&#9;&#9;&#9;&#9;text = math.floor(elapsed) .. &quot;s ago:&quot;
&#9;&#9;&#9;&#9;elseif elapsed &lt; 3600 then
&#9;&#9;&#9;&#9;&#9;interval = 60
&#9;&#9;&#9;&#9;&#9;text = elapsed // interval .. &quot;m ago:&quot;
&#9;&#9;&#9;&#9;elseif elapsed &lt; 86400 then
&#9;&#9;&#9;&#9;&#9;interval = 3600
&#9;&#9;&#9;&#9;&#9;text = elapsed // interval .. &quot;h ago:&quot;
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;interval = 86400
&#9;&#9;&#9;&#9;&#9;text = elapsed // interval .. &quot;d ago:&quot;
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;syncedText:set(text)
&#9;&#9;&#9;&#9;task.wait(interval)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end

&#9;local thread = updateSyncedText()
&#9;local disconnectObserver = Observer(props.App.lastSync):onChange(function()
&#9;&#9;task.cancel(thread)
&#9;&#9;thread = updateSyncedText()
&#9;end)

&#9;local headerActions = New &quot;Frame&quot; {
&#9;&#9;Name = &quot;HeaderActions&quot;,
&#9;&#9;AutomaticSize = Enum.AutomaticSize.XY,
&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;[Children] = {
&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;FillDirection = Enum.FillDirection.Horizontal,
&#9;&#9;&#9;&#9;HorizontalAlignment = Enum.HorizontalAlignment.Right,
&#9;&#9;&#9;&#9;VerticalAlignment = Enum.VerticalAlignment.Center,
&#9;&#9;&#9;&#9;Padding = UDim.new(0, 8),
&#9;&#9;&#9;},

&#9;&#9;&#9;TextButton {
&#9;&#9;&#9;&#9;Text = &quot;Disconnect&quot;,
&#9;&#9;&#9;&#9;LayoutOrder = 2,
&#9;&#9;&#9;&#9;Solid = true,
&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.fromRGB(68, 68, 68), -- Match StatusButton background
&#9;&#9;&#9;&#9;TextColor3 = Color3.fromRGB(165, 165, 165), -- Match StatusButton text color
&#9;&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;&#9;props.App:disconnect()
&#9;&#9;&#9;&#9;&#9;props.App:home()
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;},
&#9;&#9;&#9;StatusButton {
&#9;&#9;&#9;&#9;LayoutOrder = 3,
&#9;&#9;&#9;&#9;IsConnected = props.App.isConnectedState,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[Cleanup] = function()
&#9;&#9;&#9;disconnectObserver()
&#9;&#9;&#9;task.cancel(thread)
&#9;&#9;end,
&#9;}

&#9;local pageContent = {
&#9;&#9;List {},
&#9;&#9;Box {
&#9;&#9;&#9;Size = UDim2.new(1, 0, 0, Theme.CompSizeY.Large * 1.5),
&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;Padding {},
&#9;&#9;&#9;&#9;-- Line 1: Project label
&#9;&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(0.8, 0.4),
&#9;&#9;&#9;&#9;&#9;Text = &quot;Project:&quot;,
&#9;&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Medium,
&#9;&#9;&#9;&#9;&#9;Color = Theme.Colors.TextDimmed,
&#9;&#9;&#9;&#9;&#9;Font = Theme.Fonts.Mono,
&#9;&#9;&#9;&#9;&#9;Scaled = true,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;-- Line 2: Project name
&#9;&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;&#9;Position = UDim2.fromScale(0, 0.4),
&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(0.8, 0.5),
&#9;&#9;&#9;&#9;&#9;Text = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;local project = use(props.Project)
&#9;&#9;&#9;&#9;&#9;&#9;return project and project.name or &quot;&quot; -- Return project name or empty string if nil
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;Font = Theme.Fonts.Bold,
&#9;&#9;&#9;&#9;&#9;Scaled = true,
&#9;&#9;&#9;&#9;},

&#9;&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(1, 0.5),
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(1, -2, 0.5, 0),
&#9;&#9;&#9;&#9;&#9;Text = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;local lastSyncKind = use(props.App.lastSyncKind)
&#9;&#9;&#9;&#9;&#9;&#9;local lastSyncedFile = use(props.App.lastSyncedFile)
&#9;&#9;&#9;&#9;&#9;&#9;if lastSyncedFile == &quot;Unknown&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return &quot;Send a web message...&quot;
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;local prefix = &quot;Studio sync &quot;
&#9;&#9;&#9;&#9;&#9;&#9;if lastSyncKind == &quot;Server&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;prefix = &quot;Web sync &quot;
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;return prefix .. use(syncedText) .. &quot;\n&quot; .. lastSyncedFile
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;RichText = false,
&#9;&#9;&#9;&#9;&#9;Color = Theme.Colors.TextDimmed,
&#9;&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Medium,
&#9;&#9;&#9;&#9;&#9;TextXAlignment = Enum.TextXAlignment.Right,
&#9;&#9;&#9;&#9;&#9;LineHeight = 1.2,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},

&#9;&#9;-- Logging toggle button at the bottom
&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;Name = &quot;LoggingToggleContainer&quot;,
&#9;&#9;&#9;Size = UDim2.new(1, 0, 0, 30), -- Small height container
&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;LayoutOrder = 999, -- Ensure it&apos;s at the bottom
&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;-- Progress bar with border and fill
&#9;&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;&#9;Name = &quot;FullSyncProgress&quot;,
&#9;&#9;&#9;&#9;&#9;Visible = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;return use(props.App.fullSyncStatus) == &quot;inProgress&quot;
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;LayoutOrder = 1,
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(1, -285, 0.5, -10), -- moved slightly to the right
&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0, 0.5),
&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromOffset(140, 20),
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 1),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.fromRGB(45, 45, 45),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BorderSizePixel = 1,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BorderColor3 = Color3.fromRGB(85, 85, 85),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;ClipsDescendants = true,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Size = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local count = use(props.App.fullSyncCount)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local total = use(props.App.fullSyncTotal)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local ratio = 0
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if total and total &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ratio = math.clamp(count / total, 0, 1)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return UDim2.fromScale(ratio, 1)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BackgroundColor3 = Color3.fromRGB(125, 200, 120), -- light green fill
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 1),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local count = use(props.App.fullSyncCount)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local total = use(props.App.fullSyncTotal)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (not total) or total == 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if count == 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return &quot;&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return tostring(count) .. &quot; synced&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return tostring(count) .. &quot;/&quot; .. tostring(total) .. &quot; synced&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextSize = 12,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextColor3 = Color3.fromRGB(220, 220, 220),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextXAlignment = Enum.TextXAlignment.Center,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextYAlignment = Enum.TextYAlignment.Center,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;TextButton {
&#9;&#9;&#9;&#9;&#9;LayoutOrder = 2,
&#9;&#9;&#9;&#9;&#9;Text = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;local status = use(props.App.fullSyncStatus)
&#9;&#9;&#9;&#9;&#9;&#9;if status == &quot;inProgress&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return &quot;In Progress&quot;
&#9;&#9;&#9;&#9;&#9;&#9;elseif status == &quot;nothing&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return &quot;Nothing to sync&quot;
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return &quot;Full Sync&quot;
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromOffset(65, 20), -- Same size as logs button
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(1, -135, 0.5, -10), -- 65 (logs) + 5 padding + 65 (this)
&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0, 0.5),
&#9;&#9;&#9;&#9;&#9;TextSize = 12,
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;&#9;&#9;&#9;TextColor3 = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;local status = use(props.App.fullSyncStatus)
&#9;&#9;&#9;&#9;&#9;&#9;if status == &quot;inProgress&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return Color3.fromRGB(255, 255, 255)
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return Color3.fromRGB(165, 165, 165)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;&#9;&#9;props.App:fullSync()
&#9;&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;TextButton {
&#9;&#9;&#9;&#9;&#9;Text = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;return use(loggingEnabled) and &quot;Logs On&quot; or &quot;Logs Off&quot;
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromOffset(65, 20), -- Very small height as requested
&#9;&#9;&#9;&#9;&#9;Position = UDim2.new(1, -65, 0.5, -10), -- Aligned to right edge
&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0, 0.5), -- Left anchor, vertically centered
&#9;&#9;&#9;&#9;&#9;TextSize = 12, -- Smaller text size
&#9;&#9;&#9;&#9;&#9;BackgroundTransparency = 1, -- No background color
&#9;&#9;&#9;&#9;&#9;TextColor3 = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;return use(loggingEnabled) and Color3.fromRGB(180, 50, 50) or Color3.fromRGB(165, 165, 165) -- Red when on, gray when off
&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;&#9;&#9;local newState = not LogConfig.getLogging()
&#9;&#9;&#9;&#9;&#9;&#9;LogConfig.setLogging(newState)
&#9;&#9;&#9;&#9;&#9;&#9;loggingEnabled:set(newState)
&#9;&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}

&#9;return { headerActions, unpack(pageContent) }
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001043</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXA64518757BE944219A78AED71F35089A">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b2e</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Prompt</string>
						<string name="ScriptGuid">{2b9c73c7-4dfa-436b-b078-0855d1a92fdf}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = script.Parent.Parent
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)
local Theme = require(App.Theme)
local getTextSize = require(Util.getTextSize)

local ScrollingContainer = require(Components.ScrollingContainer)
local TextButton = require(Components.TextButton)
local Padding = require(Components.Padding)
local Text = require(Components.Text)
local List = require(Components.List)
local Box = require(Components.Box)

local Value = Fusion.Value
local Computed = Fusion.Computed
local ForPairs = Fusion.ForPairs
local OnChange = Fusion.OnChange
local Children = Fusion.Children
local New = Fusion.New

type Props = {
&#9;App: { [string]: any },
&#9;Message: string,
&#9;Options: { string },
&#9;Signal: any,
}

return function(props: Props): { Instance }
&#9;local absoluteSize = Value(Vector2.zero)

&#9;local headerActions = New &quot;Frame&quot; {
&#9;&#9;Name = &quot;HeaderActions&quot;,
&#9;&#9;AutomaticSize = Enum.AutomaticSize.XY,
&#9;&#9;BackgroundTransparency = 1,
&#9;&#9;[Children] = {
&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;FillDirection = Enum.FillDirection.Horizontal,
&#9;&#9;&#9;&#9;HorizontalAlignment = Enum.HorizontalAlignment.Right,
&#9;&#9;&#9;&#9;VerticalAlignment = Enum.VerticalAlignment.Center,
&#9;&#9;&#9;&#9;Padding = UDim.new(0, Theme.Padding),
&#9;&#9;&#9;},
&#9;&#9;&#9;ForPairs(props.Options, function(_, index, option)
&#9;&#9;&#9;&#9;return index,
&#9;&#9;&#9;&#9;&#9;TextButton {
&#9;&#9;&#9;&#9;&#9;&#9;LayoutOrder = #props.Options - index + 1,
&#9;&#9;&#9;&#9;&#9;&#9;Solid = index == 1,
&#9;&#9;&#9;&#9;&#9;&#9;Text = option,
&#9;&#9;&#9;&#9;&#9;&#9;BackgroundColor3 = if index == 1 then Color3.fromRGB(62, 148, 65) else nil,
&#9;&#9;&#9;&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;props.Signal:Fire(option)
&#9;&#9;&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;end, Fusion.cleanup),
&#9;&#9;},
&#9;}

&#9;local pageContent = {
&#9;&#9;Box {
&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.None,
&#9;&#9;&#9;Size = Computed(function(use)
&#9;&#9;&#9;&#9;local currentAbsoluteSize = use(absoluteSize)
&#9;&#9;&#9;&#9;local rootSize = use(props.App.rootSize)

&#9;&#9;&#9;&#9;local textSize = getTextSize(
&#9;&#9;&#9;&#9;&#9;props.Message,
&#9;&#9;&#9;&#9;&#9;Theme.TextSize.Medium,
&#9;&#9;&#9;&#9;&#9;Theme.Fonts.Enums.Mono,
&#9;&#9;&#9;&#9;&#9;Vector2.new(currentAbsoluteSize.X - Theme.Padding * 2 - 2, math.huge)
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;local height = math.min(textSize.Y + Theme.Padding * 2, rootSize.Y - 120)

&#9;&#9;&#9;&#9;return UDim2.new(1, 0, 0, height)
&#9;&#9;&#9;end),

&#9;&#9;&#9;[OnChange &quot;AbsoluteSize&quot;] = function(newSize)
&#9;&#9;&#9;&#9;absoluteSize:set(newSize)
&#9;&#9;&#9;end,

&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;ScrollingContainer {
&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1, -2, 1, 0),
&#9;&#9;&#9;&#9;&#9;ScrollBar = true,
&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;Padding {},
&#9;&#9;&#9;&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text = tostring(props.Message or &quot;&quot;),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;RichText = true,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextWrapped = true,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Font = Theme.Fonts.Mono,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Medium,
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}

&#9;return { headerActions, unpack(pageContent) }
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001044</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX34F6A0CECBA34BFB8CA931778539AA70">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b2f</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Connecting</string>
						<string name="ScriptGuid">{33552c88-70b7-486a-8b5b-1eed0935f3c5}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)

local TextButton = require(Components.TextButton)
local Spinner = require(Components.Spinner)
local List = require(Components.List)
local Box = require(Components.Box)

local Children = Fusion.Children

type Props = {
&#9;App: { [string]: any },
}

return function(props: Props): { Instance }
&#9;return {
&#9;&#9;List {
&#9;&#9;&#9;HorizontalAlignment = Enum.HorizontalAlignment.Right,
&#9;&#9;},
&#9;&#9;Box {
&#9;&#9;&#9;Size = UDim2.new(1, 0, 0, Theme.CompSizeY.Large * 1.5),
&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;Spinner {
&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0.5, 0.5),
&#9;&#9;&#9;&#9;&#9;Position = UDim2.fromScale(0.5, 0.5),
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;TextButton {
&#9;&#9;&#9;Text = &quot;Cancel&quot;,
&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;props.App:disconnect(true)
&#9;&#9;&#9;&#9;props.App:home()
&#9;&#9;&#9;end,
&#9;&#9;},
&#9;}
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001045</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX713C336B574746269020B2EEEF12B2F3">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b30</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Unavailable</string>
						<string name="ScriptGuid">{c99ee025-a92c-4547-9435-d9a1d430ee71}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)

local Padding = require(Components.Padding)
local Text = require(Components.Text)
local Box = require(Components.Box)

local Value = Fusion.Value
local OnChange = Fusion.OnChange
local Children = Fusion.Children

type Props = {
&#9;App: { [string]: any },
&#9;Message: string,
}

return function(): Frame
&#9;local absoluteSize = Value(Vector2.zero)

&#9;return Box {
&#9;&#9;Size = UDim2.new(1, 0, 0, Theme.CompSizeY.Large * 2),

&#9;&#9;[OnChange &quot;AbsoluteSize&quot;] = function(size)
&#9;&#9;&#9;absoluteSize:set(size)
&#9;&#9;end,

&#9;&#9;[Children] = {
&#9;&#9;&#9;Padding {},
&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;Text = &quot;Unavailable during playtest! Return to the edit mode to continue using Lemonade&quot;,
&#9;&#9;&#9;&#9;TextWrapped = true,
&#9;&#9;&#9;&#9;Font = Theme.Fonts.Mono,
&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Medium,
&#9;&#9;&#9;&#9;Color = Theme.Colors.TextDimmed,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001046</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX4D1BFE356F284479A3D39A9286830004">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b31</UniqueId>
					<string name="Name">Widgets</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001047</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="RBXD7BF33EBB5B14ABF8ED3A78539CAC242">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b32</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Settings</string>
						<string name="ScriptGuid">{57da1e4f-f6c7-4151-a56e-5641744e79b5}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components
local Util = Components.Util

local Fusion = require(Lemonade.Packages.Fusion)

local Config = require(Lemonade.Config)
local GlobalUtil = require(Lemonade.Util)

local Theme = require(App.Theme)
local default = require(Util.default)
local filterNumber = require(Util.filterNumber)
local getTextSize = require(Util.getTextSize)

local Widget = require(Components.Plugin.Widget)
local ScrollingContainer = require(Components.ScrollingContainer)
local OptionSelector = require(Components.OptionSelector)
local Collapsible = require(Components.Collapsible)
local TextButton = require(Components.TextButton)
local Container = require(Components.Container)
local Checkbox = require(Components.Checkbox)
local Dropdown = require(Components.Dropdown)
local Padding = require(Components.Padding)
local Input = require(Components.Input)
local List = require(Components.List)
local Text = require(Components.Text)
local Box = require(Components.Box)

local New = Fusion.New
local Value = Fusion.Value
local Hydrate = Fusion.Hydrate
local Cleanup = Fusion.Cleanup
local Observer = Fusion.Observer
local Computed = Fusion.Computed
local Children = Fusion.Children
local OnChange = Fusion.OnChange
local ForValues = Fusion.ForValues
local ForPairs = Fusion.ForPairs
local Spring = Fusion.Spring
local peek = Fusion.peek

local SETTINGS_DATA: { { Title: string, Settings: { SettingData } } } = {
&#9;{
&#9;&#9;Title = &quot;General&quot;,
&#9;&#9;Settings = {
&#9;&#9;&#9;-- Removed InitialSyncPriority to prevent user confusion and sync issues
&#9;&#9;},
&#9;},
&#9;{
&#9;&#9;Title = &quot;Automation&quot;,
&#9;&#9;Settings = {
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Setting = &quot;AutoConnect&quot;,
&#9;&#9;&#9;&#9;Name = &quot;Auto Connect&quot;,
&#9;&#9;&#9;&#9;Description = &quot;Automatically attempt to connect to the server when you open a new place&quot;,
&#9;&#9;&#9;},
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Setting = &quot;AutoReconnect&quot;,
&#9;&#9;&#9;&#9;Name = &quot;Auto Reconnect&quot;,
&#9;&#9;&#9;&#9;Description = &quot;If the connection is lost, automatically reconnect to the server after delay&quot;,
&#9;&#9;&#9;},
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Setting = &quot;LiveHydrate&quot;,
&#9;&#9;&#9;&#9;Name = &quot;Live Hydrate&quot;,
&#9;&#9;&#9;&#9;Description = &quot;If the target instance doesn&apos;t exist in Studio, automatically hydrate it with the server&quot;,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;},
&#9;{
&#9;&#9;Title = &quot;Syncback&quot;,
&#9;&#9;Settings = {
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Setting = &quot;TwoWaySync&quot;,
&#9;&#9;&#9;&#9;Name = &quot;Two-Way Sync&quot;,
&#9;&#9;&#9;&#9;Description = &quot;Sync changes made in Roblox Studio back to the server (local file system)&quot;,
&#9;&#9;&#9;},
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Setting = &quot;SyncbackProperties&quot;,
&#9;&#9;&#9;&#9;Name = &quot;Syncback Properties&quot;,
&#9;&#9;&#9;&#9;Description = &quot;Whether all properties should be synced back to the server &lt;b&gt;(does not affect scripts)&lt;/b&gt;&quot;,
&#9;&#9;&#9;},

&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Setting = &quot;OpenInEditor&quot;,
&#9;&#9;&#9;&#9;Name = &quot;Open In Editor&quot;,
&#9;&#9;&#9;&#9;Description = &quot;Open scripts in your OS default editor instead of the Roblox Studio one&quot;,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;},
&#9;{
&#9;&#9;Title = &quot;Misc&quot;,
&#9;&#9;Settings = {
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Setting = &quot;DisplayPrompts&quot;,
&#9;&#9;&#9;&#9;Name = &quot;Display Prompts&quot;,
&#9;&#9;&#9;&#9;Description = &quot;When to show prompts for actions that require confirmation&quot;,
&#9;&#9;&#9;&#9;Options = { &quot;Always&quot;, &quot;Initial&quot;, &quot;Never&quot; },
&#9;&#9;&#9;},
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Setting = &quot;ChangesThreshold&quot;,
&#9;&#9;&#9;&#9;Name = &quot;Changes Threshold&quot;,
&#9;&#9;&#9;&#9;Description = &quot;The maximum number of changes that will be applied before prompting the user&quot;,
&#9;&#9;&#9;&#9;Filter = filterNumber,
&#9;&#9;&#9;&#9;CustomWidth = 50,
&#9;&#9;&#9;},
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Setting = &quot;LogLevel&quot;,
&#9;&#9;&#9;&#9;Name = &quot;Log Level&quot;,
&#9;&#9;&#9;&#9;Description = &quot;The level of logging you want to see in the output&quot;,
&#9;&#9;&#9;&#9;Options = { &quot;Off&quot;, &quot;Error&quot;, &quot;Warn&quot;, &quot;Info&quot;, &quot;Debug&quot;, &quot;Trace&quot; },
&#9;&#9;&#9;},
&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;Setting = &quot;OverridePackages&quot;,
&#9;&#9;&#9;&#9;Name = &quot;Override Packages&quot;,
&#9;&#9;&#9;&#9;Description = &quot;Whether writing changes to the instances affected by &lt;b&gt;PackageLink&lt;/b&gt; should be allowed&quot;,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;},
}

local LEVELS = { &quot;Global&quot;, &quot;Game&quot;, &quot;Place&quot; }

type SettingData = {
&#9;Setting: Config.Setting,
&#9;Name: string,
&#9;Description: string,
&#9;Options: { string }?,
&#9;Filter: ((value: string) -&gt; string)?,
&#9;CustomWidth: number?,
}

type EntryProps = {
&#9;Data: SettingData,
&#9;Level: Fusion.Value&lt;Config.Level&gt;,
&#9;Binding: Fusion.Value&lt;any&gt;,
}

local function Entry(props: EntryProps): Frame
&#9;local setting = props.Data.Setting
&#9;local absoluteSize = Value(Vector2.zero)

&#9;local valueComponent

&#9;if props.Data.Filter then
&#9;&#9;local userInput = false

&#9;&#9;local disconnect = Observer(props.Binding):onChange(function()
&#9;&#9;&#9;local value = peek(props.Binding)

&#9;&#9;&#9;if not userInput and value == Config:getDefault(setting) then
&#9;&#9;&#9;&#9;props.Binding:set(&quot;&quot;)
&#9;&#9;&#9;end

&#9;&#9;&#9;userInput = false
&#9;&#9;end)

&#9;&#9;if peek(props.Binding) == Config:getDefault(setting) then
&#9;&#9;&#9;props.Binding:set(&quot;&quot;)
&#9;&#9;end

&#9;&#9;local focused = Value(false)

&#9;&#9;valueComponent = Box {
&#9;&#9;&#9;Size = props.Data.CustomWidth
&#9;&#9;&#9;&#9;&#9;and math.floor(props.Data.CustomWidth) == props.Data.CustomWidth
&#9;&#9;&#9;&#9;&#9;and UDim2.fromOffset(props.Data.CustomWidth, Theme.CompSizeY.Medium)
&#9;&#9;&#9;&#9;or UDim2.new(props.Data.CustomWidth or 0.2, 0, 0, Theme.CompSizeY.Medium),
&#9;&#9;&#9;BorderColor = Spring(
&#9;&#9;&#9;&#9;Computed(function(use)
&#9;&#9;&#9;&#9;&#9;if use(focused) then
&#9;&#9;&#9;&#9;&#9;&#9;return use(Theme.Colors.Brand)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;return use(Theme.Colors.Border)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;Theme.SpringFastSpeed,
&#9;&#9;&#9;&#9;Theme.SpringDamping
&#9;&#9;&#9;),
&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;Input {
&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 1),
&#9;&#9;&#9;&#9;&#9;Text = props.Binding,
&#9;&#9;&#9;&#9;&#9;PlaceholderText = Config:getDefault(setting),

&#9;&#9;&#9;&#9;&#9;Started = function()
&#9;&#9;&#9;&#9;&#9;&#9;focused:set(true)
&#9;&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;&#9;Changed = function(text)
&#9;&#9;&#9;&#9;&#9;&#9;userInput = true
&#9;&#9;&#9;&#9;&#9;&#9;props.Binding:set(props.Data.Filter(text))
&#9;&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;&#9;Finished = function(text)
&#9;&#9;&#9;&#9;&#9;&#9;focused:set(false)
&#9;&#9;&#9;&#9;&#9;&#9;text = text ~= &quot;&quot; and text or Config:getDefault(setting)

&#9;&#9;&#9;&#9;&#9;&#9;props.Binding:set(text)
&#9;&#9;&#9;&#9;&#9;&#9;Config:set(setting, text, peek(props.Level))
&#9;&#9;&#9;&#9;&#9;end,

&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;Padding {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Vertical = false,
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;[Cleanup] = disconnect,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;}
&#9;elseif props.Data.Options then
&#9;&#9;valueComponent = Dropdown {
&#9;&#9;&#9;Options = props.Data.Options,
&#9;&#9;&#9;Value = props.Binding,
&#9;&#9;&#9;Selected = function(value)
&#9;&#9;&#9;&#9;Config:set(setting, value, peek(props.Level))
&#9;&#9;&#9;end,
&#9;&#9;}
&#9;else
&#9;&#9;valueComponent = Checkbox {
&#9;&#9;&#9;Value = props.Binding,
&#9;&#9;&#9;Changed = function(value)
&#9;&#9;&#9;&#9;Config:set(setting, value, peek(props.Level))
&#9;&#9;&#9;end,
&#9;&#9;}
&#9;end

&#9;return Container {
&#9;&#9;ZIndex = props.Data.Options and 2 or 1,
&#9;&#9;Size = UDim2.fromScale(1, 0),

&#9;&#9;[Children] = {
&#9;&#9;&#9;New &quot;Frame&quot; {
&#9;&#9;&#9;&#9;Size = UDim2.new(1, 0, 0, Theme.BorderThickness),
&#9;&#9;&#9;&#9;BackgroundColor3 = Theme.Colors.Border,
&#9;&#9;&#9;&#9;BorderSizePixel = 0,
&#9;&#9;&#9;},
&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 1),
&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;Padding {},
&#9;&#9;&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;&#9;&#9;Text = props.Data.Name,
&#9;&#9;&#9;&#9;&#9;&#9;Font = Theme.Fonts.Bold,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 0),
&#9;&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;FillDirection = Enum.FillDirection.Horizontal,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;VerticalAlignment = Enum.VerticalAlignment.Center,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;HorizontalFlex = Enum.UIFlexAlignment.Fill,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;RichText = true,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextWrapped = true,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.None,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text = props.Data.Description,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Small,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Color = Theme.Colors.TextDimmed,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.fromOffset(0, 22),

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Size = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local absoluteSize = use(absoluteSize)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local size = getTextSize(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;props.Data.Description,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Theme.TextSize.Small,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Theme.Fonts.Enums.Regular,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Vector2.new(absoluteSize.X, math.huge)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return UDim2.new(1, 0, 0, size.Y)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end),

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;[OnChange &quot;AbsoluteSize&quot;] = function(size)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;absoluteSize:set(size)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Hydrate(valueComponent) {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;New &quot;UIFlexItem&quot; {},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}
end

type Props = {
&#9;Closed: (() -&gt; ())?,
}

return function(props: Props): DockWidgetPluginGui
&#9;local level = Value(&quot;Global&quot;)
&#9;local bindings = {}

&#9;return Widget {
&#9;&#9;Name = &quot;Lemonade - Settings&quot;,
&#9;&#9;OverrideEnabled = true,
&#9;&#9;MinimumSize = Vector2.new(350, 400),
&#9;&#9;Closed = props.Closed,

&#9;&#9;[Children] = {
&#9;&#9;&#9;Padding {
&#9;&#9;&#9;&#9;Right = 4,
&#9;&#9;&#9;},

&#9;&#9;&#9;ScrollingContainer {
&#9;&#9;&#9;&#9;ScrollBar = true,

&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;List {},
&#9;&#9;&#9;&#9;&#9;Padding {
&#9;&#9;&#9;&#9;&#9;&#9;Padding = Theme.WidgetPadding,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;OptionSelector {
&#9;&#9;&#9;&#9;&#9;&#9;Options = LEVELS,
&#9;&#9;&#9;&#9;&#9;&#9;Selected = function(option)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;level:set(option)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;for setting, binding in bindings do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;binding:set(default(Config:get(setting, option), Config:getDefault(setting)))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;ForPairs(SETTINGS_DATA, function(_, index, data)
&#9;&#9;&#9;&#9;&#9;&#9;return index,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Collapsible {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Title = `{index}. {data.Title}`,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Expanded = index == 1,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Elements = ForValues(data.Settings, function(_, data)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local setting = data.Setting
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local binding =
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Value(default(Config:get(setting, peek(level)), Config:getDefault(setting)))

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;bindings[setting] = binding

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return Entry {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Data = data,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Level = level,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Binding = binding,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end, Fusion.cleanup),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;end, Fusion.cleanup),
&#9;&#9;&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromScale(1, 0),
&#9;&#9;&#9;&#9;&#9;&#9;LayoutOrder = GlobalUtil.len(SETTINGS_DATA) + 1,
&#9;&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextButton {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(1, 0),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.fromScale(1, 0),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text = &quot;Restore Defaults&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Activated = function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for setting, binding in bindings do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;binding:set(Config:getDefault(setting))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Config:restoreDefaults(peek(level))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001048</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX178C68D3E9DF4F189721E4557FB404D7">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b33</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Diff</string>
						<string name="ScriptGuid">{208d0959-7132-45cd-954d-ea0cbfbb27ec}</string>
						<string name="Source"></string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001049</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXBD7173C095D04C5FA3C6CC39E6065EBC">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b34</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">ProjectDetails</string>
						<string name="ScriptGuid">{7899c010-4c96-49ad-a524-e79dd3ea2b88}</string>
						<string name="Source">local StudioService = game:GetService(&quot;StudioService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components

local Fusion = require(Lemonade.Packages.Fusion)

local Types = require(Lemonade.Types)

local Theme = require(App.Theme)

local Widget = require(Components.Plugin.Widget)
local ScrollingContainer = require(Components.ScrollingContainer)
local Container = require(Components.Container)
local Padding = require(Components.Padding)
local Image = require(Components.Image)
local Text = require(Components.Text)
local List = require(Components.List)
local Box = require(Components.Box)

local Hydrate = Fusion.Hydrate
local Children = Fusion.Children
local Computed = Fusion.Computed
local ForValues = Fusion.ForValues
local peek = Fusion.peek

type EntryProps = {
&#9;Name: string,
&#9;Value: string,
}

local function Entry(props: EntryProps): Frame
&#9;return Box {
&#9;&#9;Size = UDim2.fromScale(1, 0),
&#9;&#9;[Children] = {
&#9;&#9;&#9;Padding {},
&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0, 0.5),
&#9;&#9;&#9;&#9;Position = UDim2.fromScale(0, 0.5),
&#9;&#9;&#9;&#9;Size = UDim2.new(0, 160, 1, 0),
&#9;&#9;&#9;&#9;Text = props.Name,
&#9;&#9;&#9;},
&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(1, 0),
&#9;&#9;&#9;&#9;Position = UDim2.fromScale(1, 0),
&#9;&#9;&#9;&#9;Size = UDim2.new(1, -160, 1, 0),
&#9;&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.Y,
&#9;&#9;&#9;&#9;TextColor3 = Theme.Colors.TextDimmed,
&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Medium,
&#9;&#9;&#9;&#9;TextWrapped = true,
&#9;&#9;&#9;&#9;Text = props.Value,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}
end

type IconListEntryProps = {
&#9;Name: string,
&#9;Values: {
&#9;&#9;{
&#9;&#9;&#9;Name: string,
&#9;&#9;&#9;Icon: {
&#9;&#9;&#9;&#9;Image: string,
&#9;&#9;&#9;&#9;ImageRectOffset: Vector2,
&#9;&#9;&#9;&#9;ImageRectSize: Vector2,
&#9;&#9;&#9;},
&#9;&#9;}
&#9;},
}

local function IconListEntry(props: IconListEntryProps): Frame
&#9;return Box {
&#9;&#9;Size = UDim2.fromScale(1, 0),
&#9;&#9;[Children] = {
&#9;&#9;&#9;Padding {},
&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0, 0.5),
&#9;&#9;&#9;&#9;Position = UDim2.fromScale(0, 0.5),
&#9;&#9;&#9;&#9;Size = UDim2.new(0, 160, 1, 0),
&#9;&#9;&#9;&#9;Text = props.Name,
&#9;&#9;&#9;},
&#9;&#9;&#9;Container {
&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(1, 0),
&#9;&#9;&#9;&#9;Position = UDim2.fromScale(1, 0),
&#9;&#9;&#9;&#9;Size = UDim2.new(1, -160, 1, 0),
&#9;&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.Y,
&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;&#9;&#9;Spacing = 0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;ForValues(props.Values, function(_, value)
&#9;&#9;&#9;&#9;&#9;&#9;return Container {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1, 0, 0, Theme.CompSizeY.Small),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Hydrate(Image {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;AnchorPoint = Vector2.new(0, 0.5),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.fromScale(0, 0.5),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.fromOffset(Theme.TextSize.Large, Theme.TextSize.Large),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;})(value.Icon),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Position = UDim2.fromOffset(Theme.TextSize.Large + 4, 0),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Size = UDim2.new(1, -(Theme.TextSize.Large + 4), 1, 0),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextColor3 = Theme.Colors.TextDimmed,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Medium,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.Y,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TextWrapped = true,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Text = value.Name,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;end, Fusion.cleanup),
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}
end

type Props = {
&#9;App: { [string]: any },
&#9;Project: Fusion.Value&lt;Types.Project&gt;,
&#9;Closed: (() -&gt; ())?,
}

return function(props: Props): DockWidgetPluginGui
&#9;return Widget {
&#9;&#9;Name = &quot;Lemonade - Project Details&quot;,
&#9;&#9;OverrideEnabled = true,
&#9;&#9;MinimumSize = Vector2.new(410, 300),
&#9;&#9;Closed = props.Closed,

&#9;&#9;[Children] = {
&#9;&#9;&#9;Padding {
&#9;&#9;&#9;&#9;Right = 4,
&#9;&#9;&#9;},

&#9;&#9;&#9;ScrollingContainer {
&#9;&#9;&#9;&#9;ScrollBar = true,

&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;&#9;&#9;HorizontalAlignment = Enum.HorizontalAlignment.Center,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Padding {
&#9;&#9;&#9;&#9;&#9;&#9;Padding = Theme.WidgetPadding,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Entry {
&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;Name&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Value = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return use(props.Project).name
&#9;&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Entry {
&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;Game ID&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Value = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return use(props.Project).gameId or &quot;Any&quot;
&#9;&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Entry {
&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;Place IDs&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Value = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local project = use(props.Project)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return #project.placeIds &gt; 0 and table.concat(project.placeIds, &quot;, &quot;) or &quot;Any&quot;
&#9;&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;IconListEntry {
&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;Root Instances&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Values = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;use(props.Project)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;local values = {}

&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i, instance in props.App.core.rootInstances do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;values[i] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Name = instance.Name,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Icon = StudioService:GetClassIcon(instance.ClassName),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;return values
&#9;&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Entry {
&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;Server Version&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Value = Computed(function(use)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return use(props.Project).version
&#9;&#9;&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Entry {
&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;Host&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Value = peek(props.App.host),
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Entry {
&#9;&#9;&#9;&#9;&#9;&#9;Name = &quot;Port&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Value = peek(props.App.port),
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000104a</UniqueId>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX7ADB532E042B4820A67C439DA461F8A7">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b35</UniqueId>
						<string name="LinkedSource"></string>
						<string name="Name">Help</string>
						<string name="ScriptGuid">{87172a65-8bb9-4f44-9970-3a5a70b2a461}</string>
						<string name="Source">local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App
local Components = App.Components

local Fusion = require(Lemonade.Packages.Fusion)

local Theme = require(App.Theme)

local Widget = require(Components.Plugin.Widget)
local ScrollingContainer = require(Components.ScrollingContainer)
local Container = require(Components.Container)
local Padding = require(Components.Padding)
local Input = require(Components.Input)
local List = require(Components.List)
local Text = require(Components.Text)
local Box = require(Components.Box)

local Children = Fusion.Children

local function Entry(body: { any })
&#9;return Box {
&#9;&#9;Size = UDim2.fromScale(1, 0),
&#9;&#9;[Children] = {
&#9;&#9;&#9;Padding {},
&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;Spacing = 6,
&#9;&#9;&#9;},
&#9;&#9;&#9;body,
&#9;&#9;},
&#9;}
end

local function Header(text: string)
&#9;return Text {
&#9;&#9;Font = Theme.Fonts.Bold,
&#9;&#9;Text = text,
&#9;}
end

local function Paragraph(text: string)
&#9;return Text {
&#9;&#9;Text = text,
&#9;&#9;TextWrapped = true,
&#9;&#9;TextSize = Theme.TextSize.Small,
&#9;&#9;Color = Theme.Colors.TextDimmed,
&#9;}
end

local function Link(text: string, url: string)
&#9;return Container {
&#9;&#9;Size = UDim2.fromScale(1, 0),
&#9;&#9;[Children] = {
&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;HorizontalAlignment = Enum.HorizontalAlignment.Center,
&#9;&#9;&#9;&#9;Spacing = 8,
&#9;&#9;&#9;},
&#9;&#9;&#9;Text {
&#9;&#9;&#9;&#9;Font = Theme.Fonts.Bold,
&#9;&#9;&#9;&#9;Text = text,
&#9;&#9;&#9;},
&#9;&#9;&#9;Box {
&#9;&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.XY,
&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;Padding {},
&#9;&#9;&#9;&#9;&#9;Input {
&#9;&#9;&#9;&#9;&#9;&#9;AutomaticSize = Enum.AutomaticSize.XY,
&#9;&#9;&#9;&#9;&#9;&#9;Text = url,
&#9;&#9;&#9;&#9;&#9;&#9;TextEditable = false,
&#9;&#9;&#9;&#9;&#9;&#9;TextSize = Theme.TextSize.Large,
&#9;&#9;&#9;&#9;&#9;&#9;Color = Theme.Colors.Brand,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}
end

type Props = {
&#9;Closed: (() -&gt; ())?,
}

return function(props: Props): DockWidgetPluginGui
&#9;return Widget {
&#9;&#9;Name = &quot;Lemonade - Help&quot;,
&#9;&#9;OverrideEnabled = true,
&#9;&#9;MinimumSize = Vector2.new(400, 350),
&#9;&#9;Closed = props.Closed,

&#9;&#9;[Children] = {
&#9;&#9;&#9;Padding {
&#9;&#9;&#9;&#9;Right = 4,
&#9;&#9;&#9;},

&#9;&#9;&#9;ScrollingContainer {
&#9;&#9;&#9;&#9;ScrollBar = true,

&#9;&#9;&#9;&#9;[Children] = {
&#9;&#9;&#9;&#9;&#9;List {
&#9;&#9;&#9;&#9;&#9;&#9;Spacing = 22,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Padding {
&#9;&#9;&#9;&#9;&#9;&#9;Padding = Theme.WidgetPadding,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Link(&quot;Visit official website to learn more:&quot;, &quot;https://lemonade.gg&quot;),
&#9;&#9;&#9;&#9;&#9;Entry {
&#9;&#9;&#9;&#9;&#9;&#9;Header &quot;1. Setting up the project&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Paragraph &apos;First you need to create new Lemonade project. If you are using CLI run &quot;lemonade init&quot; command.&apos;,
&#9;&#9;&#9;&#9;&#9;&#9;Paragraph &apos;If you are using VS Code extension open command palette (ctrl/cmd + shift + P) and run &quot;Lemonade: Open Menu&quot; -&gt; &quot;Init&quot;.&apos;,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Entry {
&#9;&#9;&#9;&#9;&#9;&#9;Header &quot;2. Starting the server&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Paragraph &apos;To start the server run &quot;lemonade serve&quot; command in your terminal or use &quot;Lemonade: Open Menu&quot; -&gt; &quot;Serve&quot; command in VS Code.&apos;,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Entry {
&#9;&#9;&#9;&#9;&#9;&#9;Header &quot;3. Connecting to the server&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Paragraph &apos;To connect to the server first make sure that host name and port are the same. Then press &quot;Connect&quot; button and you are done!&apos;,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;Entry {
&#9;&#9;&#9;&#9;&#9;&#9;Header &quot;4. Syncing&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Paragraph &quot;Now you can finally start syncing your changes. Remember to save your files in order to see the changes in Roblox Studio.&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;Paragraph &quot;You can also enable Two-Way Sync in the settings to sync changes made in Studio back to the file system.&quot;,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;}
end
</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000104b</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBXD9D98EA5E61E46A5BB914461D9942CBE">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b36</UniqueId>
				<string name="LinkedSource"></string>
				<string name="Name">Util</string>
				<string name="ScriptGuid">{0fa43a2d-e1fa-41d0-aa37-66444d8fc237}</string>
				<string name="Source">--!strict
local HttpService = game:GetService(&quot;HttpService&quot;)

local Util = {}

--- Get length of non-numerically indexed table
function Util.len(table: { [any]: any }): number
&#9;local count = 0

&#9;for _ in table do
&#9;&#9;count += 1
&#9;end

&#9;return count
end

--- Join second table to the first one
function Util.join(table1: { any }, table2: { any }): { any }
&#9;for _, value in pairs(table2) do
&#9;&#9;table.insert(table1, value)
&#9;end

&#9;return table1
end

--- Convert dictionary to array, ignoring keys
function Util.dictionaryToArray(dictionary: { [any]: any }): { any }
&#9;local array = {}

&#9;for _, value in pairs(dictionary) do
&#9;&#9;if type(value) == &quot;table&quot; then
&#9;&#9;&#9;-- Recursively flatten nested dictionaries
&#9;&#9;&#9;local nestedArray = Util.dictionaryToArray(value)
&#9;&#9;&#9;for _, nestedValue in pairs(nestedArray) do
&#9;&#9;&#9;&#9;table.insert(array, nestedValue)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;table.insert(array, value)
&#9;&#9;end
&#9;end

&#9;return array
end

--- Find the value and key of the first element that passes the filter
function Util.find(table: { any }, callback: (any, any?) -&gt; boolean)
&#9;for key, value in pairs(table) do
&#9;&#9;if callback(value, key) then
&#9;&#9;&#9;return value, key
&#9;&#9;end
&#9;end

&#9;return nil, nil
end

--- Stringify the value (pretty print)
function Util.stringify(value: any, __indent: number?): string
&#9;if type(value) == &quot;table&quot; then
&#9;&#9;local meta = getmetatable(value)

&#9;&#9;if meta and meta.__tostring then
&#9;&#9;&#9;return tostring(value)
&#9;&#9;end

&#9;&#9;if not next(value) then
&#9;&#9;&#9;return &quot;{}&quot;
&#9;&#9;end

&#9;&#9;local first = next(value)

&#9;&#9;if type(first) == &quot;number&quot; then
&#9;&#9;&#9;local containsTable = false

&#9;&#9;&#9;for _, v in value do
&#9;&#9;&#9;&#9;if type(v) == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;containsTable = true
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if not containsTable then
&#9;&#9;&#9;&#9;return &quot;{&quot; .. table.concat(value, &quot;, &quot;) .. &quot;}&quot;
&#9;&#9;&#9;end

&#9;&#9;&#9;local str = &quot;{\n&quot;
&#9;&#9;&#9;local indent = __indent and __indent + 1 or 1

&#9;&#9;&#9;for i, v in value do
&#9;&#9;&#9;&#9;str ..= str.rep(&quot;\t&quot;, indent)
&#9;&#9;&#9;&#9;str ..= `[{i}] = {Util.stringify(v, indent)},\n`
&#9;&#9;&#9;end

&#9;&#9;&#9;return str .. string.rep(&quot;\t&quot;, indent - 1) .. &quot;}&quot;
&#9;&#9;else
&#9;&#9;&#9;local str = &quot;{\n&quot;
&#9;&#9;&#9;local indent = __indent and __indent + 1 or 1

&#9;&#9;&#9;for k, v in value do
&#9;&#9;&#9;&#9;local key = type(k) == &quot;string&quot; and `&quot;{k}&quot;` or Util.stringify(k, indent)
&#9;&#9;&#9;&#9;local val = type(v) == &quot;string&quot; and `&quot;{v}&quot;` or Util.stringify(v, indent)

&#9;&#9;&#9;&#9;str ..= str.rep(&quot;\t&quot;, indent)
&#9;&#9;&#9;&#9;str ..= `[{key}] = {val},\n`
&#9;&#9;&#9;end

&#9;&#9;&#9;return str .. string.rep(&quot;\t&quot;, indent - 1) .. &quot;}&quot;
&#9;&#9;end
&#9;elseif typeof(value) == &quot;Instance&quot; then
&#9;&#9;return value:GetFullName()
&#9;elseif type(value) == &quot;buffer&quot; then
&#9;&#9;local success, str = pcall(buffer.tostring, value)
&#9;&#9;if success then
&#9;&#9;&#9;return string.format(&quot;buffer(%s)&quot;, str)
&#9;&#9;else
&#9;&#9;&#9;return string.format(&quot;buffer(tostring_failed: %s)&quot;, tostring(str))
&#9;&#9;end
&#9;else
&#9;&#9;return tostring(value)
&#9;end
end

--- Generate a GUID, example: 04AEBFEA-87FC-480F-A98B-E5E221007A90
function Util.generateGUID(): string
&#9;return HttpService:GenerateGUID(false)
end

--- Cast the value to the provided type (number, string, boolean, any)
function Util.cast(value: any, target: string): any
&#9;if typeof(value) == target then
&#9;&#9;return value
&#9;end

&#9;if target == &quot;number&quot; then
&#9;&#9;return tonumber(value)
&#9;elseif target == &quot;string&quot; then
&#9;&#9;return tostring(value)
&#9;elseif target == &quot;boolean&quot; then
&#9;&#9;return value == &quot;true&quot;
&#9;else
&#9;&#9;return value
&#9;end
end

--- Clean all provided connections and instances
function Util.clean(...: () -&gt; () | RBXScriptConnection | Instance | { [any]: any })
&#9;local function clean(object: any)
&#9;&#9;local kind = typeof(object)

&#9;&#9;if kind == &quot;function&quot; then
&#9;&#9;&#9;object()
&#9;&#9;elseif kind == &quot;RBXScriptConnection&quot; then
&#9;&#9;&#9;object:Disconnect()
&#9;&#9;elseif kind == &quot;Instance&quot; then
&#9;&#9;&#9;object:Destroy()
&#9;&#9;elseif kind == &quot;table&quot; then
&#9;&#9;&#9;if typeof(object.Destroy) == &quot;function&quot; then
&#9;&#9;&#9;&#9;object:Destroy()
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;for _, object in object do
&#9;&#9;&#9;&#9;&#9;clean(object)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;for _, arg in { ... } do
&#9;&#9;clean(arg)
&#9;end
end

-- Return the ACTUAL Util table defined at the top
return Util
</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a40000104c</UniqueId>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX38B42697971E4E6682D421024ACBC26E">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b37</UniqueId>
				<string name="LinkedSource"></string>
				<string name="Name">Watcher</string>
				<string name="ScriptGuid">{bb9de520-d449-4fb2-ae42-d07e26cc052a}</string>
				<string name="Source">--!strict
local LogConfig = require(script.Parent.LogConfig)
local CollectionService = game:GetService(&quot;CollectionService&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Signal = require(Lemonade.Packages.Signal)

local Types = require(Lemonade.Types)
local Log = require(Lemonade.Log)
-- Removed class-based `isSyncableInstance` filter &#226;&#128;&#147; upcoming ID-based workflow will rely on `Tree` mappings instead.
-- Helper function to determine if we should monitor property changes (anti-spam)
local function shouldMonitorInstanceProperties(instance: Instance): boolean
&#9;-- Only monitor property changes for scripts and script containers to prevent spam
&#9;return instance:IsA(&quot;LuaSourceContainer&quot;) or instance:FindFirstChildWhichIsA(&quot;LuaSourceContainer&quot;, true) ~= nil
end

type Watcher = typeof(setmetatable(
&#9;{} :: {
&#9;&#9;isActive: boolean,
&#9;&#9;blocked: boolean,
&#9;&#9;connections: { [Instance]: { RBXScriptConnection } },
&#9;&#9;tagConnections: { [string | CollectionService]: { RBXScriptConnection } },
&#9;&#9;signal: Signal.Signal,
&#9;&#9;tree: Types.Tree,
&#9;&#9;lastEventTime: { [string]: number },
&#9;&#9;DEBOUNCE_DELAY: number,
&#9;&#9;bulkImport: any?,
&#9;},
&#9;{} :: WatcherImpl
))

type WatcherImpl = {
&#9;__index: WatcherImpl,
&#9;new: (tree: Types.Tree) -&gt; Watcher,
&#9;start: (self: Watcher, rootInstances: { Instance }) -&gt; (),
&#9;stop: (self: Watcher) -&gt; (),
&#9;listen: (self: Watcher) -&gt; Types.WatcherEvent,
&#9;restart: (self: Watcher, instances: { Instance }) -&gt; (),
&#9;pause: (self: Watcher, callback: () -&gt; ()) -&gt; (),
&#9;__connectEvents: (self: Watcher, instance: Instance) -&gt; (),
&#9;__watchTag: (self: Watcher, tag: string) -&gt; (),
&#9;__unwatchTag: (self: Watcher, tag: string) -&gt; (),
&#9;__onAdded: (self: Watcher, instance: Instance) -&gt; (),
&#9;__onChanged: (self: Watcher, instance: Instance, property: string) -&gt; (),
&#9;__onRemoved: (self: Watcher, instance: Instance) -&gt; (),
}

local Watcher: WatcherImpl = {} :: WatcherImpl
Watcher.__index = Watcher

-- Utility flag to suppress firing of Add signals while the watcher is wiring up at startup.
Watcher.__initializing = false -- true while initial wiring is in progress

function Watcher.new(tree: Types.Tree)
&#9;return setmetatable({
&#9;&#9;isActive = false,
&#9;&#9;blocked = false,
&#9;&#9;connections = {},
&#9;&#9;tagConnections = {},
&#9;&#9;signal = Signal.new(),
&#9;&#9;tree = tree,
&#9;&#9;-- Add debounce tracking for repeated events
&#9;&#9;lastEventTime = {}, -- Track last event time per instance+property key
&#9;&#9;DEBOUNCE_DELAY = 0.01, -- 10ms debounce - only filter true duplicates, allow rapid user input
&#9;&#9;bulkImport = nil,
&#9;}, Watcher)
end

function Watcher:start(rootInstances)
&#9;Log.trace(&quot;Starting watcher..&quot;)
&#9;Log.debug(&quot;[Watcher DEBUG] Starting watcher with&quot;, #rootInstances, &quot;root instances&quot;)

&#9;-- Debug: Log all root instances being passed
&#9;Log.debug(&quot;[Watcher] Root instances to connect&quot;)
&#9;for i, instance in ipairs(rootInstances) do
&#9;&#9;Log.debug(&quot;[Watcher]&quot;, i, &quot;:&quot;, instance:GetFullName(), &quot;(&quot;, instance.ClassName, &quot;)&quot;)
&#9;end
&#9;Log.debug(&quot;[Watcher] Total root instances:&quot;, #rootInstances)
&#9;Log.debug(
&#9;&#9;&quot;[Watcher] Expected: Workspace, ReplicatedFirst, ReplicatedStorage, ServerScriptService, ServerStorage, StarterGui, StarterPack, StarterPlayer&quot;
&#9;)

&#9;self.isActive = true
&#9;self.__initializing = true -- suppress add events

&#9;-- Track connection metrics
&#9;local totalConnections = 0
&#9;local startTime = os.clock()
&#9;local MAX_RECOMMENDED_CONNECTIONS = 5000
&#9;local MAX_SAFE_CONNECTIONS = 10000

&#9;for i, instance in ipairs(rootInstances) do
&#9;&#9;Log.info(&quot;[Watcher CONNECT_ROOT]&quot;, i, &quot;:&quot;, instance:GetFullName(), &quot;Class:&quot;, instance.ClassName)
&#9;&#9;local connections = self:__connectEventsRecursive(instance, 0)
&#9;&#9;totalConnections = totalConnections + connections
&#9;&#9;Log.debug(&quot;[Watcher] Connected&quot;, connections, &quot;instances under&quot;, instance:GetFullName())
&#9;end

&#9;local elapsed = os.clock() - startTime
&#9;Log.info(
&#9;&#9;string.format(
&#9;&#9;&#9;&quot;[Watcher] Initialization complete: %d total connections in %.2fms&quot;,
&#9;&#9;&#9;totalConnections,
&#9;&#9;&#9;elapsed * 1000
&#9;&#9;)
&#9;)

&#9;-- Warn if connection count is very high
&#9;if totalConnections &gt; MAX_SAFE_CONNECTIONS then
&#9;&#9;Log.warn(
&#9;&#9;&#9;string.format(
&#9;&#9;&#9;&#9;&quot;[Watcher] WARNING: Very high connection count (%d) may cause Studio performance issues or crashes. Consider reducing project size.&quot;,
&#9;&#9;&#9;&#9;totalConnections
&#9;&#9;&#9;)
&#9;&#9;)
&#9;elseif totalConnections &gt; MAX_RECOMMENDED_CONNECTIONS then
&#9;&#9;Log.warn(
&#9;&#9;&#9;string.format(
&#9;&#9;&#9;&#9;&quot;[Watcher] CAUTION: High connection count (%d) detected. Monitor Studio performance.&quot;,
&#9;&#9;&#9;&#9;totalConnections
&#9;&#9;&#9;)
&#9;&#9;)
&#9;end

&#9;local tagConnections = {}

&#9;table.insert(
&#9;&#9;tagConnections,
&#9;&#9;CollectionService.TagAdded:Connect(function(tag)
&#9;&#9;&#9;self:__watchTag(tag)

&#9;&#9;&#9;for _, instance in CollectionService:GetTagged(tag) do
&#9;&#9;&#9;&#9;self:__onChanged(instance, &quot;Tags&quot;)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;)

&#9;table.insert(
&#9;&#9;tagConnections,
&#9;&#9;CollectionService.TagRemoved:Connect(function(tag)
&#9;&#9;&#9;self:__unwatchTag(tag)
&#9;&#9;end)
&#9;)

&#9;self.tagConnections[CollectionService] = tagConnections
&#9;Log.debug(&quot;[Watcher DEBUG] Watcher setup complete. IsActive:&quot;, self.isActive)

&#9;-- Complete initialization - enable Add events
&#9;self.__initializing = false
&#9;Log.info(&quot;[Watcher] Initialization phase complete &#226;&#128;&#147; Add events enabled&quot;)
end

function Watcher:stop()
&#9;Log.trace(&quot;Stopping watcher..&quot;)

&#9;for _, connections in self.connections do
&#9;&#9;for _, connection in connections do
&#9;&#9;&#9;connection:Disconnect()
&#9;&#9;end
&#9;end

&#9;for _, tagConnections in self.tagConnections do
&#9;&#9;for _, tagConnection in tagConnections do
&#9;&#9;&#9;tagConnection:Disconnect()
&#9;&#9;end
&#9;end

&#9;self.isActive = false
&#9;self.connections = {}
&#9;self.tagConnections = {}
end

function Watcher:restart(instances)
&#9;if not self.isActive then
&#9;&#9;return
&#9;end

&#9;Log.trace(&quot;Restarting watcher..&quot;)

&#9;self:stop()
&#9;self:start(instances)
end

function Watcher:pause(callback)
&#9;self.blocked = true
&#9;Log.debug(&quot;[Watcher PAUSE] Watcher paused for WriteProcessor operations&quot;)
&#9;local ok, err = pcall(callback)
&#9;self.blocked = false
&#9;Log.debug(&quot;[Watcher PAUSE] Watcher unpaused&quot;)
&#9;if not ok then
&#9;&#9;error(err)
&#9;end
end

function Watcher:listen()
&#9;return self.signal:Wait()
end

-- Recursively connect events to an instance and all its descendants
-- Returns the total number of instances connected
function Watcher:__connectEventsRecursive(instance, depth)
&#9;-- Skip if already connected
&#9;if self.connections[instance] then
&#9;&#9;return 0
&#9;end

&#9;-- Skip CurrentCamera
&#9;if instance == workspace.CurrentCamera then
&#9;&#9;return 0
&#9;end

&#9;-- Connect this instance
&#9;self:__connectEvents(instance)
&#9;local count = 1

&#9;-- Recursively connect all children
&#9;local children = instance:GetChildren()
&#9;for _, child in ipairs(children) do
&#9;&#9;count = count + self:__connectEventsRecursive(child, depth + 1)

&#9;&#9;-- Yield every 100 instances to prevent Studio freezing on large trees
&#9;&#9;-- Only yield at depth 0 (root level) to avoid excessive yields
&#9;&#9;if depth == 0 and count % 100 == 0 then
&#9;&#9;&#9;task.wait()
&#9;&#9;end
&#9;end

&#9;return count
end

function Watcher:__connectEvents(instance)
&#9;if self.connections[instance] then
&#9;&#9;Log.info(&quot;[Watcher CONNECT_SKIP] Already connected:&quot;, instance:GetFullName())
&#9;&#9;return
&#9;end
&#9;if instance == workspace.CurrentCamera then
&#9;&#9;Log.info(&quot;[Watcher CONNECT_SKIP] Skipping CurrentCamera&quot;)
&#9;&#9;return
&#9;end

&#9;Log.info(&quot;[Watcher CONNECT_NEW] Connecting events for:&quot;, instance:GetFullName(), &quot;Class:&quot;, instance.ClassName)

&#9;local connections = {}
&#9;local isValue = instance:IsA(&quot;ValueBase&quot;)

&#9;table.insert(
&#9;&#9;connections,
&#9;&#9;instance.ChildAdded:Connect(function(child)
&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&quot;[Watcher CHILD_ADDED] Parent:&quot;,
&#9;&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&#9;&quot;Child:&quot;,
&#9;&#9;&#9;&#9;child:GetFullName(),
&#9;&#9;&#9;&#9;&quot;ChildClass:&quot;,
&#9;&#9;&#9;&#9;child.ClassName
&#9;&#9;&#9;)
&#9;&#9;&#9;self:__onAdded(child)
&#9;&#9;end)
&#9;)

&#9;table.insert(
&#9;&#9;connections,
&#9;&#9;instance.ChildRemoved:Connect(function(child)
&#9;&#9;&#9;self:__onRemoved(child)
&#9;&#9;end)
&#9;)

&#9;-- Determine whether to monitor property changes (anti-spam heuristic)
&#9;local shouldMonitorProperties = shouldMonitorInstanceProperties(instance)

&#9;-- Only monitor property changes for script-related instances to prevent spam
&#9;if shouldMonitorProperties then
&#9;&#9;table.insert(
&#9;&#9;&#9;connections,
&#9;&#9;&#9;instance.Changed:Connect(function(property)
&#9;&#9;&#9;&#9;-- Just like original Lemonade, ignore Parent changes
&#9;&#9;&#9;&#9;if property ~= &quot;Parent&quot; then
&#9;&#9;&#9;&#9;&#9;self:__onChanged(instance, isValue and &quot;Value&quot; or property)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;)

&#9;&#9;table.insert(
&#9;&#9;&#9;connections,
&#9;&#9;&#9;instance.AttributeChanged:Connect(function(_attribute)
&#9;&#9;&#9;&#9;self:__onChanged(instance, &quot;Attributes&quot;)
&#9;&#9;&#9;end)
&#9;&#9;)
&#9;end

&#9;-- Always monitor Name changes so renames propagate through the sync layer
&#9;table.insert(
&#9;&#9;connections,
&#9;&#9;instance:GetPropertyChangedSignal(&quot;Name&quot;):Connect(function()
&#9;&#9;&#9;self:__onChanged(instance, &quot;Name&quot;)
&#9;&#9;end)
&#9;)

&#9;for _, tag in instance:GetTags() do
&#9;&#9;self:__watchTag(tag)
&#9;end

&#9;self.connections[instance] = connections

&#9;if LogConfig.ENABLE_LOGS then
&#9;&#9;local name = &quot;(unknown)&quot;
&#9;&#9;pcall(function()
&#9;&#9;&#9;name = instance:GetFullName()
&#9;&#9;end)
&#9;&#9;Log.debug(&quot;[Watcher] Connected signals for:&quot;, name)
&#9;end

&#9;-- REMOVED DEFERRED CHILD PROCESSING: This caused a race condition where
&#9;-- multiple deferred tasks would run in parallel, and some would fire Add events
&#9;-- for existing instances when __initializing became false while tasks were still running.
&#9;--
&#9;-- The start() method now connects to all descendants using GetDescendants() before
&#9;-- completing initialization, eliminating the race condition.
end

function Watcher:__watchTag(tag)
&#9;if self.tagConnections[tag] then
&#9;&#9;return
&#9;end

&#9;local tagConnections = {}

&#9;table.insert(
&#9;&#9;tagConnections,
&#9;&#9;CollectionService:GetInstanceAddedSignal(tag):Connect(function(instance)
&#9;&#9;&#9;self:__onChanged(instance, &quot;Tags&quot;)
&#9;&#9;end)
&#9;)

&#9;table.insert(
&#9;&#9;tagConnections,
&#9;&#9;CollectionService:GetInstanceRemovedSignal(tag):Connect(function(instance)
&#9;&#9;&#9;self:__onChanged(instance, &quot;Tags&quot;)
&#9;&#9;end)
&#9;)

&#9;self.tagConnections[tag] = tagConnections
end

function Watcher:__unwatchTag(tag)
&#9;local tagConnections = self.tagConnections[tag]

&#9;if tagConnections then
&#9;&#9;for _, tagConnection in tagConnections do
&#9;&#9;&#9;tagConnection:Disconnect()
&#9;&#9;end

&#9;&#9;self.tagConnections[tag] = nil
&#9;end
end

function Watcher:__onAdded(instance)
&#9;-- Note: Removed __initializing check to ensure user-created instances
&#9;-- during deferred initialization are not lost. The ChildAdded event
&#9;-- fires for NEW instances, not existing ones being scanned.

&#9;-- Suppress per-node Add when a bulk import is active for this subtree
&#9;if self.bulkImport and self.bulkImport.isUnderBulkRoot and self.bulkImport:isUnderBulkRoot(instance) then
&#9;&#9;return
&#9;end

&#9;-- Simply connect descendant events and propagate the Add &#226;&#128;&#147; filtering now occurs in downstream processors using IDs.
&#9;self:__connectEvents(instance)

&#9;local name = &quot;(unknown)&quot;
&#9;pcall(function()
&#9;&#9;name = instance:GetFullName()
&#9;end)
&#9;local descCount = 0
&#9;pcall(function()
&#9;&#9;descCount = #instance:GetDescendants()
&#9;end)
&#9;Log.debug(&quot;[Watcher EVENT] Add:&quot;, name, &quot;descendants:&quot;, descCount)

&#9;Log.trace(&quot;[Watcher SIGNAL] Firing Add signal for:&quot;, instance:GetFullName())
&#9;self.signal:Fire({
&#9;&#9;kind = &quot;Add&quot;,
&#9;&#9;instance = instance,
&#9;})
&#9;Log.trace(&quot;[Watcher SIGNAL] Add signal fired&quot;)
end

function Watcher:__onChanged(instance, property)
&#9;-- Removed name-based Toolbox filtering &#226;&#128;&#147; ID-based workflow will handle legitimate sync inclusion/exclusion.

&#9;-- QUICK EXIT: Skip spammy read-only GUI layout properties altogether.
&#9;-- These change constantly when containers resize and are never sync-worthy.
&#9;-- Also skip Attributes changes - these are triggered by the plugin setting uniqueId
&#9;if
&#9;&#9;property == &quot;AbsolutePosition&quot;
&#9;&#9;or property == &quot;AbsoluteSize&quot;
&#9;&#9;or property == &quot;AbsoluteCanvasSize&quot;
&#9;&#9;or property == &quot;AbsoluteWindowSize&quot;
&#9;then
&#9;&#9;return -- Ignore event completely (no logs, no further processing)
&#9;end

&#9;-- Only log debug info for non-Part instances to avoid spam
&#9;-- For Parts, only log specific important properties (but allow all to sync)
&#9;local shouldLogDebug = true
&#9;if instance:IsA(&quot;Part&quot;) then
&#9;&#9;local importantPartProperties = { &quot;Name&quot;, &quot;Locked&quot;, &quot;Anchored&quot;, &quot;Massless&quot; }
&#9;&#9;shouldLogDebug = false
&#9;&#9;for _, importantProp in ipairs(importantPartProperties) do
&#9;&#9;&#9;if property == importantProp then
&#9;&#9;&#9;&#9;shouldLogDebug = true
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;if shouldLogDebug then
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[Watcher DEBUG] Change detected - Instance:&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&quot;Property:&quot;,
&#9;&#9;&#9;property,
&#9;&#9;&#9;&quot;Blocked:&quot;,
&#9;&#9;&#9;self.blocked
&#9;&#9;)
&#9;end

&#9;if self.blocked then
&#9;&#9;if shouldLogDebug then
&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&quot;[Watcher BLOCKED] Ignoring change event while paused for instance:&quot;,
&#9;&#9;&#9;&#9;tostring(instance),
&#9;&#9;&#9;&#9;&quot;property:&quot;,
&#9;&#9;&#9;&#9;tostring(property)
&#9;&#9;&#9;)
&#9;&#9;end
&#9;&#9;return
&#9;end

&#9;-- Skip overly-verbose change events for objects we don&apos;t actively monitor (anti-spam)
&#9;if property ~= &quot;Name&quot; and not shouldMonitorInstanceProperties(instance) then
&#9;&#9;return
&#9;end

&#9;-- Suppress Parent changes for instances under an active bulk root
&#9;if
&#9;&#9;property == &quot;Parent&quot;
&#9;&#9;and self.bulkImport
&#9;&#9;and self.bulkImport.isUnderBulkRoot
&#9;&#9;and self.bulkImport:isUnderBulkRoot(instance)
&#9;then
&#9;&#9;return
&#9;end

&#9;-- Debounce repeated events
&#9;local currentTime = tick()
&#9;local eventKey = tostring(instance) .. &quot;_&quot; .. tostring(property)
&#9;local lastTime = self.lastEventTime[eventKey]

&#9;if lastTime and (currentTime - lastTime) &lt; self.DEBOUNCE_DELAY then
&#9;&#9;-- This is a duplicate event within debounce window, ignore it
&#9;&#9;if shouldLogDebug then
&#9;&#9;&#9;Log.debug(&quot;[Watcher DEBUG] Debounced duplicate event for:&quot;, instance:GetFullName(), &quot;Property:&quot;, property)
&#9;&#9;end
&#9;&#9;return
&#9;end

&#9;-- Update last event time
&#9;self.lastEventTime[eventKey] = currentTime

&#9;if property == &quot;Source&quot; and instance:IsA(&quot;LuaSourceContainer&quot;) then
&#9;&#9;Log.debug(&quot;[Watcher] Source changed for&quot;, instance:GetFullName())

&#9;&#9;-- Notify the tree that this instance&apos;s content has changed
&#9;&#9;if self.tree and self.tree.notifyInstanceChanged then
&#9;&#9;&#9;self.tree:notifyInstanceChanged(instance, property)
&#9;&#9;end
&#9;end

&#9;if shouldLogDebug then
&#9;&#9;Log.debug(
&#9;&#9;&#9;&quot;[Watcher DEBUG] Firing signal for change event - Instance:&quot;,
&#9;&#9;&#9;instance:GetFullName(),
&#9;&#9;&#9;&quot;Property:&quot;,
&#9;&#9;&#9;property
&#9;&#9;)
&#9;end

&#9;self.signal:Fire({
&#9;&#9;kind = &quot;Change&quot;,
&#9;&#9;instance = instance,
&#9;&#9;property = property,
&#9;})

&#9;local name = &quot;(unknown)&quot;
&#9;pcall(function()
&#9;&#9;name = instance:GetFullName()
&#9;end)
&#9;Log.trace(&quot;[Watcher EVENT] Change:&quot;, name, &quot;property:&quot;, property)
end

function Watcher:__onRemoved(instance)
&#9;local connections = self.connections[instance]

&#9;if connections then
&#9;&#9;for _, connection in connections do
&#9;&#9;&#9;connection:Disconnect()
&#9;&#9;end

&#9;&#9;self.connections[instance] = nil
&#9;end

&#9;Log.trace(&quot;[Watcher DEBUG] *** ABOUT TO FIRE Remove SIGNAL for:&quot;, instance.Name)
&#9;Log.trace(&quot;[Watcher DEBUG] *** signal object:&quot;, self.signal)
&#9;Log.trace(&quot;[Watcher DEBUG] *** blocked status:&quot;, self.blocked)
&#9;self.signal:Fire({
&#9;&#9;kind = &quot;Remove&quot;,
&#9;&#9;instance = instance,
&#9;})
&#9;Log.trace(&quot;[Watcher DEBUG] *** Remove SIGNAL FIRED&quot;)

&#9;local name = &quot;(unknown)&quot;
&#9;pcall(function()
&#9;&#9;name = instance:GetFullName()
&#9;end)
&#9;Log.debug(&quot;[Watcher EVENT] Remove:&quot;, name)
end

return Watcher
</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a40000104d</UniqueId>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXC17C9649074F4BD5B8808C16B07CDC4A">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b38</UniqueId>
				<string name="LinkedSource"></string>
				<string name="Name">Types</string>
				<string name="ScriptGuid">{780caaa5-50b9-403e-945b-adf5b0c42c6e}</string>
				<string name="Source">-- General structs

export type Ref = buffer
export type ClassName = string

export type Properties = {
&#9;[string]: any,
}

export type Meta = {
&#9;meshSource: string?,
}

-- Snapshots

export type Snapshot = {
&#9;id: Ref,
&#9;meta: Meta,
&#9;name: string,
&#9;class: ClassName,
&#9;properties: Properties,
&#9;children: { Snapshot },
&#9;timestamp: number?,
&#9;content: string?,
}

export type AddedSnapshot = {
&#9;id: Ref,
&#9;meta: Meta,
&#9;parent: Ref?,
&#9;name: string,
&#9;class: string,
&#9;properties: Properties,
&#9;children: { AddedSnapshot },
&#9;timestamp: number?,
&#9;content: string?,
&#9;uniqueId: string?, -- 3-character unique identifier from web
&#9;withName: (self: AddedSnapshot, name: string) -&gt; AddedSnapshot,
&#9;withClass: (self: AddedSnapshot, class: string) -&gt; AddedSnapshot,
&#9;withParent: (self: AddedSnapshot, parentId: Ref) -&gt; AddedSnapshot,
&#9;withProperties: (self: AddedSnapshot, properties: Properties) -&gt; AddedSnapshot,
&#9;withChildren: (self: AddedSnapshot, children: { AddedSnapshot }) -&gt; AddedSnapshot,
}

export type UpdatedSnapshot = {
&#9;id: Ref,
&#9;name: string?,
&#9;properties: Properties?,
&#9;parent: Ref?,
&#9;withName: (self: UpdatedSnapshot, name: string) -&gt; UpdatedSnapshot,
&#9;withProperties: (self: UpdatedSnapshot, properties: Properties) -&gt; UpdatedSnapshot,
&#9;withParent: (self: UpdatedSnapshot, parentId: Ref) -&gt; UpdatedSnapshot,
}

export type MoveSnapshot = {
&#9;id: Ref,
&#9;name: string?,
&#9;class: ClassName?,
&#9;parent: (string | Ref)?, -- Parent for move operation
&#9;timestamp: number?,
&#9;path: string?, -- Source path for lookup
&#9;uniqueId: string?, -- UniqueId for consistent lookup
}

export type ChangeSnapshot = UpdatedSnapshot | MoveSnapshot

export type SnapshotUpdate = {
&#9;id: Ref,
&#9;meta: Meta?,
&#9;name: string?,
&#9;class: ClassName?,
&#9;properties: Properties?,
&#9;timestamp: number?,
&#9;content: string?, -- Content for scripts
}

-- Other structs

export type WatcherEvent = {
&#9;kind: &quot;Added&quot; | &quot;Removed&quot; | &quot;Changed&quot;,
&#9;instance: Instance,
&#9;property: string?,
}

export type RemovalPayload = {
&#9;id: Ref,
&#9;uniqueId: string,
&#9;path: string,
&#9;name: string,
}

export type Changes = {
&#9;additions: { AddedSnapshot },
&#9;updates: { UpdatedSnapshot },
&#9;removals: { Ref | Instance | RemovalPayload },
&#9;moves: { MoveSnapshot },
}

export type Project = {
&#9;name: string,
&#9;version: string,
&#9;gameId: number?,
&#9;placeIds: { number },
&#9;rootRefs: { Ref },
}

-- Messages

export type Message = SyncChanges | SyncDetails | ExecuteCode | Disconnect
export type MessageKind = &quot;SyncChanges&quot; | &quot;SyncDetails&quot; | &quot;ExecuteCode&quot; | &quot;Disconnect&quot;

export type SyncChanges = {
&#9;SyncChanges: Changes,
}

export type SyncDetails = {
&#9;SyncDetails: Project,
}

export type ExecuteCode = {
&#9;code: string,
}

export type Disconnect = {
&#9;message: string,
}

return nil
</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a40000104e</UniqueId>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX7DA0FFA8DEC5427291BDBDCC9349A132">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b39</UniqueId>
				<string name="Name">Scheduler</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a40000104f</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBX0370DF065A2B4BE09FDC7CA41519602B">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b3a</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Poll</string>
					<string name="ScriptGuid">{e50c73fc-3308-469a-a60b-bcd519ee3b07}</string>
					<string name="Source">--!strict
-- Continuously long-poll backend `/poll-sync` and apply diffs via WriteProcessor

local HttpSync = require(script.Parent.Parent.Net.HttpSync)
local WriteProcessor = require(script.Parent.Parent.Core.Processor.Write)
local Tree = require(script.Parent.Parent.Core.Tree)
local HttpService = game:GetService(&quot;HttpService&quot;)
local Log = require(script.Parent.Parent.Log)
Log.setLevel(&quot;Trace&quot;)

Log.trace(&quot;Scheduler/Poll module loaded&quot;)

-- Poller will be started by Core with the real Tree instance.

-- Long-poll strategy: Server holds connection for up to 25s, client immediately re-polls
-- This is efficient because the server waits for changes before responding
local BASE_POLL_INTERVAL = 0 -- immediate re-poll (server implements long-polling)
local MAX_POLL_INTERVAL = 10 -- cap error backoff
local currentInterval = BASE_POLL_INTERVAL
local TIMEOUT = 30 -- Client timeout should be &gt; server&apos;s 25s wait

-- Simple flag to stop polling when plugin unloads
local keepPolling = true
-- =========================================================
--  Refactor flag:
--  Disables legacy per-event change processing while we
--  transition to the new snapshot-based workflow described
--  in plugin-refactor.md.  Leaving the old implementation
--  intact for rollback safety.
local ENABLE_LEGACY_CHANGES_HANDLER = true

-- Helper function to safely call functions
local function try(fn, ...)
&#9;if typeof(fn) == &quot;function&quot; then
&#9;&#9;local success, result = pcall(fn, ...)
&#9;&#9;if not success then
&#9;&#9;&#9;Log.warn(&quot;[Poll try] Function call failed:&quot;, result)
&#9;&#9;end
&#9;&#9;return success, result
&#9;else
&#9;&#9;Log.warn(&quot;[Poll try] Not a function:&quot;, fn)
&#9;&#9;return false, nil
&#9;end
end

local function spawnPoll(pluginInstance, writer, coreInstance, projectContextRefresher)
&#9;-- Helper function to get current project ID from plugin settings (single source of truth)
&#9;local function getCurrentProjectId()
&#9;&#9;if pluginInstance then
&#9;&#9;&#9;local projectId = pluginInstance:GetSetting(&quot;PROJECT_ID&quot;)
&#9;&#9;&#9;if projectId and projectId ~= &quot;&quot; then
&#9;&#9;&#9;&#9;return projectId
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;-- Don&apos;t poll if we don&apos;t have a valid project ID yet
&#9;&#9;return nil
&#9;end

&#9;task.spawn(function()
&#9;&#9;Log.info(&quot;[TRACE Poll] loop enter&quot;, tostring(keepPolling))
&#9;&#9;-- Poll indefinitely until plugin unloads
&#9;&#9;while keepPolling do
&#9;&#9;&#9;-- Wrap the entire polling logic in pcall to prevent crashes
&#9;&#9;&#9;local success, errorMessage = pcall(function()
&#9;&#9;&#9;&#9;-- Get the current project ID from plugin settings at the start of each poll cycle
&#9;&#9;&#9;&#9;if not pluginInstance then
&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync] pluginInstance is nil, cannot GetSetting. Breaking poll loop.&quot;)
&#9;&#9;&#9;&#9;&#9;keepPolling = false -- Stop polling if pluginInstance is nil
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;local currentProjectId = getCurrentProjectId()

&#9;&#9;&#9;&#9;-- Skip polling if we don&apos;t have a valid project ID yet
&#9;&#9;&#9;&#9;if not currentProjectId then
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[Poll] No valid PROJECT_ID set, skipping poll&quot;)
&#9;&#9;&#9;&#9;&#9;task.wait(5) -- Wait before retrying
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;Log.trace(&quot;Polling sync queue for project&quot;, currentProjectId)

&#9;&#9;&#9;&#9;Log.debug(&quot;[Poll] About to call pollSync with projectId:&quot;, currentProjectId)
&#9;&#9;&#9;&#9;local res = HttpSync.pollSync(TIMEOUT, currentProjectId, writer.tree)
&#9;&#9;&#9;&#9;Log.debug(&quot;[Poll] Poll response:&quot;, res.StatusCode, res.Success, res.Body and #res.Body or 0)
&#9;&#9;&#9;&#9;Log.trace(&quot;Poll response:&quot;, res.StatusCode, res.Body and res.Body:sub(1, 100) or &quot;nil&quot;)

&#9;&#9;&#9;&#9;if res.Success and res.StatusCode == 200 and res.Body ~= &quot;&quot; then
&#9;&#9;&#9;&#9;&#9;-- Reset backoff on activity
&#9;&#9;&#9;&#9;&#9;currentInterval = BASE_POLL_INTERVAL
&#9;&#9;&#9;&#9;&#9;-- DEBUG: Log full response for debugging web sync
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[PollSync DEBUG] Got 200 response with body length:&quot;, #res.Body)
&#9;&#9;&#9;&#9;&#9;-- Backend now sends raw JSON payload
&#9;&#9;&#9;&#9;&#9;local payloadJson = res.Body
&#9;&#9;&#9;&#9;&#9;-- &lt;&lt;&lt; ADD LOGGING HERE &gt;&gt;&gt;
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;[PollSync RAW JSON] Received Body:&quot;, payloadJson)
&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[PollSync VERSION CHECK] Using CURRENT Poll.luau with MOVE support&quot;)
&#9;&#9;&#9;&#9;&#9;-- &lt;&lt;&lt; END LOGGING &gt;&gt;&gt;
&#9;&#9;&#9;&#9;&#9;local ok, decodedPayload = pcall(HttpService.JSONDecode, HttpService, payloadJson)

&#9;&#9;&#9;&#9;&#9;if not ok then
&#9;&#9;&#9;&#9;&#9;&#9;Log.error(&quot;[PollSync ERROR] JSON decode failed:&quot;, decodedPayload)
&#9;&#9;&#9;&#9;&#9;&#9;return -- Exit this poll cycle but continue polling
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;if ok and decodedPayload then
&#9;&#9;&#9;&#9;&#9;&#9;if decodedPayload.type == &quot;SYSTEM_PROJECT_ID_UPDATED&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync DEBUG] Taking SYSTEM_PROJECT_ID_UPDATED path&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync] Received SYSTEM_PROJECT_ID_UPDATED. Requesting context refresh.&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Get the new project ID from the message
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local newProjectIdFromMessage = decodedPayload.projectId or decodedPayload.newProjectId -- Check both keys

&#9;&#9;&#9;&#9;&#9;&#9;&#9;if newProjectIdFromMessage then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync] New project ID received: &quot; .. newProjectIdFromMessage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Update the plugin setting with the new project ID
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;pluginInstance:SetSetting(&quot;PROJECT_ID&quot;, newProjectIdFromMessage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync] Plugin PROJECT_ID setting updated to: &quot; .. newProjectIdFromMessage)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Update the Core instance&apos;s projectId as well
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if coreInstance and coreInstance.updateProjectId then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[PollSync] Updating Core instance projectId from SYSTEM message to:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;newProjectIdFromMessage
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;coreInstance:updateProjectId(newProjectIdFromMessage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync] Core instance or updateProjectId method not available&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Send a special event to the output to make debugging easier
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;=========================================&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;LEMONADE: PROJECT ID UPDATED TO &quot; .. newProjectIdFromMessage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;=========================================&quot;)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Ensure we call the refresher function
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if projectContextRefresher then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local success, err = try(projectContextRefresher)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not success then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[PollSync] Failed to call projectContextRefresher: &quot; .. tostring(err)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync] Successfully called projectContextRefresher&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync] projectContextRefresher is nil. Cannot refresh context.&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;task.wait(0.5) -- Give more time for the refresh to take effect
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[PollSync DEBUG] After projectContextRefresher call, continuing poll loop.&quot;)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Restart the polling loop with the new project ID
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return -- Exit this poll cycle, continue will restart
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[PollSync] Received SYSTEM_PROJECT_ID_UPDATED but no projectId or newProjectId in message&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;elseif decodedPayload.type == &quot;peerClientDisconnected&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync] Received &apos;peerClientDisconnected&apos; event:&quot;, decodedPayload)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if coreInstance and coreInstance.handlePeerClientDisconnected then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;coreInstance:handlePeerClientDisconnected(decodedPayload)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[PollSync] coreInstance or handlePeerClientDisconnected method not found for peerClientDisconnected event.&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;-- NEW: Handle the {changes: [...]} structure
&#9;&#9;&#9;&#9;&#9;&#9;elseif decodedPayload.changes and type(decodedPayload.changes) == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not ENABLE_LEGACY_CHANGES_HANDLER then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[PollSync] Legacy per-event &apos;changes&apos; handler disabled &#226;&#128;&#147; skipping payload.&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return -- Skip rest of poll cycle; legacy handler disabled.
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if #decodedPayload.changes &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync] Processing&quot;, #decodedPayload.changes, &quot;changes&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- DEBUG: Log details about the changes we&apos;re receiving
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[PollSync DEBUG] Changes received:&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i, change in ipairs(decodedPayload.changes) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;  [&quot; .. i .. &quot;]&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;change.eventType or &quot;unknown&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;change.payload and change.payload.name or &quot;no-name&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;source:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;change.source or &quot;unknown&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local processedChanges = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;additions = {},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;updates = {},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;removals = {},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;moves = {},
&#9;&#9;&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local deferredToolboxImports = {}

&#9;&#9;&#9;&#9;&#9;&#9;&#9;local function normalizeRefIfNeeded(ref)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if typeof(ref) == &quot;string&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return buffer.fromstring(ref)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif ref == nil then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Return a special buffer for nil refs
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return buffer.fromstring(&quot;NIL_REF&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return ref -- Assume it&apos;s already a buffer or correct type
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;local function normalizeChangePayloadRefs(changePayload)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- The changePayload is the `payload` field from each item in `decodedPayload.changes`
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- It should resemble a Snapshot an Add, Update, or just an ID for Remove.
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if changePayload.id then -- For AddSnapshot, UpdateSnapshot
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;changePayload.id = normalizeRefIfNeeded(changePayload.id)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if changePayload.parent then -- For AddSnapshot
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Parent might be a buffer or a string
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if typeof(changePayload.parent) == &quot;buffer&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Already a buffer, keep as is
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[normalizeChangePayloadRefs] Parent already a buffer&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;changePayload.parent = normalizeRefIfNeeded(changePayload.parent)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return changePayload
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;for _, changeEvent in ipairs(decodedPayload.changes) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local eventType = changeEvent.eventType
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local payload = changeEvent.payload

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Always show what event types we&apos;re processing
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if eventType == &quot;toolboxImport&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[EVENT] &#240;&#159;&#142;&#175; Found toolboxImport event!&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[EVENT] Processing eventType:&quot;, eventType)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[PollSync NEW STRUCTURE] Processing changeEvent - eventType:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;eventType,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;name:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.name or &quot;UNKNOWN&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if eventType == &quot;add&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Add required children property for AddedSnapshot type
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not payload.children then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.children = {}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Ensure properties/meta tables exist for AddedSnapshot
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if payload.properties == nil then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.properties = {}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if payload.meta == nil then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.meta = {}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- DEBUG: Log uniqueId preservation AND content
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[Poll DEBUG] ADD event payload.uniqueId:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.uniqueId,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;type:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;type(payload.uniqueId)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[Poll DEBUG] ADD event payload.id:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.id,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;type:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;type(payload.id)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[Poll DEBUG] ADD event payload.content length:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.content and #payload.content or &quot;nil&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[Poll DEBUG] ADD event payload.content preview:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.content and payload.content:sub(1, 50) or &quot;nil&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Poll] ADD event payload.name:&quot;, payload.name)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local normalizedPayload = normalizeChangePayloadRefs(payload)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- DEBUG: Check if uniqueId survived normalization
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[Poll DEBUG] After normalization, payload.uniqueId:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;normalizedPayload.uniqueId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(processedChanges.additions, normalizedPayload)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif eventType == &quot;update&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- DEBUG: Log complete update payload from web
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[PollSync UPDATE] Raw update payload received from web:&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - name:&quot;, payload.name or &quot;nil&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - class:&quot;, payload.class or &quot;nil&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - robloxClass:&quot;, payload.robloxClass or &quot;nil&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - content length:&quot;, payload.content and #payload.content or &quot;nil&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - id:&quot;, payload.id or &quot;nil&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - path:&quot;, payload.path or &quot;nil&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  - uniqueId:&quot;, payload.uniqueId or &quot;nil&quot;)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Poll] Update event payload properties:&quot;, payload.properties)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Promote raw `content` field (sent by web for script edits) into snapshot.content
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if payload.content then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.content = payload.content
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Ensure class is forwarded so UpdateProcessor can treat this as script
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if payload.robloxClass then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.class = payload.robloxClass
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(processedChanges.updates, normalizeChangePayloadRefs(payload))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif eventType == &quot;delete&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- DEBUG: Log the actual delete payload structure
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync DELETE] Raw delete payload:&quot;, payload)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if type(payload) == &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for k, v in pairs(payload) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync DELETE] Payload field:&quot;, k, &quot;=&quot;, v)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Enhanced: Pass full payload for path + uniqueId lookup consistency
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if payload and payload.id then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local removalPayload = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;id = normalizeRefIfNeeded(payload.id),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;path = payload.path or &quot;unknown&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;name = payload.name or &quot;unknown&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Prefer server-provided uniqueId; do not derive it from id
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if payload.uniqueId then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;removalPayload.uniqueId = payload.uniqueId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(processedChanges.removals, removalPayload)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Store extra info for UI
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;processedChanges.removalInfos = processedChanges.removalInfos or {}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(processedChanges.removalInfos, { name = removalPayload.name })
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif eventType == &quot;move&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Handle move operation using native move instead of remove + add
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[PollSync MOVE] *** PROCESSING MOVE EVENT ***&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync] Processing move event:&quot;, payload.name)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[PollSync MOVE] Move event payload ID:&quot;, payload.id)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- DEBUG: Log complete payload received from server
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Poll] Raw move payload from server:&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  payload.id:&quot;, payload.id, &quot;type:&quot;, type(payload.id))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  payload.name:&quot;, payload.name)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  payload.class:&quot;, payload.class)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  payload.robloxClass:&quot;, payload.robloxClass)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  payload.parent:&quot;, payload.parent, &quot;type:&quot;, type(payload.parent))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  payload.sourcePath:&quot;, payload.sourcePath)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  payload.destinationPath:&quot;, payload.destinationPath)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  payload.uniqueId:&quot;, payload.uniqueId)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  payload.nodeId:&quot;, payload.nodeId)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Check if we have this ID in our tree before processing
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if payload.id and writer and writer.tree then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local idBuffer = normalizeRefIfNeeded(payload.id)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local existingInstance = writer.tree:getInstance(idBuffer)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if existingInstance then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[PollSync MOVE] Found instance in tree for ID:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.id,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;Instance:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;existingInstance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[Poll DEBUG] Found instance in tree:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;existingInstance:GetFullName()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync MOVE] WARNING: ID not found in tree:&quot;, payload.id)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Poll] WARNING: ID not found in tree:&quot;, payload.id)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Create move snapshot for native move operation
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local moveSnapshot = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;id = normalizeRefIfNeeded(payload.id),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;name = payload.name,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;class = payload.class or payload.robloxClass,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;parent = payload.parent and normalizeRefIfNeeded(payload.parent) or nil,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Include source path for MoveProcessor to find the instance
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;path = payload.sourcePath,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;sourcePath = payload.sourcePath,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;destinationPath = payload.destinationPath,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;uniqueId = payload.uniqueId,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- DEBUG: Log the final moveSnapshot being sent to MoveProcessor
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Poll] moveSnapshot being sent to MoveProcessor:&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  moveSnapshot.id:&quot;, moveSnapshot.id, &quot;type:&quot;, type(moveSnapshot.id))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if type(moveSnapshot.id) == &quot;buffer&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  moveSnapshot.id (as string):&quot;, buffer.tostring(moveSnapshot.id))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  moveSnapshot.name:&quot;, moveSnapshot.name)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  moveSnapshot.class:&quot;, moveSnapshot.class)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;  moveSnapshot.parent:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;moveSnapshot.parent,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;type:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;type(moveSnapshot.parent)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if moveSnapshot.parent and type(moveSnapshot.parent) == &quot;buffer&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  moveSnapshot.parent (as string):&quot;, buffer.tostring(moveSnapshot.parent))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  moveSnapshot.path:&quot;, moveSnapshot.path)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  moveSnapshot.sourcePath:&quot;, moveSnapshot.sourcePath)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  moveSnapshot.destinationPath:&quot;, moveSnapshot.destinationPath)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;  moveSnapshot.uniqueId:&quot;, moveSnapshot.uniqueId)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[PollSync MOVE] Adding to processedChanges.moves for native move operation&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(processedChanges.moves, moveSnapshot)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync MOVE] Added to processedChanges.moves for native move&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[Poll] Move snapshot added to processedChanges.moves&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif eventType == &quot;clone&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Handle clone operation
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[PollSync CLONE] *** PROCESSING CLONE EVENT ***&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync] Processing clone event:&quot;, payload.cloneName or &quot;unnamed&quot;)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Process clone event using WriteProcessor&apos;s clone handler
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if writer and writer.processCloneEvent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local cloneSuccess = writer:processCloneEvent(payload)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if cloneSuccess then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync CLONE] Clone operation completed successfully&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync CLONE] Clone operation failed&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync CLONE] WriteProcessor clone handler not available&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif eventType == &quot;create&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Handle create operation
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[PollSync CREATE] *** PROCESSING CREATE EVENT ***&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync] Processing create event:&quot;, payload.robloxClass, payload.name)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Process create event using WriteProcessor&apos;s create handler
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if writer and writer.processCreateEvent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local createSuccess = writer:processCreateEvent(payload)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if createSuccess then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[PollSync CREATE] Create operation completed successfully&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync CREATE] Create operation failed&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync CREATE] WriteProcessor create handler not available&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;elseif eventType == &quot;toolboxImport&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Defer toolbox import to process after add events are applied
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[TOOLBOX IMPORT] *** DEFERRING TOOLBOX IMPORT EVENT ***&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[TOOLBOX IMPORT] Deferring:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.assetId,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;&#226;&#134;&#146;&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.destinationPath,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;payload.name
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(deferredToolboxImports, payload)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync] Unknown eventType in changes array:&quot;, eventType)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Apply processed changes with error handling
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local applySuccess, applyError = pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;writer:applyChanges(processedChanges)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not applySuccess then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync] Failed to apply changes:&quot;, applyError)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Continue polling despite the error
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Process deferred toolbox imports after folders are created
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for _, importPayload in ipairs(deferredToolboxImports) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[TOOLBOX IMPORT] *** PROCESSING DEFERRED TOOLBOX IMPORT ***&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[TOOLBOX IMPORT] Processing:&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;importPayload.assetId,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;&#226;&#134;&#146;&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;importPayload.destinationPath,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;importPayload.name
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)

&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if writer and writer.processToolboxImportEvent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local importSuccess = writer:processToolboxImportEvent(importPayload)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if importSuccess then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.info(&quot;[TOOLBOX IMPORT] &#226;&#156;&#133; Import completed successfully!&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.error(&quot;[TOOLBOX IMPORT] &#226;&#157;&#140; Import failed!&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.error(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;[TOOLBOX IMPORT] &#226;&#157;&#140; WriteProcessor toolbox import handler not available&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Notify UI via Core.__sync to update lastSyncKind and filename
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if coreInstance and type(coreInstance.__sync) == &quot;function&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;coreInstance.__sync(&quot;SyncChanges&quot;, processedChanges)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Record server sync AFTER applying changes to prevent watcher echo
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if coreInstance and coreInstance.recordServerSyncApplied then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;coreInstance:recordServerSyncApplied()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- WAL cursor on server replaces event confirmations

&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Update last event ID to prevent re-requesting the same events
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Use the highest eventId from the processed events, not the server&apos;s lastEventId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if decodedPayload.changes and #decodedPayload.changes &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local highestEventId = 0
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for _, changeEvent in ipairs(decodedPayload.changes) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if changeEvent.eventId and tonumber(changeEvent.eventId) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local eventId = tonumber(changeEvent.eventId) :: number
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if eventId &gt; highestEventId then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;highestEventId = eventId
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if highestEventId &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Removed lastEventId tracking - we always start from 0 on plugin restart
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- This ensures we never miss events due to disconnection
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[PollSync] Processed events up to eventId:&quot;, highestEventId)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;-- Phase 7.1: Removed deprecated OLD Structure handling - now using event-driven sync only
&#9;&#9;&#9;&#9;&#9;&#9;-- Check if it&apos;s a single snapshot (fallback for compatibility)
&#9;&#9;&#9;&#9;&#9;&#9;elseif decodedPayload.id ~= nil and typeof(decodedPayload.id) == &quot;string&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Deprecated single-snapshot payload handling. This path is disabled while
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- we refactor toward full JSONL project snapshots.
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.debug(&quot;[PollSync] Skipping deprecated single-snapshot payload.&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return -- Skip rest of poll cycle; snapshot handler disabled.
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;-- Unknown payload structure
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync] Received unknown payload structure:&quot;, decodedPayload)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;PollSync: Failed to decode JSON payload&quot;, payloadJson)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;elseif res.Success and res.StatusCode == 204 then
&#9;&#9;&#9;&#9;&#9;-- Long-poll timeout; immediately re-issue
&#9;&#9;&#9;&#9;&#9;Log.trace(&quot;PollSync: No updates (timeout)&quot;)
&#9;&#9;&#9;&#9;&#9;currentInterval = BASE_POLL_INTERVAL
&#9;&#9;&#9;&#9;elseif not res.Success then
&#9;&#9;&#9;&#9;&#9;Log.warn(&quot;PollSync: HTTP request failed&quot;, res.StatusCode, res.StatusMessage)
&#9;&#9;&#9;&#9;&#9;-- Add a longer delay on error to avoid spamming
&#9;&#9;&#9;&#9;&#9;task.wait(5)
&#9;&#9;&#9;&#9;&#9;currentInterval = math.min(currentInterval * 2, MAX_POLL_INTERVAL)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;task.wait(currentInterval)
&#9;&#9;&#9;&#9;Log.info(&quot;[TRACE Poll] loop tick&quot;, tostring(currentInterval))
&#9;&#9;&#9;end)

&#9;&#9;&#9;if not success then
&#9;&#9;&#9;&#9;Log.warn(&quot;[PollSync] Error in polling loop:&quot;, errorMessage)
&#9;&#9;&#9;&#9;task.wait(5) -- Wait between retries
&#9;&#9;&#9;&#9;currentInterval = math.min(currentInterval * 2, MAX_POLL_INTERVAL)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;Log.info(&quot;[TRACE Poll] loop exit&quot;, tostring(keepPolling))
&#9;end)
end

local Poll = {}

function Poll.start(pluginInstanceArg, tree, http, coreInstance, projectContextRefresher)
&#9;Log.info(&quot;[TRACE Poll] start&quot;)
&#9;Log.trace(&quot;Starting poller requested.&quot;, pluginInstanceArg)
&#9;keepPolling = true -- Reset the flag to allow polling
&#9;Log.info(&quot;[TRACE Poll] Poll.start called&quot;, tostring(pluginInstanceArg ~= nil))

&#9;if pluginInstanceArg then
&#9;&#9;-- Clear previous connections if any (safeguard, though keepPolling should handle new starts)
&#9;&#9;-- No direct way to disconnect specific Unloading, but new connection should be fine.
&#9;&#9;pluginInstanceArg.Unloading:Connect(function()
&#9;&#9;&#9;Log.info(&quot;[Poll] Plugin Unloading detected, setting keepPolling to false.&quot;)
&#9;&#9;&#9;keepPolling = false
&#9;&#9;end)
&#9;else
&#9;&#9;Log.warn(&quot;[Poll] Poll.start received nil pluginInstanceArg. Plugin unloading may not stop polling correctly.&quot;)
&#9;end

&#9;local writer = WriteProcessor.new(tree or Tree.new(), http or HttpSync)
&#9;-- Set the core instance reference for manual sync operations
&#9;if coreInstance then
&#9;&#9;writer.coreInstance = coreInstance
&#9;end
&#9;spawnPoll(pluginInstanceArg, writer, coreInstance, projectContextRefresher)
end

function Poll.stop()
&#9;Log.info(&quot;[TRACE Poll] stop&quot;)
&#9;Log.trace(&quot;Stopping poller requested.&quot;)
&#9;keepPolling = false
&#9;Log.info(&quot;[TRACE Poll] Poll.stop called&quot;, tostring(keepPolling))
end

Log.trace(&quot;Returning Poll table...&quot;)
return Poll
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001050</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBX49C92025C27C4C3EBA53BE855D45638E">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b3b</UniqueId>
				<string name="LinkedSource"></string>
				<string name="Name">Config</string>
				<string name="ScriptGuid">{47a5eeb4-0d88-4993-8872-9d8ffb1bdc3c}</string>
				<string name="Source">local plugin = script:FindFirstAncestorWhichIsA(&quot;Plugin&quot;)

local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Util = require(Lemonade.Util)
local Log = require(Lemonade.Log)

export type Level = &quot;Place&quot; | &quot;Game&quot; | &quot;Global&quot;
export type Setting =
&#9;&quot;InitialSyncPriority&quot;
&#9;| &quot;Host&quot;
&#9;| &quot;Port&quot;
&#9;| &quot;AutoConnect&quot;
&#9;| &quot;AutoReconnect&quot;
&#9;| &quot;LiveHydrate&quot;
&#9;| &quot;TwoWaySync&quot;
&#9;| &quot;SyncbackProperties&quot;
&#9;| &quot;OpenInEditor&quot;
&#9;| &quot;DisplayPrompts&quot;
&#9;| &quot;ChangesThreshold&quot;
&#9;| &quot;LogLevel&quot;
&#9;| &quot;OverridePackages&quot;

type Config = {
&#9;__configs: { [Level]: { [Setting]: any } },
&#9;__callbacks: { [Setting]: { (value: any) -&gt; () } },
&#9;load: () -&gt; (),
&#9;get: (self: Config, setting: Setting, level: Level?) -&gt; any,
&#9;getDefault: (self: Config, setting: Setting) -&gt; any,
&#9;set: (self: Config, setting: Setting, value: any, level: Level) -&gt; (),
&#9;restoreDefaults: (self: Config, level: Level) -&gt; (),
&#9;onChanged: (self: Config, setting: Setting, callback: (value: any) -&gt; ()) -&gt; () -&gt; (),
}

local DEFAULTS = {
&#9;-- &quot;Server&quot; (pull only), &quot;Client&quot; (push only), or &quot;Merge&quot; (two-way safe union)
&#9;InitialSyncPriority = &quot;Server&quot;,
&#9;Host = &quot;localhost&quot;,
&#9;Port = 8000,
&#9;AutoConnect = true,
&#9;AutoReconnect = false,
&#9;LiveHydrate = true,

&#9;TwoWaySync = true,
&#9;SyncbackProperties = false,

&#9;OpenInEditor = false,
&#9;DisplayPrompts = &quot;Always&quot;,
&#9;ChangesThreshold = 5,
&#9;LogLevel = &quot;Debug&quot;, -- Options: &quot;Off&quot;, &quot;Error&quot;, &quot;Warn&quot;, &quot;Info&quot;, &quot;Debug&quot;, &quot;Trace&quot;
&#9;OverridePackages = true,
}

local CONFIGS = {
&#9;Place = &quot;LemonadeConfigPlace_&quot; .. game.PlaceId,
&#9;Game = &quot;LemonadeConfigGame_&quot; .. game.GameId,
&#9;Global = &quot;LemonadeConfigGlobal&quot;,
}

local Config: Config = {
&#9;__configs = {},
&#9;__callbacks = {},
} :: Config

function Config.load()
&#9;for level, config in CONFIGS do
&#9;&#9;config = plugin:GetSetting(config)

&#9;&#9;if config and type(config) == &quot;table&quot; then
&#9;&#9;&#9;Config.__configs[level] = config
&#9;&#9;else
&#9;&#9;&#9;Config.__configs[level] = {}
&#9;&#9;end
&#9;end
end

function Config:get(setting, level)
&#9;local default = DEFAULTS[setting]

&#9;if default == nil then
&#9;&#9;Log.error(`Setting &apos;{setting}&apos; does not exist!`)
&#9;end

&#9;if level then
&#9;&#9;return self.__configs[level][setting]
&#9;end

&#9;for _, config in self.__configs do
&#9;&#9;if config[setting] ~= nil then
&#9;&#9;&#9;return config[setting]
&#9;&#9;end
&#9;end

&#9;return default
end

function Config:getDefault(setting)
&#9;local default = DEFAULTS[setting]

&#9;if default == nil then
&#9;&#9;Log.error(`Setting &apos;{setting}&apos; does not exist!`)
&#9;end

&#9;return default
end

function Config:set(setting, value, level)
&#9;local default = DEFAULTS[setting]

&#9;if default == nil then
&#9;&#9;Log.error(`Setting &apos;{setting}&apos; does not exist!`)
&#9;end

&#9;value = Util.cast(value, type(default))

&#9;if value ~= self.__configs[level][setting] and self.__callbacks[setting] then
&#9;&#9;for _, callback in self.__callbacks[setting] do
&#9;&#9;&#9;callback(value)
&#9;&#9;end
&#9;end

&#9;self.__configs[level][setting] = if value == default then nil else value

&#9;local config = self.__configs[level]

&#9;if not next(config) then
&#9;&#9;plugin:SetSetting(CONFIGS[level], nil)
&#9;else
&#9;&#9;plugin:SetSetting(CONFIGS[level], config)
&#9;end
end

function Config:restoreDefaults(level)
&#9;for setting, _ in self.__configs[level] do
&#9;&#9;if self.__callbacks[setting] then
&#9;&#9;&#9;for _, callback in self.__callbacks[setting] do
&#9;&#9;&#9;&#9;callback(self:getDefault(setting))
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end

&#9;self.__configs[level] = {}

&#9;plugin:SetSetting(CONFIGS[level], nil)
end

function Config:onChanged(setting, callback)
&#9;if not self.__callbacks[setting] then
&#9;&#9;self.__callbacks[setting] = {}
&#9;end

&#9;local id = Util.generateGUID()
&#9;self.__callbacks[setting][id] = callback

&#9;return function()
&#9;&#9;self.__callbacks[setting][id] = nil
&#9;end
end

return Config
</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a400001051</UniqueId>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX2C1E40C5D46A4242810DE82C076C1508">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b3c</UniqueId>
				<string name="LinkedSource"></string>
				<string name="Name">Log</string>
				<string name="ScriptGuid">{428a22a0-d68f-4274-aabe-9ea560372a9b}</string>
				<string name="Source">--!strict
local LogConfig = require(script.Parent.LogConfig)
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Util = require(Lemonade.Util)

local function format(...: any): string
&#9;local args = &quot;&quot;

&#9;for _, arg in { ... } do
&#9;&#9;args ..= &quot; &quot; .. Util.stringify(arg)
&#9;end

&#9;return args
end

local Log = {
&#9;Level = {
&#9;&#9;Off = 0,
&#9;&#9;Error = 1,
&#9;&#9;Warn = 2,
&#9;&#9;Info = 3,
&#9;&#9;Debug = 4,
&#9;&#9;Trace = 5,
&#9;},
&#9;__level = 4, -- Default to Debug level (3=Info, 4=Debug, 5=Trace)
}

function Log.__setLevel(level: string)
&#9;local num = Log.Level[level]

&#9;if not num then
&#9;&#9;Log.error(&quot;Invalid log level:&quot;, level)
&#9;end

&#9;Log.__level = num
end

-- Public function to set log level (same as __setLevel but public)
function Log.setLevel(level: string)
&#9;Log.__setLevel(level)
end

-- Public function to enable/disable all logging
function Log.setEnabled(enabled: boolean)
&#9;if enabled then
&#9;&#9;Log.__level = Log.Level.Info -- Default to Info level when enabled
&#9;else
&#9;&#9;Log.__level = Log.Level.Off -- Completely silent when disabled
&#9;end
end

function Log.trace(...: any)
&#9;if LogConfig.ENABLE_LOGS and Log.__level &gt;= Log.Level.Trace then
&#9;&#9;print(&quot;TRACE:&quot; .. format(...))
&#9;end
end

function Log.debug(...: any)
&#9;if LogConfig.ENABLE_LOGS and Log.__level &gt;= Log.Level.Debug then
&#9;&#9;print(&quot;DEBUG:&quot; .. format(...))
&#9;end
end

function Log.info(...: any)
&#9;if LogConfig.ENABLE_LOGS and Log.__level &gt;= Log.Level.Info then
&#9;&#9;print(&quot;INFO:&quot; .. format(...))
&#9;end
end

function Log.warn(...: any)
&#9;if LogConfig.ENABLE_LOGS and Log.__level &gt;= Log.Level.Warn then
&#9;&#9;warn(&quot;WARN:&quot; .. format(...))
&#9;end
end

function Log.error(...: any)
&#9;if LogConfig.ENABLE_LOGS and Log.__level &gt;= Log.Level.Error then
&#9;&#9;error(&quot;ERROR:&quot; .. format(...), 0)
&#9;end
end

return Log
</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a400001052</UniqueId>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXD37597A309554A0ABFB174EC14FE6741">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b3d</UniqueId>
				<string name="LinkedSource"></string>
				<string name="Name">Place</string>
				<string name="ScriptGuid">{be78048f-0558-484a-b78d-ffd5f354cee3}</string>
				<string name="Source">--!strict
local MarketPlaceService = game:GetService(&quot;MarketplaceService&quot;)

local name = game.Name
local isFile = (name:find(&quot;.rbxl&quot;) or name:find(&quot;.rbxlx&quot;)) ~= nil

if not isFile then
&#9;pcall(function()
&#9;&#9;name = MarketPlaceService:GetProductInfo(game.PlaceId).Name
&#9;end)
end

return {
&#9;Name = name,
&#9;IsFile = isFile,
&#9;Version = game.PlaceVersion,
}
</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a400001053</UniqueId>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX93B1B1EE81D74B8BAA8FFAB264B931AE">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b3e</UniqueId>
				<string name="LinkedSource"></string>
				<string name="Name">Dom</string>
				<string name="ScriptGuid">{8ca90c52-2a46-402a-a0af-c2b61e7ee862}</string>
				<string name="Source">local database = require(script.database)
local Error = require(script.Error)
local PropertyDescriptor = require(script.PropertyDescriptor)

local function findCanonicalPropertyDescriptor(className, propertyName)
&#9;local currentClassName = className

&#9;repeat
&#9;&#9;local currentClass = database.Classes[currentClassName]

&#9;&#9;if currentClass == nil then
&#9;&#9;&#9;return currentClass
&#9;&#9;end

&#9;&#9;local propertyData = currentClass.Properties[propertyName]
&#9;&#9;if propertyData ~= nil then
&#9;&#9;&#9;local canonicalData = propertyData.Kind.Canonical
&#9;&#9;&#9;if canonicalData ~= nil then
&#9;&#9;&#9;&#9;return PropertyDescriptor.fromRaw(propertyData, currentClassName, propertyName)
&#9;&#9;&#9;end

&#9;&#9;&#9;local aliasData = propertyData.Kind.Alias
&#9;&#9;&#9;if aliasData ~= nil then
&#9;&#9;&#9;&#9;return PropertyDescriptor.fromRaw(
&#9;&#9;&#9;&#9;&#9;currentClass.Properties[aliasData.AliasFor],
&#9;&#9;&#9;&#9;&#9;currentClassName,
&#9;&#9;&#9;&#9;&#9;aliasData.AliasFor
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;end

&#9;&#9;&#9;return nil
&#9;&#9;end

&#9;&#9;currentClassName = currentClass.Superclass
&#9;until currentClassName == nil

&#9;return nil
end

local function getDefaultProperties(className)
&#9;local class = database.Classes[className]
&#9;local properties = {}

&#9;if not class then
&#9;&#9;return nil
&#9;end

&#9;for property, default in pairs(class.DefaultProperties) do
&#9;&#9;local descriptor = findCanonicalPropertyDescriptor(className, property)

&#9;&#9;if
&#9;&#9;&#9;descriptor
&#9;&#9;&#9;and (descriptor.scriptability == &quot;ReadWrite&quot; or descriptor.scriptability == &quot;Custom&quot;)
&#9;&#9;&#9;and next(default)
&#9;&#9;then
&#9;&#9;&#9;properties[property] = default
&#9;&#9;end
&#9;end

&#9;return properties
end

local function isCreatable(className)
&#9;local class = database.Classes[className]

&#9;if not class then
&#9;&#9;return false
&#9;end

&#9;return table.find(class.Tags, &quot;NotCreatable&quot;) == nil
end

local function readProperty(instance, propertyName)
&#9;local descriptor = findCanonicalPropertyDescriptor(instance.ClassName, propertyName)

&#9;if descriptor == nil then
&#9;&#9;local fullName = (&quot;%s.%s&quot;):format(instance.className, propertyName)

&#9;&#9;return false, Error.new(Error.Kind.UnknownProperty, fullName)
&#9;end

&#9;return descriptor:read(instance)
end

local function writeProperty(instance, propertyName, value)
&#9;local descriptor = findCanonicalPropertyDescriptor(instance.ClassName, propertyName)

&#9;if descriptor == nil then
&#9;&#9;local fullName = (&quot;%s.%s&quot;):format(instance.className, propertyName)

&#9;&#9;return false, Error.new(Error.Kind.UnknownProperty, fullName)
&#9;end

&#9;return descriptor:write(instance, value)
end

return {
&#9;isCreatable = isCreatable,
&#9;readProperty = readProperty,
&#9;writeProperty = writeProperty,
&#9;findCanonicalPropertyDescriptor = findCanonicalPropertyDescriptor,
&#9;getDefaultProperties = getDefaultProperties,
&#9;Error = Error,
&#9;EncodedValue = require(script.EncodedValue),
}
</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a400001054</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBX19C2E30A487442FA83BD2AE03806B0BD">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b3f</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">database</string>
					<string name="ScriptGuid">{d94397ef-f51d-49dd-bfe1-643a41415f26}</string>
					<string name="Source">return {[&quot;Version&quot;] = {0,666,682,6660610,},[&quot;Classes&quot;] = {[&quot;Accessory&quot;] = {[&quot;Name&quot;] = &quot;Accessory&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Accoutrement&quot;,[&quot;Properties&quot;] = {[&quot;AccessoryType&quot;] = {[&quot;Name&quot;] = &quot;AccessoryType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AccessoryType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AccessoryType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AttachmentPoint&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AccessoryDescription&quot;] = {[&quot;Name&quot;] = &quot;AccessoryDescription&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AccessoryType&quot;] = {[&quot;Name&quot;] = &quot;AccessoryType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AccessoryType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AssetId&quot;] = {[&quot;Name&quot;] = &quot;AssetId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Instance&quot;] = {[&quot;Name&quot;] = &quot;Instance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsLayered&quot;] = {[&quot;Name&quot;] = &quot;IsLayered&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Order&quot;] = {[&quot;Name&quot;] = &quot;Order&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Position&quot;] = {[&quot;Name&quot;] = &quot;Position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Puffiness&quot;] = {[&quot;Name&quot;] = &quot;Puffiness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Rotation&quot;] = {[&quot;Name&quot;] = &quot;Rotation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Scale&quot;] = {[&quot;Name&quot;] = &quot;Scale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AccessoryType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AssetId&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IsLayered&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Order&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Position&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Puffiness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Rotation&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AccountService&quot;] = {[&quot;Name&quot;] = &quot;AccountService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Accoutrement&quot;] = {[&quot;Name&quot;] = &quot;Accoutrement&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AttachmentForward&quot;] = {[&quot;Name&quot;] = &quot;AttachmentForward&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AttachmentPoint&quot;] = {[&quot;Name&quot;] = &quot;AttachmentPoint&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AttachmentPos&quot;] = {[&quot;Name&quot;] = &quot;AttachmentPos&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AttachmentRight&quot;] = {[&quot;Name&quot;] = &quot;AttachmentRight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AttachmentUp&quot;] = {[&quot;Name&quot;] = &quot;AttachmentUp&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;BackendAccoutrementState&quot;] = {[&quot;Name&quot;] = &quot;BackendAccoutrementState&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AttachmentPoint&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AchievementService&quot;] = {[&quot;Name&quot;] = &quot;AchievementService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ActivityHistoryEventService&quot;] = {[&quot;Name&quot;] = &quot;ActivityHistoryEventService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Actor&quot;] = {[&quot;Name&quot;] = &quot;Actor&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Model&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LevelOfDetail&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ModelMeshCFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;ModelMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;ModelMeshSize&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;ModelStreamingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;NeedsPivotMigration&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WorldPivotData&quot;] = {[&quot;OptionalCFrame&quot;] = nil,},},},[&quot;AdGui&quot;] = {[&quot;Name&quot;] = &quot;AdGui&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SurfaceGuiBase&quot;,[&quot;Properties&quot;] = {[&quot;AdShape&quot;] = {[&quot;Name&quot;] = &quot;AdShape&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AdShape&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EnableVideoAds&quot;] = {[&quot;Name&quot;] = &quot;EnableVideoAds&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FallbackImage&quot;] = {[&quot;Name&quot;] = &quot;FallbackImage&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Status&quot;] = {[&quot;Name&quot;] = &quot;Status&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AdUnitStatus&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AdPortal&quot;] = {[&quot;Name&quot;] = &quot;AdPortal&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;PortalInvalidReason&quot;] = {[&quot;Name&quot;] = &quot;PortalInvalidReason&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PortalVersion&quot;] = {[&quot;Name&quot;] = &quot;PortalVersion&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Status&quot;] = {[&quot;Name&quot;] = &quot;Status&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AdUnitStatus&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AdService&quot;] = {[&quot;Name&quot;] = &quot;AdService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AdvancedDragger&quot;] = {[&quot;Name&quot;] = &quot;AdvancedDragger&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AirController&quot;] = {[&quot;Name&quot;] = &quot;AirController&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ControllerBase&quot;,[&quot;Properties&quot;] = {[&quot;BalanceMaxTorque&quot;] = {[&quot;Name&quot;] = &quot;BalanceMaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BalanceSpeed&quot;] = {[&quot;Name&quot;] = &quot;BalanceSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LinearImpulse&quot;] = {[&quot;Name&quot;] = &quot;LinearImpulse&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaintainAngularMomentum&quot;] = {[&quot;Name&quot;] = &quot;MaintainAngularMomentum&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaintainLinearMomentum&quot;] = {[&quot;Name&quot;] = &quot;MaintainLinearMomentum&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MoveMaxForce&quot;] = {[&quot;Name&quot;] = &quot;MoveMaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TurnMaxTorque&quot;] = {[&quot;Name&quot;] = &quot;TurnMaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TurnSpeedFactor&quot;] = {[&quot;Name&quot;] = &quot;TurnSpeedFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BalanceMaxTorque&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;BalanceRigidityEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;BalanceSpeed&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaintainAngularMomentum&quot;] = {[&quot;Bool&quot;] = true,},[&quot;MaintainLinearMomentum&quot;] = {[&quot;Bool&quot;] = true,},[&quot;MoveMaxForce&quot;] = {[&quot;Float32&quot;] = 1000,},[&quot;MoveSpeedFactor&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TurnMaxTorque&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;TurnSpeedFactor&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AlignOrientation&quot;] = {[&quot;Name&quot;] = &quot;AlignOrientation&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;AlignType&quot;] = {[&quot;Name&quot;] = &quot;AlignType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AlignType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CFrame&quot;] = {[&quot;Name&quot;] = &quot;CFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LookAtPosition&quot;] = {[&quot;Name&quot;] = &quot;LookAtPosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxAngularVelocity&quot;] = {[&quot;Name&quot;] = &quot;MaxAngularVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxTorque&quot;] = {[&quot;Name&quot;] = &quot;MaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Mode&quot;] = {[&quot;Name&quot;] = &quot;Mode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;OrientationAlignmentMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PrimaryAxis&quot;] = {[&quot;Name&quot;] = &quot;PrimaryAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PrimaryAxisOnly&quot;] = {[&quot;Name&quot;] = &quot;PrimaryAxisOnly&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReactionTorqueEnabled&quot;] = {[&quot;Name&quot;] = &quot;ReactionTorqueEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Responsiveness&quot;] = {[&quot;Name&quot;] = &quot;Responsiveness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RigidityEnabled&quot;] = {[&quot;Name&quot;] = &quot;RigidityEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SecondaryAxis&quot;] = {[&quot;Name&quot;] = &quot;SecondaryAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AlignType&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 23,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxAngularVelocity&quot;] = {[&quot;Float32&quot;] = math.huge,},[&quot;MaxTorque&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;Mode&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;PrimaryAxisOnly&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ReactionTorqueEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Responsiveness&quot;] = {[&quot;Float32&quot;] = 10,},[&quot;RigidityEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;AlignPosition&quot;] = {[&quot;Name&quot;] = &quot;AlignPosition&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;ApplyAtCenterOfMass&quot;] = {[&quot;Name&quot;] = &quot;ApplyAtCenterOfMass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ForceLimitMode&quot;] = {[&quot;Name&quot;] = &quot;ForceLimitMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ForceLimitMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ForceRelativeTo&quot;] = {[&quot;Name&quot;] = &quot;ForceRelativeTo&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ActuatorRelativeTo&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxAxesForce&quot;] = {[&quot;Name&quot;] = &quot;MaxAxesForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxForce&quot;] = {[&quot;Name&quot;] = &quot;MaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxVelocity&quot;] = {[&quot;Name&quot;] = &quot;MaxVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Mode&quot;] = {[&quot;Name&quot;] = &quot;Mode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PositionAlignmentMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Position&quot;] = {[&quot;Name&quot;] = &quot;Position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReactionForceEnabled&quot;] = {[&quot;Name&quot;] = &quot;ReactionForceEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Responsiveness&quot;] = {[&quot;Name&quot;] = &quot;Responsiveness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RigidityEnabled&quot;] = {[&quot;Name&quot;] = &quot;RigidityEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;ApplyAtCenterOfMass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 194,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ForceLimitMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ForceRelativeTo&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxAxesForce&quot;] = {[&quot;Vector3&quot;] = {10000,10000,10000,},},[&quot;MaxForce&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;MaxVelocity&quot;] = {[&quot;Float32&quot;] = math.huge,},[&quot;Mode&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Position&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;ReactionForceEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Responsiveness&quot;] = {[&quot;Float32&quot;] = 10,},[&quot;RigidityEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;AnalysticsSettings&quot;] = {[&quot;Name&quot;] = &quot;AnalysticsSettings&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GenericSettings&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AnalyticsService&quot;] = {[&quot;Name&quot;] = &quot;AnalyticsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ApiKey&quot;] = {[&quot;Name&quot;] = &quot;ApiKey&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AngularVelocity&quot;] = {[&quot;Name&quot;] = &quot;AngularVelocity&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;AngularVelocity&quot;] = {[&quot;Name&quot;] = &quot;AngularVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxTorque&quot;] = {[&quot;Name&quot;] = &quot;MaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReactionTorqueEnabled&quot;] = {[&quot;Name&quot;] = &quot;ReactionTorqueEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RelativeTo&quot;] = {[&quot;Name&quot;] = &quot;RelativeTo&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ActuatorRelativeTo&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AngularVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 23,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxTorque&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;ReactionTorqueEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;RelativeTo&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;Animation&quot;] = {[&quot;Name&quot;] = &quot;Animation&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AnimationId&quot;] = {[&quot;Name&quot;] = &quot;AnimationId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AnimationId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AnimationClip&quot;] = {[&quot;Name&quot;] = &quot;AnimationClip&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Guid&quot;] = {[&quot;Name&quot;] = &quot;Guid&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GuidBinaryString&quot;] = {[&quot;Name&quot;] = &quot;GuidBinaryString&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Loop&quot;] = {[&quot;Name&quot;] = &quot;Loop&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Priority&quot;] = {[&quot;Name&quot;] = &quot;Priority&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AnimationPriority&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AnimationClipProvider&quot;] = {[&quot;Name&quot;] = &quot;AnimationClipProvider&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AnimationConstraint&quot;] = {[&quot;Name&quot;] = &quot;AnimationConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;C0&quot;] = {[&quot;Name&quot;] = &quot;C0&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;C1&quot;] = {[&quot;Name&quot;] = &quot;C1&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsKinematic&quot;] = {[&quot;Name&quot;] = &quot;IsKinematic&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxForce&quot;] = {[&quot;Name&quot;] = &quot;MaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxTorque&quot;] = {[&quot;Name&quot;] = &quot;MaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Part0&quot;] = {[&quot;Name&quot;] = &quot;Part0&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Part1&quot;] = {[&quot;Name&quot;] = &quot;Part1&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Transform&quot;] = {[&quot;Name&quot;] = &quot;Transform&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 23,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IsKinematic&quot;] = {[&quot;Bool&quot;] = false,},[&quot;MaxForce&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;MaxTorque&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transform&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;AnimationController&quot;] = {[&quot;Name&quot;] = &quot;AnimationController&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AnimationFromVideoCreatorService&quot;] = {[&quot;Name&quot;] = &quot;AnimationFromVideoCreatorService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AnimationFromVideoCreatorStudioService&quot;] = {[&quot;Name&quot;] = &quot;AnimationFromVideoCreatorStudioService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AnimationImportData&quot;] = {[&quot;Name&quot;] = &quot;AnimationImportData&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;BaseImportData&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AnimationRigData&quot;] = {[&quot;Name&quot;] = &quot;AnimationRigData&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;label&quot;] = {[&quot;Name&quot;] = &quot;label&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;name&quot;] = {[&quot;Name&quot;] = &quot;name&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;parent&quot;] = {[&quot;Name&quot;] = &quot;parent&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;postTransform&quot;] = {[&quot;Name&quot;] = &quot;postTransform&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;preTransform&quot;] = {[&quot;Name&quot;] = &quot;preTransform&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;transform&quot;] = {[&quot;Name&quot;] = &quot;transform&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;label&quot;] = {[&quot;BinaryString&quot;] = &quot;AQAAAAEAAAAAAAAA&quot;,},[&quot;name&quot;] = {[&quot;BinaryString&quot;] = &quot;AQAAAAEAAAAAAAAA&quot;,},[&quot;parent&quot;] = {[&quot;BinaryString&quot;] = &quot;AQAAAAEAAAAAAA==&quot;,},[&quot;postTransform&quot;] = {[&quot;BinaryString&quot;] = &quot;AQAAAAEAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAA=&quot;,},[&quot;preTransform&quot;] = {[&quot;BinaryString&quot;] = &quot;AQAAAAEAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAA=&quot;,},[&quot;transform&quot;] = {[&quot;BinaryString&quot;] = &quot;AQAAAAEAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAA=&quot;,},},},[&quot;AnimationStreamTrack&quot;] = {[&quot;Name&quot;] = &quot;AnimationStreamTrack&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Animation&quot;] = {[&quot;Name&quot;] = &quot;Animation&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FACSDataLod&quot;] = {[&quot;Name&quot;] = &quot;FACSDataLod&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FACSDataLod&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsPlaying&quot;] = {[&quot;Name&quot;] = &quot;IsPlaying&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Priority&quot;] = {[&quot;Name&quot;] = &quot;Priority&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AnimationPriority&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WeightCurrent&quot;] = {[&quot;Name&quot;] = &quot;WeightCurrent&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WeightTarget&quot;] = {[&quot;Name&quot;] = &quot;WeightTarget&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AnimationTrack&quot;] = {[&quot;Name&quot;] = &quot;AnimationTrack&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Animation&quot;] = {[&quot;Name&quot;] = &quot;Animation&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsPlaying&quot;] = {[&quot;Name&quot;] = &quot;IsPlaying&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Length&quot;] = {[&quot;Name&quot;] = &quot;Length&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Looped&quot;] = {[&quot;Name&quot;] = &quot;Looped&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Priority&quot;] = {[&quot;Name&quot;] = &quot;Priority&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AnimationPriority&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Speed&quot;] = {[&quot;Name&quot;] = &quot;Speed&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TimePosition&quot;] = {[&quot;Name&quot;] = &quot;TimePosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WeightCurrent&quot;] = {[&quot;Name&quot;] = &quot;WeightCurrent&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WeightTarget&quot;] = {[&quot;Name&quot;] = &quot;WeightTarget&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Animator&quot;] = {[&quot;Name&quot;] = &quot;Animator&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;EvaluationThrottled&quot;] = {[&quot;Name&quot;] = &quot;EvaluationThrottled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PreferLodEnabled&quot;] = {[&quot;Name&quot;] = &quot;PreferLodEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RootMotion&quot;] = {[&quot;Name&quot;] = &quot;RootMotion&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RootMotionWeight&quot;] = {[&quot;Name&quot;] = &quot;RootMotionWeight&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;PreferLodEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Annotation&quot;] = {[&quot;Name&quot;] = &quot;Annotation&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AuthorColor3&quot;] = {[&quot;Name&quot;] = &quot;AuthorColor3&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AuthorId&quot;] = {[&quot;Name&quot;] = &quot;AuthorId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ChannelId&quot;] = {[&quot;Name&quot;] = &quot;ChannelId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Contents&quot;] = {[&quot;Name&quot;] = &quot;Contents&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CreationTimeUnix&quot;] = {[&quot;Name&quot;] = &quot;CreationTimeUnix&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LastModifiedTimeUnix&quot;] = {[&quot;Name&quot;] = &quot;LastModifiedTimeUnix&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LoadingReplies&quot;] = {[&quot;Name&quot;] = &quot;LoadingReplies&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MessageId&quot;] = {[&quot;Name&quot;] = &quot;MessageId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ReplyCount&quot;] = {[&quot;Name&quot;] = &quot;ReplyCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Resolved&quot;] = {[&quot;Name&quot;] = &quot;Resolved&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TaggedUsers&quot;] = {[&quot;Name&quot;] = &quot;TaggedUsers&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AnnotationsService&quot;] = {[&quot;Name&quot;] = &quot;AnnotationsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AnnotationsVisible&quot;] = {[&quot;Name&quot;] = &quot;AnnotationsVisible&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Hovered&quot;] = {[&quot;Name&quot;] = &quot;Hovered&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Mode&quot;] = {[&quot;Name&quot;] = &quot;Mode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AnnotationEditingMode&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Selected&quot;] = {[&quot;Name&quot;] = &quot;Selected&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AppLifecycleObserverService&quot;] = {[&quot;Name&quot;] = &quot;AppLifecycleObserverService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AppStorageService&quot;] = {[&quot;Name&quot;] = &quot;AppStorageService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;LocalStorageService&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AppUpdateService&quot;] = {[&quot;Name&quot;] = &quot;AppUpdateService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ArcHandles&quot;] = {[&quot;Name&quot;] = &quot;ArcHandles&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;HandlesBase&quot;,[&quot;Properties&quot;] = {[&quot;Axes&quot;] = {[&quot;Name&quot;] = &quot;Axes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Axes&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MouseButton1DownConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseButton1DownConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseButton1UpConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseButton1UpConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseDragConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseDragConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseEnterConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseEnterConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseLeaveConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseLeaveConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Axes&quot;] = {[&quot;Axes&quot;] = {&quot;X&quot;,&quot;Y&quot;,&quot;Z&quot;,},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},},},[&quot;AssetCounterService&quot;] = {[&quot;Name&quot;] = &quot;AssetCounterService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AssetDeliveryProxy&quot;] = {[&quot;Name&quot;] = &quot;AssetDeliveryProxy&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Interface&quot;] = {[&quot;Name&quot;] = &quot;Interface&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Port&quot;] = {[&quot;Name&quot;] = &quot;Port&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StartServer&quot;] = {[&quot;Name&quot;] = &quot;StartServer&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AssetImportService&quot;] = {[&quot;Name&quot;] = &quot;AssetImportService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AssetImportSession&quot;] = {[&quot;Name&quot;] = &quot;AssetImportSession&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AssetManagerService&quot;] = {[&quot;Name&quot;] = &quot;AssetManagerService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AssetPatchSettings&quot;] = {[&quot;Name&quot;] = &quot;AssetPatchSettings&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ContentId&quot;] = {[&quot;Name&quot;] = &quot;ContentId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OutputPath&quot;] = {[&quot;Name&quot;] = &quot;OutputPath&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PatchId&quot;] = {[&quot;Name&quot;] = &quot;PatchId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AssetService&quot;] = {[&quot;Name&quot;] = &quot;AssetService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AssetSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;AssetSoundEffect&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;CustomSoundEffect&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Atmosphere&quot;] = {[&quot;Name&quot;] = &quot;Atmosphere&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Decay&quot;] = {[&quot;Name&quot;] = &quot;Decay&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Density&quot;] = {[&quot;Name&quot;] = &quot;Density&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Glare&quot;] = {[&quot;Name&quot;] = &quot;Glare&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Haze&quot;] = {[&quot;Name&quot;] = &quot;Haze&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Offset&quot;] = {[&quot;Name&quot;] = &quot;Offset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3&quot;] = {0.7843,0.6667,0.4235,},},[&quot;Decay&quot;] = {[&quot;Color3&quot;] = {0.3608,0.2353,0.0549,},},[&quot;Density&quot;] = {[&quot;Float32&quot;] = 0.395,},[&quot;Glare&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Haze&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Offset&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AtmosphereSensor&quot;] = {[&quot;Name&quot;] = &quot;AtmosphereSensor&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SensorBase&quot;,[&quot;Properties&quot;] = {[&quot;AirDensity&quot;] = {[&quot;Name&quot;] = &quot;AirDensity&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RelativeWindVelocity&quot;] = {[&quot;Name&quot;] = &quot;RelativeWindVelocity&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UpdateType&quot;] = {[&quot;Enum&quot;] = 0,},},},[&quot;Attachment&quot;] = {[&quot;Name&quot;] = &quot;Attachment&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Axis&quot;] = {[&quot;Name&quot;] = &quot;Axis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CFrame&quot;] = {[&quot;Name&quot;] = &quot;CFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Orientation&quot;] = {[&quot;Name&quot;] = &quot;Orientation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Position&quot;] = {[&quot;Name&quot;] = &quot;Position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Rotation&quot;] = {[&quot;Name&quot;] = &quot;Rotation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SecondaryAxis&quot;] = {[&quot;Name&quot;] = &quot;SecondaryAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Visible&quot;] = {[&quot;Name&quot;] = &quot;Visible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WorldAxis&quot;] = {[&quot;Name&quot;] = &quot;WorldAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WorldCFrame&quot;] = {[&quot;Name&quot;] = &quot;WorldCFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WorldOrientation&quot;] = {[&quot;Name&quot;] = &quot;WorldOrientation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WorldPosition&quot;] = {[&quot;Name&quot;] = &quot;WorldPosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WorldRotation&quot;] = {[&quot;Name&quot;] = &quot;WorldRotation&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WorldSecondaryAxis&quot;] = {[&quot;Name&quot;] = &quot;WorldSecondaryAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;AudioAnalyzer&quot;] = {[&quot;Name&quot;] = &quot;AudioAnalyzer&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;PeakLevel&quot;] = {[&quot;Name&quot;] = &quot;PeakLevel&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RmsLevel&quot;] = {[&quot;Name&quot;] = &quot;RmsLevel&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SpectrumEnabled&quot;] = {[&quot;Name&quot;] = &quot;SpectrumEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WindowSize&quot;] = {[&quot;Name&quot;] = &quot;WindowSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AudioWindowSize&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;SpectrumEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WindowSize&quot;] = {[&quot;Enum&quot;] = 1,},},},[&quot;AudioChannelMixer&quot;] = {[&quot;Name&quot;] = &quot;AudioChannelMixer&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Layout&quot;] = {[&quot;Name&quot;] = &quot;Layout&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AudioChannelLayout&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Layout&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioChannelSplitter&quot;] = {[&quot;Name&quot;] = &quot;AudioChannelSplitter&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Layout&quot;] = {[&quot;Name&quot;] = &quot;Layout&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AudioChannelLayout&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Layout&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioChorus&quot;] = {[&quot;Name&quot;] = &quot;AudioChorus&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Bypass&quot;] = {[&quot;Name&quot;] = &quot;Bypass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Depth&quot;] = {[&quot;Name&quot;] = &quot;Depth&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Mix&quot;] = {[&quot;Name&quot;] = &quot;Mix&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Rate&quot;] = {[&quot;Name&quot;] = &quot;Rate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bypass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Depth&quot;] = {[&quot;Float32&quot;] = 0.45,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Mix&quot;] = {[&quot;Float32&quot;] = 0.85,},[&quot;Rate&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioCompressor&quot;] = {[&quot;Name&quot;] = &quot;AudioCompressor&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Attack&quot;] = {[&quot;Name&quot;] = &quot;Attack&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Bypass&quot;] = {[&quot;Name&quot;] = &quot;Bypass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Editor&quot;] = {[&quot;Name&quot;] = &quot;Editor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MakeupGain&quot;] = {[&quot;Name&quot;] = &quot;MakeupGain&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Ratio&quot;] = {[&quot;Name&quot;] = &quot;Ratio&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Release&quot;] = {[&quot;Name&quot;] = &quot;Release&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Threshold&quot;] = {[&quot;Name&quot;] = &quot;Threshold&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attack&quot;] = {[&quot;Float32&quot;] = 0.1,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bypass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MakeupGain&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Ratio&quot;] = {[&quot;Float32&quot;] = 40,},[&quot;Release&quot;] = {[&quot;Float32&quot;] = 0.1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Threshold&quot;] = {[&quot;Float32&quot;] = -40,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioDeviceInput&quot;] = {[&quot;Name&quot;] = &quot;AudioDeviceInput&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AccessList&quot;] = {[&quot;Name&quot;] = &quot;AccessList&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AccessType&quot;] = {[&quot;Name&quot;] = &quot;AccessType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AccessModifierType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsReady&quot;] = {[&quot;Name&quot;] = &quot;IsReady&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Muted&quot;] = {[&quot;Name&quot;] = &quot;Muted&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MutedByLocalUser&quot;] = {[&quot;Name&quot;] = &quot;MutedByLocalUser&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Player&quot;] = {[&quot;Name&quot;] = &quot;Player&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Volume&quot;] = {[&quot;Name&quot;] = &quot;Volume&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AccessType&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Active&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Muted&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Volume&quot;] = {[&quot;Float32&quot;] = 1,},},},[&quot;AudioDeviceOutput&quot;] = {[&quot;Name&quot;] = &quot;AudioDeviceOutput&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Player&quot;] = {[&quot;Name&quot;] = &quot;Player&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioDistortion&quot;] = {[&quot;Name&quot;] = &quot;AudioDistortion&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Bypass&quot;] = {[&quot;Name&quot;] = &quot;Bypass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Level&quot;] = {[&quot;Name&quot;] = &quot;Level&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bypass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Level&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioEcho&quot;] = {[&quot;Name&quot;] = &quot;AudioEcho&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Bypass&quot;] = {[&quot;Name&quot;] = &quot;Bypass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DelayTime&quot;] = {[&quot;Name&quot;] = &quot;DelayTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DryLevel&quot;] = {[&quot;Name&quot;] = &quot;DryLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Feedback&quot;] = {[&quot;Name&quot;] = &quot;Feedback&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RampTime&quot;] = {[&quot;Name&quot;] = &quot;RampTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WetLevel&quot;] = {[&quot;Name&quot;] = &quot;WetLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bypass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;DelayTime&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;DryLevel&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Feedback&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;RampTime&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WetLevel&quot;] = {[&quot;Float32&quot;] = 0,},},},[&quot;AudioEmitter&quot;] = {[&quot;Name&quot;] = &quot;AudioEmitter&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AngleAttenuation&quot;] = {[&quot;Name&quot;] = &quot;AngleAttenuation&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AudioInteractionGroup&quot;] = {[&quot;Name&quot;] = &quot;AudioInteractionGroup&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DistanceAttenuation&quot;] = {[&quot;Name&quot;] = &quot;DistanceAttenuation&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SimulationFidelity&quot;] = {[&quot;Name&quot;] = &quot;SimulationFidelity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AudioSimulationFidelity&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AngleAttenuation&quot;] = {[&quot;BinaryString&quot;] = &quot;AA==&quot;,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioInteractionGroup&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;DistanceAttenuation&quot;] = {[&quot;BinaryString&quot;] = &quot;AA==&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SimulationFidelity&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioEqualizer&quot;] = {[&quot;Name&quot;] = &quot;AudioEqualizer&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Bypass&quot;] = {[&quot;Name&quot;] = &quot;Bypass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Editor&quot;] = {[&quot;Name&quot;] = &quot;Editor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HighGain&quot;] = {[&quot;Name&quot;] = &quot;HighGain&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LowGain&quot;] = {[&quot;Name&quot;] = &quot;LowGain&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MidGain&quot;] = {[&quot;Name&quot;] = &quot;MidGain&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MidRange&quot;] = {[&quot;Name&quot;] = &quot;MidRange&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bypass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HighGain&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LowGain&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MidGain&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MidRange&quot;] = {[&quot;NumberRange&quot;] = {400,4000,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioFader&quot;] = {[&quot;Name&quot;] = &quot;AudioFader&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Bypass&quot;] = {[&quot;Name&quot;] = &quot;Bypass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Volume&quot;] = {[&quot;Name&quot;] = &quot;Volume&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bypass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Volume&quot;] = {[&quot;Float32&quot;] = 1,},},},[&quot;AudioFilter&quot;] = {[&quot;Name&quot;] = &quot;AudioFilter&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Bypass&quot;] = {[&quot;Name&quot;] = &quot;Bypass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Editor&quot;] = {[&quot;Name&quot;] = &quot;Editor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FilterType&quot;] = {[&quot;Name&quot;] = &quot;FilterType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AudioFilterType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Frequency&quot;] = {[&quot;Name&quot;] = &quot;Frequency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Gain&quot;] = {[&quot;Name&quot;] = &quot;Gain&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Q&quot;] = {[&quot;Name&quot;] = &quot;Q&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bypass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;FilterType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Frequency&quot;] = {[&quot;Float32&quot;] = 2000,},[&quot;Gain&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Q&quot;] = {[&quot;Float32&quot;] = 0.707,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioFlanger&quot;] = {[&quot;Name&quot;] = &quot;AudioFlanger&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Bypass&quot;] = {[&quot;Name&quot;] = &quot;Bypass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Depth&quot;] = {[&quot;Name&quot;] = &quot;Depth&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Mix&quot;] = {[&quot;Name&quot;] = &quot;Mix&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Rate&quot;] = {[&quot;Name&quot;] = &quot;Rate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bypass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Depth&quot;] = {[&quot;Float32&quot;] = 0.45,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Mix&quot;] = {[&quot;Float32&quot;] = 0.85,},[&quot;Rate&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioFocusService&quot;] = {[&quot;Name&quot;] = &quot;AudioFocusService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioLimiter&quot;] = {[&quot;Name&quot;] = &quot;AudioLimiter&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Bypass&quot;] = {[&quot;Name&quot;] = &quot;Bypass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Editor&quot;] = {[&quot;Name&quot;] = &quot;Editor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxLevel&quot;] = {[&quot;Name&quot;] = &quot;MaxLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Release&quot;] = {[&quot;Name&quot;] = &quot;Release&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bypass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxLevel&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Release&quot;] = {[&quot;Float32&quot;] = 0.01,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioListener&quot;] = {[&quot;Name&quot;] = &quot;AudioListener&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AngleAttenuation&quot;] = {[&quot;Name&quot;] = &quot;AngleAttenuation&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AudioInteractionGroup&quot;] = {[&quot;Name&quot;] = &quot;AudioInteractionGroup&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DistanceAttenuation&quot;] = {[&quot;Name&quot;] = &quot;DistanceAttenuation&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SimulationFidelity&quot;] = {[&quot;Name&quot;] = &quot;SimulationFidelity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AudioSimulationFidelity&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AngleAttenuation&quot;] = {[&quot;BinaryString&quot;] = &quot;AA==&quot;,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioInteractionGroup&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;DistanceAttenuation&quot;] = {[&quot;BinaryString&quot;] = &quot;AA==&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SimulationFidelity&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioPages&quot;] = {[&quot;Name&quot;] = &quot;AudioPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioPitchShifter&quot;] = {[&quot;Name&quot;] = &quot;AudioPitchShifter&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Bypass&quot;] = {[&quot;Name&quot;] = &quot;Bypass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Pitch&quot;] = {[&quot;Name&quot;] = &quot;Pitch&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WindowSize&quot;] = {[&quot;Name&quot;] = &quot;WindowSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AudioWindowSize&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bypass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Pitch&quot;] = {[&quot;Float32&quot;] = 1.25,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WindowSize&quot;] = {[&quot;Enum&quot;] = 1,},},},[&quot;AudioPlayer&quot;] = {[&quot;Name&quot;] = &quot;AudioPlayer&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Asset&quot;] = {[&quot;Name&quot;] = &quot;Asset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AssetId&quot;] = {[&quot;Name&quot;] = &quot;AssetId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AutoLoad&quot;] = {[&quot;Name&quot;] = &quot;AutoLoad&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsPlaying&quot;] = {[&quot;Name&quot;] = &quot;IsPlaying&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsReady&quot;] = {[&quot;Name&quot;] = &quot;IsReady&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LoopRegion&quot;] = {[&quot;Name&quot;] = &quot;LoopRegion&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Looping&quot;] = {[&quot;Name&quot;] = &quot;Looping&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlaybackRegion&quot;] = {[&quot;Name&quot;] = &quot;PlaybackRegion&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlaybackSpeed&quot;] = {[&quot;Name&quot;] = &quot;PlaybackSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TimeLength&quot;] = {[&quot;Name&quot;] = &quot;TimeLength&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TimePosition&quot;] = {[&quot;Name&quot;] = &quot;TimePosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Volume&quot;] = {[&quot;Name&quot;] = &quot;Volume&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Asset&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLoad&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LoopRegion&quot;] = {[&quot;NumberRange&quot;] = {0,60000,},},[&quot;Looping&quot;] = {[&quot;Bool&quot;] = false,},[&quot;PlaybackRegion&quot;] = {[&quot;NumberRange&quot;] = {0,60000,},},[&quot;PlaybackSpeed&quot;] = {[&quot;Float64&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TimePosition&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Volume&quot;] = {[&quot;Float32&quot;] = 1,},},},[&quot;AudioReverb&quot;] = {[&quot;Name&quot;] = &quot;AudioReverb&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Bypass&quot;] = {[&quot;Name&quot;] = &quot;Bypass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DecayRatio&quot;] = {[&quot;Name&quot;] = &quot;DecayRatio&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DecayTime&quot;] = {[&quot;Name&quot;] = &quot;DecayTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Density&quot;] = {[&quot;Name&quot;] = &quot;Density&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Diffusion&quot;] = {[&quot;Name&quot;] = &quot;Diffusion&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DryLevel&quot;] = {[&quot;Name&quot;] = &quot;DryLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EarlyDelayTime&quot;] = {[&quot;Name&quot;] = &quot;EarlyDelayTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HighCutFrequency&quot;] = {[&quot;Name&quot;] = &quot;HighCutFrequency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LateDelayTime&quot;] = {[&quot;Name&quot;] = &quot;LateDelayTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LowShelfFrequency&quot;] = {[&quot;Name&quot;] = &quot;LowShelfFrequency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LowShelfGain&quot;] = {[&quot;Name&quot;] = &quot;LowShelfGain&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReferenceFrequency&quot;] = {[&quot;Name&quot;] = &quot;ReferenceFrequency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WetLevel&quot;] = {[&quot;Name&quot;] = &quot;WetLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bypass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;DecayRatio&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;DecayTime&quot;] = {[&quot;Float32&quot;] = 1.5,},[&quot;Density&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Diffusion&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;DryLevel&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;EarlyDelayTime&quot;] = {[&quot;Float32&quot;] = 0.02,},[&quot;HighCutFrequency&quot;] = {[&quot;Float32&quot;] = 20000,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LateDelayTime&quot;] = {[&quot;Float32&quot;] = 0.04,},[&quot;LowShelfFrequency&quot;] = {[&quot;Float32&quot;] = 250,},[&quot;LowShelfGain&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;ReferenceFrequency&quot;] = {[&quot;Float32&quot;] = 5000,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WetLevel&quot;] = {[&quot;Float32&quot;] = -6,},},},[&quot;AudioSearchParams&quot;] = {[&quot;Name&quot;] = &quot;AudioSearchParams&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Album&quot;] = {[&quot;Name&quot;] = &quot;Album&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Artist&quot;] = {[&quot;Name&quot;] = &quot;Artist&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AudioSubType&quot;] = {[&quot;Name&quot;] = &quot;AudioSubType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AudioSubType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AudioSubtype&quot;] = {[&quot;Name&quot;] = &quot;AudioSubtype&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AudioSubType&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxDuration&quot;] = {[&quot;Name&quot;] = &quot;MaxDuration&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinDuration&quot;] = {[&quot;Name&quot;] = &quot;MinDuration&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SearchKeyword&quot;] = {[&quot;Name&quot;] = &quot;SearchKeyword&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Tag&quot;] = {[&quot;Name&quot;] = &quot;Tag&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Title&quot;] = {[&quot;Name&quot;] = &quot;Title&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AudioTextToSpeech&quot;] = {[&quot;Name&quot;] = &quot;AudioTextToSpeech&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;IsLoaded&quot;] = {[&quot;Name&quot;] = &quot;IsLoaded&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsPlaying&quot;] = {[&quot;Name&quot;] = &quot;IsPlaying&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Looping&quot;] = {[&quot;Name&quot;] = &quot;Looping&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Pitch&quot;] = {[&quot;Name&quot;] = &quot;Pitch&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlaybackSpeed&quot;] = {[&quot;Name&quot;] = &quot;PlaybackSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Speed&quot;] = {[&quot;Name&quot;] = &quot;Speed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Text&quot;] = {[&quot;Name&quot;] = &quot;Text&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TimeLength&quot;] = {[&quot;Name&quot;] = &quot;TimeLength&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TimePosition&quot;] = {[&quot;Name&quot;] = &quot;TimePosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VoiceId&quot;] = {[&quot;Name&quot;] = &quot;VoiceId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Volume&quot;] = {[&quot;Name&quot;] = &quot;Volume&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Looping&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Pitch&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;PlaybackSpeed&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Speed&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Text&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;TimePosition&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VoiceId&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Volume&quot;] = {[&quot;Float32&quot;] = 1,},},},[&quot;AuroraScript&quot;] = {[&quot;Name&quot;] = &quot;AuroraScript&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;LuaSourceContainer&quot;,[&quot;Properties&quot;] = {[&quot;DumpMispredictions&quot;] = {[&quot;Name&quot;] = &quot;DumpMispredictions&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EnableLOD&quot;] = {[&quot;Name&quot;] = &quot;EnableLOD&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LODDistanceFactor&quot;] = {[&quot;Name&quot;] = &quot;LODDistanceFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LODFrequencyFactor&quot;] = {[&quot;Name&quot;] = &quot;LODFrequencyFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Priority&quot;] = {[&quot;Name&quot;] = &quot;Priority&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RunInParallel&quot;] = {[&quot;Name&quot;] = &quot;RunInParallel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Source&quot;] = {[&quot;Name&quot;] = &quot;Source&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Tag&quot;] = {[&quot;Name&quot;] = &quot;Tag&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ScriptGuid&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AuroraScriptService&quot;] = {[&quot;Name&quot;] = &quot;AuroraScriptService&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;BufferSize&quot;] = {[&quot;Name&quot;] = &quot;BufferSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AuroraService&quot;] = {[&quot;Name&quot;] = &quot;AuroraService&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AvatarChatService&quot;] = {[&quot;Name&quot;] = &quot;AvatarChatService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ClientFeatures&quot;] = {[&quot;Name&quot;] = &quot;ClientFeatures&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ClientFeaturesInitialized&quot;] = {[&quot;Name&quot;] = &quot;ClientFeaturesInitialized&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ServerFeatures&quot;] = {[&quot;Name&quot;] = &quot;ServerFeatures&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AvatarCreationService&quot;] = {[&quot;Name&quot;] = &quot;AvatarCreationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AvatarEditorService&quot;] = {[&quot;Name&quot;] = &quot;AvatarEditorService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AvatarImportService&quot;] = {[&quot;Name&quot;] = &quot;AvatarImportService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;AvatarPreloader&quot;] = {[&quot;Name&quot;] = &quot;AvatarPreloader&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Backpack&quot;] = {[&quot;Name&quot;] = &quot;Backpack&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BackpackItem&quot;] = {[&quot;Name&quot;] = &quot;BackpackItem&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Model&quot;,[&quot;Properties&quot;] = {[&quot;TextureId&quot;] = {[&quot;Name&quot;] = &quot;TextureId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WorldPivotData&quot;] = {[&quot;OptionalCFrame&quot;] = nil,},},},[&quot;BadgeService&quot;] = {[&quot;Name&quot;] = &quot;BadgeService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BallSocketConstraint&quot;] = {[&quot;Name&quot;] = &quot;BallSocketConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;LimitsEnabled&quot;] = {[&quot;Name&quot;] = &quot;LimitsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxFrictionTorque&quot;] = {[&quot;Name&quot;] = &quot;MaxFrictionTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxFrictionTorqueXml&quot;] = {[&quot;Name&quot;] = &quot;MaxFrictionTorqueXml&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Radius&quot;] = {[&quot;Name&quot;] = &quot;Radius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Restitution&quot;] = {[&quot;Name&quot;] = &quot;Restitution&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TwistLimitsEnabled&quot;] = {[&quot;Name&quot;] = &quot;TwistLimitsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TwistLowerAngle&quot;] = {[&quot;Name&quot;] = &quot;TwistLowerAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TwistUpperAngle&quot;] = {[&quot;Name&quot;] = &quot;TwistUpperAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UpperAngle&quot;] = {[&quot;Name&quot;] = &quot;UpperAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 1009,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LimitsEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;MaxFrictionTorqueXml&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Radius&quot;] = {[&quot;Float32&quot;] = 0.15,},[&quot;Restitution&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TwistLimitsEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;TwistLowerAngle&quot;] = {[&quot;Float32&quot;] = -45,},[&quot;TwistUpperAngle&quot;] = {[&quot;Float32&quot;] = 45,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UpperAngle&quot;] = {[&quot;Float32&quot;] = 45,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;BanHistoryPages&quot;] = {[&quot;Name&quot;] = &quot;BanHistoryPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BaseImportData&quot;] = {[&quot;Name&quot;] = &quot;BaseImportData&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Id&quot;] = {[&quot;Name&quot;] = &quot;Id&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ImportName&quot;] = {[&quot;Name&quot;] = &quot;ImportName&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShouldImport&quot;] = {[&quot;Name&quot;] = &quot;ShouldImport&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BasePart&quot;] = {[&quot;Name&quot;] = &quot;BasePart&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;PVInstance&quot;,[&quot;Properties&quot;] = {[&quot;Anchored&quot;] = {[&quot;Name&quot;] = &quot;Anchored&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AssemblyAngularVelocity&quot;] = {[&quot;Name&quot;] = &quot;AssemblyAngularVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AssemblyCenterOfMass&quot;] = {[&quot;Name&quot;] = &quot;AssemblyCenterOfMass&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AssemblyLinearVelocity&quot;] = {[&quot;Name&quot;] = &quot;AssemblyLinearVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AssemblyMass&quot;] = {[&quot;Name&quot;] = &quot;AssemblyMass&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AssemblyRootPart&quot;] = {[&quot;Name&quot;] = &quot;AssemblyRootPart&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AudioCanCollide&quot;] = {[&quot;Name&quot;] = &quot;AudioCanCollide&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackParamA&quot;] = {[&quot;Name&quot;] = &quot;BackParamA&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackParamB&quot;] = {[&quot;Name&quot;] = &quot;BackParamB&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackSurface&quot;] = {[&quot;Name&quot;] = &quot;BackSurface&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SurfaceType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackSurfaceInput&quot;] = {[&quot;Name&quot;] = &quot;BackSurfaceInput&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;InputType&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BottomParamA&quot;] = {[&quot;Name&quot;] = &quot;BottomParamA&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BottomParamB&quot;] = {[&quot;Name&quot;] = &quot;BottomParamB&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BottomSurface&quot;] = {[&quot;Name&quot;] = &quot;BottomSurface&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SurfaceType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BottomSurfaceInput&quot;] = {[&quot;Name&quot;] = &quot;BottomSurfaceInput&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;InputType&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BrickColor&quot;] = {[&quot;Name&quot;] = &quot;BrickColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;Color&quot;,[&quot;Migration&quot;] = &quot;BrickColorToColor&quot;,},},},},},[&quot;CFrame&quot;] = {[&quot;Name&quot;] = &quot;CFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CanCollide&quot;] = {[&quot;Name&quot;] = &quot;CanCollide&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CanQuery&quot;] = {[&quot;Name&quot;] = &quot;CanQuery&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CanTouch&quot;] = {[&quot;Name&quot;] = &quot;CanTouch&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CastShadow&quot;] = {[&quot;Name&quot;] = &quot;CastShadow&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CenterOfMass&quot;] = {[&quot;Name&quot;] = &quot;CenterOfMass&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CollisionGroup&quot;] = {[&quot;Name&quot;] = &quot;CollisionGroup&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CollisionGroupId&quot;] = {[&quot;Name&quot;] = &quot;CollisionGroupId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CollisionGroupReplicate&quot;] = {[&quot;Name&quot;] = &quot;CollisionGroupReplicate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;Color3uint8&quot;,},},},},[&quot;Color3uint8&quot;] = {[&quot;Name&quot;] = &quot;Color3uint8&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3uint8&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Color&quot;,},},},[&quot;CurrentPhysicalProperties&quot;] = {[&quot;Name&quot;] = &quot;CurrentPhysicalProperties&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;PhysicalProperties&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;Name&quot;] = &quot;CustomPhysicalProperties&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;PhysicalProperties&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DraggingV1&quot;] = {[&quot;Name&quot;] = &quot;DraggingV1&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Elasticity&quot;] = {[&quot;Name&quot;] = &quot;Elasticity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EnableFluidForces&quot;] = {[&quot;Name&quot;] = &quot;EnableFluidForces&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ExtentsCFrame&quot;] = {[&quot;Name&quot;] = &quot;ExtentsCFrame&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ExtentsSize&quot;] = {[&quot;Name&quot;] = &quot;ExtentsSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Friction&quot;] = {[&quot;Name&quot;] = &quot;Friction&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FrontParamA&quot;] = {[&quot;Name&quot;] = &quot;FrontParamA&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FrontParamB&quot;] = {[&quot;Name&quot;] = &quot;FrontParamB&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FrontSurface&quot;] = {[&quot;Name&quot;] = &quot;FrontSurface&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SurfaceType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FrontSurfaceInput&quot;] = {[&quot;Name&quot;] = &quot;FrontSurfaceInput&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;InputType&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftParamA&quot;] = {[&quot;Name&quot;] = &quot;LeftParamA&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftParamB&quot;] = {[&quot;Name&quot;] = &quot;LeftParamB&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftSurface&quot;] = {[&quot;Name&quot;] = &quot;LeftSurface&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SurfaceType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftSurfaceInput&quot;] = {[&quot;Name&quot;] = &quot;LeftSurfaceInput&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;InputType&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalSimulationValidation&quot;] = {[&quot;Name&quot;] = &quot;LocalSimulationValidation&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LocalTransparencyModifier&quot;] = {[&quot;Name&quot;] = &quot;LocalTransparencyModifier&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Locked&quot;] = {[&quot;Name&quot;] = &quot;Locked&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Mass&quot;] = {[&quot;Name&quot;] = &quot;Mass&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Massless&quot;] = {[&quot;Name&quot;] = &quot;Massless&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Material&quot;] = {[&quot;Name&quot;] = &quot;Material&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Material&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaterialVariant&quot;] = {[&quot;Name&quot;] = &quot;MaterialVariant&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;MaterialVariantSerialized&quot;,},},},},[&quot;MaterialVariantSerialized&quot;] = {[&quot;Name&quot;] = &quot;MaterialVariantSerialized&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;MaterialVariant&quot;,},},},[&quot;NetworkIsSleeping&quot;] = {[&quot;Name&quot;] = &quot;NetworkIsSleeping&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;NetworkOwnershipRule&quot;] = {[&quot;Name&quot;] = &quot;NetworkOwnershipRule&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NetworkOwnership&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Orientation&quot;] = {[&quot;Name&quot;] = &quot;Orientation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PhysicsRepRootPart&quot;] = {[&quot;Name&quot;] = &quot;PhysicsRepRootPart&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PivotOffset&quot;] = {[&quot;Name&quot;] = &quot;PivotOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Position&quot;] = {[&quot;Name&quot;] = &quot;Position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ReceiveAge&quot;] = {[&quot;Name&quot;] = &quot;ReceiveAge&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Reflectance&quot;] = {[&quot;Name&quot;] = &quot;Reflectance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ResizeIncrement&quot;] = {[&quot;Name&quot;] = &quot;ResizeIncrement&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ResizeableFaces&quot;] = {[&quot;Name&quot;] = &quot;ResizeableFaces&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Faces&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightParamA&quot;] = {[&quot;Name&quot;] = &quot;RightParamA&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightParamB&quot;] = {[&quot;Name&quot;] = &quot;RightParamB&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightSurface&quot;] = {[&quot;Name&quot;] = &quot;RightSurface&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SurfaceType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightSurfaceInput&quot;] = {[&quot;Name&quot;] = &quot;RightSurfaceInput&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;InputType&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RootPriority&quot;] = {[&quot;Name&quot;] = &quot;RootPriority&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RotVelocity&quot;] = {[&quot;Name&quot;] = &quot;RotVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Rotation&quot;] = {[&quot;Name&quot;] = &quot;Rotation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;size&quot;,},},},},[&quot;SpecificGravity&quot;] = {[&quot;Name&quot;] = &quot;SpecificGravity&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TopParamA&quot;] = {[&quot;Name&quot;] = &quot;TopParamA&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TopParamB&quot;] = {[&quot;Name&quot;] = &quot;TopParamB&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TopSurface&quot;] = {[&quot;Name&quot;] = &quot;TopSurface&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SurfaceType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TopSurfaceInput&quot;] = {[&quot;Name&quot;] = &quot;TopSurfaceInput&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;InputType&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Transparency&quot;] = {[&quot;Name&quot;] = &quot;Transparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Velocity&quot;] = {[&quot;Name&quot;] = &quot;Velocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;brickColor&quot;] = {[&quot;Name&quot;] = &quot;brickColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;Color&quot;,[&quot;Migration&quot;] = &quot;BrickColorToColor&quot;,},},},},},[&quot;siz&quot;] = {[&quot;Name&quot;] = &quot;siz&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;WriteOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;size&quot;] = {[&quot;Name&quot;] = &quot;size&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Size&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BasePlayerGui&quot;] = {[&quot;Name&quot;] = &quot;BasePlayerGui&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BaseRemoteEvent&quot;] = {[&quot;Name&quot;] = &quot;BaseRemoteEvent&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BaseScript&quot;] = {[&quot;Name&quot;] = &quot;BaseScript&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;LuaSourceContainer&quot;,[&quot;Properties&quot;] = {[&quot;Disabled&quot;] = {[&quot;Name&quot;] = &quot;Disabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LinkedSource&quot;] = {[&quot;Name&quot;] = &quot;LinkedSource&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RunContext&quot;] = {[&quot;Name&quot;] = &quot;RunContext&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RunContext&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ScriptGuid&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BaseWrap&quot;] = {[&quot;Name&quot;] = &quot;BaseWrap&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CageMeshContent&quot;] = {[&quot;Name&quot;] = &quot;CageMeshContent&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Content&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CageMeshId&quot;] = {[&quot;Name&quot;] = &quot;CageMeshId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;CageMeshContent&quot;,[&quot;Migration&quot;] = &quot;ContentIdToContent&quot;,},},},},},[&quot;CageOrigin&quot;] = {[&quot;Name&quot;] = &quot;CageOrigin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CageOriginWorld&quot;] = {[&quot;Name&quot;] = &quot;CageOriginWorld&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HSRAssetId&quot;] = {[&quot;Name&quot;] = &quot;HSRAssetId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HSRData&quot;] = {[&quot;Name&quot;] = &quot;HSRData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HSRMeshIdData&quot;] = {[&quot;Name&quot;] = &quot;HSRMeshIdData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImportInProcess&quot;] = {[&quot;Name&quot;] = &quot;ImportInProcess&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ImportOrigin&quot;] = {[&quot;Name&quot;] = &quot;ImportOrigin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImportOriginWorld&quot;] = {[&quot;Name&quot;] = &quot;ImportOriginWorld&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TemporaryCageMeshId&quot;] = {[&quot;Name&quot;] = &quot;TemporaryCageMeshId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Beam&quot;] = {[&quot;Name&quot;] = &quot;Beam&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Attachment0&quot;] = {[&quot;Name&quot;] = &quot;Attachment0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Attachment1&quot;] = {[&quot;Name&quot;] = &quot;Attachment1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Brightness&quot;] = {[&quot;Name&quot;] = &quot;Brightness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ColorSequence&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurveSize0&quot;] = {[&quot;Name&quot;] = &quot;CurveSize0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurveSize1&quot;] = {[&quot;Name&quot;] = &quot;CurveSize1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FaceCamera&quot;] = {[&quot;Name&quot;] = &quot;FaceCamera&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LightEmission&quot;] = {[&quot;Name&quot;] = &quot;LightEmission&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LightInfluence&quot;] = {[&quot;Name&quot;] = &quot;LightInfluence&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalTransparencyModifier&quot;] = {[&quot;Name&quot;] = &quot;LocalTransparencyModifier&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Segments&quot;] = {[&quot;Name&quot;] = &quot;Segments&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Texture&quot;] = {[&quot;Name&quot;] = &quot;Texture&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextureLength&quot;] = {[&quot;Name&quot;] = &quot;TextureLength&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextureMode&quot;] = {[&quot;Name&quot;] = &quot;TextureMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextureMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextureSpeed&quot;] = {[&quot;Name&quot;] = &quot;TextureSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Transparency&quot;] = {[&quot;Name&quot;] = &quot;Transparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberSequence&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Width0&quot;] = {[&quot;Name&quot;] = &quot;Width0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Width1&quot;] = {[&quot;Name&quot;] = &quot;Width1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ZOffset&quot;] = {[&quot;Name&quot;] = &quot;ZOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Brightness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;ColorSequence&quot;] = {[&quot;keypoints&quot;] = {{[&quot;time&quot;] = 0,[&quot;color&quot;] = {1,1,1,},},{[&quot;time&quot;] = 1,[&quot;color&quot;] = {1,1,1,},},},},},[&quot;CurveSize0&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;CurveSize1&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FaceCamera&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LightEmission&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LightInfluence&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Segments&quot;] = {[&quot;Int32&quot;] = 10,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Texture&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;TextureLength&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;TextureMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TextureSpeed&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Transparency&quot;] = {[&quot;NumberSequence&quot;] = {[&quot;keypoints&quot;] = {{[&quot;time&quot;] = 0,[&quot;value&quot;] = 0.5,[&quot;envelope&quot;] = 0,},{[&quot;time&quot;] = 1,[&quot;value&quot;] = 0.5,[&quot;envelope&quot;] = 0,},},},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Width0&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Width1&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;ZOffset&quot;] = {[&quot;Float32&quot;] = 0,},},},[&quot;BevelMesh&quot;] = {[&quot;Name&quot;] = &quot;BevelMesh&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;DataModelMesh&quot;,[&quot;Properties&quot;] = {[&quot;Bevel&quot;] = {[&quot;Name&quot;] = &quot;Bevel&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Bevel Roundness&quot;] = {[&quot;Name&quot;] = &quot;Bevel Roundness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Bulge&quot;] = {[&quot;Name&quot;] = &quot;Bulge&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BillboardGui&quot;] = {[&quot;Name&quot;] = &quot;BillboardGui&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;LayerCollector&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Adornee&quot;] = {[&quot;Name&quot;] = &quot;Adornee&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AlwaysOnTop&quot;] = {[&quot;Name&quot;] = &quot;AlwaysOnTop&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Brightness&quot;] = {[&quot;Name&quot;] = &quot;Brightness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClipsDescendants&quot;] = {[&quot;Name&quot;] = &quot;ClipsDescendants&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurrentDistance&quot;] = {[&quot;Name&quot;] = &quot;CurrentDistance&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DistanceLowerLimit&quot;] = {[&quot;Name&quot;] = &quot;DistanceLowerLimit&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DistanceStep&quot;] = {[&quot;Name&quot;] = &quot;DistanceStep&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DistanceUpperLimit&quot;] = {[&quot;Name&quot;] = &quot;DistanceUpperLimit&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ExtentsOffset&quot;] = {[&quot;Name&quot;] = &quot;ExtentsOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ExtentsOffsetWorldSpace&quot;] = {[&quot;Name&quot;] = &quot;ExtentsOffsetWorldSpace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LightInfluence&quot;] = {[&quot;Name&quot;] = &quot;LightInfluence&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxDistance&quot;] = {[&quot;Name&quot;] = &quot;MaxDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlayerToHideFrom&quot;] = {[&quot;Name&quot;] = &quot;PlayerToHideFrom&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SizeOffset&quot;] = {[&quot;Name&quot;] = &quot;SizeOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StudsOffset&quot;] = {[&quot;Name&quot;] = &quot;StudsOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StudsOffsetWorldSpace&quot;] = {[&quot;Name&quot;] = &quot;StudsOffsetWorldSpace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = false,},[&quot;AlwaysOnTop&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Brightness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = false,},[&quot;DistanceLowerLimit&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;DistanceStep&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;DistanceUpperLimit&quot;] = {[&quot;Float32&quot;] = -1,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ExtentsOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;ExtentsOffsetWorldSpace&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LightInfluence&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MaxDistance&quot;] = {[&quot;Float32&quot;] = math.huge,},[&quot;ResetOnSpawn&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeOffset&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;StudsOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;StudsOffsetWorldSpace&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ZIndexBehavior&quot;] = {[&quot;Enum&quot;] = 0,},},},[&quot;BinaryStringValue&quot;] = {[&quot;Name&quot;] = &quot;BinaryStringValue&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},},},[&quot;BindableEvent&quot;] = {[&quot;Name&quot;] = &quot;BindableEvent&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BindableFunction&quot;] = {[&quot;Name&quot;] = &quot;BindableFunction&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BlockMesh&quot;] = {[&quot;Name&quot;] = &quot;BlockMesh&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;BevelMesh&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bevel&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Bevel Roundness&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Bulge&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Offset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VertexColor&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},},},[&quot;BloomEffect&quot;] = {[&quot;Name&quot;] = &quot;BloomEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PostEffect&quot;,[&quot;Properties&quot;] = {[&quot;Intensity&quot;] = {[&quot;Name&quot;] = &quot;Intensity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Threshold&quot;] = {[&quot;Name&quot;] = &quot;Threshold&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Intensity&quot;] = {[&quot;Float32&quot;] = 0.4,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Float32&quot;] = 24,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Threshold&quot;] = {[&quot;Float32&quot;] = 0.95,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BlurEffect&quot;] = {[&quot;Name&quot;] = &quot;BlurEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PostEffect&quot;,[&quot;Properties&quot;] = {[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Float32&quot;] = 24,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BodyAngularVelocity&quot;] = {[&quot;Name&quot;] = &quot;BodyAngularVelocity&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;BodyMover&quot;,[&quot;Properties&quot;] = {[&quot;AngularVelocity&quot;] = {[&quot;Name&quot;] = &quot;AngularVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxTorque&quot;] = {[&quot;Name&quot;] = &quot;MaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;P&quot;] = {[&quot;Name&quot;] = &quot;P&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;angularvelocity&quot;] = {[&quot;Name&quot;] = &quot;angularvelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;AngularVelocity&quot;,},},},[&quot;maxTorque&quot;] = {[&quot;Name&quot;] = &quot;maxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;MaxTorque&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AngularVelocity&quot;] = {[&quot;Vector3&quot;] = {0,2,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxTorque&quot;] = {[&quot;Vector3&quot;] = {4000,4000,4000,},},[&quot;P&quot;] = {[&quot;Float32&quot;] = 1250,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BodyColors&quot;] = {[&quot;Name&quot;] = &quot;BodyColors&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;CharacterAppearance&quot;,[&quot;Properties&quot;] = {[&quot;HeadColor&quot;] = {[&quot;Name&quot;] = &quot;HeadColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HeadColor3&quot;] = {[&quot;Name&quot;] = &quot;HeadColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftArmColor&quot;] = {[&quot;Name&quot;] = &quot;LeftArmColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftArmColor3&quot;] = {[&quot;Name&quot;] = &quot;LeftArmColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftLegColor&quot;] = {[&quot;Name&quot;] = &quot;LeftLegColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftLegColor3&quot;] = {[&quot;Name&quot;] = &quot;LeftLegColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightArmColor&quot;] = {[&quot;Name&quot;] = &quot;RightArmColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightArmColor3&quot;] = {[&quot;Name&quot;] = &quot;RightArmColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightLegColor&quot;] = {[&quot;Name&quot;] = &quot;RightLegColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightLegColor3&quot;] = {[&quot;Name&quot;] = &quot;RightLegColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TorsoColor&quot;] = {[&quot;Name&quot;] = &quot;TorsoColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TorsoColor3&quot;] = {[&quot;Name&quot;] = &quot;TorsoColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HeadColor3&quot;] = {[&quot;Color3&quot;] = {0.9921569,0.9176471,0.5529412,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftArmColor3&quot;] = {[&quot;Color3&quot;] = {0.9921569,0.9176471,0.5529412,},},[&quot;LeftLegColor3&quot;] = {[&quot;Color3&quot;] = {0.050980397,0.41176474,0.6745098,},},[&quot;RightArmColor3&quot;] = {[&quot;Color3&quot;] = {0.9921569,0.9176471,0.5529412,},},[&quot;RightLegColor3&quot;] = {[&quot;Color3&quot;] = {0.050980397,0.41176474,0.6745098,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TorsoColor3&quot;] = {[&quot;Color3&quot;] = {0.15686275,0.49803925,0.2784314,},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BodyForce&quot;] = {[&quot;Name&quot;] = &quot;BodyForce&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;BodyMover&quot;,[&quot;Properties&quot;] = {[&quot;Force&quot;] = {[&quot;Name&quot;] = &quot;Force&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;force&quot;] = {[&quot;Name&quot;] = &quot;force&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Force&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Force&quot;] = {[&quot;Vector3&quot;] = {0,1,0,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BodyGyro&quot;] = {[&quot;Name&quot;] = &quot;BodyGyro&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;BodyMover&quot;,[&quot;Properties&quot;] = {[&quot;CFrame&quot;] = {[&quot;Name&quot;] = &quot;CFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;D&quot;] = {[&quot;Name&quot;] = &quot;D&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxTorque&quot;] = {[&quot;Name&quot;] = &quot;MaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;P&quot;] = {[&quot;Name&quot;] = &quot;P&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;cframe&quot;] = {[&quot;Name&quot;] = &quot;cframe&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;CFrame&quot;,},},},[&quot;maxTorque&quot;] = {[&quot;Name&quot;] = &quot;maxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;MaxTorque&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;D&quot;] = {[&quot;Float32&quot;] = 500,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxTorque&quot;] = {[&quot;Vector3&quot;] = {400000,0,400000,},},[&quot;P&quot;] = {[&quot;Float32&quot;] = 3000,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BodyMover&quot;] = {[&quot;Name&quot;] = &quot;BodyMover&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BodyPartDescription&quot;] = {[&quot;Name&quot;] = &quot;BodyPartDescription&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AssetId&quot;] = {[&quot;Name&quot;] = &quot;AssetId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BodyPart&quot;] = {[&quot;Name&quot;] = &quot;BodyPart&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;BodyPart&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Instance&quot;] = {[&quot;Name&quot;] = &quot;Instance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AssetId&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BodyPart&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BodyPosition&quot;] = {[&quot;Name&quot;] = &quot;BodyPosition&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;BodyMover&quot;,[&quot;Properties&quot;] = {[&quot;D&quot;] = {[&quot;Name&quot;] = &quot;D&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxForce&quot;] = {[&quot;Name&quot;] = &quot;MaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;P&quot;] = {[&quot;Name&quot;] = &quot;P&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Position&quot;] = {[&quot;Name&quot;] = &quot;Position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;maxForce&quot;] = {[&quot;Name&quot;] = &quot;maxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;MaxForce&quot;,},},},[&quot;position&quot;] = {[&quot;Name&quot;] = &quot;position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Position&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;D&quot;] = {[&quot;Float32&quot;] = 1250,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxForce&quot;] = {[&quot;Vector3&quot;] = {4000,4000,4000,},},[&quot;P&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;Position&quot;] = {[&quot;Vector3&quot;] = {0,50,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BodyThrust&quot;] = {[&quot;Name&quot;] = &quot;BodyThrust&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;BodyMover&quot;,[&quot;Properties&quot;] = {[&quot;Force&quot;] = {[&quot;Name&quot;] = &quot;Force&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Location&quot;] = {[&quot;Name&quot;] = &quot;Location&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;force&quot;] = {[&quot;Name&quot;] = &quot;force&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Force&quot;,},},},[&quot;location&quot;] = {[&quot;Name&quot;] = &quot;location&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Location&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Force&quot;] = {[&quot;Vector3&quot;] = {0,1,0,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Location&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BodyVelocity&quot;] = {[&quot;Name&quot;] = &quot;BodyVelocity&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;BodyMover&quot;,[&quot;Properties&quot;] = {[&quot;MaxForce&quot;] = {[&quot;Name&quot;] = &quot;MaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;P&quot;] = {[&quot;Name&quot;] = &quot;P&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Velocity&quot;] = {[&quot;Name&quot;] = &quot;Velocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;maxForce&quot;] = {[&quot;Name&quot;] = &quot;maxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;MaxForce&quot;,},},},[&quot;velocity&quot;] = {[&quot;Name&quot;] = &quot;velocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Velocity&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxForce&quot;] = {[&quot;Vector3&quot;] = {4000,4000,4000,},},[&quot;P&quot;] = {[&quot;Float32&quot;] = 1250,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,2,0,},},},},[&quot;Bone&quot;] = {[&quot;Name&quot;] = &quot;Bone&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Attachment&quot;,[&quot;Properties&quot;] = {[&quot;Transform&quot;] = {[&quot;Name&quot;] = &quot;Transform&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TransformedCFrame&quot;] = {[&quot;Name&quot;] = &quot;TransformedCFrame&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TransformedWorldCFrame&quot;] = {[&quot;Name&quot;] = &quot;TransformedWorldCFrame&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;BoolValue&quot;] = {[&quot;Name&quot;] = &quot;BoolValue&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;BoxHandleAdornment&quot;] = {[&quot;Name&quot;] = &quot;BoxHandleAdornment&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;HandleAdornment&quot;,[&quot;Properties&quot;] = {[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AdornCullingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AlwaysOnTop&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;SizeRelativeOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = -1,},},},[&quot;Breakpoint&quot;] = {[&quot;Name&quot;] = &quot;Breakpoint&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Condition&quot;] = {[&quot;Name&quot;] = &quot;Condition&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ContinueExecution&quot;] = {[&quot;Name&quot;] = &quot;ContinueExecution&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Id&quot;] = {[&quot;Name&quot;] = &quot;Id&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Line&quot;] = {[&quot;Name&quot;] = &quot;Line&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LogMessage&quot;] = {[&quot;Name&quot;] = &quot;LogMessage&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MetaBreakpointId&quot;] = {[&quot;Name&quot;] = &quot;MetaBreakpointId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RemoveOnHit&quot;] = {[&quot;Name&quot;] = &quot;RemoveOnHit&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Script&quot;] = {[&quot;Name&quot;] = &quot;Script&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Valid&quot;] = {[&quot;Name&quot;] = &quot;Valid&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Verified&quot;] = {[&quot;Name&quot;] = &quot;Verified&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BrickColorValue&quot;] = {[&quot;Name&quot;] = &quot;BrickColorValue&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;BrickColor&quot;] = 194,},},},[&quot;BrowserService&quot;] = {[&quot;Name&quot;] = &quot;BrowserService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BubbleChatConfiguration&quot;] = {[&quot;Name&quot;] = &quot;BubbleChatConfiguration&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;TextChatConfigurations&quot;,[&quot;Properties&quot;] = {[&quot;AdorneeName&quot;] = {[&quot;Name&quot;] = &quot;AdorneeName&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackgroundColor3&quot;] = {[&quot;Name&quot;] = &quot;BackgroundColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackgroundTransparency&quot;] = {[&quot;Name&quot;] = &quot;BackgroundTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BubbleDuration&quot;] = {[&quot;Name&quot;] = &quot;BubbleDuration&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BubblesSpacing&quot;] = {[&quot;Name&quot;] = &quot;BubblesSpacing&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Font&quot;] = {[&quot;Name&quot;] = &quot;Font&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FontFace&quot;] = {[&quot;Name&quot;] = &quot;FontFace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalPlayerStudsOffset&quot;] = {[&quot;Name&quot;] = &quot;LocalPlayerStudsOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxBubbles&quot;] = {[&quot;Name&quot;] = &quot;MaxBubbles&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxDistance&quot;] = {[&quot;Name&quot;] = &quot;MaxDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinimizeDistance&quot;] = {[&quot;Name&quot;] = &quot;MinimizeDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TailVisible&quot;] = {[&quot;Name&quot;] = &quot;TailVisible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextColor3&quot;] = {[&quot;Name&quot;] = &quot;TextColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextSize&quot;] = {[&quot;Name&quot;] = &quot;TextSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VerticalStudsOffset&quot;] = {[&quot;Name&quot;] = &quot;VerticalStudsOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AdorneeName&quot;] = {[&quot;String&quot;] = &quot;HumanoidRootPart&quot;,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.98039216,0.98039216,0.98039216,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float64&quot;] = 0.1,},[&quot;BubbleDuration&quot;] = {[&quot;Float32&quot;] = 15,},[&quot;BubblesSpacing&quot;] = {[&quot;Float32&quot;] = 6,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Font&quot;] = {[&quot;Enum&quot;] = 18,},[&quot;FontFace&quot;] = {[&quot;Font&quot;] = {[&quot;family&quot;] = &quot;rbxasset://fonts/families/GothamSSm.json&quot;,[&quot;weight&quot;] = &quot;Medium&quot;,[&quot;style&quot;] = &quot;Normal&quot;,[&quot;cachedFaceId&quot;] = &quot;rbxasset://fonts/Montserrat-Medium.ttf&quot;,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LocalPlayerStudsOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;MaxBubbles&quot;] = {[&quot;Float32&quot;] = 3,},[&quot;MaxDistance&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;MinimizeDistance&quot;] = {[&quot;Float32&quot;] = 40,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TailVisible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;TextColor3&quot;] = {[&quot;Color3&quot;] = {0.22352941,0.23137255,0.23921569,},},[&quot;TextSize&quot;] = {[&quot;Int64&quot;] = 16,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VerticalStudsOffset&quot;] = {[&quot;Float32&quot;] = 0,},},},[&quot;BubbleChatMessageProperties&quot;] = {[&quot;Name&quot;] = &quot;BubbleChatMessageProperties&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;TextChatMessageProperties&quot;,[&quot;Properties&quot;] = {[&quot;BackgroundColor3&quot;] = {[&quot;Name&quot;] = &quot;BackgroundColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;BackgroundTransparency&quot;] = {[&quot;Name&quot;] = &quot;BackgroundTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FontFace&quot;] = {[&quot;Name&quot;] = &quot;FontFace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TailVisible&quot;] = {[&quot;Name&quot;] = &quot;TailVisible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextColor3&quot;] = {[&quot;Name&quot;] = &quot;TextColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextSize&quot;] = {[&quot;Name&quot;] = &quot;TextSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BugReporterService&quot;] = {[&quot;Name&quot;] = &quot;BugReporterService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BulkImportService&quot;] = {[&quot;Name&quot;] = &quot;BulkImportService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;BuoyancySensor&quot;] = {[&quot;Name&quot;] = &quot;BuoyancySensor&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SensorBase&quot;,[&quot;Properties&quot;] = {[&quot;FullySubmerged&quot;] = {[&quot;Name&quot;] = &quot;FullySubmerged&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TouchingSurface&quot;] = {[&quot;Name&quot;] = &quot;TouchingSurface&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;FullySubmerged&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TouchingSurface&quot;] = {[&quot;Bool&quot;] = false,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UpdateType&quot;] = {[&quot;Enum&quot;] = 0,},},},[&quot;CFrameValue&quot;] = {[&quot;Name&quot;] = &quot;CFrameValue&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},},},[&quot;CSGDictionaryService&quot;] = {[&quot;Name&quot;] = &quot;CSGDictionaryService&quot;,[&quot;Tags&quot;] = {&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;FlyweightService&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CacheableContentProvider&quot;] = {[&quot;Name&quot;] = &quot;CacheableContentProvider&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CalloutService&quot;] = {[&quot;Name&quot;] = &quot;CalloutService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Camera&quot;] = {[&quot;Name&quot;] = &quot;Camera&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CFrame&quot;] = {[&quot;Name&quot;] = &quot;CFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraSubject&quot;] = {[&quot;Name&quot;] = &quot;CameraSubject&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraType&quot;] = {[&quot;Name&quot;] = &quot;CameraType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CameraType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CoordinateFrame&quot;] = {[&quot;Name&quot;] = &quot;CoordinateFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;CFrame&quot;,},},},[&quot;DiagonalFieldOfView&quot;] = {[&quot;Name&quot;] = &quot;DiagonalFieldOfView&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FieldOfView&quot;] = {[&quot;Name&quot;] = &quot;FieldOfView&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FieldOfViewMode&quot;] = {[&quot;Name&quot;] = &quot;FieldOfViewMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FieldOfViewMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Focus&quot;] = {[&quot;Name&quot;] = &quot;Focus&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HeadLocked&quot;] = {[&quot;Name&quot;] = &quot;HeadLocked&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HeadScale&quot;] = {[&quot;Name&quot;] = &quot;HeadScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxAxisFieldOfView&quot;] = {[&quot;Name&quot;] = &quot;MaxAxisFieldOfView&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;NearPlaneZ&quot;] = {[&quot;Name&quot;] = &quot;NearPlaneZ&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VRTiltAndRollEnabled&quot;] = {[&quot;Name&quot;] = &quot;VRTiltAndRollEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ViewportSize&quot;] = {[&quot;Name&quot;] = &quot;ViewportSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;focus&quot;] = {[&quot;Name&quot;] = &quot;focus&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Focus&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,20,20,},[&quot;orientation&quot;] = {{1,0,-0,},{-0,0.7071068,0.7071068,},{0,-0.7071068,0.7071068,},},},},[&quot;CameraType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;FieldOfView&quot;] = {[&quot;Float32&quot;] = 70,},[&quot;FieldOfViewMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Focus&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,-5,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;HeadLocked&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HeadScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VRTiltAndRollEnabled&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;CanvasGroup&quot;] = {[&quot;Name&quot;] = &quot;CanvasGroup&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;GuiObject&quot;,[&quot;Properties&quot;] = {[&quot;GroupColor3&quot;] = {[&quot;Name&quot;] = &quot;GroupColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GroupTransparency&quot;] = {[&quot;Name&quot;] = &quot;GroupTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ResolutionScale&quot;] = {[&quot;Name&quot;] = &quot;ResolutionScale&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = false,},[&quot;AnchorPoint&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.6392157,0.63529414,0.64705884,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;BorderColor3&quot;] = {[&quot;Color3&quot;] = {0.105882354,0.16470589,0.20784314,},},[&quot;BorderMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BorderSizePixel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Draggable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;GroupColor3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;GroupTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Interactable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LayoutOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Position&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;ResolutionScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Selectable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeConstraint&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;Capture&quot;] = {[&quot;Name&quot;] = &quot;Capture&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Object&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {},},[&quot;CaptureService&quot;] = {[&quot;Name&quot;] = &quot;CaptureService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CatalogPages&quot;] = {[&quot;Name&quot;] = &quot;CatalogPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ChangeHistoryService&quot;] = {[&quot;Name&quot;] = &quot;ChangeHistoryService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ChannelSelectorSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;ChannelSelectorSoundEffect&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;CustomSoundEffect&quot;,[&quot;Properties&quot;] = {[&quot;Channel&quot;] = {[&quot;Name&quot;] = &quot;Channel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Channel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ChannelTabsConfiguration&quot;] = {[&quot;Name&quot;] = &quot;ChannelTabsConfiguration&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;TextChatConfigurations&quot;,[&quot;Properties&quot;] = {[&quot;AbsolutePosition&quot;] = {[&quot;Name&quot;] = &quot;AbsolutePosition&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AbsoluteSize&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;BackgroundColor3&quot;] = {[&quot;Name&quot;] = &quot;BackgroundColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackgroundTransparency&quot;] = {[&quot;Name&quot;] = &quot;BackgroundTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FontFace&quot;] = {[&quot;Name&quot;] = &quot;FontFace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HoverBackgroundColor3&quot;] = {[&quot;Name&quot;] = &quot;HoverBackgroundColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectedTabTextColor3&quot;] = {[&quot;Name&quot;] = &quot;SelectedTabTextColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextColor3&quot;] = {[&quot;Name&quot;] = &quot;TextColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextSize&quot;] = {[&quot;Name&quot;] = &quot;TextSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeColor3&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.09803922,0.105882354,0.11372549,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;FontFace&quot;] = {[&quot;Font&quot;] = {[&quot;family&quot;] = &quot;rbxasset://fonts/families/BuilderSans.json&quot;,[&quot;weight&quot;] = &quot;Bold&quot;,[&quot;style&quot;] = &quot;Normal&quot;,[&quot;cachedFaceId&quot;] = &quot;rbxasset://fonts/BuilderSans-Bold.otf&quot;,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;HoverBackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.49019608,0.49019608,0.49019608,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectedTabTextColor3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TextColor3&quot;] = {[&quot;Color3&quot;] = {0.6862745,0.6862745,0.6862745,},},[&quot;TextSize&quot;] = {[&quot;Int64&quot;] = 18,},[&quot;TextStrokeColor3&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Float64&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CharacterAppearance&quot;] = {[&quot;Name&quot;] = &quot;CharacterAppearance&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CharacterMesh&quot;] = {[&quot;Name&quot;] = &quot;CharacterMesh&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;CharacterAppearance&quot;,[&quot;Properties&quot;] = {[&quot;BaseTextureId&quot;] = {[&quot;Name&quot;] = &quot;BaseTextureId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BodyPart&quot;] = {[&quot;Name&quot;] = &quot;BodyPart&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;BodyPart&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MeshId&quot;] = {[&quot;Name&quot;] = &quot;MeshId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OverlayTextureId&quot;] = {[&quot;Name&quot;] = &quot;OverlayTextureId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BaseTextureId&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;BodyPart&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MeshId&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;OverlayTextureId&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Chat&quot;] = {[&quot;Name&quot;] = &quot;Chat&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;BubbleChatEnabled&quot;] = {[&quot;Name&quot;] = &quot;BubbleChatEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsAutoMigrated&quot;] = {[&quot;Name&quot;] = &quot;IsAutoMigrated&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LoadDefaultChat&quot;] = {[&quot;Name&quot;] = &quot;LoadDefaultChat&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BubbleChatEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IsAutoMigrated&quot;] = {[&quot;Bool&quot;] = false,},[&quot;LoadDefaultChat&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ChatInputBarConfiguration&quot;] = {[&quot;Name&quot;] = &quot;ChatInputBarConfiguration&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;TextChatConfigurations&quot;,[&quot;Properties&quot;] = {[&quot;AbsolutePosition&quot;] = {[&quot;Name&quot;] = &quot;AbsolutePosition&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AbsolutePositionWrite&quot;] = {[&quot;Name&quot;] = &quot;AbsolutePositionWrite&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AbsoluteSize&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AbsoluteSizeWrite&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteSizeWrite&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AutocompleteEnabled&quot;] = {[&quot;Name&quot;] = &quot;AutocompleteEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackgroundColor3&quot;] = {[&quot;Name&quot;] = &quot;BackgroundColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackgroundTransparency&quot;] = {[&quot;Name&quot;] = &quot;BackgroundTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FontFace&quot;] = {[&quot;Name&quot;] = &quot;FontFace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsFocused&quot;] = {[&quot;Name&quot;] = &quot;IsFocused&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsFocusedWrite&quot;] = {[&quot;Name&quot;] = &quot;IsFocusedWrite&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;KeyboardKeyCode&quot;] = {[&quot;Name&quot;] = &quot;KeyboardKeyCode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;KeyCode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlaceholderColor3&quot;] = {[&quot;Name&quot;] = &quot;PlaceholderColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TargetTextChannel&quot;] = {[&quot;Name&quot;] = &quot;TargetTextChannel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextBox&quot;] = {[&quot;Name&quot;] = &quot;TextBox&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextColor3&quot;] = {[&quot;Name&quot;] = &quot;TextColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextSize&quot;] = {[&quot;Name&quot;] = &quot;TextSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeColor3&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutocompleteEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.09803922,0.105882354,0.11372549,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float64&quot;] = 0.2,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FontFace&quot;] = {[&quot;Font&quot;] = {[&quot;family&quot;] = &quot;rbxasset://fonts/families/GothamSSm.json&quot;,[&quot;weight&quot;] = &quot;Medium&quot;,[&quot;style&quot;] = &quot;Normal&quot;,[&quot;cachedFaceId&quot;] = &quot;rbxasset://fonts/Montserrat-Medium.ttf&quot;,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;KeyboardKeyCode&quot;] = {[&quot;Enum&quot;] = 47,},[&quot;PlaceholderColor3&quot;] = {[&quot;Color3&quot;] = {0.69803923,0.69803923,0.69803923,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TextColor3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;TextSize&quot;] = {[&quot;Int64&quot;] = 14,},[&quot;TextStrokeColor3&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Float64&quot;] = 0.5,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ChatWindowConfiguration&quot;] = {[&quot;Name&quot;] = &quot;ChatWindowConfiguration&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;TextChatConfigurations&quot;,[&quot;Properties&quot;] = {[&quot;AbsolutePosition&quot;] = {[&quot;Name&quot;] = &quot;AbsolutePosition&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AbsolutePositionWrite&quot;] = {[&quot;Name&quot;] = &quot;AbsolutePositionWrite&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AbsoluteSize&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AbsoluteSizeWrite&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteSizeWrite&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;BackgroundColor3&quot;] = {[&quot;Name&quot;] = &quot;BackgroundColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackgroundTransparency&quot;] = {[&quot;Name&quot;] = &quot;BackgroundTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FontFace&quot;] = {[&quot;Name&quot;] = &quot;FontFace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HeightScale&quot;] = {[&quot;Name&quot;] = &quot;HeightScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HorizontalAlignment&quot;] = {[&quot;Name&quot;] = &quot;HorizontalAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;HorizontalAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextColor3&quot;] = {[&quot;Name&quot;] = &quot;TextColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextSize&quot;] = {[&quot;Name&quot;] = &quot;TextSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeColor3&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VerticalAlignment&quot;] = {[&quot;Name&quot;] = &quot;VerticalAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VerticalAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WidthScale&quot;] = {[&quot;Name&quot;] = &quot;WidthScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.09803922,0.105882354,0.11372549,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float64&quot;] = 0.3,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FontFace&quot;] = {[&quot;Font&quot;] = {[&quot;family&quot;] = &quot;rbxasset://fonts/families/GothamSSm.json&quot;,[&quot;weight&quot;] = &quot;Medium&quot;,[&quot;style&quot;] = &quot;Normal&quot;,[&quot;cachedFaceId&quot;] = &quot;rbxasset://fonts/Montserrat-Medium.ttf&quot;,},},[&quot;HeightScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;HorizontalAlignment&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TextColor3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;TextSize&quot;] = {[&quot;Int64&quot;] = 14,},[&quot;TextStrokeColor3&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Float64&quot;] = 0.5,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VerticalAlignment&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;WidthScale&quot;] = {[&quot;Float32&quot;] = 1,},},},[&quot;ChatWindowMessageProperties&quot;] = {[&quot;Name&quot;] = &quot;ChatWindowMessageProperties&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;TextChatMessageProperties&quot;,[&quot;Properties&quot;] = {[&quot;FontFace&quot;] = {[&quot;Name&quot;] = &quot;FontFace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PrefixTextProperties&quot;] = {[&quot;Name&quot;] = &quot;PrefixTextProperties&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextColor3&quot;] = {[&quot;Name&quot;] = &quot;TextColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextSize&quot;] = {[&quot;Name&quot;] = &quot;TextSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextStrokeColor3&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ChatbotUIService&quot;] = {[&quot;Name&quot;] = &quot;ChatbotUIService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ChorusSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;ChorusSoundEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SoundEffect&quot;,[&quot;Properties&quot;] = {[&quot;Depth&quot;] = {[&quot;Name&quot;] = &quot;Depth&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Mix&quot;] = {[&quot;Name&quot;] = &quot;Mix&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Rate&quot;] = {[&quot;Name&quot;] = &quot;Rate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Depth&quot;] = {[&quot;Float32&quot;] = 0.15,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Mix&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Rate&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ClickDetector&quot;] = {[&quot;Name&quot;] = &quot;ClickDetector&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CursorIcon&quot;] = {[&quot;Name&quot;] = &quot;CursorIcon&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxActivationDistance&quot;] = {[&quot;Name&quot;] = &quot;MaxActivationDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CursorIcon&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxActivationDistance&quot;] = {[&quot;Float32&quot;] = 32,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ClientReplicator&quot;] = {[&quot;Name&quot;] = &quot;ClientReplicator&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;NetworkReplicator&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ClimbController&quot;] = {[&quot;Name&quot;] = &quot;ClimbController&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ControllerBase&quot;,[&quot;Properties&quot;] = {[&quot;AccelerationTime&quot;] = {[&quot;Name&quot;] = &quot;AccelerationTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BalanceMaxTorque&quot;] = {[&quot;Name&quot;] = &quot;BalanceMaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BalanceSpeed&quot;] = {[&quot;Name&quot;] = &quot;BalanceSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MoveMaxForce&quot;] = {[&quot;Name&quot;] = &quot;MoveMaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AccelerationTime&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BalanceMaxTorque&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;BalanceRigidityEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;BalanceSpeed&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MoveMaxForce&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;MoveSpeedFactor&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Clothing&quot;] = {[&quot;Name&quot;] = &quot;Clothing&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;CharacterAppearance&quot;,[&quot;Properties&quot;] = {[&quot;Color3&quot;] = {[&quot;Name&quot;] = &quot;Color3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Outfit1&quot;] = {[&quot;Name&quot;] = &quot;Outfit1&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Outfit2&quot;] = {[&quot;Name&quot;] = &quot;Outfit2&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CloudCRUDService&quot;] = {[&quot;Name&quot;] = &quot;CloudCRUDService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CloudLocalizationTable&quot;] = {[&quot;Name&quot;] = &quot;CloudLocalizationTable&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;LocalizationTable&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Clouds&quot;] = {[&quot;Name&quot;] = &quot;Clouds&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Cover&quot;] = {[&quot;Name&quot;] = &quot;Cover&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Density&quot;] = {[&quot;Name&quot;] = &quot;Density&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;Cover&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;Density&quot;] = {[&quot;Float32&quot;] = 0.7,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ClusterPacketCache&quot;] = {[&quot;Name&quot;] = &quot;ClusterPacketCache&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Collaborator&quot;] = {[&quot;Name&quot;] = &quot;Collaborator&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CFrame&quot;] = {[&quot;Name&quot;] = &quot;CFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CollaboratorColor&quot;] = {[&quot;Name&quot;] = &quot;CollaboratorColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CollaboratorColor3&quot;] = {[&quot;Name&quot;] = &quot;CollaboratorColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CurDocGUID&quot;] = {[&quot;Name&quot;] = &quot;CurDocGUID&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CurScriptLineNumber&quot;] = {[&quot;Name&quot;] = &quot;CurScriptLineNumber&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsIdle&quot;] = {[&quot;Name&quot;] = &quot;IsIdle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Status&quot;] = {[&quot;Name&quot;] = &quot;Status&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CollaboratorStatus&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UserId&quot;] = {[&quot;Name&quot;] = &quot;UserId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Username&quot;] = {[&quot;Name&quot;] = &quot;Username&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CollaboratorsService&quot;] = {[&quot;Name&quot;] = &quot;CollaboratorsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CollectionService&quot;] = {[&quot;Name&quot;] = &quot;CollectionService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Color3Value&quot;] = {[&quot;Name&quot;] = &quot;Color3Value&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},},},[&quot;ColorCorrectionEffect&quot;] = {[&quot;Name&quot;] = &quot;ColorCorrectionEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PostEffect&quot;,[&quot;Properties&quot;] = {[&quot;Brightness&quot;] = {[&quot;Name&quot;] = &quot;Brightness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Contrast&quot;] = {[&quot;Name&quot;] = &quot;Contrast&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Saturation&quot;] = {[&quot;Name&quot;] = &quot;Saturation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TintColor&quot;] = {[&quot;Name&quot;] = &quot;TintColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Brightness&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Contrast&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Saturation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TintColor&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ColorGradingEffect&quot;] = {[&quot;Name&quot;] = &quot;ColorGradingEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PostEffect&quot;,[&quot;Properties&quot;] = {[&quot;TonemapperPreset&quot;] = {[&quot;Name&quot;] = &quot;TonemapperPreset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TonemapperPreset&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TonemapperPreset&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CommandInstance&quot;] = {[&quot;Name&quot;] = &quot;CommandInstance&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AllowGUIAccessPoints&quot;] = {[&quot;Name&quot;] = &quot;AllowGUIAccessPoints&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Checked&quot;] = {[&quot;Name&quot;] = &quot;Checked&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DefaultShortcut&quot;] = {[&quot;Name&quot;] = &quot;DefaultShortcut&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DisplayName&quot;] = {[&quot;Name&quot;] = &quot;DisplayName&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Icon&quot;] = {[&quot;Name&quot;] = &quot;Icon&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Name&quot;] = {[&quot;Name&quot;] = &quot;Name&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Permission&quot;] = {[&quot;Name&quot;] = &quot;Permission&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CommandPermission&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;StatusTip&quot;] = {[&quot;Name&quot;] = &quot;StatusTip&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CommandService&quot;] = {[&quot;Name&quot;] = &quot;CommandService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CommerceService&quot;] = {[&quot;Name&quot;] = &quot;CommerceService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CompressorSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;CompressorSoundEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SoundEffect&quot;,[&quot;Properties&quot;] = {[&quot;Attack&quot;] = {[&quot;Name&quot;] = &quot;Attack&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GainMakeup&quot;] = {[&quot;Name&quot;] = &quot;GainMakeup&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Ratio&quot;] = {[&quot;Name&quot;] = &quot;Ratio&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Release&quot;] = {[&quot;Name&quot;] = &quot;Release&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SideChain&quot;] = {[&quot;Name&quot;] = &quot;SideChain&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Threshold&quot;] = {[&quot;Name&quot;] = &quot;Threshold&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attack&quot;] = {[&quot;Float32&quot;] = 0.1,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;GainMakeup&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Ratio&quot;] = {[&quot;Float32&quot;] = 40,},[&quot;Release&quot;] = {[&quot;Float32&quot;] = 0.1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Threshold&quot;] = {[&quot;Float32&quot;] = -40,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ConeHandleAdornment&quot;] = {[&quot;Name&quot;] = &quot;ConeHandleAdornment&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;HandleAdornment&quot;,[&quot;Properties&quot;] = {[&quot;Height&quot;] = {[&quot;Name&quot;] = &quot;Height&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Radius&quot;] = {[&quot;Name&quot;] = &quot;Radius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AdornCullingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AlwaysOnTop&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;Height&quot;] = {[&quot;Float32&quot;] = 2,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Radius&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SizeRelativeOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = -1,},},},[&quot;ConfigService&quot;] = {[&quot;Name&quot;] = &quot;ConfigService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ConfigSnapshot&quot;] = {[&quot;Name&quot;] = &quot;ConfigSnapshot&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Object&quot;,[&quot;Properties&quot;] = {[&quot;Error&quot;] = {[&quot;Name&quot;] = &quot;Error&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ConfigSnapshotErrorState&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Outdated&quot;] = {[&quot;Name&quot;] = &quot;Outdated&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {},},[&quot;Configuration&quot;] = {[&quot;Name&quot;] = &quot;Configuration&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ConfigureServerService&quot;] = {[&quot;Name&quot;] = &quot;ConfigureServerService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ConnectivityService&quot;] = {[&quot;Name&quot;] = &quot;ConnectivityService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;NetworkStatus&quot;] = {[&quot;Name&quot;] = &quot;NetworkStatus&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NetworkStatus&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Constraint&quot;] = {[&quot;Name&quot;] = &quot;Constraint&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Attachment0&quot;] = {[&quot;Name&quot;] = &quot;Attachment0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Attachment1&quot;] = {[&quot;Name&quot;] = &quot;Attachment1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Visible&quot;] = {[&quot;Name&quot;] = &quot;Visible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ContentProvider&quot;] = {[&quot;Name&quot;] = &quot;ContentProvider&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;BaseUrl&quot;] = {[&quot;Name&quot;] = &quot;BaseUrl&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RequestQueueSize&quot;] = {[&quot;Name&quot;] = &quot;RequestQueueSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ContextActionService&quot;] = {[&quot;Name&quot;] = &quot;ContextActionService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Controller&quot;] = {[&quot;Name&quot;] = &quot;Controller&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ControllerBase&quot;] = {[&quot;Name&quot;] = &quot;ControllerBase&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;BalanceRigidityEnabled&quot;] = {[&quot;Name&quot;] = &quot;BalanceRigidityEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MoveSpeedFactor&quot;] = {[&quot;Name&quot;] = &quot;MoveSpeedFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ControllerManager&quot;] = {[&quot;Name&quot;] = &quot;ControllerManager&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ActiveController&quot;] = {[&quot;Name&quot;] = &quot;ActiveController&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BaseMoveSpeed&quot;] = {[&quot;Name&quot;] = &quot;BaseMoveSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BaseTurnSpeed&quot;] = {[&quot;Name&quot;] = &quot;BaseTurnSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClimbSensor&quot;] = {[&quot;Name&quot;] = &quot;ClimbSensor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FacingDirection&quot;] = {[&quot;Name&quot;] = &quot;FacingDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GroundSensor&quot;] = {[&quot;Name&quot;] = &quot;GroundSensor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MovingDirection&quot;] = {[&quot;Name&quot;] = &quot;MovingDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RootPart&quot;] = {[&quot;Name&quot;] = &quot;RootPart&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UpDirection&quot;] = {[&quot;Name&quot;] = &quot;UpDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BaseMoveSpeed&quot;] = {[&quot;Float32&quot;] = 16,},[&quot;BaseTurnSpeed&quot;] = {[&quot;Float32&quot;] = 8,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;FacingDirection&quot;] = {[&quot;Vector3&quot;] = {0,0,1,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MovingDirection&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UpDirection&quot;] = {[&quot;Vector3&quot;] = {0,1,0,},},},},[&quot;ControllerPartSensor&quot;] = {[&quot;Name&quot;] = &quot;ControllerPartSensor&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ControllerSensor&quot;,[&quot;Properties&quot;] = {[&quot;HitFrame&quot;] = {[&quot;Name&quot;] = &quot;HitFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HitNormal&quot;] = {[&quot;Name&quot;] = &quot;HitNormal&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SearchDistance&quot;] = {[&quot;Name&quot;] = &quot;SearchDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SensedPart&quot;] = {[&quot;Name&quot;] = &quot;SensedPart&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SensorMode&quot;] = {[&quot;Name&quot;] = &quot;SensorMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SensorMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;HitFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;HitNormal&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SearchDistance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;SensorMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UpdateType&quot;] = {[&quot;Enum&quot;] = 0,},},},[&quot;ControllerSensor&quot;] = {[&quot;Name&quot;] = &quot;ControllerSensor&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;SensorBase&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ControllerService&quot;] = {[&quot;Name&quot;] = &quot;ControllerService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ConversationalAIAcceptanceService&quot;] = {[&quot;Name&quot;] = &quot;ConversationalAIAcceptanceService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CookiesService&quot;] = {[&quot;Name&quot;] = &quot;CookiesService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CoreGui&quot;] = {[&quot;Name&quot;] = &quot;CoreGui&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;BasePlayerGui&quot;,[&quot;Properties&quot;] = {[&quot;SelectionImageObject&quot;] = {[&quot;Name&quot;] = &quot;SelectionImageObject&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Version&quot;] = {[&quot;Name&quot;] = &quot;Version&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CorePackages&quot;] = {[&quot;Name&quot;] = &quot;CorePackages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CoreScript&quot;] = {[&quot;Name&quot;] = &quot;CoreScript&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;BaseScript&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ScriptGuid&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CoreScriptDebuggingManagerHelper&quot;] = {[&quot;Name&quot;] = &quot;CoreScriptDebuggingManagerHelper&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CoreScriptSyncService&quot;] = {[&quot;Name&quot;] = &quot;CoreScriptSyncService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CornerWedgePart&quot;] = {[&quot;Name&quot;] = &quot;CornerWedgePart&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;BasePart&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {163,162,165,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {2,2,2,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;CreationDBService&quot;] = {[&quot;Name&quot;] = &quot;CreationDBService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CreatorStoreService&quot;] = {[&quot;Name&quot;] = &quot;CreatorStoreService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CrossDMScriptChangeListener&quot;] = {[&quot;Name&quot;] = &quot;CrossDMScriptChangeListener&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CurveAnimation&quot;] = {[&quot;Name&quot;] = &quot;CurveAnimation&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;AnimationClip&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;GuidBinaryString&quot;] = {[&quot;BinaryString&quot;] = &quot;AAAAAAAAAAAAAAAAAAAAAA==&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Loop&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Priority&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CustomEvent&quot;] = {[&quot;Name&quot;] = &quot;CustomEvent&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;PersistedCurrentValue&quot;] = {[&quot;Name&quot;] = &quot;PersistedCurrentValue&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;PersistedCurrentValue&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CustomEventReceiver&quot;] = {[&quot;Name&quot;] = &quot;CustomEventReceiver&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Source&quot;] = {[&quot;Name&quot;] = &quot;Source&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CustomLog&quot;] = {[&quot;Name&quot;] = &quot;CustomLog&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CustomSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;CustomSoundEffect&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;SoundEffect&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;CylinderHandleAdornment&quot;] = {[&quot;Name&quot;] = &quot;CylinderHandleAdornment&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;HandleAdornment&quot;,[&quot;Properties&quot;] = {[&quot;Angle&quot;] = {[&quot;Name&quot;] = &quot;Angle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Height&quot;] = {[&quot;Name&quot;] = &quot;Height&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InnerRadius&quot;] = {[&quot;Name&quot;] = &quot;InnerRadius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Radius&quot;] = {[&quot;Name&quot;] = &quot;Radius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AdornCullingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AlwaysOnTop&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Angle&quot;] = {[&quot;Float32&quot;] = 360,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;Height&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InnerRadius&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Radius&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SizeRelativeOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = -1,},},},[&quot;CylinderMesh&quot;] = {[&quot;Name&quot;] = &quot;CylinderMesh&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;BevelMesh&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Bevel&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Bevel Roundness&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Bulge&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Offset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VertexColor&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},},},[&quot;CylindricalConstraint&quot;] = {[&quot;Name&quot;] = &quot;CylindricalConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SlidingBallConstraint&quot;,[&quot;Properties&quot;] = {[&quot;AngularActuatorType&quot;] = {[&quot;Name&quot;] = &quot;AngularActuatorType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ActuatorType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AngularLimitsEnabled&quot;] = {[&quot;Name&quot;] = &quot;AngularLimitsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AngularResponsiveness&quot;] = {[&quot;Name&quot;] = &quot;AngularResponsiveness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AngularRestitution&quot;] = {[&quot;Name&quot;] = &quot;AngularRestitution&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AngularSpeed&quot;] = {[&quot;Name&quot;] = &quot;AngularSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AngularVelocity&quot;] = {[&quot;Name&quot;] = &quot;AngularVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurrentAngle&quot;] = {[&quot;Name&quot;] = &quot;CurrentAngle&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;InclinationAngle&quot;] = {[&quot;Name&quot;] = &quot;InclinationAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LowerAngle&quot;] = {[&quot;Name&quot;] = &quot;LowerAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MotorMaxAngularAcceleration&quot;] = {[&quot;Name&quot;] = &quot;MotorMaxAngularAcceleration&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MotorMaxTorque&quot;] = {[&quot;Name&quot;] = &quot;MotorMaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RotationAxisVisible&quot;] = {[&quot;Name&quot;] = &quot;RotationAxisVisible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ServoMaxTorque&quot;] = {[&quot;Name&quot;] = &quot;ServoMaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SoftlockAngularServoUponReachingTarget&quot;] = {[&quot;Name&quot;] = &quot;SoftlockAngularServoUponReachingTarget&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TargetAngle&quot;] = {[&quot;Name&quot;] = &quot;TargetAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UpperAngle&quot;] = {[&quot;Name&quot;] = &quot;UpperAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WorldRotationAxis&quot;] = {[&quot;Name&quot;] = &quot;WorldRotationAxis&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;ActuatorType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AngularActuatorType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AngularLimitsEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;AngularResponsiveness&quot;] = {[&quot;Float32&quot;] = 45,},[&quot;AngularRestitution&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;AngularSpeed&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;AngularVelocity&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 1009,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InclinationAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LimitsEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;LinearResponsiveness&quot;] = {[&quot;Float32&quot;] = 45,},[&quot;LowerAngle&quot;] = {[&quot;Float32&quot;] = -45,},[&quot;LowerLimit&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MotorMaxAcceleration&quot;] = {[&quot;Float32&quot;] = math.huge,},[&quot;MotorMaxAngularAcceleration&quot;] = {[&quot;Float32&quot;] = 500000,},[&quot;MotorMaxForce&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MotorMaxTorque&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Restitution&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RotationAxisVisible&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ServoMaxForce&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;ServoMaxTorque&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;Float32&quot;] = 0.15,},[&quot;SoftlockAngularServoUponReachingTarget&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SoftlockServoUponReachingTarget&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Speed&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TargetAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;TargetPosition&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UpperAngle&quot;] = {[&quot;Float32&quot;] = 45,},[&quot;UpperLimit&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;Velocity&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;DataModel&quot;] = {[&quot;Name&quot;] = &quot;DataModel&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;ServiceProvider&quot;,[&quot;Properties&quot;] = {[&quot;CreatorId&quot;] = {[&quot;Name&quot;] = &quot;CreatorId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CreatorType&quot;] = {[&quot;Name&quot;] = &quot;CreatorType&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CreatorType&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ForceR15&quot;] = {[&quot;Name&quot;] = &quot;ForceR15&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GameAvatarType&quot;] = {[&quot;Name&quot;] = &quot;GameAvatarType&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;GameAvatarType&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GameId&quot;] = {[&quot;Name&quot;] = &quot;GameId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GearGenreSetting&quot;] = {[&quot;Name&quot;] = &quot;GearGenreSetting&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;GearGenreSetting&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Genre&quot;] = {[&quot;Name&quot;] = &quot;Genre&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Genre&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsSFFlagsLoaded&quot;] = {[&quot;Name&quot;] = &quot;IsSFFlagsLoaded&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;JobId&quot;] = {[&quot;Name&quot;] = &quot;JobId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MatchmakingType&quot;] = {[&quot;Name&quot;] = &quot;MatchmakingType&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MatchmakingType&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PlaceId&quot;] = {[&quot;Name&quot;] = &quot;PlaceId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PlaceVersion&quot;] = {[&quot;Name&quot;] = &quot;PlaceVersion&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PrivateServerId&quot;] = {[&quot;Name&quot;] = &quot;PrivateServerId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PrivateServerOwnerId&quot;] = {[&quot;Name&quot;] = &quot;PrivateServerOwnerId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;R15CollisionType&quot;] = {[&quot;Name&quot;] = &quot;R15CollisionType&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;R15CollisionType&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VIPServerId&quot;] = {[&quot;Name&quot;] = &quot;VIPServerId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VIPServerOwnerId&quot;] = {[&quot;Name&quot;] = &quot;VIPServerOwnerId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Workspace&quot;] = {[&quot;Name&quot;] = &quot;Workspace&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;lighting&quot;] = {[&quot;Name&quot;] = &quot;lighting&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;workspace&quot;] = {[&quot;Name&quot;] = &quot;workspace&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataModelMesh&quot;] = {[&quot;Name&quot;] = &quot;DataModelMesh&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Offset&quot;] = {[&quot;Name&quot;] = &quot;Offset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Scale&quot;] = {[&quot;Name&quot;] = &quot;Scale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VertexColor&quot;] = {[&quot;Name&quot;] = &quot;VertexColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataModelPatchService&quot;] = {[&quot;Name&quot;] = &quot;DataModelPatchService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataModelSession&quot;] = {[&quot;Name&quot;] = &quot;DataModelSession&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CurrentDataModelType&quot;] = {[&quot;Name&quot;] = &quot;CurrentDataModelType&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;StudioDataModelType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SessionId&quot;] = {[&quot;Name&quot;] = &quot;SessionId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStore&quot;] = {[&quot;Name&quot;] = &quot;DataStore&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;GlobalDataStore&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreGetOptions&quot;] = {[&quot;Name&quot;] = &quot;DataStoreGetOptions&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;UseCache&quot;] = {[&quot;Name&quot;] = &quot;UseCache&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreIncrementOptions&quot;] = {[&quot;Name&quot;] = &quot;DataStoreIncrementOptions&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreInfo&quot;] = {[&quot;Name&quot;] = &quot;DataStoreInfo&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CreatedTime&quot;] = {[&quot;Name&quot;] = &quot;CreatedTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DataStoreName&quot;] = {[&quot;Name&quot;] = &quot;DataStoreName&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UpdatedTime&quot;] = {[&quot;Name&quot;] = &quot;UpdatedTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreKey&quot;] = {[&quot;Name&quot;] = &quot;DataStoreKey&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;KeyName&quot;] = {[&quot;Name&quot;] = &quot;KeyName&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreKeyInfo&quot;] = {[&quot;Name&quot;] = &quot;DataStoreKeyInfo&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CreatedTime&quot;] = {[&quot;Name&quot;] = &quot;CreatedTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UpdatedTime&quot;] = {[&quot;Name&quot;] = &quot;UpdatedTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Version&quot;] = {[&quot;Name&quot;] = &quot;Version&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreKeyPages&quot;] = {[&quot;Name&quot;] = &quot;DataStoreKeyPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {[&quot;Cursor&quot;] = {[&quot;Name&quot;] = &quot;Cursor&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreListingPages&quot;] = {[&quot;Name&quot;] = &quot;DataStoreListingPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {[&quot;Cursor&quot;] = {[&quot;Name&quot;] = &quot;Cursor&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreObjectVersionInfo&quot;] = {[&quot;Name&quot;] = &quot;DataStoreObjectVersionInfo&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CreatedTime&quot;] = {[&quot;Name&quot;] = &quot;CreatedTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsDeleted&quot;] = {[&quot;Name&quot;] = &quot;IsDeleted&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Version&quot;] = {[&quot;Name&quot;] = &quot;Version&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreOptions&quot;] = {[&quot;Name&quot;] = &quot;DataStoreOptions&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AllScopes&quot;] = {[&quot;Name&quot;] = &quot;AllScopes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStorePages&quot;] = {[&quot;Name&quot;] = &quot;DataStorePages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreService&quot;] = {[&quot;Name&quot;] = &quot;DataStoreService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AutomaticRetry&quot;] = {[&quot;Name&quot;] = &quot;AutomaticRetry&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LegacyNamingScheme&quot;] = {[&quot;Name&quot;] = &quot;LegacyNamingScheme&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutomaticRetry&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LegacyNamingScheme&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreSetOptions&quot;] = {[&quot;Name&quot;] = &quot;DataStoreSetOptions&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DataStoreVersionPages&quot;] = {[&quot;Name&quot;] = &quot;DataStoreVersionPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Debris&quot;] = {[&quot;Name&quot;] = &quot;Debris&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;MaxItems&quot;] = {[&quot;Name&quot;] = &quot;MaxItems&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxItems&quot;] = {[&quot;Int32&quot;] = 1000,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DebugSettings&quot;] = {[&quot;Name&quot;] = &quot;DebugSettings&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Settings&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;DataModel&quot;] = {[&quot;Name&quot;] = &quot;DataModel&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;InstanceCount&quot;] = {[&quot;Name&quot;] = &quot;InstanceCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsScriptStackTracingEnabled&quot;] = {[&quot;Name&quot;] = &quot;IsScriptStackTracingEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;JobCount&quot;] = {[&quot;Name&quot;] = &quot;JobCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PlayerCount&quot;] = {[&quot;Name&quot;] = &quot;PlayerCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ReportSoundWarnings&quot;] = {[&quot;Name&quot;] = &quot;ReportSoundWarnings&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RobloxVersion&quot;] = {[&quot;Name&quot;] = &quot;RobloxVersion&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TickCountPreciseOverride&quot;] = {[&quot;Name&quot;] = &quot;TickCountPreciseOverride&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TickCountSampleMethod&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DebuggablePluginWatcher&quot;] = {[&quot;Name&quot;] = &quot;DebuggablePluginWatcher&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DebuggerBreakpoint&quot;] = {[&quot;Name&quot;] = &quot;DebuggerBreakpoint&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Condition&quot;] = {[&quot;Name&quot;] = &quot;Condition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ContinueExecution&quot;] = {[&quot;Name&quot;] = &quot;ContinueExecution&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsEnabled&quot;] = {[&quot;Name&quot;] = &quot;IsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Line&quot;] = {[&quot;Name&quot;] = &quot;Line&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LogExpression&quot;] = {[&quot;Name&quot;] = &quot;LogExpression&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;isContextDependentBreakpoint&quot;] = {[&quot;Name&quot;] = &quot;isContextDependentBreakpoint&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;line&quot;] = {[&quot;Name&quot;] = &quot;line&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DebuggerConnection&quot;] = {[&quot;Name&quot;] = &quot;DebuggerConnection&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ErrorMessage&quot;] = {[&quot;Name&quot;] = &quot;ErrorMessage&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HasError&quot;] = {[&quot;Name&quot;] = &quot;HasError&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Id&quot;] = {[&quot;Name&quot;] = &quot;Id&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsPaused&quot;] = {[&quot;Name&quot;] = &quot;IsPaused&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DebuggerConnectionManager&quot;] = {[&quot;Name&quot;] = &quot;DebuggerConnectionManager&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Timeout&quot;] = {[&quot;Name&quot;] = &quot;Timeout&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DebuggerLuaResponse&quot;] = {[&quot;Name&quot;] = &quot;DebuggerLuaResponse&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;IsError&quot;] = {[&quot;Name&quot;] = &quot;IsError&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsSuccess&quot;] = {[&quot;Name&quot;] = &quot;IsSuccess&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Message&quot;] = {[&quot;Name&quot;] = &quot;Message&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RequestId&quot;] = {[&quot;Name&quot;] = &quot;RequestId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Status&quot;] = {[&quot;Name&quot;] = &quot;Status&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DebuggerStatus&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DebuggerManager&quot;] = {[&quot;Name&quot;] = &quot;DebuggerManager&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;DebuggingEnabled&quot;] = {[&quot;Name&quot;] = &quot;DebuggingEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DebuggerUIService&quot;] = {[&quot;Name&quot;] = &quot;DebuggerUIService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DebuggerVariable&quot;] = {[&quot;Name&quot;] = &quot;DebuggerVariable&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Name&quot;] = {[&quot;Name&quot;] = &quot;Name&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Populated&quot;] = {[&quot;Name&quot;] = &quot;Populated&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Type&quot;] = {[&quot;Name&quot;] = &quot;Type&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VariableId&quot;] = {[&quot;Name&quot;] = &quot;VariableId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VariablesCount&quot;] = {[&quot;Name&quot;] = &quot;VariablesCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DebuggerWatch&quot;] = {[&quot;Name&quot;] = &quot;DebuggerWatch&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Expression&quot;] = {[&quot;Name&quot;] = &quot;Expression&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Decal&quot;] = {[&quot;Name&quot;] = &quot;Decal&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;FaceInstance&quot;,[&quot;Properties&quot;] = {[&quot;Color3&quot;] = {[&quot;Name&quot;] = &quot;Color3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalTransparencyModifier&quot;] = {[&quot;Name&quot;] = &quot;LocalTransparencyModifier&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Shiny&quot;] = {[&quot;Name&quot;] = &quot;Shiny&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Specular&quot;] = {[&quot;Name&quot;] = &quot;Specular&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Texture&quot;] = {[&quot;Name&quot;] = &quot;Texture&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextureContent&quot;] = {[&quot;Name&quot;] = &quot;TextureContent&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Content&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Transparency&quot;] = {[&quot;Name&quot;] = &quot;Transparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ZIndex&quot;] = {[&quot;Name&quot;] = &quot;ZIndex&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;Face&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Texture&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;DepthOfFieldEffect&quot;] = {[&quot;Name&quot;] = &quot;DepthOfFieldEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PostEffect&quot;,[&quot;Properties&quot;] = {[&quot;FarIntensity&quot;] = {[&quot;Name&quot;] = &quot;FarIntensity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FocusDistance&quot;] = {[&quot;Name&quot;] = &quot;FocusDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InFocusRadius&quot;] = {[&quot;Name&quot;] = &quot;InFocusRadius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NearIntensity&quot;] = {[&quot;Name&quot;] = &quot;NearIntensity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FarIntensity&quot;] = {[&quot;Float32&quot;] = 0.75,},[&quot;FocusDistance&quot;] = {[&quot;Float32&quot;] = 0.05,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InFocusRadius&quot;] = {[&quot;Float32&quot;] = 10,},[&quot;NearIntensity&quot;] = {[&quot;Float32&quot;] = 0.75,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DeviceIdService&quot;] = {[&quot;Name&quot;] = &quot;DeviceIdService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Dialog&quot;] = {[&quot;Name&quot;] = &quot;Dialog&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;BehaviorType&quot;] = {[&quot;Name&quot;] = &quot;BehaviorType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DialogBehaviorType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ConversationDistance&quot;] = {[&quot;Name&quot;] = &quot;ConversationDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GoodbyeChoiceActive&quot;] = {[&quot;Name&quot;] = &quot;GoodbyeChoiceActive&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GoodbyeDialog&quot;] = {[&quot;Name&quot;] = &quot;GoodbyeDialog&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InUse&quot;] = {[&quot;Name&quot;] = &quot;InUse&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;InitialPrompt&quot;] = {[&quot;Name&quot;] = &quot;InitialPrompt&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Purpose&quot;] = {[&quot;Name&quot;] = &quot;Purpose&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DialogPurpose&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Tone&quot;] = {[&quot;Name&quot;] = &quot;Tone&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DialogTone&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TriggerDistance&quot;] = {[&quot;Name&quot;] = &quot;TriggerDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TriggerOffset&quot;] = {[&quot;Name&quot;] = &quot;TriggerOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BehaviorType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ConversationDistance&quot;] = {[&quot;Float32&quot;] = 25,},[&quot;GoodbyeChoiceActive&quot;] = {[&quot;Bool&quot;] = true,},[&quot;GoodbyeDialog&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InitialPrompt&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Purpose&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Tone&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TriggerDistance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;TriggerOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DialogChoice&quot;] = {[&quot;Name&quot;] = &quot;DialogChoice&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;GoodbyeChoiceActive&quot;] = {[&quot;Name&quot;] = &quot;GoodbyeChoiceActive&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GoodbyeDialog&quot;] = {[&quot;Name&quot;] = &quot;GoodbyeDialog&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ResponseDialog&quot;] = {[&quot;Name&quot;] = &quot;ResponseDialog&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UserDialog&quot;] = {[&quot;Name&quot;] = &quot;UserDialog&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;GoodbyeChoiceActive&quot;] = {[&quot;Bool&quot;] = true,},[&quot;GoodbyeDialog&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ResponseDialog&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UserDialog&quot;] = {[&quot;String&quot;] = &quot;&quot;,},},},[&quot;DistortionSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;DistortionSoundEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SoundEffect&quot;,[&quot;Properties&quot;] = {[&quot;Level&quot;] = {[&quot;Name&quot;] = &quot;Level&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Level&quot;] = {[&quot;Float32&quot;] = 0.75,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DockWidgetPluginGui&quot;] = {[&quot;Name&quot;] = &quot;DockWidgetPluginGui&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;PluginGui&quot;,[&quot;Properties&quot;] = {[&quot;HostWidgetWasRestored&quot;] = {[&quot;Name&quot;] = &quot;HostWidgetWasRestored&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DoubleConstrainedValue&quot;] = {[&quot;Name&quot;] = &quot;DoubleConstrainedValue&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;ConstrainedValue&quot;] = {[&quot;Name&quot;] = &quot;ConstrainedValue&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxValue&quot;] = {[&quot;Name&quot;] = &quot;MaxValue&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinValue&quot;] = {[&quot;Name&quot;] = &quot;MinValue&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;value&quot;] = {[&quot;Name&quot;] = &quot;value&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxValue&quot;] = {[&quot;Float64&quot;] = 1,},[&quot;MinValue&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;value&quot;] = {[&quot;Float64&quot;] = 0,},},},[&quot;DraftsService&quot;] = {[&quot;Name&quot;] = &quot;DraftsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DragDetector&quot;] = {[&quot;Name&quot;] = &quot;DragDetector&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ClickDetector&quot;,[&quot;Properties&quot;] = {[&quot;ActivatedCursorIcon&quot;] = {[&quot;Name&quot;] = &quot;ActivatedCursorIcon&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ApplyAtCenterOfMass&quot;] = {[&quot;Name&quot;] = &quot;ApplyAtCenterOfMass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Axis&quot;] = {[&quot;Name&quot;] = &quot;Axis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DragFrame&quot;] = {[&quot;Name&quot;] = &quot;DragFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DragStyle&quot;] = {[&quot;Name&quot;] = &quot;DragStyle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DragDetectorDragStyle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GamepadModeSwitchKeyCode&quot;] = {[&quot;Name&quot;] = &quot;GamepadModeSwitchKeyCode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;KeyCode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;KeyboardModeSwitchKeyCode&quot;] = {[&quot;Name&quot;] = &quot;KeyboardModeSwitchKeyCode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;KeyCode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxDragAngle&quot;] = {[&quot;Name&quot;] = &quot;MaxDragAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxDragTranslation&quot;] = {[&quot;Name&quot;] = &quot;MaxDragTranslation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxForce&quot;] = {[&quot;Name&quot;] = &quot;MaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxTorque&quot;] = {[&quot;Name&quot;] = &quot;MaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinDragAngle&quot;] = {[&quot;Name&quot;] = &quot;MinDragAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinDragTranslation&quot;] = {[&quot;Name&quot;] = &quot;MinDragTranslation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Orientation&quot;] = {[&quot;Name&quot;] = &quot;Orientation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PermissionPolicy&quot;] = {[&quot;Name&quot;] = &quot;PermissionPolicy&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DragDetectorPermissionPolicy&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PhysicalDragClickedPart&quot;] = {[&quot;Name&quot;] = &quot;PhysicalDragClickedPart&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PhysicalDragHitPoint&quot;] = {[&quot;Name&quot;] = &quot;PhysicalDragHitPoint&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PhysicalDragIsInVR&quot;] = {[&quot;Name&quot;] = &quot;PhysicalDragIsInVR&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PhysicalDragTargetFrame&quot;] = {[&quot;Name&quot;] = &quot;PhysicalDragTargetFrame&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ReferenceInstance&quot;] = {[&quot;Name&quot;] = &quot;ReferenceInstance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ResponseStyle&quot;] = {[&quot;Name&quot;] = &quot;ResponseStyle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DragDetectorResponseStyle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Responsiveness&quot;] = {[&quot;Name&quot;] = &quot;Responsiveness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RunLocally&quot;] = {[&quot;Name&quot;] = &quot;RunLocally&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SecondaryAxis&quot;] = {[&quot;Name&quot;] = &quot;SecondaryAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TrackballRadialPullFactor&quot;] = {[&quot;Name&quot;] = &quot;TrackballRadialPullFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TrackballRollFactor&quot;] = {[&quot;Name&quot;] = &quot;TrackballRollFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VRSwitchKeyCode&quot;] = {[&quot;Name&quot;] = &quot;VRSwitchKeyCode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;KeyCode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WorldAxis&quot;] = {[&quot;Name&quot;] = &quot;WorldAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WorldSecondaryAxis&quot;] = {[&quot;Name&quot;] = &quot;WorldSecondaryAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;ActivatedCursorIcon&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;ApplyAtCenterOfMass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CursorIcon&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;DragFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;DragStyle&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;GamepadModeSwitchKeyCode&quot;] = {[&quot;Enum&quot;] = 1004,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;KeyboardModeSwitchKeyCode&quot;] = {[&quot;Enum&quot;] = 306,},[&quot;MaxActivationDistance&quot;] = {[&quot;Float32&quot;] = 32,},[&quot;MaxDragAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MaxDragTranslation&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;MaxForce&quot;] = {[&quot;Float32&quot;] = 10000000,},[&quot;MaxTorque&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;MinDragAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MinDragTranslation&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Orientation&quot;] = {[&quot;Vector3&quot;] = {-0,179.99998,90,},},[&quot;PermissionPolicy&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;ResponseStyle&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Responsiveness&quot;] = {[&quot;Float32&quot;] = 10,},[&quot;RunLocally&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TrackballRadialPullFactor&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;TrackballRollFactor&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VRSwitchKeyCode&quot;] = {[&quot;Enum&quot;] = 1007,},},},[&quot;Dragger&quot;] = {[&quot;Name&quot;] = &quot;Dragger&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DraggerService&quot;] = {[&quot;Name&quot;] = &quot;DraggerService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AlignDraggedObjects&quot;] = {[&quot;Name&quot;] = &quot;AlignDraggedObjects&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AngleSnapEnabled&quot;] = {[&quot;Name&quot;] = &quot;AngleSnapEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AngleSnapIncrement&quot;] = {[&quot;Name&quot;] = &quot;AngleSnapIncrement&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AnimateHover&quot;] = {[&quot;Name&quot;] = &quot;AnimateHover&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CollisionsEnabled&quot;] = {[&quot;Name&quot;] = &quot;CollisionsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DraggerCoordinateSpace&quot;] = {[&quot;Name&quot;] = &quot;DraggerCoordinateSpace&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DraggerCoordinateSpace&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DraggerMovementMode&quot;] = {[&quot;Name&quot;] = &quot;DraggerMovementMode&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DraggerMovementMode&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GeometrySnapColor&quot;] = {[&quot;Name&quot;] = &quot;GeometrySnapColor&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HoverAnimateFrequency&quot;] = {[&quot;Name&quot;] = &quot;HoverAnimateFrequency&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HoverLineThickness&quot;] = {[&quot;Name&quot;] = &quot;HoverLineThickness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HoverThickness&quot;] = {[&quot;Name&quot;] = &quot;HoverThickness&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;JointsEnabled&quot;] = {[&quot;Name&quot;] = &quot;JointsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LinearSnapEnabled&quot;] = {[&quot;Name&quot;] = &quot;LinearSnapEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LinearSnapIncrement&quot;] = {[&quot;Name&quot;] = &quot;LinearSnapIncrement&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PartSnapEnabled&quot;] = {[&quot;Name&quot;] = &quot;PartSnapEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PivotSnapToGeometry&quot;] = {[&quot;Name&quot;] = &quot;PivotSnapToGeometry&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ShowHover&quot;] = {[&quot;Name&quot;] = &quot;ShowHover&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ShowPivotIndicator&quot;] = {[&quot;Name&quot;] = &quot;ShowPivotIndicator&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;DynamicRotate&quot;] = {[&quot;Name&quot;] = &quot;DynamicRotate&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;JointInstance&quot;,[&quot;Properties&quot;] = {[&quot;BaseAngle&quot;] = {[&quot;Name&quot;] = &quot;BaseAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;EchoSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;EchoSoundEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SoundEffect&quot;,[&quot;Properties&quot;] = {[&quot;Delay&quot;] = {[&quot;Name&quot;] = &quot;Delay&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DryLevel&quot;] = {[&quot;Name&quot;] = &quot;DryLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Feedback&quot;] = {[&quot;Name&quot;] = &quot;Feedback&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WetLevel&quot;] = {[&quot;Name&quot;] = &quot;WetLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Delay&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;DryLevel&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Feedback&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WetLevel&quot;] = {[&quot;Float32&quot;] = 0,},},},[&quot;EditableImage&quot;] = {[&quot;Name&quot;] = &quot;EditableImage&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Object&quot;,[&quot;Properties&quot;] = {[&quot;ImageData&quot;] = {[&quot;Name&quot;] = &quot;ImageData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsReplicatedCopy&quot;] = {[&quot;Name&quot;] = &quot;IsReplicatedCopy&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {},},[&quot;EditableMesh&quot;] = {[&quot;Name&quot;] = &quot;EditableMesh&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Object&quot;,[&quot;Properties&quot;] = {[&quot;FixedSize&quot;] = {[&quot;Name&quot;] = &quot;FixedSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsReplicatedCopy&quot;] = {[&quot;Name&quot;] = &quot;IsReplicatedCopy&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MeshData&quot;] = {[&quot;Name&quot;] = &quot;MeshData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SkinningEnabled&quot;] = {[&quot;Name&quot;] = &quot;SkinningEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {},},[&quot;EditableService&quot;] = {[&quot;Name&quot;] = &quot;EditableService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;EditableStatus&quot;] = {[&quot;Name&quot;] = &quot;EditableStatus&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;EditableStatus&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;EmotesPages&quot;] = {[&quot;Name&quot;] = &quot;EmotesPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;InventoryPages&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;EqualizerSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;EqualizerSoundEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SoundEffect&quot;,[&quot;Properties&quot;] = {[&quot;HighGain&quot;] = {[&quot;Name&quot;] = &quot;HighGain&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LowGain&quot;] = {[&quot;Name&quot;] = &quot;LowGain&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MidGain&quot;] = {[&quot;Name&quot;] = &quot;MidGain&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HighGain&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LowGain&quot;] = {[&quot;Float32&quot;] = -20,},[&quot;MidGain&quot;] = {[&quot;Float32&quot;] = -10,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;EulerRotationCurve&quot;] = {[&quot;Name&quot;] = &quot;EulerRotationCurve&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;RotationOrder&quot;] = {[&quot;Name&quot;] = &quot;RotationOrder&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RotationOrder&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;RotationOrder&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;EventIngestService&quot;] = {[&quot;Name&quot;] = &quot;EventIngestService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ExampleService&quot;] = {[&quot;Name&quot;] = &quot;ExampleService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ExperienceAuthService&quot;] = {[&quot;Name&quot;] = &quot;ExperienceAuthService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ExperienceInviteOptions&quot;] = {[&quot;Name&quot;] = &quot;ExperienceInviteOptions&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;InviteMessageId&quot;] = {[&quot;Name&quot;] = &quot;InviteMessageId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InviteUser&quot;] = {[&quot;Name&quot;] = &quot;InviteUser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LaunchData&quot;] = {[&quot;Name&quot;] = &quot;LaunchData&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PromptMessage&quot;] = {[&quot;Name&quot;] = &quot;PromptMessage&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ExperienceNotificationService&quot;] = {[&quot;Name&quot;] = &quot;ExperienceNotificationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ExperienceService&quot;] = {[&quot;Name&quot;] = &quot;ExperienceService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ExperienceStateCaptureService&quot;] = {[&quot;Name&quot;] = &quot;ExperienceStateCaptureService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;HiddenSelectionEnabled&quot;] = {[&quot;Name&quot;] = &quot;HiddenSelectionEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsInBackground&quot;] = {[&quot;Name&quot;] = &quot;IsInBackground&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsInCaptureMode&quot;] = {[&quot;Name&quot;] = &quot;IsInCaptureMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ExplorerFilter&quot;] = {[&quot;Name&quot;] = &quot;ExplorerFilter&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ExplorerFilterAutocompleter&quot;] = {[&quot;Name&quot;] = &quot;ExplorerFilterAutocompleter&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ReplaceRange&quot;] = {[&quot;Name&quot;] = &quot;ReplaceRange&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RequiresOutsideContext&quot;] = {[&quot;Name&quot;] = &quot;RequiresOutsideContext&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ExplorerServiceVisibilityService&quot;] = {[&quot;Name&quot;] = &quot;ExplorerServiceVisibilityService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Explosion&quot;] = {[&quot;Name&quot;] = &quot;Explosion&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;BlastPressure&quot;] = {[&quot;Name&quot;] = &quot;BlastPressure&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BlastRadius&quot;] = {[&quot;Name&quot;] = &quot;BlastRadius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DestroyJointRadiusPercent&quot;] = {[&quot;Name&quot;] = &quot;DestroyJointRadiusPercent&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ExplosionType&quot;] = {[&quot;Name&quot;] = &quot;ExplosionType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ExplosionType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalTransparencyModifier&quot;] = {[&quot;Name&quot;] = &quot;LocalTransparencyModifier&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Position&quot;] = {[&quot;Name&quot;] = &quot;Position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TimeScale&quot;] = {[&quot;Name&quot;] = &quot;TimeScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Visible&quot;] = {[&quot;Name&quot;] = &quot;Visible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BlastPressure&quot;] = {[&quot;Float32&quot;] = 500000,},[&quot;BlastRadius&quot;] = {[&quot;Float32&quot;] = 4,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;DestroyJointRadiusPercent&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;ExplosionType&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Position&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TimeScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},},},[&quot;FaceAnimatorService&quot;] = {[&quot;Name&quot;] = &quot;FaceAnimatorService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AudioAnimationEnabled&quot;] = {[&quot;Name&quot;] = &quot;AudioAnimationEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FaceTrackingStatusEnum&quot;] = {[&quot;Name&quot;] = &quot;FaceTrackingStatusEnum&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TrackerFaceTrackingStatus&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FlipHeadOrientation&quot;] = {[&quot;Name&quot;] = &quot;FlipHeadOrientation&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VideoAnimationEnabled&quot;] = {[&quot;Name&quot;] = &quot;VideoAnimationEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FaceControls&quot;] = {[&quot;Name&quot;] = &quot;FaceControls&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ChinRaiser&quot;] = {[&quot;Name&quot;] = &quot;ChinRaiser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ChinRaiserUpperLip&quot;] = {[&quot;Name&quot;] = &quot;ChinRaiserUpperLip&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Corrugator&quot;] = {[&quot;Name&quot;] = &quot;Corrugator&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EyesLookDown&quot;] = {[&quot;Name&quot;] = &quot;EyesLookDown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EyesLookLeft&quot;] = {[&quot;Name&quot;] = &quot;EyesLookLeft&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EyesLookRight&quot;] = {[&quot;Name&quot;] = &quot;EyesLookRight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EyesLookUp&quot;] = {[&quot;Name&quot;] = &quot;EyesLookUp&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FlatPucker&quot;] = {[&quot;Name&quot;] = &quot;FlatPucker&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Funneler&quot;] = {[&quot;Name&quot;] = &quot;Funneler&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;JawDrop&quot;] = {[&quot;Name&quot;] = &quot;JawDrop&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;JawLeft&quot;] = {[&quot;Name&quot;] = &quot;JawLeft&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;JawRight&quot;] = {[&quot;Name&quot;] = &quot;JawRight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftBrowLowerer&quot;] = {[&quot;Name&quot;] = &quot;LeftBrowLowerer&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftCheekPuff&quot;] = {[&quot;Name&quot;] = &quot;LeftCheekPuff&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftCheekRaiser&quot;] = {[&quot;Name&quot;] = &quot;LeftCheekRaiser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftDimpler&quot;] = {[&quot;Name&quot;] = &quot;LeftDimpler&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftEyeClosed&quot;] = {[&quot;Name&quot;] = &quot;LeftEyeClosed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftEyeUpperLidRaiser&quot;] = {[&quot;Name&quot;] = &quot;LeftEyeUpperLidRaiser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftInnerBrowRaiser&quot;] = {[&quot;Name&quot;] = &quot;LeftInnerBrowRaiser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftLipCornerDown&quot;] = {[&quot;Name&quot;] = &quot;LeftLipCornerDown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftLipCornerPuller&quot;] = {[&quot;Name&quot;] = &quot;LeftLipCornerPuller&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftLipStretcher&quot;] = {[&quot;Name&quot;] = &quot;LeftLipStretcher&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftLowerLipDepressor&quot;] = {[&quot;Name&quot;] = &quot;LeftLowerLipDepressor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftNoseWrinkler&quot;] = {[&quot;Name&quot;] = &quot;LeftNoseWrinkler&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftOuterBrowRaiser&quot;] = {[&quot;Name&quot;] = &quot;LeftOuterBrowRaiser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftUpperLipRaiser&quot;] = {[&quot;Name&quot;] = &quot;LeftUpperLipRaiser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LipPresser&quot;] = {[&quot;Name&quot;] = &quot;LipPresser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LipsTogether&quot;] = {[&quot;Name&quot;] = &quot;LipsTogether&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LowerLipSuck&quot;] = {[&quot;Name&quot;] = &quot;LowerLipSuck&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouthLeft&quot;] = {[&quot;Name&quot;] = &quot;MouthLeft&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouthRight&quot;] = {[&quot;Name&quot;] = &quot;MouthRight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Pucker&quot;] = {[&quot;Name&quot;] = &quot;Pucker&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightBrowLowerer&quot;] = {[&quot;Name&quot;] = &quot;RightBrowLowerer&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightCheekPuff&quot;] = {[&quot;Name&quot;] = &quot;RightCheekPuff&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightCheekRaiser&quot;] = {[&quot;Name&quot;] = &quot;RightCheekRaiser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightDimpler&quot;] = {[&quot;Name&quot;] = &quot;RightDimpler&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightEyeClosed&quot;] = {[&quot;Name&quot;] = &quot;RightEyeClosed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightEyeUpperLidRaiser&quot;] = {[&quot;Name&quot;] = &quot;RightEyeUpperLidRaiser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightInnerBrowRaiser&quot;] = {[&quot;Name&quot;] = &quot;RightInnerBrowRaiser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightLipCornerDown&quot;] = {[&quot;Name&quot;] = &quot;RightLipCornerDown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightLipCornerPuller&quot;] = {[&quot;Name&quot;] = &quot;RightLipCornerPuller&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightLipStretcher&quot;] = {[&quot;Name&quot;] = &quot;RightLipStretcher&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightLowerLipDepressor&quot;] = {[&quot;Name&quot;] = &quot;RightLowerLipDepressor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightNoseWrinkler&quot;] = {[&quot;Name&quot;] = &quot;RightNoseWrinkler&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightOuterBrowRaiser&quot;] = {[&quot;Name&quot;] = &quot;RightOuterBrowRaiser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightUpperLipRaiser&quot;] = {[&quot;Name&quot;] = &quot;RightUpperLipRaiser&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TongueDown&quot;] = {[&quot;Name&quot;] = &quot;TongueDown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TongueOut&quot;] = {[&quot;Name&quot;] = &quot;TongueOut&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TongueUp&quot;] = {[&quot;Name&quot;] = &quot;TongueUp&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UpperLipSuck&quot;] = {[&quot;Name&quot;] = &quot;UpperLipSuck&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FaceInstance&quot;] = {[&quot;Name&quot;] = &quot;FaceInstance&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Face&quot;] = {[&quot;Name&quot;] = &quot;Face&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NormalId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FacialAnimationRecordingService&quot;] = {[&quot;Name&quot;] = &quot;FacialAnimationRecordingService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;BiometricDataConsent&quot;] = {[&quot;Name&quot;] = &quot;BiometricDataConsent&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FacialAnimationStreamingServiceStats&quot;] = {[&quot;Name&quot;] = &quot;FacialAnimationStreamingServiceStats&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FacialAnimationStreamingServiceV2&quot;] = {[&quot;Name&quot;] = &quot;FacialAnimationStreamingServiceV2&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ServiceState&quot;] = {[&quot;Name&quot;] = &quot;ServiceState&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FacialAnimationStreamingSubsessionStats&quot;] = {[&quot;Name&quot;] = &quot;FacialAnimationStreamingSubsessionStats&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FacsImportData&quot;] = {[&quot;Name&quot;] = &quot;FacsImportData&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;BaseImportData&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Feature&quot;] = {[&quot;Name&quot;] = &quot;Feature&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;FaceId&quot;] = {[&quot;Name&quot;] = &quot;FaceId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NormalId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InOut&quot;] = {[&quot;Name&quot;] = &quot;InOut&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;InOut&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftRight&quot;] = {[&quot;Name&quot;] = &quot;LeftRight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;LeftRight&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TopBottom&quot;] = {[&quot;Name&quot;] = &quot;TopBottom&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TopBottom&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FeatureRestrictionManager&quot;] = {[&quot;Name&quot;] = &quot;FeatureRestrictionManager&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;File&quot;] = {[&quot;Name&quot;] = &quot;File&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FileMesh&quot;] = {[&quot;Name&quot;] = &quot;FileMesh&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;DataModelMesh&quot;,[&quot;Properties&quot;] = {[&quot;MeshId&quot;] = {[&quot;Name&quot;] = &quot;MeshId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextureId&quot;] = {[&quot;Name&quot;] = &quot;TextureId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MeshId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Offset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TextureId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VertexColor&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},},},[&quot;Fire&quot;] = {[&quot;Name&quot;] = &quot;Fire&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Heat&quot;] = {[&quot;Name&quot;] = &quot;Heat&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;heat_xml&quot;,},},},},[&quot;LocalTransparencyModifier&quot;] = {[&quot;Name&quot;] = &quot;LocalTransparencyModifier&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SecondaryColor&quot;] = {[&quot;Name&quot;] = &quot;SecondaryColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;size_xml&quot;,},},},},[&quot;TimeScale&quot;] = {[&quot;Name&quot;] = &quot;TimeScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;heat_xml&quot;] = {[&quot;Name&quot;] = &quot;heat_xml&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Heat&quot;,},},},[&quot;size&quot;] = {[&quot;Name&quot;] = &quot;size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Size&quot;,},},},[&quot;size_xml&quot;] = {[&quot;Name&quot;] = &quot;size_xml&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Size&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3&quot;] = {0.92549026,0.54509807,0.27450982,},},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Heat&quot;] = {[&quot;Float32&quot;] = 9,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SecondaryColor&quot;] = {[&quot;Color3&quot;] = {0.54509807,0.3137255,0.21568629,},},[&quot;Size&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TimeScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Flag&quot;] = {[&quot;Name&quot;] = &quot;Flag&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;Tool&quot;,[&quot;Properties&quot;] = {[&quot;TeamColor&quot;] = {[&quot;Name&quot;] = &quot;TeamColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CanBeDropped&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Grip&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LevelOfDetail&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ManualActivationOnly&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ModelMeshCFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;ModelMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;ModelMeshSize&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;ModelStreamingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;NeedsPivotMigration&quot;] = {[&quot;Bool&quot;] = false,},[&quot;RequiresHandle&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TeamColor&quot;] = {[&quot;BrickColor&quot;] = 194,},[&quot;TextureId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;ToolTip&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WorldPivotData&quot;] = {[&quot;OptionalCFrame&quot;] = nil,},},},[&quot;FlagStand&quot;] = {[&quot;Name&quot;] = &quot;FlagStand&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;Part&quot;,[&quot;Properties&quot;] = {[&quot;TeamColor&quot;] = {[&quot;Name&quot;] = &quot;TeamColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 4,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {163,162,165,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FormFactor&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Shape&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TeamColor&quot;] = {[&quot;BrickColor&quot;] = 194,},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 3,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;FlagStandService&quot;] = {[&quot;Name&quot;] = &quot;FlagStandService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FlangeSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;FlangeSoundEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SoundEffect&quot;,[&quot;Properties&quot;] = {[&quot;Depth&quot;] = {[&quot;Name&quot;] = &quot;Depth&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Mix&quot;] = {[&quot;Name&quot;] = &quot;Mix&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Rate&quot;] = {[&quot;Name&quot;] = &quot;Rate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Depth&quot;] = {[&quot;Float32&quot;] = 0.45,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Mix&quot;] = {[&quot;Float32&quot;] = 0.85,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Rate&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FloatCurve&quot;] = {[&quot;Name&quot;] = &quot;FloatCurve&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Length&quot;] = {[&quot;Name&quot;] = &quot;Length&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ValuesAndTimes&quot;] = {[&quot;Name&quot;] = &quot;ValuesAndTimes&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ValuesAndTimes&quot;] = {[&quot;BinaryString&quot;] = &quot;AQAAAAAAAAABAAAAAAAAAA==&quot;,},},},[&quot;FloorWire&quot;] = {[&quot;Name&quot;] = &quot;FloorWire&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;GuiBase3d&quot;,[&quot;Properties&quot;] = {[&quot;CycleOffset&quot;] = {[&quot;Name&quot;] = &quot;CycleOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;From&quot;] = {[&quot;Name&quot;] = &quot;From&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StudsBetweenTextures&quot;] = {[&quot;Name&quot;] = &quot;StudsBetweenTextures&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Texture&quot;] = {[&quot;Name&quot;] = &quot;Texture&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextureSize&quot;] = {[&quot;Name&quot;] = &quot;TextureSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;To&quot;] = {[&quot;Name&quot;] = &quot;To&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Velocity&quot;] = {[&quot;Name&quot;] = &quot;Velocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WireRadius&quot;] = {[&quot;Name&quot;] = &quot;WireRadius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;CycleOffset&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;StudsBetweenTextures&quot;] = {[&quot;Float32&quot;] = 4,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Texture&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;TextureSize&quot;] = {[&quot;Vector2&quot;] = {1,1,},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Float32&quot;] = 2,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;WireRadius&quot;] = {[&quot;Float32&quot;] = 0.0625,},},},[&quot;FluidForceSensor&quot;] = {[&quot;Name&quot;] = &quot;FluidForceSensor&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SensorBase&quot;,[&quot;Properties&quot;] = {[&quot;CenterOfPressure&quot;] = {[&quot;Name&quot;] = &quot;CenterOfPressure&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Force&quot;] = {[&quot;Name&quot;] = &quot;Force&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Torque&quot;] = {[&quot;Name&quot;] = &quot;Torque&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UpdateType&quot;] = {[&quot;Enum&quot;] = 0,},},},[&quot;FlyweightService&quot;] = {[&quot;Name&quot;] = &quot;FlyweightService&quot;,[&quot;Tags&quot;] = {&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Folder&quot;] = {[&quot;Name&quot;] = &quot;Folder&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ReplicatedGuiInsertionOrder&quot;] = {[&quot;Name&quot;] = &quot;ReplicatedGuiInsertionOrder&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ForceField&quot;] = {[&quot;Name&quot;] = &quot;ForceField&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Visible&quot;] = {[&quot;Name&quot;] = &quot;Visible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},},},[&quot;FormFactorPart&quot;] = {[&quot;Name&quot;] = &quot;FormFactorPart&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;BasePart&quot;,[&quot;Properties&quot;] = {[&quot;FormFactor&quot;] = {[&quot;Name&quot;] = &quot;FormFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FormFactor&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;formFactorRaw&quot;,},},},},[&quot;formFactor&quot;] = {[&quot;Name&quot;] = &quot;formFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FormFactor&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;FormFactor&quot;,},},},[&quot;formFactorRaw&quot;] = {[&quot;Name&quot;] = &quot;formFactorRaw&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FormFactor&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;FormFactor&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Frame&quot;] = {[&quot;Name&quot;] = &quot;Frame&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;GuiObject&quot;,[&quot;Properties&quot;] = {[&quot;Style&quot;] = {[&quot;Name&quot;] = &quot;Style&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FrameStyle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = false,},[&quot;AnchorPoint&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.6392157,0.63529414,0.64705884,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;BorderColor3&quot;] = {[&quot;Color3&quot;] = {0.105882354,0.16470589,0.20784314,},},[&quot;BorderMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BorderSizePixel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Draggable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Interactable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LayoutOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Position&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Selectable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeConstraint&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Style&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;FriendPages&quot;] = {[&quot;Name&quot;] = &quot;FriendPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FriendService&quot;] = {[&quot;Name&quot;] = &quot;FriendService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;FunctionalTest&quot;] = {[&quot;Name&quot;] = &quot;FunctionalTest&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AllowSleep&quot;] = {[&quot;Name&quot;] = &quot;AllowSleep&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Description&quot;] = {[&quot;Name&quot;] = &quot;Description&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HasMigratedSettingsToTestService&quot;] = {[&quot;Name&quot;] = &quot;HasMigratedSettingsToTestService&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Is30FpsThrottleEnabled&quot;] = {[&quot;Name&quot;] = &quot;Is30FpsThrottleEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PhysicsEnvironmentalThrottle&quot;] = {[&quot;Name&quot;] = &quot;PhysicsEnvironmentalThrottle&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Timeout&quot;] = {[&quot;Name&quot;] = &quot;Timeout&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Description&quot;] = {[&quot;String&quot;] = &quot;?&quot;,},[&quot;HasMigratedSettingsToTestService&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GamePassService&quot;] = {[&quot;Name&quot;] = &quot;GamePassService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GameSettings&quot;] = {[&quot;Name&quot;] = &quot;GameSettings&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Settings&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;VideoCaptureEnabled&quot;] = {[&quot;Name&quot;] = &quot;VideoCaptureEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VideoRecording&quot;] = {[&quot;Name&quot;] = &quot;VideoRecording&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GamepadService&quot;] = {[&quot;Name&quot;] = &quot;GamepadService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;GamepadCursorEnabled&quot;] = {[&quot;Name&quot;] = &quot;GamepadCursorEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GenerationService&quot;] = {[&quot;Name&quot;] = &quot;GenerationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GenericChallengeService&quot;] = {[&quot;Name&quot;] = &quot;GenericChallengeService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GenericSettings&quot;] = {[&quot;Name&quot;] = &quot;GenericSettings&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;ServiceProvider&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Geometry&quot;] = {[&quot;Name&quot;] = &quot;Geometry&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GeometryService&quot;] = {[&quot;Name&quot;] = &quot;GeometryService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GetTextBoundsParams&quot;] = {[&quot;Name&quot;] = &quot;GetTextBoundsParams&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Font&quot;] = {[&quot;Name&quot;] = &quot;Font&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RichText&quot;] = {[&quot;Name&quot;] = &quot;RichText&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Text&quot;] = {[&quot;Name&quot;] = &quot;Text&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Width&quot;] = {[&quot;Name&quot;] = &quot;Width&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GlobalDataStore&quot;] = {[&quot;Name&quot;] = &quot;GlobalDataStore&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GlobalSettings&quot;] = {[&quot;Name&quot;] = &quot;GlobalSettings&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GenericSettings&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Glue&quot;] = {[&quot;Name&quot;] = &quot;Glue&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;JointInstance&quot;,[&quot;Properties&quot;] = {[&quot;F0&quot;] = {[&quot;Name&quot;] = &quot;F0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;F1&quot;] = {[&quot;Name&quot;] = &quot;F1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;F2&quot;] = {[&quot;Name&quot;] = &quot;F2&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;F3&quot;] = {[&quot;Name&quot;] = &quot;F3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;C0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;C1&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;F0&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;F1&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;F2&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;F3&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GoogleAnalyticsConfiguration&quot;] = {[&quot;Name&quot;] = &quot;GoogleAnalyticsConfiguration&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;gaID&quot;] = {[&quot;Name&quot;] = &quot;gaID&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GroundController&quot;] = {[&quot;Name&quot;] = &quot;GroundController&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ControllerBase&quot;,[&quot;Properties&quot;] = {[&quot;AccelerationLean&quot;] = {[&quot;Name&quot;] = &quot;AccelerationLean&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AccelerationTime&quot;] = {[&quot;Name&quot;] = &quot;AccelerationTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BalanceMaxTorque&quot;] = {[&quot;Name&quot;] = &quot;BalanceMaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BalanceSpeed&quot;] = {[&quot;Name&quot;] = &quot;BalanceSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DecelerationTime&quot;] = {[&quot;Name&quot;] = &quot;DecelerationTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Friction&quot;] = {[&quot;Name&quot;] = &quot;Friction&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FrictionWeight&quot;] = {[&quot;Name&quot;] = &quot;FrictionWeight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GroundOffset&quot;] = {[&quot;Name&quot;] = &quot;GroundOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StandForce&quot;] = {[&quot;Name&quot;] = &quot;StandForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StandSpeed&quot;] = {[&quot;Name&quot;] = &quot;StandSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TurnSpeedFactor&quot;] = {[&quot;Name&quot;] = &quot;TurnSpeedFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AccelerationLean&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;AccelerationTime&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BalanceMaxTorque&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;BalanceRigidityEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;BalanceSpeed&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;DecelerationTime&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Friction&quot;] = {[&quot;Float32&quot;] = 2,},[&quot;FrictionWeight&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;GroundOffset&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MoveSpeedFactor&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;StandForce&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;StandSpeed&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TurnSpeedFactor&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GroupImportData&quot;] = {[&quot;Name&quot;] = &quot;GroupImportData&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;BaseImportData&quot;,[&quot;Properties&quot;] = {[&quot;Anchored&quot;] = {[&quot;Name&quot;] = &quot;Anchored&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImportAsModelAsset&quot;] = {[&quot;Name&quot;] = &quot;ImportAsModelAsset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InsertInWorkspace&quot;] = {[&quot;Name&quot;] = &quot;InsertInWorkspace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GroupService&quot;] = {[&quot;Name&quot;] = &quot;GroupService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GuiBase&quot;] = {[&quot;Name&quot;] = &quot;GuiBase&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GuiBase2d&quot;] = {[&quot;Name&quot;] = &quot;GuiBase2d&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GuiBase&quot;,[&quot;Properties&quot;] = {[&quot;AbsolutePosition&quot;] = {[&quot;Name&quot;] = &quot;AbsolutePosition&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AbsoluteRotation&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteRotation&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AbsoluteSize&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AutoLocalize&quot;] = {[&quot;Name&quot;] = &quot;AutoLocalize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClippedRect&quot;] = {[&quot;Name&quot;] = &quot;ClippedRect&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Rect&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsNotOccluded&quot;] = {[&quot;Name&quot;] = &quot;IsNotOccluded&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Localize&quot;] = {[&quot;Name&quot;] = &quot;Localize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RawRect2D&quot;] = {[&quot;Name&quot;] = &quot;RawRect2D&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Rect&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ReplicatedInsertionOrder&quot;] = {[&quot;Name&quot;] = &quot;ReplicatedInsertionOrder&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RootLocalizationTable&quot;] = {[&quot;Name&quot;] = &quot;RootLocalizationTable&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Name&quot;] = &quot;SelectionBehaviorDown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SelectionBehavior&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Name&quot;] = &quot;SelectionBehaviorLeft&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SelectionBehavior&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Name&quot;] = &quot;SelectionBehaviorRight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SelectionBehavior&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Name&quot;] = &quot;SelectionBehaviorUp&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SelectionBehavior&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionGroup&quot;] = {[&quot;Name&quot;] = &quot;SelectionGroup&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TotalGroupScale&quot;] = {[&quot;Name&quot;] = &quot;TotalGroupScale&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GuiBase3d&quot;] = {[&quot;Name&quot;] = &quot;GuiBase3d&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GuiBase&quot;,[&quot;Properties&quot;] = {[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Color3&quot;] = {[&quot;Name&quot;] = &quot;Color3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Transparency&quot;] = {[&quot;Name&quot;] = &quot;Transparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Visible&quot;] = {[&quot;Name&quot;] = &quot;Visible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GuiButton&quot;] = {[&quot;Name&quot;] = &quot;GuiButton&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GuiObject&quot;,[&quot;Properties&quot;] = {[&quot;AutoButtonColor&quot;] = {[&quot;Name&quot;] = &quot;AutoButtonColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HoverHapticEffect&quot;] = {[&quot;Name&quot;] = &quot;HoverHapticEffect&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Modal&quot;] = {[&quot;Name&quot;] = &quot;Modal&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MouseButton1ClickConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseButton1ClickConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseButton1DownConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseButton1DownConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseButton1UpConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseButton1UpConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseButton2ClickConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseButton2ClickConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseButton2DownConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseButton2DownConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseButton2UpConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseButton2UpConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PressHapticEffect&quot;] = {[&quot;Name&quot;] = &quot;PressHapticEffect&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Selected&quot;] = {[&quot;Name&quot;] = &quot;Selected&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Style&quot;] = {[&quot;Name&quot;] = &quot;Style&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ButtonStyle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GuiLabel&quot;] = {[&quot;Name&quot;] = &quot;GuiLabel&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GuiObject&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GuiMain&quot;] = {[&quot;Name&quot;] = &quot;GuiMain&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;ScreenGui&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipToDeviceSafeArea&quot;] = {[&quot;Bool&quot;] = true,},[&quot;DisplayOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ResetOnSpawn&quot;] = {[&quot;Bool&quot;] = true,},[&quot;SafeAreaCompatibility&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScreenInsets&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ZIndexBehavior&quot;] = {[&quot;Enum&quot;] = 0,},},},[&quot;GuiObject&quot;] = {[&quot;Name&quot;] = &quot;GuiObject&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GuiBase2d&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AnchorPoint&quot;] = {[&quot;Name&quot;] = &quot;AnchorPoint&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AutomaticSize&quot;] = {[&quot;Name&quot;] = &quot;AutomaticSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AutomaticSize&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackgroundColor&quot;] = {[&quot;Name&quot;] = &quot;BackgroundColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;BackgroundColor3&quot;] = {[&quot;Name&quot;] = &quot;BackgroundColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BackgroundTransparency&quot;] = {[&quot;Name&quot;] = &quot;BackgroundTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BorderColor&quot;] = {[&quot;Name&quot;] = &quot;BorderColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;BorderColor3&quot;] = {[&quot;Name&quot;] = &quot;BorderColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BorderMode&quot;] = {[&quot;Name&quot;] = &quot;BorderMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;BorderMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BorderSizePixel&quot;] = {[&quot;Name&quot;] = &quot;BorderSizePixel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClipsDescendants&quot;] = {[&quot;Name&quot;] = &quot;ClipsDescendants&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DragBeginConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;DragBeginConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DragStoppedConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;DragStoppedConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Draggable&quot;] = {[&quot;Name&quot;] = &quot;Draggable&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GuiState&quot;] = {[&quot;Name&quot;] = &quot;GuiState&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;GuiState&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Interactable&quot;] = {[&quot;Name&quot;] = &quot;Interactable&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LayoutOrder&quot;] = {[&quot;Name&quot;] = &quot;LayoutOrder&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MouseEnterConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseEnterConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseLeaveConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseLeaveConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseMovedConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseMovedConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseWheelBackwardConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseWheelBackwardConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseWheelForwardConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseWheelForwardConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;NextSelectionDown&quot;] = {[&quot;Name&quot;] = &quot;NextSelectionDown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NextSelectionLeft&quot;] = {[&quot;Name&quot;] = &quot;NextSelectionLeft&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NextSelectionRight&quot;] = {[&quot;Name&quot;] = &quot;NextSelectionRight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NextSelectionUp&quot;] = {[&quot;Name&quot;] = &quot;NextSelectionUp&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Position&quot;] = {[&quot;Name&quot;] = &quot;Position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Rotation&quot;] = {[&quot;Name&quot;] = &quot;Rotation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Selectable&quot;] = {[&quot;Name&quot;] = &quot;Selectable&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionImageObject&quot;] = {[&quot;Name&quot;] = &quot;SelectionImageObject&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionOrder&quot;] = {[&quot;Name&quot;] = &quot;SelectionOrder&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionRect2D&quot;] = {[&quot;Name&quot;] = &quot;SelectionRect2D&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Rect&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SizeConstraint&quot;] = {[&quot;Name&quot;] = &quot;SizeConstraint&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SizeConstraint&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Transparency&quot;] = {[&quot;Name&quot;] = &quot;Transparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Visible&quot;] = {[&quot;Name&quot;] = &quot;Visible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ZIndex&quot;] = {[&quot;Name&quot;] = &quot;ZIndex&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GuiService&quot;] = {[&quot;Name&quot;] = &quot;GuiService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AutoSelectGuiEnabled&quot;] = {[&quot;Name&quot;] = &quot;AutoSelectGuiEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CoreEffectFolder&quot;] = {[&quot;Name&quot;] = &quot;CoreEffectFolder&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CoreGuiFolder&quot;] = {[&quot;Name&quot;] = &quot;CoreGuiFolder&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CoreGuiNavigationEnabled&quot;] = {[&quot;Name&quot;] = &quot;CoreGuiNavigationEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GuiNavigationEnabled&quot;] = {[&quot;Name&quot;] = &quot;GuiNavigationEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsModalDialog&quot;] = {[&quot;Name&quot;] = &quot;IsModalDialog&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsWindows&quot;] = {[&quot;Name&quot;] = &quot;IsWindows&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MenuIsOpen&quot;] = {[&quot;Name&quot;] = &quot;MenuIsOpen&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PreferredTextSize&quot;] = {[&quot;Name&quot;] = &quot;PreferredTextSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PreferredTextSize&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PreferredTransparency&quot;] = {[&quot;Name&quot;] = &quot;PreferredTransparency&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ReducedMotionEnabled&quot;] = {[&quot;Name&quot;] = &quot;ReducedMotionEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SelectedCoreObject&quot;] = {[&quot;Name&quot;] = &quot;SelectedCoreObject&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SelectedObject&quot;] = {[&quot;Name&quot;] = &quot;SelectedObject&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TopbarInset&quot;] = {[&quot;Name&quot;] = &quot;TopbarInset&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Rect&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TouchControlsEnabled&quot;] = {[&quot;Name&quot;] = &quot;TouchControlsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;GuidRegistryService&quot;] = {[&quot;Name&quot;] = &quot;GuidRegistryService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HSRDataContentProvider&quot;] = {[&quot;Name&quot;] = &quot;HSRDataContentProvider&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;CacheableContentProvider&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HandleAdornment&quot;] = {[&quot;Name&quot;] = &quot;HandleAdornment&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;PVAdornment&quot;,[&quot;Properties&quot;] = {[&quot;AdornCullingMode&quot;] = {[&quot;Name&quot;] = &quot;AdornCullingMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AdornCullingMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AlwaysOnTop&quot;] = {[&quot;Name&quot;] = &quot;AlwaysOnTop&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CFrame&quot;] = {[&quot;Name&quot;] = &quot;CFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SizeRelativeOffset&quot;] = {[&quot;Name&quot;] = &quot;SizeRelativeOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ZIndex&quot;] = {[&quot;Name&quot;] = &quot;ZIndex&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Handles&quot;] = {[&quot;Name&quot;] = &quot;Handles&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;HandlesBase&quot;,[&quot;Properties&quot;] = {[&quot;Faces&quot;] = {[&quot;Name&quot;] = &quot;Faces&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Faces&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MouseButton1DownConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseButton1DownConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseButton1UpConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseButton1UpConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseDragConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseDragConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseEnterConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseEnterConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseLeaveConnectionCount&quot;] = {[&quot;Name&quot;] = &quot;MouseLeaveConnectionCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Style&quot;] = {[&quot;Name&quot;] = &quot;Style&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;HandlesStyle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;Faces&quot;] = {[&quot;Faces&quot;] = {&quot;Right&quot;,&quot;Top&quot;,&quot;Back&quot;,&quot;Left&quot;,&quot;Bottom&quot;,&quot;Front&quot;,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Style&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},},},[&quot;HandlesBase&quot;] = {[&quot;Name&quot;] = &quot;HandlesBase&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;PartAdornment&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HapticEffect&quot;] = {[&quot;Name&quot;] = &quot;HapticEffect&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Looped&quot;] = {[&quot;Name&quot;] = &quot;Looped&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Position&quot;] = {[&quot;Name&quot;] = &quot;Position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Radius&quot;] = {[&quot;Name&quot;] = &quot;Radius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Type&quot;] = {[&quot;Name&quot;] = &quot;Type&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;HapticEffectType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Waveform&quot;] = {[&quot;Name&quot;] = &quot;Waveform&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Looped&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Position&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Radius&quot;] = {[&quot;Float32&quot;] = 3,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Type&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HapticService&quot;] = {[&quot;Name&quot;] = &quot;HapticService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Hat&quot;] = {[&quot;Name&quot;] = &quot;Hat&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;Accoutrement&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AttachmentPoint&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HeapProfilerService&quot;] = {[&quot;Name&quot;] = &quot;HeapProfilerService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HeatmapService&quot;] = {[&quot;Name&quot;] = &quot;HeatmapService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HeightmapImporterService&quot;] = {[&quot;Name&quot;] = &quot;HeightmapImporterService&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HiddenSurfaceRemovalAsset&quot;] = {[&quot;Name&quot;] = &quot;HiddenSurfaceRemovalAsset&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;HSRData&quot;] = {[&quot;Name&quot;] = &quot;HSRData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HSRMeshIdData&quot;] = {[&quot;Name&quot;] = &quot;HSRMeshIdData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HSRData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;HSRMeshIdData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Highlight&quot;] = {[&quot;Name&quot;] = &quot;Highlight&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Adornee&quot;] = {[&quot;Name&quot;] = &quot;Adornee&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DepthMode&quot;] = {[&quot;Name&quot;] = &quot;DepthMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;HighlightDepthMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FillColor&quot;] = {[&quot;Name&quot;] = &quot;FillColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FillTransparency&quot;] = {[&quot;Name&quot;] = &quot;FillTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LineThickness&quot;] = {[&quot;Name&quot;] = &quot;LineThickness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;OutlineColor&quot;] = {[&quot;Name&quot;] = &quot;OutlineColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OutlineTransparency&quot;] = {[&quot;Name&quot;] = &quot;OutlineTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReservedId&quot;] = {[&quot;Name&quot;] = &quot;ReservedId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ReservedHighlightId&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;DepthMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FillColor&quot;] = {[&quot;Color3&quot;] = {1,0,0,},},[&quot;FillTransparency&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;OutlineColor&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;OutlineTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HingeConstraint&quot;] = {[&quot;Name&quot;] = &quot;HingeConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;ActuatorType&quot;] = {[&quot;Name&quot;] = &quot;ActuatorType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ActuatorType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AngularResponsiveness&quot;] = {[&quot;Name&quot;] = &quot;AngularResponsiveness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AngularSpeed&quot;] = {[&quot;Name&quot;] = &quot;AngularSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AngularVelocity&quot;] = {[&quot;Name&quot;] = &quot;AngularVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurrentAngle&quot;] = {[&quot;Name&quot;] = &quot;CurrentAngle&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LimitsEnabled&quot;] = {[&quot;Name&quot;] = &quot;LimitsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LowerAngle&quot;] = {[&quot;Name&quot;] = &quot;LowerAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MotorMaxAcceleration&quot;] = {[&quot;Name&quot;] = &quot;MotorMaxAcceleration&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MotorMaxTorque&quot;] = {[&quot;Name&quot;] = &quot;MotorMaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Radius&quot;] = {[&quot;Name&quot;] = &quot;Radius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Restitution&quot;] = {[&quot;Name&quot;] = &quot;Restitution&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ServoMaxTorque&quot;] = {[&quot;Name&quot;] = &quot;ServoMaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SoftlockServoUponReachingTarget&quot;] = {[&quot;Name&quot;] = &quot;SoftlockServoUponReachingTarget&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TargetAngle&quot;] = {[&quot;Name&quot;] = &quot;TargetAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UpperAngle&quot;] = {[&quot;Name&quot;] = &quot;UpperAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;ActuatorType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AngularResponsiveness&quot;] = {[&quot;Float32&quot;] = 45,},[&quot;AngularSpeed&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;AngularVelocity&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 1009,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LimitsEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;LowerAngle&quot;] = {[&quot;Float32&quot;] = -45,},[&quot;MotorMaxAcceleration&quot;] = {[&quot;Float32&quot;] = 500000,},[&quot;MotorMaxTorque&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Radius&quot;] = {[&quot;Float32&quot;] = 0.15,},[&quot;Restitution&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ServoMaxTorque&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;SoftlockServoUponReachingTarget&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TargetAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UpperAngle&quot;] = {[&quot;Float32&quot;] = 45,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;Hint&quot;] = {[&quot;Name&quot;] = &quot;Hint&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;Message&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Text&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Hole&quot;] = {[&quot;Name&quot;] = &quot;Hole&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;Feature&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;FaceId&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InOut&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;LeftRight&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopBottom&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Hopper&quot;] = {[&quot;Name&quot;] = &quot;Hopper&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HopperBin&quot;] = {[&quot;Name&quot;] = &quot;HopperBin&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;BackpackItem&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BinType&quot;] = {[&quot;Name&quot;] = &quot;BinType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;BinType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Command&quot;] = {[&quot;Name&quot;] = &quot;Command&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;WriteOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextureName&quot;] = {[&quot;Name&quot;] = &quot;TextureName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;WriteOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BinType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LevelOfDetail&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ModelMeshCFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;ModelMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;ModelMeshSize&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;ModelStreamingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;NeedsPivotMigration&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TextureId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WorldPivotData&quot;] = {[&quot;OptionalCFrame&quot;] = nil,},},},[&quot;HttpRbxApiService&quot;] = {[&quot;Name&quot;] = &quot;HttpRbxApiService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HttpRequest&quot;] = {[&quot;Name&quot;] = &quot;HttpRequest&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HttpService&quot;] = {[&quot;Name&quot;] = &quot;HttpService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;HttpEnabled&quot;] = {[&quot;Name&quot;] = &quot;HttpEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;HttpEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Humanoid&quot;] = {[&quot;Name&quot;] = &quot;Humanoid&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AutoJumpEnabled&quot;] = {[&quot;Name&quot;] = &quot;AutoJumpEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AutoRotate&quot;] = {[&quot;Name&quot;] = &quot;AutoRotate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AutomaticScalingEnabled&quot;] = {[&quot;Name&quot;] = &quot;AutomaticScalingEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BreakJointsOnDeath&quot;] = {[&quot;Name&quot;] = &quot;BreakJointsOnDeath&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraMaxDistance&quot;] = {[&quot;Name&quot;] = &quot;CameraMaxDistance&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CameraMinDistance&quot;] = {[&quot;Name&quot;] = &quot;CameraMinDistance&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CameraMode&quot;] = {[&quot;Name&quot;] = &quot;CameraMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CameraMode&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CameraOffset&quot;] = {[&quot;Name&quot;] = &quot;CameraOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CollisionType&quot;] = {[&quot;Name&quot;] = &quot;CollisionType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;HumanoidCollisionType&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DisplayDistanceType&quot;] = {[&quot;Name&quot;] = &quot;DisplayDistanceType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;HumanoidDisplayDistanceType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DisplayName&quot;] = {[&quot;Name&quot;] = &quot;DisplayName&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EvaluateStateMachine&quot;] = {[&quot;Name&quot;] = &quot;EvaluateStateMachine&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FloorMaterial&quot;] = {[&quot;Name&quot;] = &quot;FloorMaterial&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Material&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Health&quot;] = {[&quot;Name&quot;] = &quot;Health&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HealthDisplayDistance&quot;] = {[&quot;Name&quot;] = &quot;HealthDisplayDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HealthDisplayType&quot;] = {[&quot;Name&quot;] = &quot;HealthDisplayType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;HumanoidHealthDisplayType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Health_XML&quot;] = {[&quot;Name&quot;] = &quot;Health_XML&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HipHeight&quot;] = {[&quot;Name&quot;] = &quot;HipHeight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InternalBodyScale&quot;] = {[&quot;Name&quot;] = &quot;InternalBodyScale&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InternalDisplayName&quot;] = {[&quot;Name&quot;] = &quot;InternalDisplayName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;InternalHeadScale&quot;] = {[&quot;Name&quot;] = &quot;InternalHeadScale&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InternalOriginalHipHeight&quot;] = {[&quot;Name&quot;] = &quot;InternalOriginalHipHeight&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Jump&quot;] = {[&quot;Name&quot;] = &quot;Jump&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;JumpHeight&quot;] = {[&quot;Name&quot;] = &quot;JumpHeight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;JumpPower&quot;] = {[&quot;Name&quot;] = &quot;JumpPower&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;JumpReplicate&quot;] = {[&quot;Name&quot;] = &quot;JumpReplicate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftLeg&quot;] = {[&quot;Name&quot;] = &quot;LeftLeg&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxHealth&quot;] = {[&quot;Name&quot;] = &quot;MaxHealth&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxSlopeAngle&quot;] = {[&quot;Name&quot;] = &quot;MaxSlopeAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MoveDirection&quot;] = {[&quot;Name&quot;] = &quot;MoveDirection&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MoveDirectionInternal&quot;] = {[&quot;Name&quot;] = &quot;MoveDirectionInternal&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;NameDisplayDistance&quot;] = {[&quot;Name&quot;] = &quot;NameDisplayDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NameOcclusion&quot;] = {[&quot;Name&quot;] = &quot;NameOcclusion&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NameOcclusion&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NetworkHumanoidState&quot;] = {[&quot;Name&quot;] = &quot;NetworkHumanoidState&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;HumanoidStateType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PlatformStand&quot;] = {[&quot;Name&quot;] = &quot;PlatformStand&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RequiresNeck&quot;] = {[&quot;Name&quot;] = &quot;RequiresNeck&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RigType&quot;] = {[&quot;Name&quot;] = &quot;RigType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;HumanoidRigType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightLeg&quot;] = {[&quot;Name&quot;] = &quot;RightLeg&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RootPart&quot;] = {[&quot;Name&quot;] = &quot;RootPart&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SeatPart&quot;] = {[&quot;Name&quot;] = &quot;SeatPart&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Sit&quot;] = {[&quot;Name&quot;] = &quot;Sit&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Strafe&quot;] = {[&quot;Name&quot;] = &quot;Strafe&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TargetPoint&quot;] = {[&quot;Name&quot;] = &quot;TargetPoint&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Torso&quot;] = {[&quot;Name&quot;] = &quot;Torso&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UseJumpPower&quot;] = {[&quot;Name&quot;] = &quot;UseJumpPower&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WalkAngleError&quot;] = {[&quot;Name&quot;] = &quot;WalkAngleError&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WalkDirection&quot;] = {[&quot;Name&quot;] = &quot;WalkDirection&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WalkSpeed&quot;] = {[&quot;Name&quot;] = &quot;WalkSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WalkToPart&quot;] = {[&quot;Name&quot;] = &quot;WalkToPart&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WalkToPoint&quot;] = {[&quot;Name&quot;] = &quot;WalkToPoint&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;maxHealth&quot;] = {[&quot;Name&quot;] = &quot;maxHealth&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoJumpEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutoRotate&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticScalingEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BreakJointsOnDeath&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CollisionType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;DisplayDistanceType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;DisplayName&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;EvaluateStateMachine&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HealthDisplayDistance&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;HealthDisplayType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Health_XML&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;HipHeight&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InternalBodyScale&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;InternalHeadScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;JumpHeight&quot;] = {[&quot;Float32&quot;] = 7.2,},[&quot;JumpPower&quot;] = {[&quot;Float32&quot;] = 50,},[&quot;MaxHealth&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;MaxSlopeAngle&quot;] = {[&quot;Float32&quot;] = 89,},[&quot;NameDisplayDistance&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;NameOcclusion&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;RequiresNeck&quot;] = {[&quot;Bool&quot;] = true,},[&quot;RigType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UseJumpPower&quot;] = {[&quot;Bool&quot;] = true,},[&quot;WalkSpeed&quot;] = {[&quot;Float32&quot;] = 16,},},},[&quot;HumanoidController&quot;] = {[&quot;Name&quot;] = &quot;HumanoidController&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Controller&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;HumanoidDescription&quot;] = {[&quot;Name&quot;] = &quot;HumanoidDescription&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AccessoryBlob&quot;] = {[&quot;Name&quot;] = &quot;AccessoryBlob&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;BackAccessory&quot;] = {[&quot;Name&quot;] = &quot;BackAccessory&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;BodyTypeScale&quot;] = {[&quot;Name&quot;] = &quot;BodyTypeScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClimbAnimation&quot;] = {[&quot;Name&quot;] = &quot;ClimbAnimation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DepthScale&quot;] = {[&quot;Name&quot;] = &quot;DepthScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EmotesDataInternal&quot;] = {[&quot;Name&quot;] = &quot;EmotesDataInternal&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EquippedEmotesDataInternal&quot;] = {[&quot;Name&quot;] = &quot;EquippedEmotesDataInternal&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Face&quot;] = {[&quot;Name&quot;] = &quot;Face&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FaceAccessory&quot;] = {[&quot;Name&quot;] = &quot;FaceAccessory&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FallAnimation&quot;] = {[&quot;Name&quot;] = &quot;FallAnimation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FrontAccessory&quot;] = {[&quot;Name&quot;] = &quot;FrontAccessory&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GraphicTShirt&quot;] = {[&quot;Name&quot;] = &quot;GraphicTShirt&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HairAccessory&quot;] = {[&quot;Name&quot;] = &quot;HairAccessory&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HatAccessory&quot;] = {[&quot;Name&quot;] = &quot;HatAccessory&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Head&quot;] = {[&quot;Name&quot;] = &quot;Head&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HeadColor&quot;] = {[&quot;Name&quot;] = &quot;HeadColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HeadScale&quot;] = {[&quot;Name&quot;] = &quot;HeadScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HeightScale&quot;] = {[&quot;Name&quot;] = &quot;HeightScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IdleAnimation&quot;] = {[&quot;Name&quot;] = &quot;IdleAnimation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;JumpAnimation&quot;] = {[&quot;Name&quot;] = &quot;JumpAnimation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftArm&quot;] = {[&quot;Name&quot;] = &quot;LeftArm&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftArmColor&quot;] = {[&quot;Name&quot;] = &quot;LeftArmColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftLeg&quot;] = {[&quot;Name&quot;] = &quot;LeftLeg&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LeftLegColor&quot;] = {[&quot;Name&quot;] = &quot;LeftLegColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MoodAnimation&quot;] = {[&quot;Name&quot;] = &quot;MoodAnimation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NeckAccessory&quot;] = {[&quot;Name&quot;] = &quot;NeckAccessory&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;NumberEmotesLoaded&quot;] = {[&quot;Name&quot;] = &quot;NumberEmotesLoaded&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Pants&quot;] = {[&quot;Name&quot;] = &quot;Pants&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ProportionScale&quot;] = {[&quot;Name&quot;] = &quot;ProportionScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ResetIncludesBodyParts&quot;] = {[&quot;Name&quot;] = &quot;ResetIncludesBodyParts&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightArm&quot;] = {[&quot;Name&quot;] = &quot;RightArm&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightArmColor&quot;] = {[&quot;Name&quot;] = &quot;RightArmColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightLeg&quot;] = {[&quot;Name&quot;] = &quot;RightLeg&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightLegColor&quot;] = {[&quot;Name&quot;] = &quot;RightLegColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RunAnimation&quot;] = {[&quot;Name&quot;] = &quot;RunAnimation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Shirt&quot;] = {[&quot;Name&quot;] = &quot;Shirt&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShouldersAccessory&quot;] = {[&quot;Name&quot;] = &quot;ShouldersAccessory&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SwimAnimation&quot;] = {[&quot;Name&quot;] = &quot;SwimAnimation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Torso&quot;] = {[&quot;Name&quot;] = &quot;Torso&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TorsoColor&quot;] = {[&quot;Name&quot;] = &quot;TorsoColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WaistAccessory&quot;] = {[&quot;Name&quot;] = &quot;WaistAccessory&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WalkAnimation&quot;] = {[&quot;Name&quot;] = &quot;WalkAnimation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WidthScale&quot;] = {[&quot;Name&quot;] = &quot;WidthScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BodyTypeScale&quot;] = {[&quot;Float32&quot;] = 0.3,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClimbAnimation&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;DepthScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;EmotesDataInternal&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;EquippedEmotesDataInternal&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Face&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;FallAnimation&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;GraphicTShirt&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;HeadScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;HeightScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IdleAnimation&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;JumpAnimation&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;MoodAnimation&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;Pants&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;ProportionScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;RunAnimation&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Shirt&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;SwimAnimation&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WalkAnimation&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;WidthScale&quot;] = {[&quot;Float32&quot;] = 1,},},},[&quot;HumanoidRigDescription&quot;] = {[&quot;Name&quot;] = &quot;HumanoidRigDescription&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Chest&quot;] = {[&quot;Name&quot;] = &quot;Chest&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChestRangeMax&quot;] = {[&quot;Name&quot;] = &quot;ChestRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChestRangeMin&quot;] = {[&quot;Name&quot;] = &quot;ChestRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChestSize&quot;] = {[&quot;Name&quot;] = &quot;ChestSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChestTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;ChestTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Head&quot;] = {[&quot;Name&quot;] = &quot;Head&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HeadRangeMax&quot;] = {[&quot;Name&quot;] = &quot;HeadRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HeadRangeMin&quot;] = {[&quot;Name&quot;] = &quot;HeadRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HeadSize&quot;] = {[&quot;Name&quot;] = &quot;HeadSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HeadTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;HeadTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftAnkle&quot;] = {[&quot;Name&quot;] = &quot;LeftAnkle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftAnkleRangeMax&quot;] = {[&quot;Name&quot;] = &quot;LeftAnkleRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftAnkleRangeMin&quot;] = {[&quot;Name&quot;] = &quot;LeftAnkleRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftAnkleSize&quot;] = {[&quot;Name&quot;] = &quot;LeftAnkleSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftAnkleTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;LeftAnkleTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftClavicle&quot;] = {[&quot;Name&quot;] = &quot;LeftClavicle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftClavicleRangeMax&quot;] = {[&quot;Name&quot;] = &quot;LeftClavicleRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftClavicleRangeMin&quot;] = {[&quot;Name&quot;] = &quot;LeftClavicleRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftClavicleSize&quot;] = {[&quot;Name&quot;] = &quot;LeftClavicleSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftClavicleTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;LeftClavicleTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftElbow&quot;] = {[&quot;Name&quot;] = &quot;LeftElbow&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftElbowRangeMax&quot;] = {[&quot;Name&quot;] = &quot;LeftElbowRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftElbowRangeMin&quot;] = {[&quot;Name&quot;] = &quot;LeftElbowRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftElbowSize&quot;] = {[&quot;Name&quot;] = &quot;LeftElbowSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftElbowTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;LeftElbowTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftHip&quot;] = {[&quot;Name&quot;] = &quot;LeftHip&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftHipRangeMax&quot;] = {[&quot;Name&quot;] = &quot;LeftHipRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftHipRangeMin&quot;] = {[&quot;Name&quot;] = &quot;LeftHipRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftHipSize&quot;] = {[&quot;Name&quot;] = &quot;LeftHipSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftHipTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;LeftHipTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftKnee&quot;] = {[&quot;Name&quot;] = &quot;LeftKnee&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftKneeRangeMax&quot;] = {[&quot;Name&quot;] = &quot;LeftKneeRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftKneeRangeMin&quot;] = {[&quot;Name&quot;] = &quot;LeftKneeRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftKneeSize&quot;] = {[&quot;Name&quot;] = &quot;LeftKneeSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftKneeTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;LeftKneeTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftShoulder&quot;] = {[&quot;Name&quot;] = &quot;LeftShoulder&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftShoulderRangeMax&quot;] = {[&quot;Name&quot;] = &quot;LeftShoulderRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftShoulderRangeMin&quot;] = {[&quot;Name&quot;] = &quot;LeftShoulderRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftShoulderSize&quot;] = {[&quot;Name&quot;] = &quot;LeftShoulderSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftShoulderTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;LeftShoulderTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftToes&quot;] = {[&quot;Name&quot;] = &quot;LeftToes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftToesRangeMax&quot;] = {[&quot;Name&quot;] = &quot;LeftToesRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftToesRangeMin&quot;] = {[&quot;Name&quot;] = &quot;LeftToesRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftToesSize&quot;] = {[&quot;Name&quot;] = &quot;LeftToesSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftToesTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;LeftToesTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftWrist&quot;] = {[&quot;Name&quot;] = &quot;LeftWrist&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftWristRangeMax&quot;] = {[&quot;Name&quot;] = &quot;LeftWristRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftWristRangeMin&quot;] = {[&quot;Name&quot;] = &quot;LeftWristRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftWristSize&quot;] = {[&quot;Name&quot;] = &quot;LeftWristSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeftWristTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;LeftWristTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Neck&quot;] = {[&quot;Name&quot;] = &quot;Neck&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NeckRangeMax&quot;] = {[&quot;Name&quot;] = &quot;NeckRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NeckRangeMin&quot;] = {[&quot;Name&quot;] = &quot;NeckRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NeckSize&quot;] = {[&quot;Name&quot;] = &quot;NeckSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NeckTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;NeckTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Pelvis&quot;] = {[&quot;Name&quot;] = &quot;Pelvis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PelvisRangeMax&quot;] = {[&quot;Name&quot;] = &quot;PelvisRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PelvisRangeMin&quot;] = {[&quot;Name&quot;] = &quot;PelvisRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PelvisSize&quot;] = {[&quot;Name&quot;] = &quot;PelvisSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PelvisTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;PelvisTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightAnkle&quot;] = {[&quot;Name&quot;] = &quot;RightAnkle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightAnkleRangeMax&quot;] = {[&quot;Name&quot;] = &quot;RightAnkleRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightAnkleRangeMin&quot;] = {[&quot;Name&quot;] = &quot;RightAnkleRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightAnkleSize&quot;] = {[&quot;Name&quot;] = &quot;RightAnkleSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightAnkleTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;RightAnkleTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightClavicle&quot;] = {[&quot;Name&quot;] = &quot;RightClavicle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightClavicleRangeMax&quot;] = {[&quot;Name&quot;] = &quot;RightClavicleRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightClavicleRangeMin&quot;] = {[&quot;Name&quot;] = &quot;RightClavicleRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightClavicleSize&quot;] = {[&quot;Name&quot;] = &quot;RightClavicleSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightClavicleTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;RightClavicleTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightElbow&quot;] = {[&quot;Name&quot;] = &quot;RightElbow&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightElbowRangeMax&quot;] = {[&quot;Name&quot;] = &quot;RightElbowRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightElbowRangeMin&quot;] = {[&quot;Name&quot;] = &quot;RightElbowRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightElbowSize&quot;] = {[&quot;Name&quot;] = &quot;RightElbowSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightElbowTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;RightElbowTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightHip&quot;] = {[&quot;Name&quot;] = &quot;RightHip&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightHipRangeMax&quot;] = {[&quot;Name&quot;] = &quot;RightHipRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightHipRangeMin&quot;] = {[&quot;Name&quot;] = &quot;RightHipRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightHipSize&quot;] = {[&quot;Name&quot;] = &quot;RightHipSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightHipTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;RightHipTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightKnee&quot;] = {[&quot;Name&quot;] = &quot;RightKnee&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightKneeRangeMax&quot;] = {[&quot;Name&quot;] = &quot;RightKneeRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightKneeRangeMin&quot;] = {[&quot;Name&quot;] = &quot;RightKneeRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightKneeSize&quot;] = {[&quot;Name&quot;] = &quot;RightKneeSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightKneeTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;RightKneeTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightShoulder&quot;] = {[&quot;Name&quot;] = &quot;RightShoulder&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightShoulderRangeMax&quot;] = {[&quot;Name&quot;] = &quot;RightShoulderRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightShoulderRangeMin&quot;] = {[&quot;Name&quot;] = &quot;RightShoulderRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightShoulderSize&quot;] = {[&quot;Name&quot;] = &quot;RightShoulderSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightShoulderTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;RightShoulderTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightToes&quot;] = {[&quot;Name&quot;] = &quot;RightToes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightToesRangeMax&quot;] = {[&quot;Name&quot;] = &quot;RightToesRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightToesRangeMin&quot;] = {[&quot;Name&quot;] = &quot;RightToesRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightToesSize&quot;] = {[&quot;Name&quot;] = &quot;RightToesSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightToesTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;RightToesTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightWrist&quot;] = {[&quot;Name&quot;] = &quot;RightWrist&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightWristRangeMax&quot;] = {[&quot;Name&quot;] = &quot;RightWristRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightWristRangeMin&quot;] = {[&quot;Name&quot;] = &quot;RightWristRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightWristSize&quot;] = {[&quot;Name&quot;] = &quot;RightWristSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RightWristTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;RightWristTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Root&quot;] = {[&quot;Name&quot;] = &quot;Root&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RootRangeMax&quot;] = {[&quot;Name&quot;] = &quot;RootRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RootRangeMin&quot;] = {[&quot;Name&quot;] = &quot;RootRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RootSize&quot;] = {[&quot;Name&quot;] = &quot;RootSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RootTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;RootTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Waist&quot;] = {[&quot;Name&quot;] = &quot;Waist&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WaistRangeMax&quot;] = {[&quot;Name&quot;] = &quot;WaistRangeMax&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WaistRangeMin&quot;] = {[&quot;Name&quot;] = &quot;WaistRangeMin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WaistSize&quot;] = {[&quot;Name&quot;] = &quot;WaistSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WaistTposeAdjustment&quot;] = {[&quot;Name&quot;] = &quot;WaistTposeAdjustment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ChestRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;ChestRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;ChestSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;ChestTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;HeadRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;HeadRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;HeadSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;HeadTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftAnkleRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftAnkleRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftAnkleSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LeftAnkleTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;LeftClavicleRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftClavicleRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftClavicleSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LeftClavicleTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;LeftElbowRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftElbowRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftElbowSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LeftElbowTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;LeftHipRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftHipRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftHipSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LeftHipTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;LeftKneeRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftKneeRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftKneeSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LeftKneeTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;LeftShoulderRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftShoulderRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftShoulderSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LeftShoulderTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;LeftToesRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftToesRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftToesSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LeftToesTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;LeftWristRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftWristRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftWristSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LeftWristTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;NeckRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;NeckRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;NeckSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;NeckTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;PelvisRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;PelvisRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;PelvisSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;PelvisTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;RightAnkleRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightAnkleRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightAnkleSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightAnkleTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;RightClavicleRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightClavicleRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightClavicleSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightClavicleTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;RightElbowRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightElbowRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightElbowSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightElbowTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;RightHipRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightHipRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightHipSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightHipTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;RightKneeRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightKneeRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightKneeSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightKneeTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;RightShoulderRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightShoulderRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightShoulderSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightShoulderTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;RightToesRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightToesRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightToesSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightToesTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;RightWristRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightWristRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RightWristSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightWristTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;RootRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RootRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;RootSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RootTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WaistRangeMax&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;WaistRangeMin&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;WaistSize&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;WaistTposeAdjustment&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},},},[&quot;IKControl&quot;] = {[&quot;Name&quot;] = &quot;IKControl&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ChainRoot&quot;] = {[&quot;Name&quot;] = &quot;ChainRoot&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EndEffector&quot;] = {[&quot;Name&quot;] = &quot;EndEffector&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EndEffectorOffset&quot;] = {[&quot;Name&quot;] = &quot;EndEffectorOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Offset&quot;] = {[&quot;Name&quot;] = &quot;Offset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Pole&quot;] = {[&quot;Name&quot;] = &quot;Pole&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Priority&quot;] = {[&quot;Name&quot;] = &quot;Priority&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SmoothTime&quot;] = {[&quot;Name&quot;] = &quot;SmoothTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Target&quot;] = {[&quot;Name&quot;] = &quot;Target&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Type&quot;] = {[&quot;Name&quot;] = &quot;Type&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;IKControlType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Weight&quot;] = {[&quot;Name&quot;] = &quot;Weight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;EndEffectorOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Offset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SmoothTime&quot;] = {[&quot;Float32&quot;] = 0.05,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Type&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Weight&quot;] = {[&quot;Float32&quot;] = 1,},},},[&quot;ILegacyStudioBridge&quot;] = {[&quot;Name&quot;] = &quot;ILegacyStudioBridge&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;IXPService&quot;] = {[&quot;Name&quot;] = &quot;IXPService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ImageButton&quot;] = {[&quot;Name&quot;] = &quot;ImageButton&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;GuiButton&quot;,[&quot;Properties&quot;] = {[&quot;ContentImageSize&quot;] = {[&quot;Name&quot;] = &quot;ContentImageSize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HoverImage&quot;] = {[&quot;Name&quot;] = &quot;HoverImage&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Image&quot;] = {[&quot;Name&quot;] = &quot;Image&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;ImageContent&quot;,[&quot;Migration&quot;] = &quot;ContentIdToContent&quot;,},},},},},[&quot;ImageColor3&quot;] = {[&quot;Name&quot;] = &quot;ImageColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImageContent&quot;] = {[&quot;Name&quot;] = &quot;ImageContent&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Content&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImageRectOffset&quot;] = {[&quot;Name&quot;] = &quot;ImageRectOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImageRectSize&quot;] = {[&quot;Name&quot;] = &quot;ImageRectSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImageTransparency&quot;] = {[&quot;Name&quot;] = &quot;ImageTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsLoaded&quot;] = {[&quot;Name&quot;] = &quot;IsLoaded&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PressedImage&quot;] = {[&quot;Name&quot;] = &quot;PressedImage&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ResampleMode&quot;] = {[&quot;Name&quot;] = &quot;ResampleMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ResamplerMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScaleType&quot;] = {[&quot;Name&quot;] = &quot;ScaleType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ScaleType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SliceCenter&quot;] = {[&quot;Name&quot;] = &quot;SliceCenter&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Rect&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SliceScale&quot;] = {[&quot;Name&quot;] = &quot;SliceScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TileSize&quot;] = {[&quot;Name&quot;] = &quot;TileSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AnchorPoint&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoButtonColor&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.6392157,0.63529414,0.64705884,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;BorderColor3&quot;] = {[&quot;Color3&quot;] = {0.105882354,0.16470589,0.20784314,},},[&quot;BorderMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BorderSizePixel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Draggable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;HoverImage&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;ImageColor3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;ImageContent&quot;] = {[&quot;Content&quot;] = &quot;None&quot;,},[&quot;ImageRectOffset&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;ImageRectSize&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;ImageTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Interactable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LayoutOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Modal&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Position&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;PressedImage&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;ResampleMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScaleType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Selectable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Selected&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeConstraint&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SliceCenter&quot;] = {[&quot;Rect&quot;] = {{0,0,},{0,0,},},},[&quot;SliceScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Style&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TileSize&quot;] = {[&quot;UDim2&quot;] = {{1,0,},{1,0,},},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;ImageHandleAdornment&quot;] = {[&quot;Name&quot;] = &quot;ImageHandleAdornment&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;HandleAdornment&quot;,[&quot;Properties&quot;] = {[&quot;Image&quot;] = {[&quot;Name&quot;] = &quot;Image&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AdornCullingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AlwaysOnTop&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.9490197,0.95294124,0.95294124,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Image&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://textures/SurfacesDefault.png&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector2&quot;] = {1,1,},},[&quot;SizeRelativeOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = -1,},},},[&quot;ImageLabel&quot;] = {[&quot;Name&quot;] = &quot;ImageLabel&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;GuiLabel&quot;,[&quot;Properties&quot;] = {[&quot;ContentImageSize&quot;] = {[&quot;Name&quot;] = &quot;ContentImageSize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Image&quot;] = {[&quot;Name&quot;] = &quot;Image&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;ImageContent&quot;,[&quot;Migration&quot;] = &quot;ContentIdToContent&quot;,},},},},},[&quot;ImageColor3&quot;] = {[&quot;Name&quot;] = &quot;ImageColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImageContent&quot;] = {[&quot;Name&quot;] = &quot;ImageContent&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Content&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImageRectOffset&quot;] = {[&quot;Name&quot;] = &quot;ImageRectOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImageRectSize&quot;] = {[&quot;Name&quot;] = &quot;ImageRectSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImageTransparency&quot;] = {[&quot;Name&quot;] = &quot;ImageTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsLoaded&quot;] = {[&quot;Name&quot;] = &quot;IsLoaded&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ResampleMode&quot;] = {[&quot;Name&quot;] = &quot;ResampleMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ResamplerMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScaleType&quot;] = {[&quot;Name&quot;] = &quot;ScaleType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ScaleType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SliceCenter&quot;] = {[&quot;Name&quot;] = &quot;SliceCenter&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Rect&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SliceScale&quot;] = {[&quot;Name&quot;] = &quot;SliceScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TileSize&quot;] = {[&quot;Name&quot;] = &quot;TileSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = false,},[&quot;AnchorPoint&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.6392157,0.63529414,0.64705884,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;BorderColor3&quot;] = {[&quot;Color3&quot;] = {0.105882354,0.16470589,0.20784314,},},[&quot;BorderMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BorderSizePixel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Draggable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ImageColor3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;ImageContent&quot;] = {[&quot;Content&quot;] = &quot;None&quot;,},[&quot;ImageRectOffset&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;ImageRectSize&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;ImageTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Interactable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LayoutOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Position&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;ResampleMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScaleType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Selectable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeConstraint&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SliceCenter&quot;] = {[&quot;Rect&quot;] = {{0,0,},{0,0,},},},[&quot;SliceScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TileSize&quot;] = {[&quot;UDim2&quot;] = {{1,0,},{1,0,},},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;IncrementalPatchBuilder&quot;] = {[&quot;Name&quot;] = &quot;IncrementalPatchBuilder&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AddPathsToBundle&quot;] = {[&quot;Name&quot;] = &quot;AddPathsToBundle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BuildDebouncePeriod&quot;] = {[&quot;Name&quot;] = &quot;BuildDebouncePeriod&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HighCompression&quot;] = {[&quot;Name&quot;] = &quot;HighCompression&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SerializePatch&quot;] = {[&quot;Name&quot;] = &quot;SerializePatch&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ZstdCompression&quot;] = {[&quot;Name&quot;] = &quot;ZstdCompression&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;InputAction&quot;] = {[&quot;Name&quot;] = &quot;InputAction&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Type&quot;] = {[&quot;Name&quot;] = &quot;Type&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;InputActionType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Type&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;InputBinding&quot;] = {[&quot;Name&quot;] = &quot;InputBinding&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;KeyCode&quot;] = {[&quot;Name&quot;] = &quot;KeyCode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;KeyCode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PressedThreshold&quot;] = {[&quot;Name&quot;] = &quot;PressedThreshold&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReleasedThreshold&quot;] = {[&quot;Name&quot;] = &quot;ReleasedThreshold&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Scale&quot;] = {[&quot;Name&quot;] = &quot;Scale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UIButton&quot;] = {[&quot;Name&quot;] = &quot;UIButton&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;KeyCode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;PressedThreshold&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;ReleasedThreshold&quot;] = {[&quot;Float32&quot;] = 0.2,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;InputContext&quot;] = {[&quot;Name&quot;] = &quot;InputContext&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Priority&quot;] = {[&quot;Name&quot;] = &quot;Priority&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Sink&quot;] = {[&quot;Name&quot;] = &quot;Sink&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 1000,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sink&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;InputObject&quot;] = {[&quot;Name&quot;] = &quot;InputObject&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Delta&quot;] = {[&quot;Name&quot;] = &quot;Delta&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;KeyCode&quot;] = {[&quot;Name&quot;] = &quot;KeyCode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;KeyCode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Position&quot;] = {[&quot;Name&quot;] = &quot;Position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UserInputState&quot;] = {[&quot;Name&quot;] = &quot;UserInputState&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UserInputState&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UserInputType&quot;] = {[&quot;Name&quot;] = &quot;UserInputType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UserInputType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;InsertService&quot;] = {[&quot;Name&quot;] = &quot;InsertService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AllowClientInsertModels&quot;] = {[&quot;Name&quot;] = &quot;AllowClientInsertModels&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AllowInsertFreeModels&quot;] = {[&quot;Name&quot;] = &quot;AllowInsertFreeModels&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotBrowsable&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AllowClientInsertModels&quot;] = {[&quot;Bool&quot;] = false,},[&quot;AllowInsertFreeModels&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Instance&quot;] = {[&quot;Name&quot;] = &quot;Instance&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Object&quot;,[&quot;Properties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Name&quot;] = &quot;Archivable&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;archivable&quot;,},},},},[&quot;Attributes&quot;] = {[&quot;Name&quot;] = &quot;Attributes&quot;,[&quot;Scriptability&quot;] = &quot;Custom&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Attributes&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;AttributesSerialize&quot;,},},},},[&quot;AttributesReplicate&quot;] = {[&quot;Name&quot;] = &quot;AttributesReplicate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AttributesSerialize&quot;] = {[&quot;Name&quot;] = &quot;AttributesSerialize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Attributes&quot;,},},},[&quot;Capabilities&quot;] = {[&quot;Name&quot;] = &quot;Capabilities&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SecurityCapabilities&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DataCost&quot;] = {[&quot;Name&quot;] = &quot;DataCost&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DefinesCapabilities&quot;] = {[&quot;Name&quot;] = &quot;DefinesCapabilities&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Sandboxed&quot;,},},},[&quot;HistoryId&quot;] = {[&quot;Name&quot;] = &quot;HistoryId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UniqueId&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Name&quot;] = {[&quot;Name&quot;] = &quot;Name&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Parent&quot;] = {[&quot;Name&quot;] = &quot;Parent&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PropertyStatusStudio&quot;] = {[&quot;Name&quot;] = &quot;PropertyStatusStudio&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PropertyStatus&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RobloxLocked&quot;] = {[&quot;Name&quot;] = &quot;RobloxLocked&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Sandboxed&quot;] = {[&quot;Name&quot;] = &quot;Sandboxed&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;DefinesCapabilities&quot;,},},},},[&quot;SourceAssetId&quot;] = {[&quot;Name&quot;] = &quot;SourceAssetId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Tags&quot;] = {[&quot;Name&quot;] = &quot;Tags&quot;,[&quot;Scriptability&quot;] = &quot;Custom&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Tags&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UniqueId&quot;] = {[&quot;Name&quot;] = &quot;UniqueId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UniqueId&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;archivable&quot;] = {[&quot;Name&quot;] = &quot;archivable&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Archivable&quot;,},},},[&quot;numExpectedDirectChildren&quot;] = {[&quot;Name&quot;] = &quot;numExpectedDirectChildren&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;InstanceAdornment&quot;] = {[&quot;Name&quot;] = &quot;InstanceAdornment&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GuiBase3d&quot;,[&quot;Properties&quot;] = {[&quot;Adornee&quot;] = {[&quot;Name&quot;] = &quot;Adornee&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;IntConstrainedValue&quot;] = {[&quot;Name&quot;] = &quot;IntConstrainedValue&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;ConstrainedValue&quot;] = {[&quot;Name&quot;] = &quot;ConstrainedValue&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxValue&quot;] = {[&quot;Name&quot;] = &quot;MaxValue&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinValue&quot;] = {[&quot;Name&quot;] = &quot;MinValue&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;value&quot;] = {[&quot;Name&quot;] = &quot;value&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxValue&quot;] = {[&quot;Int64&quot;] = 10,},[&quot;MinValue&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;value&quot;] = {[&quot;Int64&quot;] = 0,},},},[&quot;IntValue&quot;] = {[&quot;Name&quot;] = &quot;IntValue&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;Int64&quot;] = 0,},},},[&quot;InternalSyncItem&quot;] = {[&quot;Name&quot;] = &quot;InternalSyncItem&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AutoSync&quot;] = {[&quot;Name&quot;] = &quot;AutoSync&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Path&quot;] = {[&quot;Name&quot;] = &quot;Path&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Target&quot;] = {[&quot;Name&quot;] = &quot;Target&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;InternalSyncService&quot;] = {[&quot;Name&quot;] = &quot;InternalSyncService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;IntersectOperation&quot;] = {[&quot;Name&quot;] = &quot;IntersectOperation&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PartOperation&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;AeroMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AssetId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ChildData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;ChildData2&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {255,255,255,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FluidFidelityInternal&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FormFactor&quot;] = {[&quot;Enum&quot;] = 3,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InitialSize&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;MeshData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;MeshData2&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;PhysicalConfigData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;PhysicsData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RenderFidelity&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SmoothingAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UnscaledCofm&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolInertiaDiags&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolInertiaOffDiags&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolume&quot;] = {[&quot;Float32&quot;] = NaN,},[&quot;UsePartColor&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;InventoryPages&quot;] = {[&quot;Name&quot;] = &quot;InventoryPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;JointImportData&quot;] = {[&quot;Name&quot;] = &quot;JointImportData&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;BaseImportData&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;JointInstance&quot;] = {[&quot;Name&quot;] = &quot;JointInstance&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;C0&quot;] = {[&quot;Name&quot;] = &quot;C0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;C1&quot;] = {[&quot;Name&quot;] = &quot;C1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Part0&quot;] = {[&quot;Name&quot;] = &quot;Part0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Part1&quot;] = {[&quot;Name&quot;] = &quot;Part1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;part1&quot;] = {[&quot;Name&quot;] = &quot;part1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Part1&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;JointsService&quot;] = {[&quot;Name&quot;] = &quot;JointsService&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;KeyboardService&quot;] = {[&quot;Name&quot;] = &quot;KeyboardService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Keyframe&quot;] = {[&quot;Name&quot;] = &quot;Keyframe&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Time&quot;] = {[&quot;Name&quot;] = &quot;Time&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Time&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;KeyframeMarker&quot;] = {[&quot;Name&quot;] = &quot;KeyframeMarker&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;String&quot;] = &quot;&quot;,},},},[&quot;KeyframeSequence&quot;] = {[&quot;Name&quot;] = &quot;KeyframeSequence&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;AnimationClip&quot;,[&quot;Properties&quot;] = {[&quot;AuthoredHipHeight&quot;] = {[&quot;Name&quot;] = &quot;AuthoredHipHeight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AuthoredHipHeight&quot;] = {[&quot;Float32&quot;] = 2,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;GuidBinaryString&quot;] = {[&quot;BinaryString&quot;] = &quot;AAAAAAAAAAAAAAAAAAAAAA==&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Loop&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Priority&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;KeyframeSequenceProvider&quot;] = {[&quot;Name&quot;] = &quot;KeyframeSequenceProvider&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LSPFileSyncService&quot;] = {[&quot;Name&quot;] = &quot;LSPFileSyncService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LanguageService&quot;] = {[&quot;Name&quot;] = &quot;LanguageService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LayerCollector&quot;] = {[&quot;Name&quot;] = &quot;LayerCollector&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GuiBase2d&quot;,[&quot;Properties&quot;] = {[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ResetOnSpawn&quot;] = {[&quot;Name&quot;] = &quot;ResetOnSpawn&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ZIndexBehavior&quot;] = {[&quot;Name&quot;] = &quot;ZIndexBehavior&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ZIndexBehavior&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LegacyStudioBridge&quot;] = {[&quot;Name&quot;] = &quot;LegacyStudioBridge&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;ILegacyStudioBridge&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Light&quot;] = {[&quot;Name&quot;] = &quot;Light&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Brightness&quot;] = {[&quot;Name&quot;] = &quot;Brightness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Shadows&quot;] = {[&quot;Name&quot;] = &quot;Shadows&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Lighting&quot;] = {[&quot;Name&quot;] = &quot;Lighting&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Ambient&quot;] = {[&quot;Name&quot;] = &quot;Ambient&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Brightness&quot;] = {[&quot;Name&quot;] = &quot;Brightness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClockTime&quot;] = {[&quot;Name&quot;] = &quot;ClockTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ColorShift_Bottom&quot;] = {[&quot;Name&quot;] = &quot;ColorShift_Bottom&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ColorShift_Top&quot;] = {[&quot;Name&quot;] = &quot;ColorShift_Top&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EnvironmentDiffuseScale&quot;] = {[&quot;Name&quot;] = &quot;EnvironmentDiffuseScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EnvironmentSpecularScale&quot;] = {[&quot;Name&quot;] = &quot;EnvironmentSpecularScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ExposureCompensation&quot;] = {[&quot;Name&quot;] = &quot;ExposureCompensation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FogColor&quot;] = {[&quot;Name&quot;] = &quot;FogColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FogEnd&quot;] = {[&quot;Name&quot;] = &quot;FogEnd&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FogStart&quot;] = {[&quot;Name&quot;] = &quot;FogStart&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GeographicLatitude&quot;] = {[&quot;Name&quot;] = &quot;GeographicLatitude&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GlobalShadows&quot;] = {[&quot;Name&quot;] = &quot;GlobalShadows&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LightingStyle&quot;] = {[&quot;Name&quot;] = &quot;LightingStyle&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;LightingStyle&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OutdoorAmbient&quot;] = {[&quot;Name&quot;] = &quot;OutdoorAmbient&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Outlines&quot;] = {[&quot;Name&quot;] = &quot;Outlines&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PrioritizeLightingQuality&quot;] = {[&quot;Name&quot;] = &quot;PrioritizeLightingQuality&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShadowColor&quot;] = {[&quot;Name&quot;] = &quot;ShadowColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ShadowSoftness&quot;] = {[&quot;Name&quot;] = &quot;ShadowSoftness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Technology&quot;] = {[&quot;Name&quot;] = &quot;Technology&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Technology&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TimeOfDay&quot;] = {[&quot;Name&quot;] = &quot;TimeOfDay&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Ambient&quot;] = {[&quot;Color3&quot;] = {0.5,0.5,0.5,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {[&quot;RBX_BackupBrightness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;RBX_BackupExposureCompensation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RBX_LightingCompatibilityMigrated&quot;] = {[&quot;Bool&quot;] = true,},[&quot;RBX_LightingTechnologyUnifiedMigration&quot;] = {[&quot;Bool&quot;] = true,},[&quot;RBX_OriginalTechnologyOnFileLoad&quot;] = {[&quot;Int32&quot;] = 2,},},},[&quot;Brightness&quot;] = {[&quot;Float32&quot;] = 1.9812492,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ColorShift_Bottom&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},[&quot;ColorShift_Top&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},[&quot;EnvironmentDiffuseScale&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;EnvironmentSpecularScale&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;ExposureCompensation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;FogColor&quot;] = {[&quot;Color3&quot;] = {0.75,0.75,0.75,},},[&quot;FogEnd&quot;] = {[&quot;Float32&quot;] = 100000,},[&quot;FogStart&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;GeographicLatitude&quot;] = {[&quot;Float32&quot;] = 41.7333,},[&quot;GlobalShadows&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LightingStyle&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;OutdoorAmbient&quot;] = {[&quot;Color3&quot;] = {0.5,0.5,0.5,},},[&quot;Outlines&quot;] = {[&quot;Bool&quot;] = true,},[&quot;PrioritizeLightingQuality&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ShadowSoftness&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Technology&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;TimeOfDay&quot;] = {[&quot;String&quot;] = &quot;14:00:00&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LineForce&quot;] = {[&quot;Name&quot;] = &quot;LineForce&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;ApplyAtCenterOfMass&quot;] = {[&quot;Name&quot;] = &quot;ApplyAtCenterOfMass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InverseSquareLaw&quot;] = {[&quot;Name&quot;] = &quot;InverseSquareLaw&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Magnitude&quot;] = {[&quot;Name&quot;] = &quot;Magnitude&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxForce&quot;] = {[&quot;Name&quot;] = &quot;MaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReactionForceEnabled&quot;] = {[&quot;Name&quot;] = &quot;ReactionForceEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;ApplyAtCenterOfMass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 23,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InverseSquareLaw&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Magnitude&quot;] = {[&quot;Float32&quot;] = 1000,},[&quot;MaxForce&quot;] = {[&quot;Float32&quot;] = math.huge,},[&quot;ReactionForceEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;LineHandleAdornment&quot;] = {[&quot;Name&quot;] = &quot;LineHandleAdornment&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;HandleAdornment&quot;,[&quot;Properties&quot;] = {[&quot;Length&quot;] = {[&quot;Name&quot;] = &quot;Length&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Thickness&quot;] = {[&quot;Name&quot;] = &quot;Thickness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AdornCullingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AlwaysOnTop&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Length&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SizeRelativeOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Thickness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = -1,},},},[&quot;LinearVelocity&quot;] = {[&quot;Name&quot;] = &quot;LinearVelocity&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;ForceLimitMode&quot;] = {[&quot;Name&quot;] = &quot;ForceLimitMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ForceLimitMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ForceLimitsEnabled&quot;] = {[&quot;Name&quot;] = &quot;ForceLimitsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LineDirection&quot;] = {[&quot;Name&quot;] = &quot;LineDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LineVelocity&quot;] = {[&quot;Name&quot;] = &quot;LineVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxAxesForce&quot;] = {[&quot;Name&quot;] = &quot;MaxAxesForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxForce&quot;] = {[&quot;Name&quot;] = &quot;MaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxPlanarAxesForce&quot;] = {[&quot;Name&quot;] = &quot;MaxPlanarAxesForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlaneVelocity&quot;] = {[&quot;Name&quot;] = &quot;PlaneVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PrimaryTangentAxis&quot;] = {[&quot;Name&quot;] = &quot;PrimaryTangentAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RelativeTo&quot;] = {[&quot;Name&quot;] = &quot;RelativeTo&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ActuatorRelativeTo&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SecondaryTangentAxis&quot;] = {[&quot;Name&quot;] = &quot;SecondaryTangentAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VectorVelocity&quot;] = {[&quot;Name&quot;] = &quot;VectorVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VelocityConstraintMode&quot;] = {[&quot;Name&quot;] = &quot;VelocityConstraintMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VelocityConstraintMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 26,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ForceLimitMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ForceLimitsEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LineDirection&quot;] = {[&quot;Vector3&quot;] = {1,0,0,},},[&quot;LineVelocity&quot;] = {[&quot;Float32&quot;] = -0,},[&quot;MaxAxesForce&quot;] = {[&quot;Vector3&quot;] = {1000,1000,1000,},},[&quot;MaxForce&quot;] = {[&quot;Float32&quot;] = 1000,},[&quot;MaxPlanarAxesForce&quot;] = {[&quot;Vector2&quot;] = {1000,1000,},},[&quot;PlaneVelocity&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;PrimaryTangentAxis&quot;] = {[&quot;Vector3&quot;] = {1,0,0,},},[&quot;RelativeTo&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SecondaryTangentAxis&quot;] = {[&quot;Vector3&quot;] = {0,1,0,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VectorVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;VelocityConstraintMode&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;LinkingService&quot;] = {[&quot;Name&quot;] = &quot;LinkingService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LiveScriptingService&quot;] = {[&quot;Name&quot;] = &quot;LiveScriptingService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ServerLiveEditingMode&quot;] = {[&quot;Name&quot;] = &quot;ServerLiveEditingMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ServerLiveEditingMode&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LiveSyncService&quot;] = {[&quot;Name&quot;] = &quot;LiveSyncService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;HasSyncedInstances&quot;] = {[&quot;Name&quot;] = &quot;HasSyncedInstances&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LocalDebuggerConnection&quot;] = {[&quot;Name&quot;] = &quot;LocalDebuggerConnection&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;DebuggerConnection&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LocalScript&quot;] = {[&quot;Name&quot;] = &quot;LocalScript&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Script&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Disabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LinkedSource&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;RunContext&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScriptGuid&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Source&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LocalStorageService&quot;] = {[&quot;Name&quot;] = &quot;LocalStorageService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LocalizationService&quot;] = {[&quot;Name&quot;] = &quot;LocalizationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ForcePlayModeGameLocaleId&quot;] = {[&quot;Name&quot;] = &quot;ForcePlayModeGameLocaleId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ForcePlayModeRobloxLocaleId&quot;] = {[&quot;Name&quot;] = &quot;ForcePlayModeRobloxLocaleId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GameSourceLanguageId&quot;] = {[&quot;Name&quot;] = &quot;GameSourceLanguageId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsTextScraperRunning&quot;] = {[&quot;Name&quot;] = &quot;IsTextScraperRunning&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LocaleManifest&quot;] = {[&quot;Name&quot;] = &quot;LocaleManifest&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RobloxForcePlayModeGameLocaleId&quot;] = {[&quot;Name&quot;] = &quot;RobloxForcePlayModeGameLocaleId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RobloxForcePlayModeRobloxLocaleId&quot;] = {[&quot;Name&quot;] = &quot;RobloxForcePlayModeRobloxLocaleId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RobloxLocaleId&quot;] = {[&quot;Name&quot;] = &quot;RobloxLocaleId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ShouldUseCloudTable&quot;] = {[&quot;Name&quot;] = &quot;ShouldUseCloudTable&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SystemLocaleId&quot;] = {[&quot;Name&quot;] = &quot;SystemLocaleId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LocalizationTable&quot;] = {[&quot;Name&quot;] = &quot;LocalizationTable&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Contents&quot;] = {[&quot;Name&quot;] = &quot;Contents&quot;,[&quot;Scriptability&quot;] = &quot;Custom&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DevelopmentLanguage&quot;] = {[&quot;Name&quot;] = &quot;DevelopmentLanguage&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsExemptFromUGCAnalytics&quot;] = {[&quot;Name&quot;] = &quot;IsExemptFromUGCAnalytics&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Root&quot;] = {[&quot;Name&quot;] = &quot;Root&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SourceLocaleId&quot;] = {[&quot;Name&quot;] = &quot;SourceLocaleId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Contents&quot;] = {[&quot;String&quot;] = &quot;[]&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;SourceLocaleId&quot;] = {[&quot;String&quot;] = &quot;en-us&quot;,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LodDataEntity&quot;] = {[&quot;Name&quot;] = &quot;LodDataEntity&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;EntityData&quot;] = {[&quot;Name&quot;] = &quot;EntityData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EntityLodEnabled&quot;] = {[&quot;Name&quot;] = &quot;EntityLodEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EntityPosition&quot;] = {[&quot;Name&quot;] = &quot;EntityPosition&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EntityScale&quot;] = {[&quot;Name&quot;] = &quot;EntityScale&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EntitySource&quot;] = {[&quot;Name&quot;] = &quot;EntitySource&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LodDataService&quot;] = {[&quot;Name&quot;] = &quot;LodDataService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LogReporterService&quot;] = {[&quot;Name&quot;] = &quot;LogReporterService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LogService&quot;] = {[&quot;Name&quot;] = &quot;LogService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LoginService&quot;] = {[&quot;Name&quot;] = &quot;LoginService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LuaSettings&quot;] = {[&quot;Name&quot;] = &quot;LuaSettings&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Settings&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LuaSourceContainer&quot;] = {[&quot;Name&quot;] = &quot;LuaSourceContainer&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CachedRemoteSource&quot;] = {[&quot;Name&quot;] = &quot;CachedRemoteSource&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CachedRemoteSourceLoadState&quot;] = {[&quot;Name&quot;] = &quot;CachedRemoteSourceLoadState&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HasAssociatedDrafts&quot;] = {[&quot;Name&quot;] = &quot;HasAssociatedDrafts&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsDifferentFromFileSystem&quot;] = {[&quot;Name&quot;] = &quot;IsDifferentFromFileSystem&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;OriginalScriptGuid&quot;] = {[&quot;Name&quot;] = &quot;OriginalScriptGuid&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SandboxedSource&quot;] = {[&quot;Name&quot;] = &quot;SandboxedSource&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ScriptGuid&quot;] = {[&quot;Name&quot;] = &quot;ScriptGuid&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;isPlayerScript&quot;] = {[&quot;Name&quot;] = &quot;isPlayerScript&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ScriptGuid&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LuaWebService&quot;] = {[&quot;Name&quot;] = &quot;LuaWebService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;LuauScriptAnalyzerService&quot;] = {[&quot;Name&quot;] = &quot;LuauScriptAnalyzerService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MLModelDeliveryService&quot;] = {[&quot;Name&quot;] = &quot;MLModelDeliveryService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ManualGlue&quot;] = {[&quot;Name&quot;] = &quot;ManualGlue&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;ManualSurfaceJointInstance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;C0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;C1&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ManualSurfaceJointInstance&quot;] = {[&quot;Name&quot;] = &quot;ManualSurfaceJointInstance&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;JointInstance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ManualWeld&quot;] = {[&quot;Name&quot;] = &quot;ManualWeld&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;ManualSurfaceJointInstance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;C0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;C1&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MarkerCurve&quot;] = {[&quot;Name&quot;] = &quot;MarkerCurve&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Length&quot;] = {[&quot;Name&quot;] = &quot;Length&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ValuesAndTimes&quot;] = {[&quot;Name&quot;] = &quot;ValuesAndTimes&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ValuesAndTimes&quot;] = {[&quot;BinaryString&quot;] = &quot;AQAAAAAAAAABAAAAAAAAAA==&quot;,},},},[&quot;MarketplaceService&quot;] = {[&quot;Name&quot;] = &quot;MarketplaceService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MatchmakingService&quot;] = {[&quot;Name&quot;] = &quot;MatchmakingService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MaterialGenerationService&quot;] = {[&quot;Name&quot;] = &quot;MaterialGenerationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MaterialGenerationSession&quot;] = {[&quot;Name&quot;] = &quot;MaterialGenerationSession&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MaterialImportData&quot;] = {[&quot;Name&quot;] = &quot;MaterialImportData&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;BaseImportData&quot;,[&quot;Properties&quot;] = {[&quot;DiffuseFilePath&quot;] = {[&quot;Name&quot;] = &quot;DiffuseFilePath&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsPbr&quot;] = {[&quot;Name&quot;] = &quot;IsPbr&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MetalnessFilePath&quot;] = {[&quot;Name&quot;] = &quot;MetalnessFilePath&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NormalFilePath&quot;] = {[&quot;Name&quot;] = &quot;NormalFilePath&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RoughnessFilePath&quot;] = {[&quot;Name&quot;] = &quot;RoughnessFilePath&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MaterialService&quot;] = {[&quot;Name&quot;] = &quot;MaterialService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AsphaltName&quot;] = {[&quot;Name&quot;] = &quot;AsphaltName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BasaltName&quot;] = {[&quot;Name&quot;] = &quot;BasaltName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BrickName&quot;] = {[&quot;Name&quot;] = &quot;BrickName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CardboardName&quot;] = {[&quot;Name&quot;] = &quot;CardboardName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CarpetName&quot;] = {[&quot;Name&quot;] = &quot;CarpetName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CeramicTilesName&quot;] = {[&quot;Name&quot;] = &quot;CeramicTilesName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClayRoofTilesName&quot;] = {[&quot;Name&quot;] = &quot;ClayRoofTilesName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CobblestoneName&quot;] = {[&quot;Name&quot;] = &quot;CobblestoneName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ConcreteName&quot;] = {[&quot;Name&quot;] = &quot;ConcreteName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CorrodedMetalName&quot;] = {[&quot;Name&quot;] = &quot;CorrodedMetalName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CrackedLavaName&quot;] = {[&quot;Name&quot;] = &quot;CrackedLavaName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DiamondPlateName&quot;] = {[&quot;Name&quot;] = &quot;DiamondPlateName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FabricName&quot;] = {[&quot;Name&quot;] = &quot;FabricName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FoilName&quot;] = {[&quot;Name&quot;] = &quot;FoilName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GlacierName&quot;] = {[&quot;Name&quot;] = &quot;GlacierName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GraniteName&quot;] = {[&quot;Name&quot;] = &quot;GraniteName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GrassName&quot;] = {[&quot;Name&quot;] = &quot;GrassName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GroundName&quot;] = {[&quot;Name&quot;] = &quot;GroundName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IceName&quot;] = {[&quot;Name&quot;] = &quot;IceName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeafyGrassName&quot;] = {[&quot;Name&quot;] = &quot;LeafyGrassName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LeatherName&quot;] = {[&quot;Name&quot;] = &quot;LeatherName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LimestoneName&quot;] = {[&quot;Name&quot;] = &quot;LimestoneName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MarbleName&quot;] = {[&quot;Name&quot;] = &quot;MarbleName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MetalName&quot;] = {[&quot;Name&quot;] = &quot;MetalName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MudName&quot;] = {[&quot;Name&quot;] = &quot;MudName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PavementName&quot;] = {[&quot;Name&quot;] = &quot;PavementName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PebbleName&quot;] = {[&quot;Name&quot;] = &quot;PebbleName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlasterName&quot;] = {[&quot;Name&quot;] = &quot;PlasterName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlasticName&quot;] = {[&quot;Name&quot;] = &quot;PlasticName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RockName&quot;] = {[&quot;Name&quot;] = &quot;RockName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RoofShinglesName&quot;] = {[&quot;Name&quot;] = &quot;RoofShinglesName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RubberName&quot;] = {[&quot;Name&quot;] = &quot;RubberName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SaltName&quot;] = {[&quot;Name&quot;] = &quot;SaltName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SandName&quot;] = {[&quot;Name&quot;] = &quot;SandName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SandstoneName&quot;] = {[&quot;Name&quot;] = &quot;SandstoneName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SlateName&quot;] = {[&quot;Name&quot;] = &quot;SlateName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SmoothPlasticName&quot;] = {[&quot;Name&quot;] = &quot;SmoothPlasticName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SnowName&quot;] = {[&quot;Name&quot;] = &quot;SnowName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Use2022Materials&quot;] = {[&quot;Name&quot;] = &quot;Use2022Materials&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;Use2022MaterialsXml&quot;,},},},},[&quot;Use2022MaterialsXml&quot;] = {[&quot;Name&quot;] = &quot;Use2022MaterialsXml&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WoodName&quot;] = {[&quot;Name&quot;] = &quot;WoodName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WoodPlanksName&quot;] = {[&quot;Name&quot;] = &quot;WoodPlanksName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AsphaltName&quot;] = {[&quot;String&quot;] = &quot;Asphalt&quot;,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BasaltName&quot;] = {[&quot;String&quot;] = &quot;Basalt&quot;,},[&quot;BrickName&quot;] = {[&quot;String&quot;] = &quot;Brick&quot;,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CardboardName&quot;] = {[&quot;String&quot;] = &quot;Cardboard&quot;,},[&quot;CarpetName&quot;] = {[&quot;String&quot;] = &quot;Carpet&quot;,},[&quot;CeramicTilesName&quot;] = {[&quot;String&quot;] = &quot;CeramicTiles&quot;,},[&quot;ClayRoofTilesName&quot;] = {[&quot;String&quot;] = &quot;ClayRoofTiles&quot;,},[&quot;CobblestoneName&quot;] = {[&quot;String&quot;] = &quot;Cobblestone&quot;,},[&quot;ConcreteName&quot;] = {[&quot;String&quot;] = &quot;Concrete&quot;,},[&quot;CorrodedMetalName&quot;] = {[&quot;String&quot;] = &quot;CorrodedMetal&quot;,},[&quot;CrackedLavaName&quot;] = {[&quot;String&quot;] = &quot;CrackedLava&quot;,},[&quot;DiamondPlateName&quot;] = {[&quot;String&quot;] = &quot;DiamondPlate&quot;,},[&quot;FabricName&quot;] = {[&quot;String&quot;] = &quot;Fabric&quot;,},[&quot;FoilName&quot;] = {[&quot;String&quot;] = &quot;Foil&quot;,},[&quot;GlacierName&quot;] = {[&quot;String&quot;] = &quot;Glacier&quot;,},[&quot;GraniteName&quot;] = {[&quot;String&quot;] = &quot;Granite&quot;,},[&quot;GrassName&quot;] = {[&quot;String&quot;] = &quot;Grass&quot;,},[&quot;GroundName&quot;] = {[&quot;String&quot;] = &quot;Ground&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IceName&quot;] = {[&quot;String&quot;] = &quot;Ice&quot;,},[&quot;LeafyGrassName&quot;] = {[&quot;String&quot;] = &quot;LeafyGrass&quot;,},[&quot;LeatherName&quot;] = {[&quot;String&quot;] = &quot;Leather&quot;,},[&quot;LimestoneName&quot;] = {[&quot;String&quot;] = &quot;Limestone&quot;,},[&quot;MarbleName&quot;] = {[&quot;String&quot;] = &quot;Marble&quot;,},[&quot;MetalName&quot;] = {[&quot;String&quot;] = &quot;Metal&quot;,},[&quot;MudName&quot;] = {[&quot;String&quot;] = &quot;Mud&quot;,},[&quot;PavementName&quot;] = {[&quot;String&quot;] = &quot;Pavement&quot;,},[&quot;PebbleName&quot;] = {[&quot;String&quot;] = &quot;Pebble&quot;,},[&quot;PlasterName&quot;] = {[&quot;String&quot;] = &quot;Plaster&quot;,},[&quot;PlasticName&quot;] = {[&quot;String&quot;] = &quot;Plastic&quot;,},[&quot;RockName&quot;] = {[&quot;String&quot;] = &quot;Rock&quot;,},[&quot;RoofShinglesName&quot;] = {[&quot;String&quot;] = &quot;RoofShingles&quot;,},[&quot;RubberName&quot;] = {[&quot;String&quot;] = &quot;Rubber&quot;,},[&quot;SaltName&quot;] = {[&quot;String&quot;] = &quot;Salt&quot;,},[&quot;SandName&quot;] = {[&quot;String&quot;] = &quot;Sand&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SandstoneName&quot;] = {[&quot;String&quot;] = &quot;Sandstone&quot;,},[&quot;SlateName&quot;] = {[&quot;String&quot;] = &quot;Slate&quot;,},[&quot;SmoothPlasticName&quot;] = {[&quot;String&quot;] = &quot;SmoothPlastic&quot;,},[&quot;SnowName&quot;] = {[&quot;String&quot;] = &quot;Snow&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Use2022MaterialsXml&quot;] = {[&quot;Bool&quot;] = false,},[&quot;WoodName&quot;] = {[&quot;String&quot;] = &quot;Wood&quot;,},[&quot;WoodPlanksName&quot;] = {[&quot;String&quot;] = &quot;WoodPlanks&quot;,},},},[&quot;MaterialVariant&quot;] = {[&quot;Name&quot;] = &quot;MaterialVariant&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AvgMetalness&quot;] = {[&quot;Name&quot;] = &quot;AvgMetalness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AvgRoughness&quot;] = {[&quot;Name&quot;] = &quot;AvgRoughness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;BaseMaterial&quot;] = {[&quot;Name&quot;] = &quot;BaseMaterial&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Material&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ColorMap&quot;] = {[&quot;Name&quot;] = &quot;ColorMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;Name&quot;] = &quot;CustomPhysicalProperties&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;PhysicalProperties&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaterialPattern&quot;] = {[&quot;Name&quot;] = &quot;MaterialPattern&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MaterialPattern&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MetalnessMap&quot;] = {[&quot;Name&quot;] = &quot;MetalnessMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NormalMap&quot;] = {[&quot;Name&quot;] = &quot;NormalMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RoughnessMap&quot;] = {[&quot;Name&quot;] = &quot;RoughnessMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StudsPerTile&quot;] = {[&quot;Name&quot;] = &quot;StudsPerTile&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TexturePack&quot;] = {[&quot;Name&quot;] = &quot;TexturePack&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BaseMaterial&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ColorMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaterialPattern&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;MetalnessMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;NormalMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;RoughnessMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;StudsPerTile&quot;] = {[&quot;Float32&quot;] = 10,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TexturePack&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MemStorageConnection&quot;] = {[&quot;Name&quot;] = &quot;MemStorageConnection&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MemStorageService&quot;] = {[&quot;Name&quot;] = &quot;MemStorageService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MemoryStoreHashMap&quot;] = {[&quot;Name&quot;] = &quot;MemoryStoreHashMap&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MemoryStoreHashMapPages&quot;] = {[&quot;Name&quot;] = &quot;MemoryStoreHashMapPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MemoryStoreQueue&quot;] = {[&quot;Name&quot;] = &quot;MemoryStoreQueue&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MemoryStoreService&quot;] = {[&quot;Name&quot;] = &quot;MemoryStoreService&quot;,[&quot;Tags&quot;] = {&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MemoryStoreSortedMap&quot;] = {[&quot;Name&quot;] = &quot;MemoryStoreSortedMap&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MeshContentProvider&quot;] = {[&quot;Name&quot;] = &quot;MeshContentProvider&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;CacheableContentProvider&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MeshImportData&quot;] = {[&quot;Name&quot;] = &quot;MeshImportData&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;BaseImportData&quot;,[&quot;Properties&quot;] = {[&quot;Anchored&quot;] = {[&quot;Name&quot;] = &quot;Anchored&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CageManifold&quot;] = {[&quot;Name&quot;] = &quot;CageManifold&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CageMeshIntersectedPreview&quot;] = {[&quot;Name&quot;] = &quot;CageMeshIntersectedPreview&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CageMeshNotIntersected&quot;] = {[&quot;Name&quot;] = &quot;CageMeshNotIntersected&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CageNoOverlappingVertices&quot;] = {[&quot;Name&quot;] = &quot;CageNoOverlappingVertices&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CageNonManifoldPreview&quot;] = {[&quot;Name&quot;] = &quot;CageNonManifoldPreview&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CageOverlappingVerticesPreview&quot;] = {[&quot;Name&quot;] = &quot;CageOverlappingVerticesPreview&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CageUVMatched&quot;] = {[&quot;Name&quot;] = &quot;CageUVMatched&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CageUVMisMatchedPreview&quot;] = {[&quot;Name&quot;] = &quot;CageUVMisMatchedPreview&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Dimensions&quot;] = {[&quot;Name&quot;] = &quot;Dimensions&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DoubleSided&quot;] = {[&quot;Name&quot;] = &quot;DoubleSided&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IgnoreVertexColors&quot;] = {[&quot;Name&quot;] = &quot;IgnoreVertexColors&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IrrelevantCageModifiedPreview&quot;] = {[&quot;Name&quot;] = &quot;IrrelevantCageModifiedPreview&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MeshHoleDetectedPreview&quot;] = {[&quot;Name&quot;] = &quot;MeshHoleDetectedPreview&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MeshNoHoleDetected&quot;] = {[&quot;Name&quot;] = &quot;MeshNoHoleDetected&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;NoIrrelevantCageModified&quot;] = {[&quot;Name&quot;] = &quot;NoIrrelevantCageModified&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;NoOuterCageFarExtendedFromMesh&quot;] = {[&quot;Name&quot;] = &quot;NoOuterCageFarExtendedFromMesh&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;OuterCageFarExtendedFromMeshPreview&quot;] = {[&quot;Name&quot;] = &quot;OuterCageFarExtendedFromMeshPreview&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PolygonCount&quot;] = {[&quot;Name&quot;] = &quot;PolygonCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UseImportedPivot&quot;] = {[&quot;Name&quot;] = &quot;UseImportedPivot&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MeshPart&quot;] = {[&quot;Name&quot;] = &quot;MeshPart&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;TriangleMeshPart&quot;,[&quot;Properties&quot;] = {[&quot;AlternateMeshHash&quot;] = {[&quot;Name&quot;] = &quot;AlternateMeshHash&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DoubleSided&quot;] = {[&quot;Name&quot;] = &quot;DoubleSided&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EditableMeshString&quot;] = {[&quot;Name&quot;] = &quot;EditableMeshString&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HasJointOffset&quot;] = {[&quot;Name&quot;] = &quot;HasJointOffset&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HasSkinnedMesh&quot;] = {[&quot;Name&quot;] = &quot;HasSkinnedMesh&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InitialSize&quot;] = {[&quot;Name&quot;] = &quot;InitialSize&quot;,[&quot;Scriptability&quot;] = &quot;Custom&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;JointOffset&quot;] = {[&quot;Name&quot;] = &quot;JointOffset&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MeshContent&quot;] = {[&quot;Name&quot;] = &quot;MeshContent&quot;,[&quot;Scriptability&quot;] = &quot;Custom&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Content&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MeshID&quot;] = {[&quot;Name&quot;] = &quot;MeshID&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MeshId&quot;] = {[&quot;Name&quot;] = &quot;MeshId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;MeshContent&quot;,[&quot;Migration&quot;] = &quot;ContentIdToContent&quot;,},},},},},[&quot;PhysicsData&quot;] = {[&quot;Name&quot;] = &quot;PhysicsData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RenderFidelity&quot;] = {[&quot;Name&quot;] = &quot;RenderFidelity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RenderFidelity&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RenderFidelityReplicate&quot;] = {[&quot;Name&quot;] = &quot;RenderFidelityReplicate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RenderFidelity&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextureContent&quot;] = {[&quot;Name&quot;] = &quot;TextureContent&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Content&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextureID&quot;] = {[&quot;Name&quot;] = &quot;TextureID&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;TextureContent&quot;,[&quot;Migration&quot;] = &quot;ContentIdToContent&quot;,},},},},},[&quot;VertexCount&quot;] = {[&quot;Name&quot;] = &quot;VertexCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AeroMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {163,162,165,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;DoubleSided&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FluidFidelityInternal&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HasJointOffset&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HasSkinnedMesh&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InitialSize&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;JointOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;MeshContent&quot;] = {[&quot;Content&quot;] = &quot;None&quot;,},[&quot;PhysicalConfigData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;PhysicsData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RenderFidelity&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TextureContent&quot;] = {[&quot;Content&quot;] = &quot;None&quot;,},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UnscaledCofm&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolInertiaDiags&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolInertiaOffDiags&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolume&quot;] = {[&quot;Float32&quot;] = NaN,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;VertexCount&quot;] = {[&quot;Int32&quot;] = 0,},},},[&quot;Message&quot;] = {[&quot;Name&quot;] = &quot;Message&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Text&quot;] = {[&quot;Name&quot;] = &quot;Text&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Text&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MessageBusConnection&quot;] = {[&quot;Name&quot;] = &quot;MessageBusConnection&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MessageBusService&quot;] = {[&quot;Name&quot;] = &quot;MessageBusService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MessagingService&quot;] = {[&quot;Name&quot;] = &quot;MessagingService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MetaBreakpoint&quot;] = {[&quot;Name&quot;] = &quot;MetaBreakpoint&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Condition&quot;] = {[&quot;Name&quot;] = &quot;Condition&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ContinueExecution&quot;] = {[&quot;Name&quot;] = &quot;ContinueExecution&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Id&quot;] = {[&quot;Name&quot;] = &quot;Id&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsLogpoint&quot;] = {[&quot;Name&quot;] = &quot;IsLogpoint&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Line&quot;] = {[&quot;Name&quot;] = &quot;Line&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LogMessage&quot;] = {[&quot;Name&quot;] = &quot;LogMessage&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RemoveOnHit&quot;] = {[&quot;Name&quot;] = &quot;RemoveOnHit&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Script&quot;] = {[&quot;Name&quot;] = &quot;Script&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Valid&quot;] = {[&quot;Name&quot;] = &quot;Valid&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Condition&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ContinueExecution&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Line&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;LogMessage&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;RemoveOnHit&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Script&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MetaBreakpointContext&quot;] = {[&quot;Name&quot;] = &quot;MetaBreakpointContext&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ContextDataInternal&quot;] = {[&quot;Name&quot;] = &quot;ContextDataInternal&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ContextDataInternal&quot;] = {[&quot;String&quot;] = &quot;0 1 2 &quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MetaBreakpointManager&quot;] = {[&quot;Name&quot;] = &quot;MetaBreakpointManager&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Model&quot;] = {[&quot;Name&quot;] = &quot;Model&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PVInstance&quot;,[&quot;Properties&quot;] = {[&quot;LevelOfDetail&quot;] = {[&quot;Name&quot;] = &quot;LevelOfDetail&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ModelLevelOfDetail&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LodEntity&quot;] = {[&quot;Name&quot;] = &quot;LodEntity&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ModelMeshCFrame&quot;] = {[&quot;Name&quot;] = &quot;ModelMeshCFrame&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ModelMeshData&quot;] = {[&quot;Name&quot;] = &quot;ModelMeshData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ModelMeshSize&quot;] = {[&quot;Name&quot;] = &quot;ModelMeshSize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ModelStreamingMode&quot;] = {[&quot;Name&quot;] = &quot;ModelStreamingMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ModelStreamingMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NeedsPivotMigration&quot;] = {[&quot;Name&quot;] = &quot;NeedsPivotMigration&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PrimaryPart&quot;] = {[&quot;Name&quot;] = &quot;PrimaryPart&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Scale&quot;] = {[&quot;Name&quot;] = &quot;Scale&quot;,[&quot;Scriptability&quot;] = &quot;Custom&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;ScaleFactor&quot;,},},},},[&quot;ScaleFactor&quot;] = {[&quot;Name&quot;] = &quot;ScaleFactor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Scale&quot;,},},},[&quot;WorldPivot&quot;] = {[&quot;Name&quot;] = &quot;WorldPivot&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WorldPivotData&quot;] = {[&quot;Name&quot;] = &quot;WorldPivotData&quot;,[&quot;Scriptability&quot;] = &quot;Custom&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;OptionalCFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LevelOfDetail&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ModelMeshCFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;ModelMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;ModelMeshSize&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;ModelStreamingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;NeedsPivotMigration&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WorldPivotData&quot;] = {[&quot;OptionalCFrame&quot;] = nil,},},},[&quot;ModuleScript&quot;] = {[&quot;Name&quot;] = &quot;ModuleScript&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;LuaSourceContainer&quot;,[&quot;Properties&quot;] = {[&quot;Confidential&quot;] = {[&quot;Name&quot;] = &quot;Confidential&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LinkedSource&quot;] = {[&quot;Name&quot;] = &quot;LinkedSource&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Source&quot;] = {[&quot;Name&quot;] = &quot;Source&quot;,[&quot;Scriptability&quot;] = &quot;Custom&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LinkedSource&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScriptGuid&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Source&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Motor&quot;] = {[&quot;Name&quot;] = &quot;Motor&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;JointInstance&quot;,[&quot;Properties&quot;] = {[&quot;CurrentAngle&quot;] = {[&quot;Name&quot;] = &quot;CurrentAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DesiredAngle&quot;] = {[&quot;Name&quot;] = &quot;DesiredAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxVelocity&quot;] = {[&quot;Name&quot;] = &quot;MaxVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReplicateCurrentAngle&quot;] = {[&quot;Name&quot;] = &quot;ReplicateCurrentAngle&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;C0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;C1&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;DesiredAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxVelocity&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Motor6D&quot;] = {[&quot;Name&quot;] = &quot;Motor6D&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Motor&quot;,[&quot;Properties&quot;] = {[&quot;ChildName&quot;] = {[&quot;Name&quot;] = &quot;ChildName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ParentName&quot;] = {[&quot;Name&quot;] = &quot;ParentName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ReplicateCurrentAngle6D&quot;] = {[&quot;Name&quot;] = &quot;ReplicateCurrentAngle6D&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ReplicateCurrentOffset6D&quot;] = {[&quot;Name&quot;] = &quot;ReplicateCurrentOffset6D&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Transform&quot;] = {[&quot;Name&quot;] = &quot;Transform&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;C0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;C1&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;DesiredAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxVelocity&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MotorFeature&quot;] = {[&quot;Name&quot;] = &quot;MotorFeature&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;Feature&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;FaceId&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InOut&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;LeftRight&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopBottom&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Mouse&quot;] = {[&quot;Name&quot;] = &quot;Mouse&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Hit&quot;] = {[&quot;Name&quot;] = &quot;Hit&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Icon&quot;] = {[&quot;Name&quot;] = &quot;Icon&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Origin&quot;] = {[&quot;Name&quot;] = &quot;Origin&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Target&quot;] = {[&quot;Name&quot;] = &quot;Target&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TargetFilter&quot;] = {[&quot;Name&quot;] = &quot;TargetFilter&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TargetSurface&quot;] = {[&quot;Name&quot;] = &quot;TargetSurface&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NormalId&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UnitRay&quot;] = {[&quot;Name&quot;] = &quot;UnitRay&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ray&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ViewSizeX&quot;] = {[&quot;Name&quot;] = &quot;ViewSizeX&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ViewSizeY&quot;] = {[&quot;Name&quot;] = &quot;ViewSizeY&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;X&quot;] = {[&quot;Name&quot;] = &quot;X&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Y&quot;] = {[&quot;Name&quot;] = &quot;Y&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;hit&quot;] = {[&quot;Name&quot;] = &quot;hit&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;target&quot;] = {[&quot;Name&quot;] = &quot;target&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MouseService&quot;] = {[&quot;Name&quot;] = &quot;MouseService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;MultipleDocumentInterfaceInstance&quot;] = {[&quot;Name&quot;] = &quot;MultipleDocumentInterfaceInstance&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;FocusedDataModelSession&quot;] = {[&quot;Name&quot;] = &quot;FocusedDataModelSession&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;NegateOperation&quot;] = {[&quot;Name&quot;] = &quot;NegateOperation&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PartOperation&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;AeroMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AssetId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = false,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ChildData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;ChildData2&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {255,255,255,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FluidFidelityInternal&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FormFactor&quot;] = {[&quot;Enum&quot;] = 3,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InitialSize&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;MeshData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;MeshData2&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;PhysicalConfigData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;PhysicsData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RenderFidelity&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SmoothingAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0.1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UnscaledCofm&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolInertiaDiags&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolInertiaOffDiags&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolume&quot;] = {[&quot;Float32&quot;] = NaN,},[&quot;UsePartColor&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;NetworkClient&quot;] = {[&quot;Name&quot;] = &quot;NetworkClient&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;NetworkPeer&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;NetworkMarker&quot;] = {[&quot;Name&quot;] = &quot;NetworkMarker&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;NetworkPeer&quot;] = {[&quot;Name&quot;] = &quot;NetworkPeer&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;NetworkReplicator&quot;] = {[&quot;Name&quot;] = &quot;NetworkReplicator&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;NetworkServer&quot;] = {[&quot;Name&quot;] = &quot;NetworkServer&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;NetworkPeer&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;NetworkSettings&quot;] = {[&quot;Name&quot;] = &quot;NetworkSettings&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;EmulatedTotalMemoryInMB&quot;] = {[&quot;Name&quot;] = &quot;EmulatedTotalMemoryInMB&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FreeMemoryMBytes&quot;] = {[&quot;Name&quot;] = &quot;FreeMemoryMBytes&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HttpProxyEnabled&quot;] = {[&quot;Name&quot;] = &quot;HttpProxyEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HttpProxyURL&quot;] = {[&quot;Name&quot;] = &quot;HttpProxyURL&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IncomingReplicationLag&quot;] = {[&quot;Name&quot;] = &quot;IncomingReplicationLag&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OpenCertManagerDialog&quot;] = {[&quot;Name&quot;] = &quot;OpenCertManagerDialog&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PrintJoinSizeBreakdown&quot;] = {[&quot;Name&quot;] = &quot;PrintJoinSizeBreakdown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PrintPhysicsErrors&quot;] = {[&quot;Name&quot;] = &quot;PrintPhysicsErrors&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PrintStreamInstanceQuota&quot;] = {[&quot;Name&quot;] = &quot;PrintStreamInstanceQuota&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RandomizeJoinInstanceOrder&quot;] = {[&quot;Name&quot;] = &quot;RandomizeJoinInstanceOrder&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RenderStreamedRegions&quot;] = {[&quot;Name&quot;] = &quot;RenderStreamedRegions&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShowActiveAnimationAsset&quot;] = {[&quot;Name&quot;] = &quot;ShowActiveAnimationAsset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;NoCollisionConstraint&quot;] = {[&quot;Name&quot;] = &quot;NoCollisionConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Part0&quot;] = {[&quot;Name&quot;] = &quot;Part0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Part1&quot;] = {[&quot;Name&quot;] = &quot;Part1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Noise&quot;] = {[&quot;Name&quot;] = &quot;Noise&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;NoiseType&quot;] = {[&quot;Name&quot;] = &quot;NoiseType&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NoiseType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Seed&quot;] = {[&quot;Name&quot;] = &quot;Seed&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;NonReplicatedCSGDictionaryService&quot;] = {[&quot;Name&quot;] = &quot;NonReplicatedCSGDictionaryService&quot;,[&quot;Tags&quot;] = {&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;FlyweightService&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;NotificationService&quot;] = {[&quot;Name&quot;] = &quot;NotificationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;IsConnected&quot;] = {[&quot;Name&quot;] = &quot;IsConnected&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsLuaChatEnabled&quot;] = {[&quot;Name&quot;] = &quot;IsLuaChatEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsLuaGameDetailsEnabled&quot;] = {[&quot;Name&quot;] = &quot;IsLuaGameDetailsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SelectedTheme&quot;] = {[&quot;Name&quot;] = &quot;SelectedTheme&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;NumberPose&quot;] = {[&quot;Name&quot;] = &quot;NumberPose&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PoseBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;EasingDirection&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;EasingStyle&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;Weight&quot;] = {[&quot;Float32&quot;] = 1,},},},[&quot;NumberValue&quot;] = {[&quot;Name&quot;] = &quot;NumberValue&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;Float64&quot;] = 0,},},},[&quot;Object&quot;] = {[&quot;Name&quot;] = &quot;Object&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = nil,[&quot;Properties&quot;] = {[&quot;ClassName&quot;] = {[&quot;Name&quot;] = &quot;ClassName&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;className&quot;] = {[&quot;Name&quot;] = &quot;className&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;ClassName&quot;,},},},},[&quot;DefaultProperties&quot;] = {},},[&quot;ObjectValue&quot;] = {[&quot;Name&quot;] = &quot;ObjectValue&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;OmniRecommendationsService&quot;] = {[&quot;Name&quot;] = &quot;OmniRecommendationsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;OpenCloudApiV1&quot;] = {[&quot;Name&quot;] = &quot;OpenCloudApiV1&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;OpenCloudService&quot;] = {[&quot;Name&quot;] = &quot;OpenCloudService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;OperationGraph&quot;] = {[&quot;Name&quot;] = &quot;OperationGraph&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;OrderedDataStore&quot;] = {[&quot;Name&quot;] = &quot;OrderedDataStore&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;GlobalDataStore&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;OutfitPages&quot;] = {[&quot;Name&quot;] = &quot;OutfitPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PVAdornment&quot;] = {[&quot;Name&quot;] = &quot;PVAdornment&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GuiBase3d&quot;,[&quot;Properties&quot;] = {[&quot;Adornee&quot;] = {[&quot;Name&quot;] = &quot;Adornee&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PVInstance&quot;] = {[&quot;Name&quot;] = &quot;PVInstance&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Origin&quot;] = {[&quot;Name&quot;] = &quot;Origin&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Pivot Offset&quot;] = {[&quot;Name&quot;] = &quot;Pivot Offset&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PackageLink&quot;] = {[&quot;Name&quot;] = &quot;PackageLink&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AutoUpdate&quot;] = {[&quot;Name&quot;] = &quot;AutoUpdate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CanAutoUpdate&quot;] = {[&quot;Name&quot;] = &quot;CanAutoUpdate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Creator&quot;] = {[&quot;Name&quot;] = &quot;Creator&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DefaultName&quot;] = {[&quot;Name&quot;] = &quot;DefaultName&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HasNewVersion&quot;] = {[&quot;Name&quot;] = &quot;HasNewVersion&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ModifiedState&quot;] = {[&quot;Name&quot;] = &quot;ModifiedState&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PackageAssetName&quot;] = {[&quot;Name&quot;] = &quot;PackageAssetName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PackageGuid&quot;] = {[&quot;Name&quot;] = &quot;PackageGuid&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PackageId&quot;] = {[&quot;Name&quot;] = &quot;PackageId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;PackageIdSerialize&quot;,},},},},[&quot;PackageIdSerialize&quot;] = {[&quot;Name&quot;] = &quot;PackageIdSerialize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;PackageId&quot;,},},},[&quot;PermissionLevel&quot;] = {[&quot;Name&quot;] = &quot;PermissionLevel&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PackagePermission&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SerializedDefaultAttributes&quot;] = {[&quot;Name&quot;] = &quot;SerializedDefaultAttributes&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Status&quot;] = {[&quot;Name&quot;] = &quot;Status&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VersionIdSerialize&quot;] = {[&quot;Name&quot;] = &quot;VersionIdSerialize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VersionNumber&quot;] = {[&quot;Name&quot;] = &quot;VersionNumber&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PackageService&quot;] = {[&quot;Name&quot;] = &quot;PackageService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PackageUIService&quot;] = {[&quot;Name&quot;] = &quot;PackageUIService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Pages&quot;] = {[&quot;Name&quot;] = &quot;Pages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;IsFinished&quot;] = {[&quot;Name&quot;] = &quot;IsFinished&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Pants&quot;] = {[&quot;Name&quot;] = &quot;Pants&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Clothing&quot;,[&quot;Properties&quot;] = {[&quot;PantsTemplate&quot;] = {[&quot;Name&quot;] = &quot;PantsTemplate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;PantsTemplate&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ParabolaAdornment&quot;] = {[&quot;Name&quot;] = &quot;ParabolaAdornment&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PVAdornment&quot;,[&quot;Properties&quot;] = {[&quot;A&quot;] = {[&quot;Name&quot;] = &quot;A&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;B&quot;] = {[&quot;Name&quot;] = &quot;B&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;C&quot;] = {[&quot;Name&quot;] = &quot;C&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Range&quot;] = {[&quot;Name&quot;] = &quot;Range&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Thickness&quot;] = {[&quot;Name&quot;] = &quot;Thickness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.9490197,0.95294124,0.95294124,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},},},[&quot;Part&quot;] = {[&quot;Name&quot;] = &quot;Part&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;FormFactorPart&quot;,[&quot;Properties&quot;] = {[&quot;Shape&quot;] = {[&quot;Name&quot;] = &quot;Shape&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PartType&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;shape&quot;,},},},},[&quot;shap&quot;] = {[&quot;Name&quot;] = &quot;shap&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PartType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;WriteOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;shape&quot;] = {[&quot;Name&quot;] = &quot;shape&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PartType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Shape&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 4,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {163,162,165,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FormFactor&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Shape&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 3,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;PartAdornment&quot;] = {[&quot;Name&quot;] = &quot;PartAdornment&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GuiBase3d&quot;,[&quot;Properties&quot;] = {[&quot;Adornee&quot;] = {[&quot;Name&quot;] = &quot;Adornee&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PartOperation&quot;] = {[&quot;Name&quot;] = &quot;PartOperation&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;TriangleMeshPart&quot;,[&quot;Properties&quot;] = {[&quot;AssetId&quot;] = {[&quot;Name&quot;] = &quot;AssetId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CSGMesh2KernelMap&quot;] = {[&quot;Name&quot;] = &quot;CSGMesh2KernelMap&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ChildData&quot;] = {[&quot;Name&quot;] = &quot;ChildData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChildData2&quot;] = {[&quot;Name&quot;] = &quot;ChildData2&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FormFactor&quot;] = {[&quot;Name&quot;] = &quot;FormFactor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FormFactor&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InitialSize&quot;] = {[&quot;Name&quot;] = &quot;InitialSize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ManifoldMesh&quot;] = {[&quot;Name&quot;] = &quot;ManifoldMesh&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MeshData&quot;] = {[&quot;Name&quot;] = &quot;MeshData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MeshData2&quot;] = {[&quot;Name&quot;] = &quot;MeshData2&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PhysicsData&quot;] = {[&quot;Name&quot;] = &quot;PhysicsData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RenderFidelity&quot;] = {[&quot;Name&quot;] = &quot;RenderFidelity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RenderFidelity&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SerializedCSGTree&quot;] = {[&quot;Name&quot;] = &quot;SerializedCSGTree&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SerializedOperationGraph&quot;] = {[&quot;Name&quot;] = &quot;SerializedOperationGraph&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SmoothingAngle&quot;] = {[&quot;Name&quot;] = &quot;SmoothingAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TriangleCount&quot;] = {[&quot;Name&quot;] = &quot;TriangleCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UsePartColor&quot;] = {[&quot;Name&quot;] = &quot;UsePartColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AeroMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AssetId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ChildData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;ChildData2&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {255,255,255,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FluidFidelityInternal&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FormFactor&quot;] = {[&quot;Enum&quot;] = 3,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InitialSize&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;MeshData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;MeshData2&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;PhysicalConfigData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;PhysicsData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RenderFidelity&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SmoothingAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UnscaledCofm&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolInertiaDiags&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolInertiaOffDiags&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolume&quot;] = {[&quot;Float32&quot;] = NaN,},[&quot;UsePartColor&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;PartOperationAsset&quot;] = {[&quot;Name&quot;] = &quot;PartOperationAsset&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ChildData&quot;] = {[&quot;Name&quot;] = &quot;ChildData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MeshData&quot;] = {[&quot;Name&quot;] = &quot;MeshData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ChildData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MeshData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ParticleEmitter&quot;] = {[&quot;Name&quot;] = &quot;ParticleEmitter&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Acceleration&quot;] = {[&quot;Name&quot;] = &quot;Acceleration&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Brightness&quot;] = {[&quot;Name&quot;] = &quot;Brightness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ColorSequence&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Drag&quot;] = {[&quot;Name&quot;] = &quot;Drag&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EmissionDirection&quot;] = {[&quot;Name&quot;] = &quot;EmissionDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NormalId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FlipbookFramerate&quot;] = {[&quot;Name&quot;] = &quot;FlipbookFramerate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FlipbookIncompatible&quot;] = {[&quot;Name&quot;] = &quot;FlipbookIncompatible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FlipbookLayout&quot;] = {[&quot;Name&quot;] = &quot;FlipbookLayout&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ParticleFlipbookLayout&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FlipbookMode&quot;] = {[&quot;Name&quot;] = &quot;FlipbookMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ParticleFlipbookMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FlipbookStartRandom&quot;] = {[&quot;Name&quot;] = &quot;FlipbookStartRandom&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Lifetime&quot;] = {[&quot;Name&quot;] = &quot;Lifetime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LightEmission&quot;] = {[&quot;Name&quot;] = &quot;LightEmission&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LightInfluence&quot;] = {[&quot;Name&quot;] = &quot;LightInfluence&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalTransparencyModifier&quot;] = {[&quot;Name&quot;] = &quot;LocalTransparencyModifier&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LockedToPart&quot;] = {[&quot;Name&quot;] = &quot;LockedToPart&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Orientation&quot;] = {[&quot;Name&quot;] = &quot;Orientation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ParticleOrientation&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Rate&quot;] = {[&quot;Name&quot;] = &quot;Rate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RotSpeed&quot;] = {[&quot;Name&quot;] = &quot;RotSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Rotation&quot;] = {[&quot;Name&quot;] = &quot;Rotation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Shape&quot;] = {[&quot;Name&quot;] = &quot;Shape&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ParticleEmitterShape&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShapeInOut&quot;] = {[&quot;Name&quot;] = &quot;ShapeInOut&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ParticleEmitterShapeInOut&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShapePartial&quot;] = {[&quot;Name&quot;] = &quot;ShapePartial&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShapeStyle&quot;] = {[&quot;Name&quot;] = &quot;ShapeStyle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ParticleEmitterShapeStyle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberSequence&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Speed&quot;] = {[&quot;Name&quot;] = &quot;Speed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SpreadAngle&quot;] = {[&quot;Name&quot;] = &quot;SpreadAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Squash&quot;] = {[&quot;Name&quot;] = &quot;Squash&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberSequence&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Texture&quot;] = {[&quot;Name&quot;] = &quot;Texture&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TimeScale&quot;] = {[&quot;Name&quot;] = &quot;TimeScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Transparency&quot;] = {[&quot;Name&quot;] = &quot;Transparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberSequence&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VelocityInheritance&quot;] = {[&quot;Name&quot;] = &quot;VelocityInheritance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VelocitySpread&quot;] = {[&quot;Name&quot;] = &quot;VelocitySpread&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;WindAffectsDrag&quot;] = {[&quot;Name&quot;] = &quot;WindAffectsDrag&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ZOffset&quot;] = {[&quot;Name&quot;] = &quot;ZOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Acceleration&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Brightness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;ColorSequence&quot;] = {[&quot;keypoints&quot;] = {{[&quot;time&quot;] = 0,[&quot;color&quot;] = {1,1,1,},},{[&quot;time&quot;] = 1,[&quot;color&quot;] = {1,1,1,},},},},},[&quot;Drag&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;EmissionDirection&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FlipbookFramerate&quot;] = {[&quot;NumberRange&quot;] = {1,1,},},[&quot;FlipbookIncompatible&quot;] = {[&quot;String&quot;] = &quot;Particle texture must be 1024 by 1024 to use flipbooks.&quot;,},[&quot;FlipbookLayout&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FlipbookMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FlipbookStartRandom&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Lifetime&quot;] = {[&quot;NumberRange&quot;] = {5,10,},},[&quot;LightEmission&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LightInfluence&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LockedToPart&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Orientation&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Rate&quot;] = {[&quot;Float32&quot;] = 20,},[&quot;RotSpeed&quot;] = {[&quot;NumberRange&quot;] = {0,0,},},[&quot;Rotation&quot;] = {[&quot;NumberRange&quot;] = {0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Shape&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ShapeInOut&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ShapePartial&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;ShapeStyle&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Size&quot;] = {[&quot;NumberSequence&quot;] = {[&quot;keypoints&quot;] = {{[&quot;time&quot;] = 0,[&quot;value&quot;] = 1,[&quot;envelope&quot;] = 0,},{[&quot;time&quot;] = 1,[&quot;value&quot;] = 1,[&quot;envelope&quot;] = 0,},},},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Speed&quot;] = {[&quot;NumberRange&quot;] = {5,5,},},[&quot;SpreadAngle&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Squash&quot;] = {[&quot;NumberSequence&quot;] = {[&quot;keypoints&quot;] = {{[&quot;time&quot;] = 0,[&quot;value&quot;] = 0,[&quot;envelope&quot;] = 0,},{[&quot;time&quot;] = 1,[&quot;value&quot;] = 0,[&quot;envelope&quot;] = 0,},},},},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Texture&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://textures/particles/sparkles_main.dds&quot;,},[&quot;TimeScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Transparency&quot;] = {[&quot;NumberSequence&quot;] = {[&quot;keypoints&quot;] = {{[&quot;time&quot;] = 0,[&quot;value&quot;] = 0,[&quot;envelope&quot;] = 0,},{[&quot;time&quot;] = 1,[&quot;value&quot;] = 0,[&quot;envelope&quot;] = 0,},},},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VelocityInheritance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;WindAffectsDrag&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ZOffset&quot;] = {[&quot;Float32&quot;] = 0,},},},[&quot;PatchBundlerFileWatch&quot;] = {[&quot;Name&quot;] = &quot;PatchBundlerFileWatch&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PatchMapping&quot;] = {[&quot;Name&quot;] = &quot;PatchMapping&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;FlattenTree&quot;] = {[&quot;Name&quot;] = &quot;FlattenTree&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PatchId&quot;] = {[&quot;Name&quot;] = &quot;PatchId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TargetPath&quot;] = {[&quot;Name&quot;] = &quot;TargetPath&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Path&quot;] = {[&quot;Name&quot;] = &quot;Path&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Status&quot;] = {[&quot;Name&quot;] = &quot;Status&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PathStatus&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Path2D&quot;] = {[&quot;Name&quot;] = &quot;Path2D&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;GuiBase&quot;,[&quot;Properties&quot;] = {[&quot;Closed&quot;] = {[&quot;Name&quot;] = &quot;Closed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Color3&quot;] = {[&quot;Name&quot;] = &quot;Color3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PropertiesSerialize&quot;] = {[&quot;Name&quot;] = &quot;PropertiesSerialize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectedControlPoint&quot;] = {[&quot;Name&quot;] = &quot;SelectedControlPoint&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Thickness&quot;] = {[&quot;Name&quot;] = &quot;Thickness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Transparency&quot;] = {[&quot;Name&quot;] = &quot;Transparency&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Visible&quot;] = {[&quot;Name&quot;] = &quot;Visible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ZIndex&quot;] = {[&quot;Name&quot;] = &quot;ZIndex&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Closed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;PropertiesSerialize&quot;] = {[&quot;BinaryString&quot;] = &quot;AAAAAA==&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Thickness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;PathfindingLink&quot;] = {[&quot;Name&quot;] = &quot;PathfindingLink&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Attachment0&quot;] = {[&quot;Name&quot;] = &quot;Attachment0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Attachment1&quot;] = {[&quot;Name&quot;] = &quot;Attachment1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsBidirectional&quot;] = {[&quot;Name&quot;] = &quot;IsBidirectional&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Label&quot;] = {[&quot;Name&quot;] = &quot;Label&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IsBidirectional&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Label&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PathfindingModifier&quot;] = {[&quot;Name&quot;] = &quot;PathfindingModifier&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Label&quot;] = {[&quot;Name&quot;] = &quot;Label&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PassThrough&quot;] = {[&quot;Name&quot;] = &quot;PassThrough&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Label&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;PassThrough&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PathfindingService&quot;] = {[&quot;Name&quot;] = &quot;PathfindingService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;EmptyCutoff&quot;] = {[&quot;Name&quot;] = &quot;EmptyCutoff&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PausedState&quot;] = {[&quot;Name&quot;] = &quot;PausedState&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AllThreadsPaused&quot;] = {[&quot;Name&quot;] = &quot;AllThreadsPaused&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Reason&quot;] = {[&quot;Name&quot;] = &quot;Reason&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DebuggerPauseReason&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ThreadId&quot;] = {[&quot;Name&quot;] = &quot;ThreadId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PausedStateBreakpoint&quot;] = {[&quot;Name&quot;] = &quot;PausedStateBreakpoint&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;PausedState&quot;,[&quot;Properties&quot;] = {[&quot;Breakpoint&quot;] = {[&quot;Name&quot;] = &quot;Breakpoint&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PausedStateException&quot;] = {[&quot;Name&quot;] = &quot;PausedStateException&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;PausedState&quot;,[&quot;Properties&quot;] = {[&quot;ExceptionText&quot;] = {[&quot;Name&quot;] = &quot;ExceptionText&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PerformanceControlService&quot;] = {[&quot;Name&quot;] = &quot;PerformanceControlService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PermissionsService&quot;] = {[&quot;Name&quot;] = &quot;PermissionsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PhysicsService&quot;] = {[&quot;Name&quot;] = &quot;PhysicsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PhysicsSettings&quot;] = {[&quot;Name&quot;] = &quot;PhysicsSettings&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Settings&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AllowSleep&quot;] = {[&quot;Name&quot;] = &quot;AllowSleep&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreAnchorsShown&quot;] = {[&quot;Name&quot;] = &quot;AreAnchorsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreAssembliesShown&quot;] = {[&quot;Name&quot;] = &quot;AreAssembliesShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreAssemblyCentersOfMassShown&quot;] = {[&quot;Name&quot;] = &quot;AreAssemblyCentersOfMassShown&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreAwakePartsHighlighted&quot;] = {[&quot;Name&quot;] = &quot;AreAwakePartsHighlighted&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreBodyTypesShown&quot;] = {[&quot;Name&quot;] = &quot;AreBodyTypesShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreCollisionCostsShown&quot;] = {[&quot;Name&quot;] = &quot;AreCollisionCostsShown&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreConstraintForcesShownForSelectedOrHoveredInstances&quot;] = {[&quot;Name&quot;] = &quot;AreConstraintForcesShownForSelectedOrHoveredInstances&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreConstraintTorquesShownForSelectedOrHoveredInstances&quot;] = {[&quot;Name&quot;] = &quot;AreConstraintTorquesShownForSelectedOrHoveredInstances&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreContactForcesShownForSelectedOrHoveredAssemblies&quot;] = {[&quot;Name&quot;] = &quot;AreContactForcesShownForSelectedOrHoveredAssemblies&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreContactIslandsShown&quot;] = {[&quot;Name&quot;] = &quot;AreContactIslandsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreContactPointsShown&quot;] = {[&quot;Name&quot;] = &quot;AreContactPointsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreGravityForcesShownForSelectedOrHoveredAssemblies&quot;] = {[&quot;Name&quot;] = &quot;AreGravityForcesShownForSelectedOrHoveredAssemblies&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreJointCoordinatesShown&quot;] = {[&quot;Name&quot;] = &quot;AreJointCoordinatesShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreMagnitudesShownForDrawnForcesAndTorques&quot;] = {[&quot;Name&quot;] = &quot;AreMagnitudesShownForDrawnForcesAndTorques&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreMechanismsShown&quot;] = {[&quot;Name&quot;] = &quot;AreMechanismsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreModelCoordsShown&quot;] = {[&quot;Name&quot;] = &quot;AreModelCoordsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreNonAnchorsShown&quot;] = {[&quot;Name&quot;] = &quot;AreNonAnchorsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreOwnersShown&quot;] = {[&quot;Name&quot;] = &quot;AreOwnersShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ArePartCoordsShown&quot;] = {[&quot;Name&quot;] = &quot;ArePartCoordsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreRegionsShown&quot;] = {[&quot;Name&quot;] = &quot;AreRegionsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreSolverIslandsShown&quot;] = {[&quot;Name&quot;] = &quot;AreSolverIslandsShown&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreTerrainReplicationRegionsShown&quot;] = {[&quot;Name&quot;] = &quot;AreTerrainReplicationRegionsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreTimestepsShown&quot;] = {[&quot;Name&quot;] = &quot;AreTimestepsShown&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreUnalignedPartsShown&quot;] = {[&quot;Name&quot;] = &quot;AreUnalignedPartsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AreWorldCoordsShown&quot;] = {[&quot;Name&quot;] = &quot;AreWorldCoordsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DisableCSGv2&quot;] = {[&quot;Name&quot;] = &quot;DisableCSGv2&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DisableCSGv3ForPlugins&quot;] = {[&quot;Name&quot;] = &quot;DisableCSGv3ForPlugins&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DrawConstraintsNetForce&quot;] = {[&quot;Name&quot;] = &quot;DrawConstraintsNetForce&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DrawContactsNetForce&quot;] = {[&quot;Name&quot;] = &quot;DrawContactsNetForce&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DrawTotalNetForce&quot;] = {[&quot;Name&quot;] = &quot;DrawTotalNetForce&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EnableForceVisualizationSmoothing&quot;] = {[&quot;Name&quot;] = &quot;EnableForceVisualizationSmoothing&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FluidForceDrawScale&quot;] = {[&quot;Name&quot;] = &quot;FluidForceDrawScale&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ForceCSGv2&quot;] = {[&quot;Name&quot;] = &quot;ForceCSGv2&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ForceDrawScale&quot;] = {[&quot;Name&quot;] = &quot;ForceDrawScale&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ForceVisualizationSmoothingSteps&quot;] = {[&quot;Name&quot;] = &quot;ForceVisualizationSmoothingSteps&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsInterpolationThrottleShown&quot;] = {[&quot;Name&quot;] = &quot;IsInterpolationThrottleShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsReceiveAgeShown&quot;] = {[&quot;Name&quot;] = &quot;IsReceiveAgeShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsTreeShown&quot;] = {[&quot;Name&quot;] = &quot;IsTreeShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PhysicsEnvironmentalThrottle&quot;] = {[&quot;Name&quot;] = &quot;PhysicsEnvironmentalThrottle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;EnviromentalPhysicsThrottle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShowDecompositionGeometry&quot;] = {[&quot;Name&quot;] = &quot;ShowDecompositionGeometry&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShowFluidForcesForSelectedOrHoveredMechanisms&quot;] = {[&quot;Name&quot;] = &quot;ShowFluidForcesForSelectedOrHoveredMechanisms&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShowInstanceNamesForDrawnForcesAndTorques&quot;] = {[&quot;Name&quot;] = &quot;ShowInstanceNamesForDrawnForcesAndTorques&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SolverConvergenceMetricType&quot;] = {[&quot;Name&quot;] = &quot;SolverConvergenceMetricType&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SolverConvergenceMetricType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SolverConvergenceVisualizationMode&quot;] = {[&quot;Name&quot;] = &quot;SolverConvergenceVisualizationMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SolverConvergenceVisualizationMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ThrottleAdjustTime&quot;] = {[&quot;Name&quot;] = &quot;ThrottleAdjustTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TorqueDrawScale&quot;] = {[&quot;Name&quot;] = &quot;TorqueDrawScale&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UseCSGv2&quot;] = {[&quot;Name&quot;] = &quot;UseCSGv2&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PitchShiftSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;PitchShiftSoundEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SoundEffect&quot;,[&quot;Properties&quot;] = {[&quot;Octave&quot;] = {[&quot;Name&quot;] = &quot;Octave&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Octave&quot;] = {[&quot;Float32&quot;] = 1.25,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlaceStatsService&quot;] = {[&quot;Name&quot;] = &quot;PlaceStatsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlacesService&quot;] = {[&quot;Name&quot;] = &quot;PlacesService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Plane&quot;] = {[&quot;Name&quot;] = &quot;Plane&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;PlaneConstraint&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 194,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;PlaneConstraint&quot;] = {[&quot;Name&quot;] = &quot;PlaneConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 194,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;Platform&quot;] = {[&quot;Name&quot;] = &quot;Platform&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Part&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlatformCloudStorageService&quot;] = {[&quot;Name&quot;] = &quot;PlatformCloudStorageService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlatformFriendsService&quot;] = {[&quot;Name&quot;] = &quot;PlatformFriendsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Player&quot;] = {[&quot;Name&quot;] = &quot;Player&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AccountAge&quot;] = {[&quot;Name&quot;] = &quot;AccountAge&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AccountAgeReplicate&quot;] = {[&quot;Name&quot;] = &quot;AccountAgeReplicate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AppearanceDidLoad&quot;] = {[&quot;Name&quot;] = &quot;AppearanceDidLoad&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AutoJumpEnabled&quot;] = {[&quot;Name&quot;] = &quot;AutoJumpEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraMaxZoomDistance&quot;] = {[&quot;Name&quot;] = &quot;CameraMaxZoomDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraMinZoomDistance&quot;] = {[&quot;Name&quot;] = &quot;CameraMinZoomDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraMode&quot;] = {[&quot;Name&quot;] = &quot;CameraMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CameraMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CanLoadCharacterAppearance&quot;] = {[&quot;Name&quot;] = &quot;CanLoadCharacterAppearance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Character&quot;] = {[&quot;Name&quot;] = &quot;Character&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CharacterAppearance&quot;] = {[&quot;Name&quot;] = &quot;CharacterAppearance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotBrowsable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CharacterAppearanceId&quot;] = {[&quot;Name&quot;] = &quot;CharacterAppearanceId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChararacterRegionId&quot;] = {[&quot;Name&quot;] = &quot;ChararacterRegionId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ChatMode&quot;] = {[&quot;Name&quot;] = &quot;ChatMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ChatMode&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ChatPrivacyMode&quot;] = {[&quot;Name&quot;] = &quot;ChatPrivacyMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ChatPrivacyMode&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CloudEditCameraCoordinateFrame&quot;] = {[&quot;Name&quot;] = &quot;CloudEditCameraCoordinateFrame&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CloudEditPlayerActive&quot;] = {[&quot;Name&quot;] = &quot;CloudEditPlayerActive&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CountryRegionCodeReplicate&quot;] = {[&quot;Name&quot;] = &quot;CountryRegionCodeReplicate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DataComplexity&quot;] = {[&quot;Name&quot;] = &quot;DataComplexity&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DataComplexityLimit&quot;] = {[&quot;Name&quot;] = &quot;DataComplexityLimit&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DataReady&quot;] = {[&quot;Name&quot;] = &quot;DataReady&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DevCameraOcclusionMode&quot;] = {[&quot;Name&quot;] = &quot;DevCameraOcclusionMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DevCameraOcclusionMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DevComputerCameraMode&quot;] = {[&quot;Name&quot;] = &quot;DevComputerCameraMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DevComputerCameraMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DevComputerMovementMode&quot;] = {[&quot;Name&quot;] = &quot;DevComputerMovementMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DevComputerMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DevEnableMouseLock&quot;] = {[&quot;Name&quot;] = &quot;DevEnableMouseLock&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DevTouchCameraMode&quot;] = {[&quot;Name&quot;] = &quot;DevTouchCameraMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DevTouchCameraMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DevTouchMovementMode&quot;] = {[&quot;Name&quot;] = &quot;DevTouchMovementMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DevTouchMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DisplayName&quot;] = {[&quot;Name&quot;] = &quot;DisplayName&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FollowUserId&quot;] = {[&quot;Name&quot;] = &quot;FollowUserId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FollowUserIdReplicated&quot;] = {[&quot;Name&quot;] = &quot;FollowUserIdReplicated&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GameplayPaused&quot;] = {[&quot;Name&quot;] = &quot;GameplayPaused&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Guest&quot;] = {[&quot;Name&quot;] = &quot;Guest&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HasVerifiedBadge&quot;] = {[&quot;Name&quot;] = &quot;HasVerifiedBadge&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HealthDisplayDistance&quot;] = {[&quot;Name&quot;] = &quot;HealthDisplayDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InternalCharacterAppearanceLoaded&quot;] = {[&quot;Name&quot;] = &quot;InternalCharacterAppearanceLoaded&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LocaleId&quot;] = {[&quot;Name&quot;] = &quot;LocaleId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxSimulationRadius&quot;] = {[&quot;Name&quot;] = &quot;MaxSimulationRadius&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaximumSimulationRadius&quot;] = {[&quot;Name&quot;] = &quot;MaximumSimulationRadius&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MembershipType&quot;] = {[&quot;Name&quot;] = &quot;MembershipType&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MembershipType&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MembershipTypeReplicate&quot;] = {[&quot;Name&quot;] = &quot;MembershipTypeReplicate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MembershipType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;NameDisplayDistance&quot;] = {[&quot;Name&quot;] = &quot;NameDisplayDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Neutral&quot;] = {[&quot;Name&quot;] = &quot;Neutral&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OsPlatform&quot;] = {[&quot;Name&quot;] = &quot;OsPlatform&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PartyId&quot;] = {[&quot;Name&quot;] = &quot;PartyId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PlatformName&quot;] = {[&quot;Name&quot;] = &quot;PlatformName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RawJoinData&quot;] = {[&quot;Name&quot;] = &quot;RawJoinData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReplicationFocus&quot;] = {[&quot;Name&quot;] = &quot;ReplicationFocus&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RespawnLocation&quot;] = {[&quot;Name&quot;] = &quot;RespawnLocation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SimulationRadius&quot;] = {[&quot;Name&quot;] = &quot;SimulationRadius&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;StepIdOffset&quot;] = {[&quot;Name&quot;] = &quot;StepIdOffset&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SuperSafeChatReplicate&quot;] = {[&quot;Name&quot;] = &quot;SuperSafeChatReplicate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Team&quot;] = {[&quot;Name&quot;] = &quot;Team&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TeamColor&quot;] = {[&quot;Name&quot;] = &quot;TeamColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Teleported&quot;] = {[&quot;Name&quot;] = &quot;Teleported&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TeleportedIn&quot;] = {[&quot;Name&quot;] = &quot;TeleportedIn&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ThirdPartyTextChatRestrictionStatus&quot;] = {[&quot;Name&quot;] = &quot;ThirdPartyTextChatRestrictionStatus&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ChatRestrictionStatus&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UnfilteredChat&quot;] = {[&quot;Name&quot;] = &quot;UnfilteredChat&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UserId&quot;] = {[&quot;Name&quot;] = &quot;UserId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VRDevice&quot;] = {[&quot;Name&quot;] = &quot;VRDevice&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VREnabled&quot;] = {[&quot;Name&quot;] = &quot;VREnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;userId&quot;] = {[&quot;Name&quot;] = &quot;userId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlayerData&quot;] = {[&quot;Name&quot;] = &quot;PlayerData&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlayerDataRecord&quot;] = {[&quot;Name&quot;] = &quot;PlayerDataRecord&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CreatedTime&quot;] = {[&quot;Name&quot;] = &quot;CreatedTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DefaultRecordName&quot;] = {[&quot;Name&quot;] = &quot;DefaultRecordName&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Dirty&quot;] = {[&quot;Name&quot;] = &quot;Dirty&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Error&quot;] = {[&quot;Name&quot;] = &quot;Error&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PlayerDataErrorState&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FlushedTime&quot;] = {[&quot;Name&quot;] = &quot;FlushedTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LoadedTime&quot;] = {[&quot;Name&quot;] = &quot;LoadedTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ModifiedTime&quot;] = {[&quot;Name&quot;] = &quot;ModifiedTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;NewRecord&quot;] = {[&quot;Name&quot;] = &quot;NewRecord&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Readable&quot;] = {[&quot;Name&quot;] = &quot;Readable&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RecordName&quot;] = {[&quot;Name&quot;] = &quot;RecordName&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Writable&quot;] = {[&quot;Name&quot;] = &quot;Writable&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlayerDataRecordConfig&quot;] = {[&quot;Name&quot;] = &quot;PlayerDataRecordConfig&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;RecordName&quot;] = {[&quot;Name&quot;] = &quot;RecordName&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlayerDataService&quot;] = {[&quot;Name&quot;] = &quot;PlayerDataService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;LoadFailureBehavior&quot;] = {[&quot;Name&quot;] = &quot;LoadFailureBehavior&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PlayerDataLoadFailureBehavior&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LoadFailureBehavior&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlayerEmulatorService&quot;] = {[&quot;Name&quot;] = &quot;PlayerEmulatorService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CustomPoliciesEnabled&quot;] = {[&quot;Name&quot;] = &quot;CustomPoliciesEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EmulatedCountryCode&quot;] = {[&quot;Name&quot;] = &quot;EmulatedCountryCode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EmulatedGameLocale&quot;] = {[&quot;Name&quot;] = &quot;EmulatedGameLocale&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlayerEmulationEnabled&quot;] = {[&quot;Name&quot;] = &quot;PlayerEmulationEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PseudolocalizationEnabled&quot;] = {[&quot;Name&quot;] = &quot;PseudolocalizationEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SerializedEmulatedPolicyInfo&quot;] = {[&quot;Name&quot;] = &quot;SerializedEmulatedPolicyInfo&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextElongationFactor&quot;] = {[&quot;Name&quot;] = &quot;TextElongationFactor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CustomPoliciesEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EmulatedCountryCode&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;EmulatedGameLocale&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;PlayerEmulationEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;PseudolocalizationEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SerializedEmulatedPolicyInfo&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TextElongationFactor&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlayerGui&quot;] = {[&quot;Name&quot;] = &quot;PlayerGui&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;PlayerReplicated&quot;,},[&quot;Superclass&quot;] = &quot;BasePlayerGui&quot;,[&quot;Properties&quot;] = {[&quot;CurrentScreenOrientation&quot;] = {[&quot;Name&quot;] = &quot;CurrentScreenOrientation&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ScreenOrientation&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ScreenOrientation&quot;] = {[&quot;Name&quot;] = &quot;ScreenOrientation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ScreenOrientation&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionImageObject&quot;] = {[&quot;Name&quot;] = &quot;SelectionImageObject&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlayerHydrationService&quot;] = {[&quot;Name&quot;] = &quot;PlayerHydrationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlayerMouse&quot;] = {[&quot;Name&quot;] = &quot;PlayerMouse&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Mouse&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlayerScripts&quot;] = {[&quot;Name&quot;] = &quot;PlayerScripts&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PlayerViewService&quot;] = {[&quot;Name&quot;] = &quot;PlayerViewService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Players&quot;] = {[&quot;Name&quot;] = &quot;Players&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;BanningEnabled&quot;] = {[&quot;Name&quot;] = &quot;BanningEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BubbleChat&quot;] = {[&quot;Name&quot;] = &quot;BubbleChat&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CharacterAutoLoads&quot;] = {[&quot;Name&quot;] = &quot;CharacterAutoLoads&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClassicChat&quot;] = {[&quot;Name&quot;] = &quot;ClassicChat&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LocalPlayer&quot;] = {[&quot;Name&quot;] = &quot;LocalPlayer&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxPlayers&quot;] = {[&quot;Name&quot;] = &quot;MaxPlayers&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;MaxPlayersInternal&quot;,},},},},[&quot;MaxPlayersInternal&quot;] = {[&quot;Name&quot;] = &quot;MaxPlayersInternal&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;MaxPlayers&quot;,},},},[&quot;NumPlayers&quot;] = {[&quot;Name&quot;] = &quot;NumPlayers&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PreferredPlayers&quot;] = {[&quot;Name&quot;] = &quot;PreferredPlayers&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;PreferredPlayersInternal&quot;,},},},},[&quot;PreferredPlayersInternal&quot;] = {[&quot;Name&quot;] = &quot;PreferredPlayersInternal&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;PreferredPlayers&quot;,},},},[&quot;RespawnTime&quot;] = {[&quot;Name&quot;] = &quot;RespawnTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ServerGitHash&quot;] = {[&quot;Name&quot;] = &quot;ServerGitHash&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ServerLogPrefix&quot;] = {[&quot;Name&quot;] = &quot;ServerLogPrefix&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UseStrafingAnimations&quot;] = {[&quot;Name&quot;] = &quot;UseStrafingAnimations&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;localPlayer&quot;] = {[&quot;Name&quot;] = &quot;localPlayer&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;numPlayers&quot;] = {[&quot;Name&quot;] = &quot;numPlayers&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BanningEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CharacterAutoLoads&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxPlayers&quot;] = {[&quot;Int32&quot;] = 12,},[&quot;PreferredPlayers&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RespawnTime&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UseStrafingAnimations&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;Plugin&quot;] = {[&quot;Name&quot;] = &quot;Plugin&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CollisionEnabled&quot;] = {[&quot;Name&quot;] = &quot;CollisionEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DisableUIDragDetectorDrags&quot;] = {[&quot;Name&quot;] = &quot;DisableUIDragDetectorDrags&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GridSize&quot;] = {[&quot;Name&quot;] = &quot;GridSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HostDataModelType&quot;] = {[&quot;Name&quot;] = &quot;HostDataModelType&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;StudioDataModelType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HostDataModelTypeIsCurrent&quot;] = {[&quot;Name&quot;] = &quot;HostDataModelTypeIsCurrent&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsDebuggable&quot;] = {[&quot;Name&quot;] = &quot;IsDebuggable&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MultipleDocumentInterfaceInstance&quot;] = {[&quot;Name&quot;] = &quot;MultipleDocumentInterfaceInstance&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UsesAssetInsertionDrag&quot;] = {[&quot;Name&quot;] = &quot;UsesAssetInsertionDrag&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginAction&quot;] = {[&quot;Name&quot;] = &quot;PluginAction&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ActionId&quot;] = {[&quot;Name&quot;] = &quot;ActionId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AllowBinding&quot;] = {[&quot;Name&quot;] = &quot;AllowBinding&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Checked&quot;] = {[&quot;Name&quot;] = &quot;Checked&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DefaultShortcut&quot;] = {[&quot;Name&quot;] = &quot;DefaultShortcut&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;StatusTip&quot;] = {[&quot;Name&quot;] = &quot;StatusTip&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Text&quot;] = {[&quot;Name&quot;] = &quot;Text&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginCapabilities&quot;] = {[&quot;Name&quot;] = &quot;PluginCapabilities&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Manifest&quot;] = {[&quot;Name&quot;] = &quot;Manifest&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Manifest&quot;] = {[&quot;String&quot;] = &quot;{\&quot;Metadata\&quot;:{\&quot;TargetDataModels\&quot;: [\&quot;Edit\&quot;, \&quot;Server\&quot;, \&quot;Client\&quot;]},\&quot;Permissions\&quot;:{}}&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginDebugService&quot;] = {[&quot;Name&quot;] = &quot;PluginDebugService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginDragEvent&quot;] = {[&quot;Name&quot;] = &quot;PluginDragEvent&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Data&quot;] = {[&quot;Name&quot;] = &quot;Data&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MimeType&quot;] = {[&quot;Name&quot;] = &quot;MimeType&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Position&quot;] = {[&quot;Name&quot;] = &quot;Position&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Sender&quot;] = {[&quot;Name&quot;] = &quot;Sender&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginGui&quot;] = {[&quot;Name&quot;] = &quot;PluginGui&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;LayerCollector&quot;,[&quot;Properties&quot;] = {[&quot;Title&quot;] = {[&quot;Name&quot;] = &quot;Title&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginGuiService&quot;] = {[&quot;Name&quot;] = &quot;PluginGuiService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginManagementService&quot;] = {[&quot;Name&quot;] = &quot;PluginManagementService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginManager&quot;] = {[&quot;Name&quot;] = &quot;PluginManager&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginManagerInterface&quot;] = {[&quot;Name&quot;] = &quot;PluginManagerInterface&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginMenu&quot;] = {[&quot;Name&quot;] = &quot;PluginMenu&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Icon&quot;] = {[&quot;Name&quot;] = &quot;Icon&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Title&quot;] = {[&quot;Name&quot;] = &quot;Title&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginMouse&quot;] = {[&quot;Name&quot;] = &quot;PluginMouse&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Mouse&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginPolicyService&quot;] = {[&quot;Name&quot;] = &quot;PluginPolicyService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginToolbar&quot;] = {[&quot;Name&quot;] = &quot;PluginToolbar&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PluginToolbarButton&quot;] = {[&quot;Name&quot;] = &quot;PluginToolbarButton&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ClickableWhenViewportHidden&quot;] = {[&quot;Name&quot;] = &quot;ClickableWhenViewportHidden&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Icon&quot;] = {[&quot;Name&quot;] = &quot;Icon&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PointLight&quot;] = {[&quot;Name&quot;] = &quot;PointLight&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Light&quot;,[&quot;Properties&quot;] = {[&quot;Range&quot;] = {[&quot;Name&quot;] = &quot;Range&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Brightness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Range&quot;] = {[&quot;Float32&quot;] = 8,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Shadows&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PointsService&quot;] = {[&quot;Name&quot;] = &quot;PointsService&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PolicyService&quot;] = {[&quot;Name&quot;] = &quot;PolicyService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;IsLuobuServer&quot;] = {[&quot;Name&quot;] = &quot;IsLuobuServer&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TriStateBoolean&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LuobuWhitelisted&quot;] = {[&quot;Name&quot;] = &quot;LuobuWhitelisted&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TriStateBoolean&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Pose&quot;] = {[&quot;Name&quot;] = &quot;Pose&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PoseBase&quot;,[&quot;Properties&quot;] = {[&quot;CFrame&quot;] = {[&quot;Name&quot;] = &quot;CFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaskWeight&quot;] = {[&quot;Name&quot;] = &quot;MaskWeight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;EasingDirection&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;EasingStyle&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Weight&quot;] = {[&quot;Float32&quot;] = 1,},},},[&quot;PoseBase&quot;] = {[&quot;Name&quot;] = &quot;PoseBase&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;EasingDirection&quot;] = {[&quot;Name&quot;] = &quot;EasingDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PoseEasingDirection&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EasingStyle&quot;] = {[&quot;Name&quot;] = &quot;EasingStyle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PoseEasingStyle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Weight&quot;] = {[&quot;Name&quot;] = &quot;Weight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PostEffect&quot;] = {[&quot;Name&quot;] = &quot;PostEffect&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PrismaticConstraint&quot;] = {[&quot;Name&quot;] = &quot;PrismaticConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SlidingBallConstraint&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;ActuatorType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 1009,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LimitsEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;LinearResponsiveness&quot;] = {[&quot;Float32&quot;] = 45,},[&quot;LowerLimit&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MotorMaxAcceleration&quot;] = {[&quot;Float32&quot;] = math.huge,},[&quot;MotorMaxForce&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Restitution&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ServoMaxForce&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;Float32&quot;] = 0.15,},[&quot;SoftlockServoUponReachingTarget&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Speed&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TargetPosition&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UpperLimit&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;Velocity&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;ProcessInstancePhysicsService&quot;] = {[&quot;Name&quot;] = &quot;ProcessInstancePhysicsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ProximityPrompt&quot;] = {[&quot;Name&quot;] = &quot;ProximityPrompt&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ActionText&quot;] = {[&quot;Name&quot;] = &quot;ActionText&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AutoLocalize&quot;] = {[&quot;Name&quot;] = &quot;AutoLocalize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClickablePrompt&quot;] = {[&quot;Name&quot;] = &quot;ClickablePrompt&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Exclusivity&quot;] = {[&quot;Name&quot;] = &quot;Exclusivity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ProximityPromptExclusivity&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GamepadKeyCode&quot;] = {[&quot;Name&quot;] = &quot;GamepadKeyCode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;KeyCode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HoldDuration&quot;] = {[&quot;Name&quot;] = &quot;HoldDuration&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;KeyboardKeyCode&quot;] = {[&quot;Name&quot;] = &quot;KeyboardKeyCode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;KeyCode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxActivationDistance&quot;] = {[&quot;Name&quot;] = &quot;MaxActivationDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ObjectText&quot;] = {[&quot;Name&quot;] = &quot;ObjectText&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RequiresLineOfSight&quot;] = {[&quot;Name&quot;] = &quot;RequiresLineOfSight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RootLocalizationTable&quot;] = {[&quot;Name&quot;] = &quot;RootLocalizationTable&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Style&quot;] = {[&quot;Name&quot;] = &quot;Style&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ProximityPromptStyle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UIOffset&quot;] = {[&quot;Name&quot;] = &quot;UIOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;ActionText&quot;] = {[&quot;String&quot;] = &quot;Interact&quot;,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClickablePrompt&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Exclusivity&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;GamepadKeyCode&quot;] = {[&quot;Enum&quot;] = 1000,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;HoldDuration&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;KeyboardKeyCode&quot;] = {[&quot;Enum&quot;] = 101,},[&quot;MaxActivationDistance&quot;] = {[&quot;Float32&quot;] = 10,},[&quot;ObjectText&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;RequiresLineOfSight&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Style&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UIOffset&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ProximityPromptService&quot;] = {[&quot;Name&quot;] = &quot;ProximityPromptService&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxPromptsVisible&quot;] = {[&quot;Name&quot;] = &quot;MaxPromptsVisible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxPromptsVisible&quot;] = {[&quot;Int32&quot;] = 16,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;PublishService&quot;] = {[&quot;Name&quot;] = &quot;PublishService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;QWidgetPluginGui&quot;] = {[&quot;Name&quot;] = &quot;QWidgetPluginGui&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;PluginGui&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RTAnimationTracker&quot;] = {[&quot;Name&quot;] = &quot;RTAnimationTracker&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EnableFallbackAudioInput&quot;] = {[&quot;Name&quot;] = &quot;EnableFallbackAudioInput&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SessionName&quot;] = {[&quot;Name&quot;] = &quot;SessionName&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TrackerMode&quot;] = {[&quot;Name&quot;] = &quot;TrackerMode&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TrackerMode&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TrackerType&quot;] = {[&quot;Name&quot;] = &quot;TrackerType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TrackerType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RayValue&quot;] = {[&quot;Name&quot;] = &quot;RayValue&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ray&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;Ray&quot;] = {[&quot;origin&quot;] = {0,0,0,},[&quot;direction&quot;] = {0,0,0,},},},},},[&quot;RbxAnalyticsService&quot;] = {[&quot;Name&quot;] = &quot;RbxAnalyticsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadata&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadata&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataCallbacks&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataCallbacks&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataClass&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataClass&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ReflectionMetadataItem&quot;,[&quot;Properties&quot;] = {[&quot;ExplorerImageIndex&quot;] = {[&quot;Name&quot;] = &quot;ExplorerImageIndex&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ExplorerOrder&quot;] = {[&quot;Name&quot;] = &quot;ExplorerOrder&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Insertable&quot;] = {[&quot;Name&quot;] = &quot;Insertable&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PreferredParent&quot;] = {[&quot;Name&quot;] = &quot;PreferredParent&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ServiceVisibility&quot;] = {[&quot;Name&quot;] = &quot;ServiceVisibility&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ServiceVisibility&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Browsable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClassCategory&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ClientOnly&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Constraint&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Deprecated&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EditingDisabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EditorType&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ExplorerImageIndex&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;ExplorerOrder&quot;] = {[&quot;Int32&quot;] = 2147483647,},[&quot;FFlag&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Insertable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;IsBackend&quot;] = {[&quot;Bool&quot;] = false,},[&quot;PreferredParent&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;PropertyOrder&quot;] = {[&quot;Int32&quot;] = 5000,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScriptContext&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ServerOnly&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ServiceVisibility&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SliderScaling&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UIMaximum&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UIMinimum&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UINumTicks&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataClasses&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataClasses&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataEnum&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataEnum&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ReflectionMetadataItem&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Browsable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClassCategory&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ClientOnly&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Constraint&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Deprecated&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EditingDisabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EditorType&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;FFlag&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IsBackend&quot;] = {[&quot;Bool&quot;] = false,},[&quot;PropertyOrder&quot;] = {[&quot;Int32&quot;] = 5000,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScriptContext&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ServerOnly&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SliderScaling&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UIMaximum&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UIMinimum&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UINumTicks&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataEnumItem&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataEnumItem&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ReflectionMetadataItem&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Browsable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClassCategory&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ClientOnly&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Constraint&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Deprecated&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EditingDisabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EditorType&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;FFlag&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IsBackend&quot;] = {[&quot;Bool&quot;] = false,},[&quot;PropertyOrder&quot;] = {[&quot;Int32&quot;] = 5000,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScriptContext&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ServerOnly&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SliderScaling&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UIMaximum&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UIMinimum&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UINumTicks&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataEnums&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataEnums&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataEvents&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataEvents&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataFunctions&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataFunctions&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataItem&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataItem&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Browsable&quot;] = {[&quot;Name&quot;] = &quot;Browsable&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClassCategory&quot;] = {[&quot;Name&quot;] = &quot;ClassCategory&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClientOnly&quot;] = {[&quot;Name&quot;] = &quot;ClientOnly&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Constraint&quot;] = {[&quot;Name&quot;] = &quot;Constraint&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Deprecated&quot;] = {[&quot;Name&quot;] = &quot;Deprecated&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EditingDisabled&quot;] = {[&quot;Name&quot;] = &quot;EditingDisabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EditorType&quot;] = {[&quot;Name&quot;] = &quot;EditorType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FFlag&quot;] = {[&quot;Name&quot;] = &quot;FFlag&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsBackend&quot;] = {[&quot;Name&quot;] = &quot;IsBackend&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PropertyOrder&quot;] = {[&quot;Name&quot;] = &quot;PropertyOrder&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScriptContext&quot;] = {[&quot;Name&quot;] = &quot;ScriptContext&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ServerOnly&quot;] = {[&quot;Name&quot;] = &quot;ServerOnly&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SliderScaling&quot;] = {[&quot;Name&quot;] = &quot;SliderScaling&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UIMaximum&quot;] = {[&quot;Name&quot;] = &quot;UIMaximum&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UIMinimum&quot;] = {[&quot;Name&quot;] = &quot;UIMinimum&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UINumTicks&quot;] = {[&quot;Name&quot;] = &quot;UINumTicks&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataMember&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataMember&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ReflectionMetadataItem&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Browsable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClassCategory&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ClientOnly&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Constraint&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Deprecated&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EditingDisabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EditorType&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;FFlag&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IsBackend&quot;] = {[&quot;Bool&quot;] = false,},[&quot;PropertyOrder&quot;] = {[&quot;Int32&quot;] = 5000,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScriptContext&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ServerOnly&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SliderScaling&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UIMaximum&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UIMinimum&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UINumTicks&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataProperties&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataProperties&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionMetadataYieldFunctions&quot;] = {[&quot;Name&quot;] = &quot;ReflectionMetadataYieldFunctions&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReflectionService&quot;] = {[&quot;Name&quot;] = &quot;ReflectionService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RelativeGui&quot;] = {[&quot;Name&quot;] = &quot;RelativeGui&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;GuiObject&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RemoteCursorService&quot;] = {[&quot;Name&quot;] = &quot;RemoteCursorService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RemoteDebuggerServer&quot;] = {[&quot;Name&quot;] = &quot;RemoteDebuggerServer&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RemoteEvent&quot;] = {[&quot;Name&quot;] = &quot;RemoteEvent&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;BaseRemoteEvent&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RemoteFunction&quot;] = {[&quot;Name&quot;] = &quot;RemoteFunction&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RenderSettings&quot;] = {[&quot;Name&quot;] = &quot;RenderSettings&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AutoFRMLevel&quot;] = {[&quot;Name&quot;] = &quot;AutoFRMLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EagerBulkExecution&quot;] = {[&quot;Name&quot;] = &quot;EagerBulkExecution&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EditQualityLevel&quot;] = {[&quot;Name&quot;] = &quot;EditQualityLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;QualityLevel&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable VR Mode&quot;] = {[&quot;Name&quot;] = &quot;Enable VR Mode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EnableFRM&quot;] = {[&quot;Name&quot;] = &quot;EnableFRM&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ExportMergeByMaterial&quot;] = {[&quot;Name&quot;] = &quot;ExportMergeByMaterial&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FrameRateManager&quot;] = {[&quot;Name&quot;] = &quot;FrameRateManager&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FramerateManagerMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GraphicsMode&quot;] = {[&quot;Name&quot;] = &quot;GraphicsMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;GraphicsMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MeshCacheSize&quot;] = {[&quot;Name&quot;] = &quot;MeshCacheSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MeshPartDetailLevel&quot;] = {[&quot;Name&quot;] = &quot;MeshPartDetailLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MeshPartDetailLevel&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;QualityLevel&quot;] = {[&quot;Name&quot;] = &quot;QualityLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;QualityLevel&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReloadAssets&quot;] = {[&quot;Name&quot;] = &quot;ReloadAssets&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RenderCSGTrianglesDebug&quot;] = {[&quot;Name&quot;] = &quot;RenderCSGTrianglesDebug&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShowBoundingBoxes&quot;] = {[&quot;Name&quot;] = &quot;ShowBoundingBoxes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ViewMode&quot;] = {[&quot;Name&quot;] = &quot;ViewMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ViewMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RenderingTest&quot;] = {[&quot;Name&quot;] = &quot;RenderingTest&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CFrame&quot;] = {[&quot;Name&quot;] = &quot;CFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ComparisonDiffThreshold&quot;] = {[&quot;Name&quot;] = &quot;ComparisonDiffThreshold&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ComparisonMethod&quot;] = {[&quot;Name&quot;] = &quot;ComparisonMethod&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RenderingTestComparisonMethod&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ComparisonPsnrThreshold&quot;] = {[&quot;Name&quot;] = &quot;ComparisonPsnrThreshold&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Description&quot;] = {[&quot;Name&quot;] = &quot;Description&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FieldOfView&quot;] = {[&quot;Name&quot;] = &quot;FieldOfView&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Orientation&quot;] = {[&quot;Name&quot;] = &quot;Orientation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PerfTest&quot;] = {[&quot;Name&quot;] = &quot;PerfTest&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Position&quot;] = {[&quot;Name&quot;] = &quot;Position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;QualityAuto&quot;] = {[&quot;Name&quot;] = &quot;QualityAuto&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;QualityLevel&quot;] = {[&quot;Name&quot;] = &quot;QualityLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RenderingTestFrameCount&quot;] = {[&quot;Name&quot;] = &quot;RenderingTestFrameCount&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShouldSkip&quot;] = {[&quot;Name&quot;] = &quot;ShouldSkip&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Ticket&quot;] = {[&quot;Name&quot;] = &quot;Ticket&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Timeout&quot;] = {[&quot;Name&quot;] = &quot;Timeout&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ComparisonDiffThreshold&quot;] = {[&quot;Int32&quot;] = 10,},[&quot;ComparisonMethod&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ComparisonPsnrThreshold&quot;] = {[&quot;Float32&quot;] = 50,},[&quot;Description&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;FieldOfView&quot;] = {[&quot;Float32&quot;] = 70,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;PerfTest&quot;] = {[&quot;Bool&quot;] = false,},[&quot;QualityAuto&quot;] = {[&quot;Bool&quot;] = false,},[&quot;QualityLevel&quot;] = {[&quot;Int32&quot;] = 21,},[&quot;RenderingTestFrameCount&quot;] = {[&quot;Int32&quot;] = 20,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ShouldSkip&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Ticket&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Timeout&quot;] = {[&quot;Int32&quot;] = 30,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReplicatedFirst&quot;] = {[&quot;Name&quot;] = &quot;ReplicatedFirst&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReplicatedStorage&quot;] = {[&quot;Name&quot;] = &quot;ReplicatedStorage&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ReverbSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;ReverbSoundEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SoundEffect&quot;,[&quot;Properties&quot;] = {[&quot;DecayTime&quot;] = {[&quot;Name&quot;] = &quot;DecayTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Density&quot;] = {[&quot;Name&quot;] = &quot;Density&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Diffusion&quot;] = {[&quot;Name&quot;] = &quot;Diffusion&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DryLevel&quot;] = {[&quot;Name&quot;] = &quot;DryLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WetLevel&quot;] = {[&quot;Name&quot;] = &quot;WetLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;DecayTime&quot;] = {[&quot;Float32&quot;] = 1.5,},[&quot;Density&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Diffusion&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;DryLevel&quot;] = {[&quot;Float32&quot;] = -6,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WetLevel&quot;] = {[&quot;Float32&quot;] = 0,},},},[&quot;RibbonNotificationService&quot;] = {[&quot;Name&quot;] = &quot;RibbonNotificationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RigidConstraint&quot;] = {[&quot;Name&quot;] = &quot;RigidConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 194,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;RobloxPluginGuiService&quot;] = {[&quot;Name&quot;] = &quot;RobloxPluginGuiService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RobloxReplicatedStorage&quot;] = {[&quot;Name&quot;] = &quot;RobloxReplicatedStorage&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RobloxSerializableInstance&quot;] = {[&quot;Name&quot;] = &quot;RobloxSerializableInstance&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Data&quot;] = {[&quot;Name&quot;] = &quot;Data&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Data&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RobloxServerStorage&quot;] = {[&quot;Name&quot;] = &quot;RobloxServerStorage&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RocketPropulsion&quot;] = {[&quot;Name&quot;] = &quot;RocketPropulsion&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;BodyMover&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CartoonFactor&quot;] = {[&quot;Name&quot;] = &quot;CartoonFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxSpeed&quot;] = {[&quot;Name&quot;] = &quot;MaxSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxThrust&quot;] = {[&quot;Name&quot;] = &quot;MaxThrust&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxTorque&quot;] = {[&quot;Name&quot;] = &quot;MaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Target&quot;] = {[&quot;Name&quot;] = &quot;Target&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TargetOffset&quot;] = {[&quot;Name&quot;] = &quot;TargetOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TargetRadius&quot;] = {[&quot;Name&quot;] = &quot;TargetRadius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ThrustD&quot;] = {[&quot;Name&quot;] = &quot;ThrustD&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ThrustP&quot;] = {[&quot;Name&quot;] = &quot;ThrustP&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TurnD&quot;] = {[&quot;Name&quot;] = &quot;TurnD&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TurnP&quot;] = {[&quot;Name&quot;] = &quot;TurnP&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CartoonFactor&quot;] = {[&quot;Float32&quot;] = 0.7,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxSpeed&quot;] = {[&quot;Float32&quot;] = 30,},[&quot;MaxThrust&quot;] = {[&quot;Float32&quot;] = 4000,},[&quot;MaxTorque&quot;] = {[&quot;Vector3&quot;] = {400000,400000,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TargetOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;TargetRadius&quot;] = {[&quot;Float32&quot;] = 4,},[&quot;ThrustD&quot;] = {[&quot;Float32&quot;] = 0.001,},[&quot;ThrustP&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;TurnD&quot;] = {[&quot;Float32&quot;] = 500,},[&quot;TurnP&quot;] = {[&quot;Float32&quot;] = 3000,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RodConstraint&quot;] = {[&quot;Name&quot;] = &quot;RodConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;CurrentDistance&quot;] = {[&quot;Name&quot;] = &quot;CurrentDistance&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Length&quot;] = {[&quot;Name&quot;] = &quot;Length&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LimitAngle0&quot;] = {[&quot;Name&quot;] = &quot;LimitAngle0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LimitAngle1&quot;] = {[&quot;Name&quot;] = &quot;LimitAngle1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LimitsEnabled&quot;] = {[&quot;Name&quot;] = &quot;LimitsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Thickness&quot;] = {[&quot;Name&quot;] = &quot;Thickness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 26,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Length&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;LimitAngle0&quot;] = {[&quot;Float32&quot;] = 90,},[&quot;LimitAngle1&quot;] = {[&quot;Float32&quot;] = 90,},[&quot;LimitsEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Thickness&quot;] = {[&quot;Float32&quot;] = 0.1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;RomarkRbxAnalyticsService&quot;] = {[&quot;Name&quot;] = &quot;RomarkRbxAnalyticsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RomarkService&quot;] = {[&quot;Name&quot;] = &quot;RomarkService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RootImportData&quot;] = {[&quot;Name&quot;] = &quot;RootImportData&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;BaseImportData&quot;,[&quot;Properties&quot;] = {[&quot;AddModelToInventory&quot;] = {[&quot;Name&quot;] = &quot;AddModelToInventory&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Anchored&quot;] = {[&quot;Name&quot;] = &quot;Anchored&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AnimationIdForRestPose&quot;] = {[&quot;Name&quot;] = &quot;AnimationIdForRestPose&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ExistingPackageId&quot;] = {[&quot;Name&quot;] = &quot;ExistingPackageId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FileDimensions&quot;] = {[&quot;Name&quot;] = &quot;FileDimensions&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ImportAsModelAsset&quot;] = {[&quot;Name&quot;] = &quot;ImportAsModelAsset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImportAsPackage&quot;] = {[&quot;Name&quot;] = &quot;ImportAsPackage&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InsertInWorkspace&quot;] = {[&quot;Name&quot;] = &quot;InsertInWorkspace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InsertWithScenePosition&quot;] = {[&quot;Name&quot;] = &quot;InsertWithScenePosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InvertNegativeFaces&quot;] = {[&quot;Name&quot;] = &quot;InvertNegativeFaces&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;KeepZeroInfluenceBones&quot;] = {[&quot;Name&quot;] = &quot;KeepZeroInfluenceBones&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MergeMeshes&quot;] = {[&quot;Name&quot;] = &quot;MergeMeshes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PolygonCount&quot;] = {[&quot;Name&quot;] = &quot;PolygonCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PreferredUploadId&quot;] = {[&quot;Name&quot;] = &quot;PreferredUploadId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RestPose&quot;] = {[&quot;Name&quot;] = &quot;RestPose&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RestPose&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RigScale&quot;] = {[&quot;Name&quot;] = &quot;RigScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RigScale&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RigType&quot;] = {[&quot;Name&quot;] = &quot;RigType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RigType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RigVisualization&quot;] = {[&quot;Name&quot;] = &quot;RigVisualization&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScaleUnit&quot;] = {[&quot;Name&quot;] = &quot;ScaleUnit&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MeshScaleUnit&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UseSceneOriginAsCFrame&quot;] = {[&quot;Name&quot;] = &quot;UseSceneOriginAsCFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UseSceneOriginAsPivot&quot;] = {[&quot;Name&quot;] = &quot;UseSceneOriginAsPivot&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UsesCages&quot;] = {[&quot;Name&quot;] = &quot;UsesCages&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ValidateUgcBody&quot;] = {[&quot;Name&quot;] = &quot;ValidateUgcBody&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WorldForward&quot;] = {[&quot;Name&quot;] = &quot;WorldForward&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NormalId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WorldUp&quot;] = {[&quot;Name&quot;] = &quot;WorldUp&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NormalId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RopeConstraint&quot;] = {[&quot;Name&quot;] = &quot;RopeConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;CurrentDistance&quot;] = {[&quot;Name&quot;] = &quot;CurrentDistance&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Length&quot;] = {[&quot;Name&quot;] = &quot;Length&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Restitution&quot;] = {[&quot;Name&quot;] = &quot;Restitution&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Thickness&quot;] = {[&quot;Name&quot;] = &quot;Thickness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WinchEnabled&quot;] = {[&quot;Name&quot;] = &quot;WinchEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WinchForce&quot;] = {[&quot;Name&quot;] = &quot;WinchForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WinchResponsiveness&quot;] = {[&quot;Name&quot;] = &quot;WinchResponsiveness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WinchSpeed&quot;] = {[&quot;Name&quot;] = &quot;WinchSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WinchTarget&quot;] = {[&quot;Name&quot;] = &quot;WinchTarget&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 25,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Length&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;Restitution&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Thickness&quot;] = {[&quot;Float32&quot;] = 0.1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},[&quot;WinchEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;WinchForce&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;WinchResponsiveness&quot;] = {[&quot;Float32&quot;] = 45,},[&quot;WinchSpeed&quot;] = {[&quot;Float32&quot;] = 2,},[&quot;WinchTarget&quot;] = {[&quot;Float32&quot;] = 5,},},},[&quot;Rotate&quot;] = {[&quot;Name&quot;] = &quot;Rotate&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;JointInstance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;C0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;C1&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RotateP&quot;] = {[&quot;Name&quot;] = &quot;RotateP&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;DynamicRotate&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BaseAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;C0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;C1&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RotateV&quot;] = {[&quot;Name&quot;] = &quot;RotateV&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;DynamicRotate&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BaseAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;C0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;C1&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RotationCurve&quot;] = {[&quot;Name&quot;] = &quot;RotationCurve&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Length&quot;] = {[&quot;Name&quot;] = &quot;Length&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ValuesAndTimes&quot;] = {[&quot;Name&quot;] = &quot;ValuesAndTimes&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ValuesAndTimes&quot;] = {[&quot;BinaryString&quot;] = &quot;AQAAAAAAAAABAAAAAAAAAA==&quot;,},},},[&quot;RtMessagingService&quot;] = {[&quot;Name&quot;] = &quot;RtMessagingService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RunService&quot;] = {[&quot;Name&quot;] = &quot;RunService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ClientGitHash&quot;] = {[&quot;Name&quot;] = &quot;ClientGitHash&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RunState&quot;] = {[&quot;Name&quot;] = &quot;RunState&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RunState&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RunningAverageItemDouble&quot;] = {[&quot;Name&quot;] = &quot;RunningAverageItemDouble&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;StatsItem&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RunningAverageItemInt&quot;] = {[&quot;Name&quot;] = &quot;RunningAverageItemInt&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;StatsItem&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RunningAverageTimeIntervalItem&quot;] = {[&quot;Name&quot;] = &quot;RunningAverageTimeIntervalItem&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;StatsItem&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;RuntimeScriptService&quot;] = {[&quot;Name&quot;] = &quot;RuntimeScriptService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SafetyService&quot;] = {[&quot;Name&quot;] = &quot;SafetyService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;IsCaptureModeForReport&quot;] = {[&quot;Name&quot;] = &quot;IsCaptureModeForReport&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScreenGui&quot;] = {[&quot;Name&quot;] = &quot;ScreenGui&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;LayerCollector&quot;,[&quot;Properties&quot;] = {[&quot;ClipToDeviceSafeArea&quot;] = {[&quot;Name&quot;] = &quot;ClipToDeviceSafeArea&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DisplayOrder&quot;] = {[&quot;Name&quot;] = &quot;DisplayOrder&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IgnoreGuiInset&quot;] = {[&quot;Name&quot;] = &quot;IgnoreGuiInset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;ScreenInsets&quot;,[&quot;Migration&quot;] = &quot;IgnoreGuiInsetToScreenInsets&quot;,},},},},},[&quot;OnTopOfCoreBlur&quot;] = {[&quot;Name&quot;] = &quot;OnTopOfCoreBlur&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SafeAreaCompatibility&quot;] = {[&quot;Name&quot;] = &quot;SafeAreaCompatibility&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SafeAreaCompatibility&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScreenInsets&quot;] = {[&quot;Name&quot;] = &quot;ScreenInsets&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ScreenInsets&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipToDeviceSafeArea&quot;] = {[&quot;Bool&quot;] = true,},[&quot;DisplayOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ResetOnSpawn&quot;] = {[&quot;Bool&quot;] = true,},[&quot;SafeAreaCompatibility&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScreenInsets&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ZIndexBehavior&quot;] = {[&quot;Enum&quot;] = 0,},},},[&quot;ScreenshotCapture&quot;] = {[&quot;Name&quot;] = &quot;ScreenshotCapture&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Capture&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {},},[&quot;ScreenshotHud&quot;] = {[&quot;Name&quot;] = &quot;ScreenshotHud&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CameraButtonIcon&quot;] = {[&quot;Name&quot;] = &quot;CameraButtonIcon&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraButtonPosition&quot;] = {[&quot;Name&quot;] = &quot;CameraButtonPosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CloseButtonPosition&quot;] = {[&quot;Name&quot;] = &quot;CloseButtonPosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CloseWhenScreenshotTaken&quot;] = {[&quot;Name&quot;] = &quot;CloseWhenScreenshotTaken&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ExperienceNameOverlayEnabled&quot;] = {[&quot;Name&quot;] = &quot;ExperienceNameOverlayEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HideCoreGuiForCaptures&quot;] = {[&quot;Name&quot;] = &quot;HideCoreGuiForCaptures&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HidePlayerGuiForCaptures&quot;] = {[&quot;Name&quot;] = &quot;HidePlayerGuiForCaptures&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OverlayFont&quot;] = {[&quot;Name&quot;] = &quot;OverlayFont&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UsernameOverlayEnabled&quot;] = {[&quot;Name&quot;] = &quot;UsernameOverlayEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Visible&quot;] = {[&quot;Name&quot;] = &quot;Visible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Script&quot;] = {[&quot;Name&quot;] = &quot;Script&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;BaseScript&quot;,[&quot;Properties&quot;] = {[&quot;Source&quot;] = {[&quot;Name&quot;] = &quot;Source&quot;,[&quot;Scriptability&quot;] = &quot;Custom&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Disabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LinkedSource&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;RunContext&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScriptGuid&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Source&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptBuilder&quot;] = {[&quot;Name&quot;] = &quot;ScriptBuilder&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptChangeService&quot;] = {[&quot;Name&quot;] = &quot;ScriptChangeService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptCloneWatcher&quot;] = {[&quot;Name&quot;] = &quot;ScriptCloneWatcher&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptCloneWatcherHelper&quot;] = {[&quot;Name&quot;] = &quot;ScriptCloneWatcherHelper&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptCommitService&quot;] = {[&quot;Name&quot;] = &quot;ScriptCommitService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptContext&quot;] = {[&quot;Name&quot;] = &quot;ScriptContext&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ScriptsDisabled&quot;] = {[&quot;Name&quot;] = &quot;ScriptsDisabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptDebugger&quot;] = {[&quot;Name&quot;] = &quot;ScriptDebugger&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CoreScriptIdentifier&quot;] = {[&quot;Name&quot;] = &quot;CoreScriptIdentifier&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurrentLine&quot;] = {[&quot;Name&quot;] = &quot;CurrentLine&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsDebugging&quot;] = {[&quot;Name&quot;] = &quot;IsDebugging&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsPaused&quot;] = {[&quot;Name&quot;] = &quot;IsPaused&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Script&quot;] = {[&quot;Name&quot;] = &quot;Script&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ScriptGuid&quot;] = {[&quot;Name&quot;] = &quot;ScriptGuid&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptDocument&quot;] = {[&quot;Name&quot;] = &quot;ScriptDocument&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptEditorService&quot;] = {[&quot;Name&quot;] = &quot;ScriptEditorService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptProfilerService&quot;] = {[&quot;Name&quot;] = &quot;ScriptProfilerService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptRegistrationService&quot;] = {[&quot;Name&quot;] = &quot;ScriptRegistrationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptRuntime&quot;] = {[&quot;Name&quot;] = &quot;ScriptRuntime&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScriptService&quot;] = {[&quot;Name&quot;] = &quot;ScriptService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ScrollingFrame&quot;] = {[&quot;Name&quot;] = &quot;ScrollingFrame&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;GuiObject&quot;,[&quot;Properties&quot;] = {[&quot;AbsoluteCanvasSize&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteCanvasSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AbsoluteWindowSize&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteWindowSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AutomaticCanvasSize&quot;] = {[&quot;Name&quot;] = &quot;AutomaticCanvasSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AutomaticSize&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BottomImage&quot;] = {[&quot;Name&quot;] = &quot;BottomImage&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CanvasPosition&quot;] = {[&quot;Name&quot;] = &quot;CanvasPosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CanvasSize&quot;] = {[&quot;Name&quot;] = &quot;CanvasSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DraggingScrollBar&quot;] = {[&quot;Name&quot;] = &quot;DraggingScrollBar&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DraggingScrollBar&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ElasticBehavior&quot;] = {[&quot;Name&quot;] = &quot;ElasticBehavior&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ElasticBehavior&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HorizontalBarRect&quot;] = {[&quot;Name&quot;] = &quot;HorizontalBarRect&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Rect&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HorizontalScrollBarInset&quot;] = {[&quot;Name&quot;] = &quot;HorizontalScrollBarInset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ScrollBarInset&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxCanvasPosition&quot;] = {[&quot;Name&quot;] = &quot;MaxCanvasPosition&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MidImage&quot;] = {[&quot;Name&quot;] = &quot;MidImage&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScrollBarImageColor3&quot;] = {[&quot;Name&quot;] = &quot;ScrollBarImageColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScrollBarImageTransparency&quot;] = {[&quot;Name&quot;] = &quot;ScrollBarImageTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScrollBarThickness&quot;] = {[&quot;Name&quot;] = &quot;ScrollBarThickness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScrollRate&quot;] = {[&quot;Name&quot;] = &quot;ScrollRate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ScrollVelocity&quot;] = {[&quot;Name&quot;] = &quot;ScrollVelocity&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ScrollingDirection&quot;] = {[&quot;Name&quot;] = &quot;ScrollingDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ScrollingDirection&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScrollingEnabled&quot;] = {[&quot;Name&quot;] = &quot;ScrollingEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SmoothScroll&quot;] = {[&quot;Name&quot;] = &quot;SmoothScroll&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TopImage&quot;] = {[&quot;Name&quot;] = &quot;TopImage&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VerticalBarRect&quot;] = {[&quot;Name&quot;] = &quot;VerticalBarRect&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Rect&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VerticalScrollBarInset&quot;] = {[&quot;Name&quot;] = &quot;VerticalScrollBarInset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ScrollBarInset&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VerticalScrollBarPosition&quot;] = {[&quot;Name&quot;] = &quot;VerticalScrollBarPosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VerticalScrollBarPosition&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = false,},[&quot;AnchorPoint&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticCanvasSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AutomaticSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.6392157,0.63529414,0.64705884,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;BorderColor3&quot;] = {[&quot;Color3&quot;] = {0.105882354,0.16470589,0.20784314,},},[&quot;BorderMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BorderSizePixel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;BottomImage&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://textures/ui/Scroll/scroll-bottom.png&quot;,},[&quot;CanvasPosition&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;CanvasSize&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{2,0,},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Draggable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ElasticBehavior&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;HorizontalScrollBarInset&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Interactable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LayoutOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;MidImage&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://textures/ui/Scroll/scroll-middle.png&quot;,},[&quot;Position&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScrollBarImageColor3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;ScrollBarImageTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;ScrollBarThickness&quot;] = {[&quot;Int32&quot;] = 12,},[&quot;ScrollingDirection&quot;] = {[&quot;Enum&quot;] = 4,},[&quot;ScrollingEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Selectable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = true,},[&quot;SelectionOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeConstraint&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopImage&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://textures/ui/Scroll/scroll-top.png&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VerticalScrollBarInset&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;VerticalScrollBarPosition&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;Seat&quot;] = {[&quot;Name&quot;] = &quot;Seat&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Part&quot;,[&quot;Properties&quot;] = {[&quot;Disabled&quot;] = {[&quot;Name&quot;] = &quot;Disabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Occupant&quot;] = {[&quot;Name&quot;] = &quot;Occupant&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 4,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {163,162,165,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;Disabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FormFactor&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Shape&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 3,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;Selection&quot;] = {[&quot;Name&quot;] = &quot;Selection&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ActiveInstance&quot;] = {[&quot;Name&quot;] = &quot;ActiveInstance&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RenderMode&quot;] = {[&quot;Name&quot;] = &quot;RenderMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SelectionRenderMode&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SelectionBoxThickness&quot;] = {[&quot;Name&quot;] = &quot;SelectionBoxThickness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SelectionLineThickness&quot;] = {[&quot;Name&quot;] = &quot;SelectionLineThickness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SelectionThickness&quot;] = {[&quot;Name&quot;] = &quot;SelectionThickness&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ShowActiveInstanceHighlight&quot;] = {[&quot;Name&quot;] = &quot;ShowActiveInstanceHighlight&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SelectionBox&quot;] = {[&quot;Name&quot;] = &quot;SelectionBox&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;InstanceAdornment&quot;,[&quot;Properties&quot;] = {[&quot;LineThickness&quot;] = {[&quot;Name&quot;] = &quot;LineThickness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StudioSelectionBox&quot;] = {[&quot;Name&quot;] = &quot;StudioSelectionBox&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SurfaceColor&quot;] = {[&quot;Name&quot;] = &quot;SurfaceColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SurfaceColor3&quot;] = {[&quot;Name&quot;] = &quot;SurfaceColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SurfaceTransparency&quot;] = {[&quot;Name&quot;] = &quot;SurfaceTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LineThickness&quot;] = {[&quot;Float32&quot;] = 0.15,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;StudioSelectionBox&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SurfaceColor3&quot;] = {[&quot;Color3&quot;] = {0.050980397,0.41176474,0.6745098,},},[&quot;SurfaceTransparency&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},},},[&quot;SelectionHighlightManager&quot;] = {[&quot;Name&quot;] = &quot;SelectionHighlightManager&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SelectionLasso&quot;] = {[&quot;Name&quot;] = &quot;SelectionLasso&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GuiBase3d&quot;,[&quot;Properties&quot;] = {[&quot;Humanoid&quot;] = {[&quot;Name&quot;] = &quot;Humanoid&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SelectionPartLasso&quot;] = {[&quot;Name&quot;] = &quot;SelectionPartLasso&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;SelectionLasso&quot;,[&quot;Properties&quot;] = {[&quot;Part&quot;] = {[&quot;Name&quot;] = &quot;Part&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},},},[&quot;SelectionPointLasso&quot;] = {[&quot;Name&quot;] = &quot;SelectionPointLasso&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;SelectionLasso&quot;,[&quot;Properties&quot;] = {[&quot;Point&quot;] = {[&quot;Name&quot;] = &quot;Point&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Point&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},},},[&quot;SelectionSphere&quot;] = {[&quot;Name&quot;] = &quot;SelectionSphere&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PVAdornment&quot;,[&quot;Properties&quot;] = {[&quot;SurfaceColor&quot;] = {[&quot;Name&quot;] = &quot;SurfaceColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SurfaceColor3&quot;] = {[&quot;Name&quot;] = &quot;SurfaceColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SurfaceTransparency&quot;] = {[&quot;Name&quot;] = &quot;SurfaceTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;SurfaceColor3&quot;] = {[&quot;Color3&quot;] = {0.050980397,0.41176474,0.6745098,},},[&quot;SurfaceTransparency&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},},},[&quot;SensorBase&quot;] = {[&quot;Name&quot;] = &quot;SensorBase&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;UpdateType&quot;] = {[&quot;Name&quot;] = &quot;UpdateType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SensorUpdateType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ServerReplicator&quot;] = {[&quot;Name&quot;] = &quot;ServerReplicator&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;NetworkReplicator&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ServerScriptService&quot;] = {[&quot;Name&quot;] = &quot;ServerScriptService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;LoadStringEnabled&quot;] = {[&quot;Name&quot;] = &quot;LoadStringEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LoadStringEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ServerStorage&quot;] = {[&quot;Name&quot;] = &quot;ServerStorage&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ServiceProvider&quot;] = {[&quot;Name&quot;] = &quot;ServiceProvider&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ServiceVisibilityService&quot;] = {[&quot;Name&quot;] = &quot;ServiceVisibilityService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;HiddenServices&quot;] = {[&quot;Name&quot;] = &quot;HiddenServices&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VisibleServices&quot;] = {[&quot;Name&quot;] = &quot;VisibleServices&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HiddenServices&quot;] = {[&quot;BinaryString&quot;] = &quot;AAAAAA==&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VisibleServices&quot;] = {[&quot;BinaryString&quot;] = &quot;AAAAAA==&quot;,},},},[&quot;SessionService&quot;] = {[&quot;Name&quot;] = &quot;SessionService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SharedTableRegistry&quot;] = {[&quot;Name&quot;] = &quot;SharedTableRegistry&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Shirt&quot;] = {[&quot;Name&quot;] = &quot;Shirt&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Clothing&quot;,[&quot;Properties&quot;] = {[&quot;ShirtTemplate&quot;] = {[&quot;Name&quot;] = &quot;ShirtTemplate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ShirtTemplate&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ShirtGraphic&quot;] = {[&quot;Name&quot;] = &quot;ShirtGraphic&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;CharacterAppearance&quot;,[&quot;Properties&quot;] = {[&quot;Color3&quot;] = {[&quot;Name&quot;] = &quot;Color3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Graphic&quot;] = {[&quot;Name&quot;] = &quot;Graphic&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;Graphic&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ShorelineUpgraderService&quot;] = {[&quot;Name&quot;] = &quot;ShorelineUpgraderService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SkateboardController&quot;] = {[&quot;Name&quot;] = &quot;SkateboardController&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Controller&quot;,[&quot;Properties&quot;] = {[&quot;Steer&quot;] = {[&quot;Name&quot;] = &quot;Steer&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Throttle&quot;] = {[&quot;Name&quot;] = &quot;Throttle&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SkateboardPlatform&quot;] = {[&quot;Name&quot;] = &quot;SkateboardPlatform&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;Part&quot;,[&quot;Properties&quot;] = {[&quot;Controller&quot;] = {[&quot;Name&quot;] = &quot;Controller&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ControllingHumanoid&quot;] = {[&quot;Name&quot;] = &quot;ControllingHumanoid&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MoveState&quot;] = {[&quot;Name&quot;] = &quot;MoveState&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MoveState&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Steer&quot;] = {[&quot;Name&quot;] = &quot;Steer&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StickyWheels&quot;] = {[&quot;Name&quot;] = &quot;StickyWheels&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Throttle&quot;] = {[&quot;Name&quot;] = &quot;Throttle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 4,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {163,162,165,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FormFactor&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Shape&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Steer&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;StickyWheels&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Throttle&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 3,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;Skin&quot;] = {[&quot;Name&quot;] = &quot;Skin&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;CharacterAppearance&quot;,[&quot;Properties&quot;] = {[&quot;SkinColor&quot;] = {[&quot;Name&quot;] = &quot;SkinColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SkinColor&quot;] = {[&quot;BrickColor&quot;] = 226,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Sky&quot;] = {[&quot;Name&quot;] = &quot;Sky&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CelestialBodiesShown&quot;] = {[&quot;Name&quot;] = &quot;CelestialBodiesShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MoonAngularSize&quot;] = {[&quot;Name&quot;] = &quot;MoonAngularSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MoonTextureId&quot;] = {[&quot;Name&quot;] = &quot;MoonTextureId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SkyboxBk&quot;] = {[&quot;Name&quot;] = &quot;SkyboxBk&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SkyboxDn&quot;] = {[&quot;Name&quot;] = &quot;SkyboxDn&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SkyboxFt&quot;] = {[&quot;Name&quot;] = &quot;SkyboxFt&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SkyboxLf&quot;] = {[&quot;Name&quot;] = &quot;SkyboxLf&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SkyboxRt&quot;] = {[&quot;Name&quot;] = &quot;SkyboxRt&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SkyboxUp&quot;] = {[&quot;Name&quot;] = &quot;SkyboxUp&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StarCount&quot;] = {[&quot;Name&quot;] = &quot;StarCount&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SunAngularSize&quot;] = {[&quot;Name&quot;] = &quot;SunAngularSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SunTextureId&quot;] = {[&quot;Name&quot;] = &quot;SunTextureId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CelestialBodiesShown&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MoonAngularSize&quot;] = {[&quot;Float32&quot;] = 11,},[&quot;MoonTextureId&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://sky/moon.jpg&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SkyboxBk&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://textures/sky/sky512_bk.tex&quot;,},[&quot;SkyboxDn&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://textures/sky/sky512_dn.tex&quot;,},[&quot;SkyboxFt&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://textures/sky/sky512_ft.tex&quot;,},[&quot;SkyboxLf&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://textures/sky/sky512_lf.tex&quot;,},[&quot;SkyboxRt&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://textures/sky/sky512_rt.tex&quot;,},[&quot;SkyboxUp&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://textures/sky/sky512_up.tex&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;StarCount&quot;] = {[&quot;Int32&quot;] = 3000,},[&quot;SunAngularSize&quot;] = {[&quot;Float32&quot;] = 21,},[&quot;SunTextureId&quot;] = {[&quot;ContentId&quot;] = &quot;rbxasset://sky/sun.jpg&quot;,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SlidingBallConstraint&quot;] = {[&quot;Name&quot;] = &quot;SlidingBallConstraint&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;ActuatorType&quot;] = {[&quot;Name&quot;] = &quot;ActuatorType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ActuatorType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurrentPosition&quot;] = {[&quot;Name&quot;] = &quot;CurrentPosition&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LimitsEnabled&quot;] = {[&quot;Name&quot;] = &quot;LimitsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LinearResponsiveness&quot;] = {[&quot;Name&quot;] = &quot;LinearResponsiveness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LowerLimit&quot;] = {[&quot;Name&quot;] = &quot;LowerLimit&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MotorMaxAcceleration&quot;] = {[&quot;Name&quot;] = &quot;MotorMaxAcceleration&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MotorMaxForce&quot;] = {[&quot;Name&quot;] = &quot;MotorMaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Restitution&quot;] = {[&quot;Name&quot;] = &quot;Restitution&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ServoMaxForce&quot;] = {[&quot;Name&quot;] = &quot;ServoMaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SoftlockServoUponReachingTarget&quot;] = {[&quot;Name&quot;] = &quot;SoftlockServoUponReachingTarget&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Speed&quot;] = {[&quot;Name&quot;] = &quot;Speed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TargetPosition&quot;] = {[&quot;Name&quot;] = &quot;TargetPosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UpperLimit&quot;] = {[&quot;Name&quot;] = &quot;UpperLimit&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Velocity&quot;] = {[&quot;Name&quot;] = &quot;Velocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Smoke&quot;] = {[&quot;Name&quot;] = &quot;Smoke&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalTransparencyModifier&quot;] = {[&quot;Name&quot;] = &quot;LocalTransparencyModifier&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Opacity&quot;] = {[&quot;Name&quot;] = &quot;Opacity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;opacity_xml&quot;,},},},},[&quot;RiseVelocity&quot;] = {[&quot;Name&quot;] = &quot;RiseVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;riseVelocity_xml&quot;,},},},},[&quot;Size&quot;] = {[&quot;Name&quot;] = &quot;Size&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;size_xml&quot;,},},},},[&quot;TimeScale&quot;] = {[&quot;Name&quot;] = &quot;TimeScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;opacity_xml&quot;] = {[&quot;Name&quot;] = &quot;opacity_xml&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Opacity&quot;,},},},[&quot;riseVelocity_xml&quot;] = {[&quot;Name&quot;] = &quot;riseVelocity_xml&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;RiseVelocity&quot;,},},},[&quot;size_xml&quot;] = {[&quot;Name&quot;] = &quot;size_xml&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Size&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Opacity&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RiseVelocity&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TimeScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SmoothVoxelsUpgraderService&quot;] = {[&quot;Name&quot;] = &quot;SmoothVoxelsUpgraderService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Snap&quot;] = {[&quot;Name&quot;] = &quot;Snap&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Superclass&quot;] = &quot;JointInstance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;C0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;C1&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SnippetService&quot;] = {[&quot;Name&quot;] = &quot;SnippetService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SocialService&quot;] = {[&quot;Name&quot;] = &quot;SocialService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SolidModelContentProvider&quot;] = {[&quot;Name&quot;] = &quot;SolidModelContentProvider&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;CacheableContentProvider&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Sound&quot;] = {[&quot;Name&quot;] = &quot;Sound&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ChannelCount&quot;] = {[&quot;Name&quot;] = &quot;ChannelCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EmitterSize&quot;] = {[&quot;Name&quot;] = &quot;EmitterSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;RollOffMinDistance&quot;,},},},[&quot;IsLoaded&quot;] = {[&quot;Name&quot;] = &quot;IsLoaded&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsPaused&quot;] = {[&quot;Name&quot;] = &quot;IsPaused&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsPlaying&quot;] = {[&quot;Name&quot;] = &quot;IsPlaying&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsSpatial&quot;] = {[&quot;Name&quot;] = &quot;IsSpatial&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LoopRegion&quot;] = {[&quot;Name&quot;] = &quot;LoopRegion&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Looped&quot;] = {[&quot;Name&quot;] = &quot;Looped&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxDistance&quot;] = {[&quot;Name&quot;] = &quot;MaxDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;xmlRead_MaxDistance_3&quot;,},},},},[&quot;MinDistance&quot;] = {[&quot;Name&quot;] = &quot;MinDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Pitch&quot;] = {[&quot;Name&quot;] = &quot;Pitch&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PlayOnRemove&quot;] = {[&quot;Name&quot;] = &quot;PlayOnRemove&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlaybackLoudness&quot;] = {[&quot;Name&quot;] = &quot;PlaybackLoudness&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PlaybackRegion&quot;] = {[&quot;Name&quot;] = &quot;PlaybackRegion&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlaybackRegionsEnabled&quot;] = {[&quot;Name&quot;] = &quot;PlaybackRegionsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlaybackSpeed&quot;] = {[&quot;Name&quot;] = &quot;PlaybackSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Playing&quot;] = {[&quot;Name&quot;] = &quot;Playing&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlayingReplicator&quot;] = {[&quot;Name&quot;] = &quot;PlayingReplicator&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RollOffGain&quot;] = {[&quot;Name&quot;] = &quot;RollOffGain&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RollOffMaxDistance&quot;] = {[&quot;Name&quot;] = &quot;RollOffMaxDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;xmlRead_MaxDistance_3&quot;,},},},},[&quot;RollOffMinDistance&quot;] = {[&quot;Name&quot;] = &quot;RollOffMinDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;EmitterSize&quot;,},},},},[&quot;RollOffMode&quot;] = {[&quot;Name&quot;] = &quot;RollOffMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RollOffMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SoundGroup&quot;] = {[&quot;Name&quot;] = &quot;SoundGroup&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SoundId&quot;] = {[&quot;Name&quot;] = &quot;SoundId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TimeLength&quot;] = {[&quot;Name&quot;] = &quot;TimeLength&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TimePosition&quot;] = {[&quot;Name&quot;] = &quot;TimePosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TimePositionReplicator&quot;] = {[&quot;Name&quot;] = &quot;TimePositionReplicator&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UsageContextPermission&quot;] = {[&quot;Name&quot;] = &quot;UsageContextPermission&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UsageContext&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Volume&quot;] = {[&quot;Name&quot;] = &quot;Volume&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;isPlaying&quot;] = {[&quot;Name&quot;] = &quot;isPlaying&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;xmlRead_MaxDistance_3&quot;] = {[&quot;Name&quot;] = &quot;xmlRead_MaxDistance_3&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;RollOffMaxDistance&quot;,},},},[&quot;xmlRead_MinDistance_3&quot;] = {[&quot;Name&quot;] = &quot;xmlRead_MinDistance_3&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LoopRegion&quot;] = {[&quot;NumberRange&quot;] = {0,60000,},},[&quot;Looped&quot;] = {[&quot;Bool&quot;] = false,},[&quot;PlayOnRemove&quot;] = {[&quot;Bool&quot;] = false,},[&quot;PlaybackRegion&quot;] = {[&quot;NumberRange&quot;] = {0,60000,},},[&quot;PlaybackRegionsEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;PlaybackSpeed&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Playing&quot;] = {[&quot;Bool&quot;] = false,},[&quot;RollOffMaxDistance&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;RollOffMinDistance&quot;] = {[&quot;Float32&quot;] = 10,},[&quot;RollOffMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SoundId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TimePosition&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Volume&quot;] = {[&quot;Float32&quot;] = 0.5,},},},[&quot;SoundEffect&quot;] = {[&quot;Name&quot;] = &quot;SoundEffect&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Priority&quot;] = {[&quot;Name&quot;] = &quot;Priority&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SoundGroup&quot;] = {[&quot;Name&quot;] = &quot;SoundGroup&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Volume&quot;] = {[&quot;Name&quot;] = &quot;Volume&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Volume&quot;] = {[&quot;Float32&quot;] = 0.5,},},},[&quot;SoundService&quot;] = {[&quot;Name&quot;] = &quot;SoundService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AmbientReverb&quot;] = {[&quot;Name&quot;] = &quot;AmbientReverb&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ReverbType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AudioApiByDefault&quot;] = {[&quot;Name&quot;] = &quot;AudioApiByDefault&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RolloutState&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CharacterSoundsUseNewApi&quot;] = {[&quot;Name&quot;] = &quot;CharacterSoundsUseNewApi&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RolloutState&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DefaultListenerLocation&quot;] = {[&quot;Name&quot;] = &quot;DefaultListenerLocation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ListenerLocation&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DistanceFactor&quot;] = {[&quot;Name&quot;] = &quot;DistanceFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DopplerScale&quot;] = {[&quot;Name&quot;] = &quot;DopplerScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsNewExpForAudioApiByDefault&quot;] = {[&quot;Name&quot;] = &quot;IsNewExpForAudioApiByDefault&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RespectFilteringEnabled&quot;] = {[&quot;Name&quot;] = &quot;RespectFilteringEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RolloffScale&quot;] = {[&quot;Name&quot;] = &quot;RolloffScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VolumetricAudio&quot;] = {[&quot;Name&quot;] = &quot;VolumetricAudio&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VolumetricAudio&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AmbientReverb&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioApiByDefault&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CharacterSoundsUseNewApi&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;DefaultListenerLocation&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;DistanceFactor&quot;] = {[&quot;Float32&quot;] = 3.33,},[&quot;DopplerScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IsNewExpForAudioApiByDefault&quot;] = {[&quot;Bool&quot;] = false,},[&quot;RespectFilteringEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;RolloffScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VolumetricAudio&quot;] = {[&quot;Enum&quot;] = 1,},},},[&quot;Sparkles&quot;] = {[&quot;Name&quot;] = &quot;Sparkles&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalTransparencyModifier&quot;] = {[&quot;Name&quot;] = &quot;LocalTransparencyModifier&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SparkleColor&quot;] = {[&quot;Name&quot;] = &quot;SparkleColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TimeScale&quot;] = {[&quot;Name&quot;] = &quot;TimeScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;SparkleColor&quot;] = {[&quot;Color3&quot;] = {0.5647059,0.098039225,1,},},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TimeScale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SpawnLocation&quot;] = {[&quot;Name&quot;] = &quot;SpawnLocation&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Part&quot;,[&quot;Properties&quot;] = {[&quot;AllowTeamChangeOnTouch&quot;] = {[&quot;Name&quot;] = &quot;AllowTeamChangeOnTouch&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Duration&quot;] = {[&quot;Name&quot;] = &quot;Duration&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Neutral&quot;] = {[&quot;Name&quot;] = &quot;Neutral&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TeamColor&quot;] = {[&quot;Name&quot;] = &quot;TeamColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AllowTeamChangeOnTouch&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 4,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {163,162,165,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;Duration&quot;] = {[&quot;Int32&quot;] = 10,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FormFactor&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Neutral&quot;] = {[&quot;Bool&quot;] = true,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Shape&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TeamColor&quot;] = {[&quot;BrickColor&quot;] = 194,},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 3,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;SpawnerService&quot;] = {[&quot;Name&quot;] = &quot;SpawnerService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SpecialMesh&quot;] = {[&quot;Name&quot;] = &quot;SpecialMesh&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;FileMesh&quot;,[&quot;Properties&quot;] = {[&quot;MeshType&quot;] = {[&quot;Name&quot;] = &quot;MeshType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MeshType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MeshId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;MeshType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Offset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TextureId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VertexColor&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},},},[&quot;SphereHandleAdornment&quot;] = {[&quot;Name&quot;] = &quot;SphereHandleAdornment&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;HandleAdornment&quot;,[&quot;Properties&quot;] = {[&quot;Radius&quot;] = {[&quot;Name&quot;] = &quot;Radius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AdornCullingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AlwaysOnTop&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Radius&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SizeRelativeOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = -1,},},},[&quot;SpotLight&quot;] = {[&quot;Name&quot;] = &quot;SpotLight&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Light&quot;,[&quot;Properties&quot;] = {[&quot;Angle&quot;] = {[&quot;Name&quot;] = &quot;Angle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Face&quot;] = {[&quot;Name&quot;] = &quot;Face&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NormalId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Range&quot;] = {[&quot;Name&quot;] = &quot;Range&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Angle&quot;] = {[&quot;Float32&quot;] = 90,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Brightness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Face&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Range&quot;] = {[&quot;Float32&quot;] = 16,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Shadows&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SpringConstraint&quot;] = {[&quot;Name&quot;] = &quot;SpringConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;Coils&quot;] = {[&quot;Name&quot;] = &quot;Coils&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurrentLength&quot;] = {[&quot;Name&quot;] = &quot;CurrentLength&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Damping&quot;] = {[&quot;Name&quot;] = &quot;Damping&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FreeLength&quot;] = {[&quot;Name&quot;] = &quot;FreeLength&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LimitsEnabled&quot;] = {[&quot;Name&quot;] = &quot;LimitsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxForce&quot;] = {[&quot;Name&quot;] = &quot;MaxForce&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxLength&quot;] = {[&quot;Name&quot;] = &quot;MaxLength&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinLength&quot;] = {[&quot;Name&quot;] = &quot;MinLength&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Radius&quot;] = {[&quot;Name&quot;] = &quot;Radius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Stiffness&quot;] = {[&quot;Name&quot;] = &quot;Stiffness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Thickness&quot;] = {[&quot;Name&quot;] = &quot;Thickness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Coils&quot;] = {[&quot;Float32&quot;] = 3,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 200,},[&quot;Damping&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FreeLength&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LimitsEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;MaxForce&quot;] = {[&quot;Float32&quot;] = math.huge,},[&quot;MaxLength&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;MinLength&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Radius&quot;] = {[&quot;Float32&quot;] = 0.4,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Stiffness&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Thickness&quot;] = {[&quot;Float32&quot;] = 0.1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;StackFrame&quot;] = {[&quot;Name&quot;] = &quot;StackFrame&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;FrameId&quot;] = {[&quot;Name&quot;] = &quot;FrameId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FrameName&quot;] = {[&quot;Name&quot;] = &quot;FrameName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FrameType&quot;] = {[&quot;Name&quot;] = &quot;FrameType&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DebuggerFrameType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Globals&quot;] = {[&quot;Name&quot;] = &quot;Globals&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Line&quot;] = {[&quot;Name&quot;] = &quot;Line&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Locals&quot;] = {[&quot;Name&quot;] = &quot;Locals&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Populated&quot;] = {[&quot;Name&quot;] = &quot;Populated&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Script&quot;] = {[&quot;Name&quot;] = &quot;Script&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Upvalues&quot;] = {[&quot;Name&quot;] = &quot;Upvalues&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StandalonePluginScripts&quot;] = {[&quot;Name&quot;] = &quot;StandalonePluginScripts&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StandardPages&quot;] = {[&quot;Name&quot;] = &quot;StandardPages&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Pages&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StartPageService&quot;] = {[&quot;Name&quot;] = &quot;StartPageService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StarterCharacterScripts&quot;] = {[&quot;Name&quot;] = &quot;StarterCharacterScripts&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;StarterPlayerScripts&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StarterGear&quot;] = {[&quot;Name&quot;] = &quot;StarterGear&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StarterGui&quot;] = {[&quot;Name&quot;] = &quot;StarterGui&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;BasePlayerGui&quot;,[&quot;Properties&quot;] = {[&quot;ProcessUserInput&quot;] = {[&quot;Name&quot;] = &quot;ProcessUserInput&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ResetPlayerGuiOnSpawn&quot;] = {[&quot;Name&quot;] = &quot;ResetPlayerGuiOnSpawn&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RtlTextSupport&quot;] = {[&quot;Name&quot;] = &quot;RtlTextSupport&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RtlTextSupport&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScreenOrientation&quot;] = {[&quot;Name&quot;] = &quot;ScreenOrientation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ScreenOrientation&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShowDevelopmentGui&quot;] = {[&quot;Name&quot;] = &quot;ShowDevelopmentGui&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StudioDefaultStyleSheet&quot;] = {[&quot;Name&quot;] = &quot;StudioDefaultStyleSheet&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StudioInsertWidgetLayerCollectorAutoLinkStyleSheet&quot;] = {[&quot;Name&quot;] = &quot;StudioInsertWidgetLayerCollectorAutoLinkStyleSheet&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VirtualCursorMode&quot;] = {[&quot;Name&quot;] = &quot;VirtualCursorMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VirtualCursorMode&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ResetPlayerGuiOnSpawn&quot;] = {[&quot;Bool&quot;] = true,},[&quot;RtlTextSupport&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScreenOrientation&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;ShowDevelopmentGui&quot;] = {[&quot;Bool&quot;] = true,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VirtualCursorMode&quot;] = {[&quot;Enum&quot;] = 0,},},},[&quot;StarterPack&quot;] = {[&quot;Name&quot;] = &quot;StarterPack&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StarterPlayer&quot;] = {[&quot;Name&quot;] = &quot;StarterPlayer&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AllowCustomAnimations&quot;] = {[&quot;Name&quot;] = &quot;AllowCustomAnimations&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AutoJumpEnabled&quot;] = {[&quot;Name&quot;] = &quot;AutoJumpEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AvatarJointUpgrade&quot;] = {[&quot;Name&quot;] = &quot;AvatarJointUpgrade&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RolloutState&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AvatarJointUpgrade_SerializedRollout&quot;] = {[&quot;Name&quot;] = &quot;AvatarJointUpgrade_SerializedRollout&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RolloutState&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraMaxZoomDistance&quot;] = {[&quot;Name&quot;] = &quot;CameraMaxZoomDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraMinZoomDistance&quot;] = {[&quot;Name&quot;] = &quot;CameraMinZoomDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraMode&quot;] = {[&quot;Name&quot;] = &quot;CameraMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CameraMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CharacterJumpHeight&quot;] = {[&quot;Name&quot;] = &quot;CharacterJumpHeight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CharacterJumpPower&quot;] = {[&quot;Name&quot;] = &quot;CharacterJumpPower&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CharacterMaxSlopeAngle&quot;] = {[&quot;Name&quot;] = &quot;CharacterMaxSlopeAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CharacterUseJumpPower&quot;] = {[&quot;Name&quot;] = &quot;CharacterUseJumpPower&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CharacterWalkSpeed&quot;] = {[&quot;Name&quot;] = &quot;CharacterWalkSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DevCameraOcclusionMode&quot;] = {[&quot;Name&quot;] = &quot;DevCameraOcclusionMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DevCameraOcclusionMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DevComputerCameraMovementMode&quot;] = {[&quot;Name&quot;] = &quot;DevComputerCameraMovementMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DevComputerCameraMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DevComputerMovementMode&quot;] = {[&quot;Name&quot;] = &quot;DevComputerMovementMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DevComputerMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DevTouchCameraMovementMode&quot;] = {[&quot;Name&quot;] = &quot;DevTouchCameraMovementMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DevTouchCameraMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DevTouchMovementMode&quot;] = {[&quot;Name&quot;] = &quot;DevTouchMovementMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DevTouchMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EnableDynamicHeads&quot;] = {[&quot;Name&quot;] = &quot;EnableDynamicHeads&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;LoadDynamicHeads&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EnableMouseLockOption&quot;] = {[&quot;Name&quot;] = &quot;EnableMouseLockOption&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsAssetIDFace&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsAssetIDFace&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsAssetIDHead&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsAssetIDHead&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsAssetIDLeftArm&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsAssetIDLeftArm&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsAssetIDLeftLeg&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsAssetIDLeftLeg&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsAssetIDPants&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsAssetIDPants&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsAssetIDRightArm&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsAssetIDRightArm&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsAssetIDRightLeg&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsAssetIDRightLeg&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsAssetIDShirt&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsAssetIDShirt&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsAssetIDTeeShirt&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsAssetIDTeeShirt&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsAssetIDTorso&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsAssetIDTorso&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsAvatar&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsAvatar&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;GameAvatarType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsR15Collision&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsR15Collision&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;R15CollisionType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsScaleRangeBodyType&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsScaleRangeBodyType&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsScaleRangeHead&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsScaleRangeHead&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsScaleRangeHeight&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsScaleRangeHeight&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsScaleRangeProportion&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsScaleRangeProportion&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GameSettingsScaleRangeWidth&quot;] = {[&quot;Name&quot;] = &quot;GameSettingsScaleRangeWidth&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberRange&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HealthDisplayDistance&quot;] = {[&quot;Name&quot;] = &quot;HealthDisplayDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LoadCharacterAppearance&quot;] = {[&quot;Name&quot;] = &quot;LoadCharacterAppearance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LoadCharacterLayeredClothing&quot;] = {[&quot;Name&quot;] = &quot;LoadCharacterLayeredClothing&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;LoadCharacterLayeredClothing&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LoadCharacterLayeredClothing &quot;] = {[&quot;Name&quot;] = &quot;LoadCharacterLayeredClothing &quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;LoadCharacterLayeredClothing&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LuaCharacterController&quot;] = {[&quot;Name&quot;] = &quot;LuaCharacterController&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CharacterControlMode&quot;,},[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NameDisplayDistance&quot;] = {[&quot;Name&quot;] = &quot;NameDisplayDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UserEmotesEnabled&quot;] = {[&quot;Name&quot;] = &quot;UserEmotesEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AllowCustomAnimations&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoJumpEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AvatarJointUpgrade_SerializedRollout&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CameraMaxZoomDistance&quot;] = {[&quot;Float32&quot;] = 400,},[&quot;CameraMinZoomDistance&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;CameraMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CharacterJumpHeight&quot;] = {[&quot;Float32&quot;] = 7.2,},[&quot;CharacterJumpPower&quot;] = {[&quot;Float32&quot;] = 50,},[&quot;CharacterMaxSlopeAngle&quot;] = {[&quot;Float32&quot;] = 89,},[&quot;CharacterUseJumpPower&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CharacterWalkSpeed&quot;] = {[&quot;Float32&quot;] = 16,},[&quot;DevCameraOcclusionMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;DevComputerCameraMovementMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;DevComputerMovementMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;DevTouchCameraMovementMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;DevTouchMovementMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;EnableDynamicHeads&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;EnableMouseLockOption&quot;] = {[&quot;Bool&quot;] = true,},[&quot;GameSettingsAssetIDFace&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;GameSettingsAssetIDHead&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;GameSettingsAssetIDLeftArm&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;GameSettingsAssetIDLeftLeg&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;GameSettingsAssetIDPants&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;GameSettingsAssetIDRightArm&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;GameSettingsAssetIDRightLeg&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;GameSettingsAssetIDShirt&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;GameSettingsAssetIDTeeShirt&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;GameSettingsAssetIDTorso&quot;] = {[&quot;Int64&quot;] = 0,},[&quot;GameSettingsAvatar&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;GameSettingsR15Collision&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;GameSettingsScaleRangeBodyType&quot;] = {[&quot;NumberRange&quot;] = {0,1,},},[&quot;GameSettingsScaleRangeHead&quot;] = {[&quot;NumberRange&quot;] = {0.95,1,},},[&quot;GameSettingsScaleRangeHeight&quot;] = {[&quot;NumberRange&quot;] = {0.9,1.05,},},[&quot;GameSettingsScaleRangeProportion&quot;] = {[&quot;NumberRange&quot;] = {0,1,},},[&quot;GameSettingsScaleRangeWidth&quot;] = {[&quot;NumberRange&quot;] = {0.7,1,},},[&quot;HealthDisplayDistance&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LoadCharacterAppearance&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LoadCharacterLayeredClothing&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LuaCharacterController&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;NameDisplayDistance&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UserEmotesEnabled&quot;] = {[&quot;Bool&quot;] = true,},},},[&quot;StarterPlayerScripts&quot;] = {[&quot;Name&quot;] = &quot;StarterPlayerScripts&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StartupMessageService&quot;] = {[&quot;Name&quot;] = &quot;StartupMessageService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Stats&quot;] = {[&quot;Name&quot;] = &quot;Stats&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ContactsCount&quot;] = {[&quot;Name&quot;] = &quot;ContactsCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DataReceiveKbps&quot;] = {[&quot;Name&quot;] = &quot;DataReceiveKbps&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DataSendKbps&quot;] = {[&quot;Name&quot;] = &quot;DataSendKbps&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FrameTime&quot;] = {[&quot;Name&quot;] = &quot;FrameTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HeartbeatTime&quot;] = {[&quot;Name&quot;] = &quot;HeartbeatTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HeartbeatTimeMs&quot;] = {[&quot;Name&quot;] = &quot;HeartbeatTimeMs&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;InstanceCount&quot;] = {[&quot;Name&quot;] = &quot;InstanceCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MovingPrimitivesCount&quot;] = {[&quot;Name&quot;] = &quot;MovingPrimitivesCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PhysicsReceiveKbps&quot;] = {[&quot;Name&quot;] = &quot;PhysicsReceiveKbps&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PhysicsSendKbps&quot;] = {[&quot;Name&quot;] = &quot;PhysicsSendKbps&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PhysicsStepTime&quot;] = {[&quot;Name&quot;] = &quot;PhysicsStepTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PhysicsStepTimeMs&quot;] = {[&quot;Name&quot;] = &quot;PhysicsStepTimeMs&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PrimitivesCount&quot;] = {[&quot;Name&quot;] = &quot;PrimitivesCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RenderCPUFrameTime&quot;] = {[&quot;Name&quot;] = &quot;RenderCPUFrameTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RenderGPUFrameTime&quot;] = {[&quot;Name&quot;] = &quot;RenderGPUFrameTime&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SceneDrawcallCount&quot;] = {[&quot;Name&quot;] = &quot;SceneDrawcallCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SceneTriangleCount&quot;] = {[&quot;Name&quot;] = &quot;SceneTriangleCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ShadowsDrawcallCount&quot;] = {[&quot;Name&quot;] = &quot;ShadowsDrawcallCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ShadowsTriangleCount&quot;] = {[&quot;Name&quot;] = &quot;ShadowsTriangleCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UI2DDrawcallCount&quot;] = {[&quot;Name&quot;] = &quot;UI2DDrawcallCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UI2DTriangleCount&quot;] = {[&quot;Name&quot;] = &quot;UI2DTriangleCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UI3DDrawcallCount&quot;] = {[&quot;Name&quot;] = &quot;UI3DDrawcallCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UI3DTriangleCount&quot;] = {[&quot;Name&quot;] = &quot;UI3DTriangleCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StatsItem&quot;] = {[&quot;Name&quot;] = &quot;StatsItem&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;DisplayName&quot;] = {[&quot;Name&quot;] = &quot;DisplayName&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Status&quot;] = {[&quot;Name&quot;] = &quot;Status&quot;,[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Model&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WorldPivotData&quot;] = {[&quot;OptionalCFrame&quot;] = nil,},},},[&quot;StopWatchReporter&quot;] = {[&quot;Name&quot;] = &quot;StopWatchReporter&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StreamingService&quot;] = {[&quot;Name&quot;] = &quot;StreamingService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StringValue&quot;] = {[&quot;Name&quot;] = &quot;StringValue&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;String&quot;] = &quot;&quot;,},},},[&quot;Studio&quot;] = {[&quot;Name&quot;] = &quot;Studio&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;\&quot;TODO\&quot; Color&quot;] = {[&quot;Name&quot;] = &quot;\&quot;TODO\&quot; Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;\&quot;function\&quot; Color&quot;] = {[&quot;Name&quot;] = &quot;\&quot;function\&quot; Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;\&quot;local\&quot; Color&quot;] = {[&quot;Name&quot;] = &quot;\&quot;local\&quot; Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;\&quot;nil\&quot; Color&quot;] = {[&quot;Name&quot;] = &quot;\&quot;nil\&quot; Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;\&quot;self\&quot; Color&quot;] = {[&quot;Name&quot;] = &quot;\&quot;self\&quot; Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ActionOnStopSync&quot;] = {[&quot;Name&quot;] = &quot;ActionOnStopSync&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ActionOnStopSync&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Active Color&quot;] = {[&quot;Name&quot;] = &quot;Active Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Active Hover Over Color&quot;] = {[&quot;Name&quot;] = &quot;Active Hover Over Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Always Save Script Changes&quot;] = {[&quot;Name&quot;] = &quot;Always Save Script Changes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Animate Hover Over&quot;] = {[&quot;Name&quot;] = &quot;Animate Hover Over&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Auto Clean Empty Line&quot;] = {[&quot;Name&quot;] = &quot;Auto Clean Empty Line&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Auto Closing Brackets&quot;] = {[&quot;Name&quot;] = &quot;Auto Closing Brackets&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Auto Closing Quotes&quot;] = {[&quot;Name&quot;] = &quot;Auto Closing Quotes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Auto Delete Closing Brackets and Quotes&quot;] = {[&quot;Name&quot;] = &quot;Auto Delete Closing Brackets and Quotes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Auto Indent Rule&quot;] = {[&quot;Name&quot;] = &quot;Auto Indent Rule&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AutoIndentRule&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Auto-Recovery Enabled&quot;] = {[&quot;Name&quot;] = &quot;Auto-Recovery Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Auto-Recovery Interval (Minutes)&quot;] = {[&quot;Name&quot;] = &quot;Auto-Recovery Interval (Minutes)&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AutoResumeSyncOnPlaceOpen&quot;] = {[&quot;Name&quot;] = &quot;AutoResumeSyncOnPlaceOpen&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AutocompleteAcceptanceBehavior&quot;] = {[&quot;Name&quot;] = &quot;AutocompleteAcceptanceBehavior&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CompletionAcceptanceBehavior&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Automatically trigger AI Code Completion&quot;] = {[&quot;Name&quot;] = &quot;Automatically trigger AI Code Completion&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Background Color&quot;] = {[&quot;Name&quot;] = &quot;Background Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Basic Objects Display Mode&quot;] = {[&quot;Name&quot;] = &quot;Basic Objects Display Mode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ListDisplayMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Bool Color&quot;] = {[&quot;Name&quot;] = &quot;Bool Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Bracket Color&quot;] = {[&quot;Name&quot;] = &quot;Bracket Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Built-in Function Color&quot;] = {[&quot;Name&quot;] = &quot;Built-in Function Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Camera Mouse Wheel Speed&quot;] = {[&quot;Name&quot;] = &quot;Camera Mouse Wheel Speed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Camera Pan Speed&quot;] = {[&quot;Name&quot;] = &quot;Camera Pan Speed&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Camera Shift Speed&quot;] = {[&quot;Name&quot;] = &quot;Camera Shift Speed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Camera Speed&quot;] = {[&quot;Name&quot;] = &quot;Camera Speed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Camera Speed Adjust Binding&quot;] = {[&quot;Name&quot;] = &quot;Camera Speed Adjust Binding&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CameraSpeedAdjustBinding&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Camera Zoom to Mouse Position&quot;] = {[&quot;Name&quot;] = &quot;Camera Zoom to Mouse Position&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraAdaptiveSpeed&quot;] = {[&quot;Name&quot;] = &quot;CameraAdaptiveSpeed&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraTweenFocus&quot;] = {[&quot;Name&quot;] = &quot;CameraTweenFocus&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Clear Output On Start&quot;] = {[&quot;Name&quot;] = &quot;Clear Output On Start&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CommandBarLocalState&quot;] = {[&quot;Name&quot;] = &quot;CommandBarLocalState&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Comment Color&quot;] = {[&quot;Name&quot;] = &quot;Comment Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Current Line Highlight Color&quot;] = {[&quot;Name&quot;] = &quot;Current Line Highlight Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Debugger Current Line Color&quot;] = {[&quot;Name&quot;] = &quot;Debugger Current Line Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Debugger Error Line Color&quot;] = {[&quot;Name&quot;] = &quot;Debugger Error Line Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DeprecatedObjectsShown&quot;] = {[&quot;Name&quot;] = &quot;DeprecatedObjectsShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DisplayLanguage&quot;] = {[&quot;Name&quot;] = &quot;DisplayLanguage&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Doc View Code Background Color&quot;] = {[&quot;Name&quot;] = &quot;Doc View Code Background Color&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DraggerActiveColor&quot;] = {[&quot;Name&quot;] = &quot;DraggerActiveColor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DraggerMajorGridIncrement&quot;] = {[&quot;Name&quot;] = &quot;DraggerMajorGridIncrement&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DraggerMaxSoftSnaps&quot;] = {[&quot;Name&quot;] = &quot;DraggerMaxSoftSnaps&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DraggerPassiveColor&quot;] = {[&quot;Name&quot;] = &quot;DraggerPassiveColor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DraggerShowHoverRuler&quot;] = {[&quot;Name&quot;] = &quot;DraggerShowHoverRuler&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DraggerShowMeasurement&quot;] = {[&quot;Name&quot;] = &quot;DraggerShowMeasurement&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DraggerShowTargetSnap&quot;] = {[&quot;Name&quot;] = &quot;DraggerShowTargetSnap&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DraggerSoftSnapMarginFactor&quot;] = {[&quot;Name&quot;] = &quot;DraggerSoftSnapMarginFactor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DraggerSummonMarginFactor&quot;] = {[&quot;Name&quot;] = &quot;DraggerSummonMarginFactor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DraggerTiltRotateDuration&quot;] = {[&quot;Name&quot;] = &quot;DraggerTiltRotateDuration&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Autocomplete&quot;] = {[&quot;Name&quot;] = &quot;Enable Autocomplete&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Autocomplete Doc View&quot;] = {[&quot;Name&quot;] = &quot;Enable Autocomplete Doc View&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable CoreScript Debugger&quot;] = {[&quot;Name&quot;] = &quot;Enable CoreScript Debugger&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Http Sandboxing&quot;] = {[&quot;Name&quot;] = &quot;Enable Http Sandboxing&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Internal Beta Features&quot;] = {[&quot;Name&quot;] = &quot;Enable Internal Beta Features&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Internal Features&quot;] = {[&quot;Name&quot;] = &quot;Enable Internal Features&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Script Analysis&quot;] = {[&quot;Name&quot;] = &quot;Enable Script Analysis&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Scrollbar Markers&quot;] = {[&quot;Name&quot;] = &quot;Enable Scrollbar Markers&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Signature Help&quot;] = {[&quot;Name&quot;] = &quot;Enable Signature Help&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Signature Help Doc View&quot;] = {[&quot;Name&quot;] = &quot;Enable Signature Help Doc View&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Temporary Tabs&quot;] = {[&quot;Name&quot;] = &quot;Enable Temporary Tabs&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Temporary Tabs In Explorer&quot;] = {[&quot;Name&quot;] = &quot;Enable Temporary Tabs In Explorer&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enable Type Hover&quot;] = {[&quot;Name&quot;] = &quot;Enable Type Hover&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EnableCodeAssist&quot;] = {[&quot;Name&quot;] = &quot;EnableCodeAssist&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EnableIndentationRulers&quot;] = {[&quot;Name&quot;] = &quot;EnableIndentationRulers&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EnableOnTypeAutocomplete&quot;] = {[&quot;Name&quot;] = &quot;EnableOnTypeAutocomplete&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Error Color&quot;] = {[&quot;Name&quot;] = &quot;Error Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Find Selection Background Color&quot;] = {[&quot;Name&quot;] = &quot;Find Selection Background Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Format On Paste&quot;] = {[&quot;Name&quot;] = &quot;Format On Paste&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Format On Type&quot;] = {[&quot;Name&quot;] = &quot;Format On Type&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FreeCameraSpeedScroll&quot;] = {[&quot;Name&quot;] = &quot;FreeCameraSpeedScroll&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Function Name Color&quot;] = {[&quot;Name&quot;] = &quot;Function Name Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Highlight Current Line&quot;] = {[&quot;Name&quot;] = &quot;Highlight Current Line&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Highlight Occurances&quot;] = {[&quot;Name&quot;] = &quot;Highlight Occurances&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HintColor&quot;] = {[&quot;Name&quot;] = &quot;HintColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Hover Animate Speed&quot;] = {[&quot;Name&quot;] = &quot;Hover Animate Speed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;HoverAnimateSpeed&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Hover Box Thickness&quot;] = {[&quot;Name&quot;] = &quot;Hover Box Thickness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Hover Line Thickness&quot;] = {[&quot;Name&quot;] = &quot;Hover Line Thickness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Hover Over Color&quot;] = {[&quot;Name&quot;] = &quot;Hover Over Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Indent Using Spaces&quot;] = {[&quot;Name&quot;] = &quot;Indent Using Spaces&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IndentationRulerColor&quot;] = {[&quot;Name&quot;] = &quot;IndentationRulerColor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;InformationColor&quot;] = {[&quot;Name&quot;] = &quot;InformationColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Keyword Color&quot;] = {[&quot;Name&quot;] = &quot;Keyword Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LargeFileLineCountThreshold&quot;] = {[&quot;Name&quot;] = &quot;LargeFileLineCountThreshold&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LargeFileThreshold&quot;] = {[&quot;Name&quot;] = &quot;LargeFileThreshold&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Line Thickness&quot;] = {[&quot;Name&quot;] = &quot;Line Thickness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LoadAllBuiltinPluginsInRunModes&quot;] = {[&quot;Name&quot;] = &quot;LoadAllBuiltinPluginsInRunModes&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LoadUserPluginsInRunModes&quot;] = {[&quot;Name&quot;] = &quot;LoadUserPluginsInRunModes&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LuaDebuggerEnabled&quot;] = {[&quot;Name&quot;] = &quot;LuaDebuggerEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LuaDebuggerEnabledAtStartup&quot;] = {[&quot;Name&quot;] = &quot;LuaDebuggerEnabledAtStartup&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Luau Keyword Color&quot;] = {[&quot;Name&quot;] = &quot;Luau Keyword Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Main Volume&quot;] = {[&quot;Name&quot;] = &quot;Main Volume&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Matching Word Background Color&quot;] = {[&quot;Name&quot;] = &quot;Matching Word Background Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Maximum Output Lines&quot;] = {[&quot;Name&quot;] = &quot;Maximum Output Lines&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Menu Item Background Color&quot;] = {[&quot;Name&quot;] = &quot;Menu Item Background Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Method Color&quot;] = {[&quot;Name&quot;] = &quot;Method Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Number Color&quot;] = {[&quot;Name&quot;] = &quot;Number Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Only Play Audio from Window in Focus&quot;] = {[&quot;Name&quot;] = &quot;Only Play Audio from Window in Focus&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Operator Color&quot;] = {[&quot;Name&quot;] = &quot;Operator Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Output Layout Mode&quot;] = {[&quot;Name&quot;] = &quot;Output Layout Mode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;OutputLayoutMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PermissionLevelShown&quot;] = {[&quot;Name&quot;] = &quot;PermissionLevelShown&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PermissionLevelShown&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Physical Draggers Select Scope By Default&quot;] = {[&quot;Name&quot;] = &quot;Physical Draggers Select Scope By Default&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Pivot Snap To Geometry Color&quot;] = {[&quot;Name&quot;] = &quot;Pivot Snap To Geometry Color&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PluginDebuggingEnabled&quot;] = {[&quot;Name&quot;] = &quot;PluginDebuggingEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Primary Text Color&quot;] = {[&quot;Name&quot;] = &quot;Primary Text Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Property Color&quot;] = {[&quot;Name&quot;] = &quot;Property Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ReloadBuiltinPluginsOnChange&quot;] = {[&quot;Name&quot;] = &quot;ReloadBuiltinPluginsOnChange&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReloadLocalPluginsOnChange&quot;] = {[&quot;Name&quot;] = &quot;ReloadLocalPluginsOnChange&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Respect Studio shortcuts when game has focus&quot;] = {[&quot;Name&quot;] = &quot;Respect Studio shortcuts when game has focus&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Ruler Color&quot;] = {[&quot;Name&quot;] = &quot;Ruler Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Rulers&quot;] = {[&quot;Name&quot;] = &quot;Rulers&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RuntimeUndoBehavior&quot;] = {[&quot;Name&quot;] = &quot;RuntimeUndoBehavior&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RuntimeUndoBehavior&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Script Editor Color Preset&quot;] = {[&quot;Name&quot;] = &quot;Script Editor Color Preset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;StudioScriptEditorColorPresets&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Script Editor Scrollbar Background Color&quot;] = {[&quot;Name&quot;] = &quot;Script Editor Scrollbar Background Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Script Editor Scrollbar Handle Color&quot;] = {[&quot;Name&quot;] = &quot;Script Editor Scrollbar Handle Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ScriptEditorMenuBorderColor&quot;] = {[&quot;Name&quot;] = &quot;ScriptEditorMenuBorderColor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ScriptEditorShouldShowPluginMethods&quot;] = {[&quot;Name&quot;] = &quot;ScriptEditorShouldShowPluginMethods&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScriptTimeoutLength&quot;] = {[&quot;Name&quot;] = &quot;ScriptTimeoutLength&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Scroll Past Last Line&quot;] = {[&quot;Name&quot;] = &quot;Scroll Past Last Line&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Secondary Text Color&quot;] = {[&quot;Name&quot;] = &quot;Secondary Text Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Select Color&quot;] = {[&quot;Name&quot;] = &quot;Select Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Select/Hover Color&quot;] = {[&quot;Name&quot;] = &quot;Select/Hover Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Selected Menu Item Background Color&quot;] = {[&quot;Name&quot;] = &quot;Selected Menu Item Background Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Selected Text Color&quot;] = {[&quot;Name&quot;] = &quot;Selected Text Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Selection Background Color&quot;] = {[&quot;Name&quot;] = &quot;Selection Background Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Selection Box Thickness&quot;] = {[&quot;Name&quot;] = &quot;Selection Box Thickness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Selection Color&quot;] = {[&quot;Name&quot;] = &quot;Selection Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Selection Line Thickness&quot;] = {[&quot;Name&quot;] = &quot;Selection Line Thickness&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Set Pivot of Imported Parts&quot;] = {[&quot;Name&quot;] = &quot;Set Pivot of Imported Parts&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show Core GUI in Explorer while Playing&quot;] = {[&quot;Name&quot;] = &quot;Show Core GUI in Explorer while Playing&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show Diagnostics Bar&quot;] = {[&quot;Name&quot;] = &quot;Show Diagnostics Bar&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show FileSyncService&quot;] = {[&quot;Name&quot;] = &quot;Show FileSyncService&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show Hidden Objects in Explorer&quot;] = {[&quot;Name&quot;] = &quot;Show Hidden Objects in Explorer&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show Hover Over&quot;] = {[&quot;Name&quot;] = &quot;Show Hover Over&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show Light Guides&quot;] = {[&quot;Name&quot;] = &quot;Show Light Guides&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show Navigation Labels&quot;] = {[&quot;Name&quot;] = &quot;Show Navigation Labels&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show Navigation Mesh&quot;] = {[&quot;Name&quot;] = &quot;Show Navigation Mesh&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show Pathfinding Links&quot;] = {[&quot;Name&quot;] = &quot;Show Pathfinding Links&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show Plugin GUI Service in Explorer&quot;] = {[&quot;Name&quot;] = &quot;Show Plugin GUI Service in Explorer&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show Singly Selected Attachment Parent Frame&quot;] = {[&quot;Name&quot;] = &quot;Show Singly Selected Attachment Parent Frame&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show Whitespace&quot;] = {[&quot;Name&quot;] = &quot;Show Whitespace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Show plus button on hover in Explorer&quot;] = {[&quot;Name&quot;] = &quot;Show plus button on hover in Explorer&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShowCorePackagesInExplorer&quot;] = {[&quot;Name&quot;] = &quot;ShowCorePackagesInExplorer&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Skip Closing Brackets and Quotes&quot;] = {[&quot;Name&quot;] = &quot;Skip Closing Brackets and Quotes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;String Color&quot;] = {[&quot;Name&quot;] = &quot;String Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Tab Width&quot;] = {[&quot;Name&quot;] = &quot;Tab Width&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Text Color&quot;] = {[&quot;Name&quot;] = &quot;Text Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Text Wrapping&quot;] = {[&quot;Name&quot;] = &quot;Text Wrapping&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Theme&quot;] = {[&quot;Name&quot;] = &quot;Theme&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TypeColor&quot;] = {[&quot;Name&quot;] = &quot;TypeColor&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UI Theme&quot;] = {[&quot;Name&quot;] = &quot;UI Theme&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UITheme&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Use Bounding Box Move Handles&quot;] = {[&quot;Name&quot;] = &quot;Use Bounding Box Move Handles&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Warning Color&quot;] = {[&quot;Name&quot;] = &quot;Warning Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Whitespace Color&quot;] = {[&quot;Name&quot;] = &quot;Whitespace Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioAssetService&quot;] = {[&quot;Name&quot;] = &quot;StudioAssetService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioAttachment&quot;] = {[&quot;Name&quot;] = &quot;StudioAttachment&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AutoHideParent&quot;] = {[&quot;Name&quot;] = &quot;AutoHideParent&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsArrowVisible&quot;] = {[&quot;Name&quot;] = &quot;IsArrowVisible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Offset&quot;] = {[&quot;Name&quot;] = &quot;Offset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SourceAnchorPoint&quot;] = {[&quot;Name&quot;] = &quot;SourceAnchorPoint&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TargetAnchorPoint&quot;] = {[&quot;Name&quot;] = &quot;TargetAnchorPoint&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioCallout&quot;] = {[&quot;Name&quot;] = &quot;StudioCallout&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AnchorPoint&quot;] = {[&quot;Name&quot;] = &quot;AnchorPoint&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsArrowVisible&quot;] = {[&quot;Name&quot;] = &quot;IsArrowVisible&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsNextVisible&quot;] = {[&quot;Name&quot;] = &quot;IsNextVisible&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RowName&quot;] = {[&quot;Name&quot;] = &quot;RowName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Text&quot;] = {[&quot;Name&quot;] = &quot;Text&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Title&quot;] = {[&quot;Name&quot;] = &quot;Title&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioCameraService&quot;] = {[&quot;Name&quot;] = &quot;StudioCameraService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioData&quot;] = {[&quot;Name&quot;] = &quot;StudioData&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;EnableScriptCollabByDefaultOnLoad&quot;] = {[&quot;Name&quot;] = &quot;EnableScriptCollabByDefaultOnLoad&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;EnableScriptCollabByDefaultOnLoad&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioDeviceEmulatorService&quot;] = {[&quot;Name&quot;] = &quot;StudioDeviceEmulatorService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;HasMultiTouchStarted&quot;] = {[&quot;Name&quot;] = &quot;HasMultiTouchStarted&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsMultiTouchEmulationOn&quot;] = {[&quot;Name&quot;] = &quot;IsMultiTouchEmulationOn&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsMultiTouchEnabled&quot;] = {[&quot;Name&quot;] = &quot;IsMultiTouchEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PivotPosition&quot;] = {[&quot;Name&quot;] = &quot;PivotPosition&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioObjectBase&quot;] = {[&quot;Name&quot;] = &quot;StudioObjectBase&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioPublishService&quot;] = {[&quot;Name&quot;] = &quot;StudioPublishService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;PublishLocked&quot;] = {[&quot;Name&quot;] = &quot;PublishLocked&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioScriptDebugEventListener&quot;] = {[&quot;Name&quot;] = &quot;StudioScriptDebugEventListener&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioSdkService&quot;] = {[&quot;Name&quot;] = &quot;StudioSdkService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioService&quot;] = {[&quot;Name&quot;] = &quot;StudioService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ActiveScript&quot;] = {[&quot;Name&quot;] = &quot;ActiveScript&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AlignDraggedObjects&quot;] = {[&quot;Name&quot;] = &quot;AlignDraggedObjects&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DraggerSolveConstraints&quot;] = {[&quot;Name&quot;] = &quot;DraggerSolveConstraints&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DrawConstraintsOnTop&quot;] = {[&quot;Name&quot;] = &quot;DrawConstraintsOnTop&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GridSize&quot;] = {[&quot;Name&quot;] = &quot;GridSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;HoverInstance&quot;] = {[&quot;Name&quot;] = &quot;HoverInstance&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;InstalledPluginData&quot;] = {[&quot;Name&quot;] = &quot;InstalledPluginData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PivotSnapToGeometry&quot;] = {[&quot;Name&quot;] = &quot;PivotSnapToGeometry&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RotateIncrement&quot;] = {[&quot;Name&quot;] = &quot;RotateIncrement&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Secrets&quot;] = {[&quot;Name&quot;] = &quot;Secrets&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShowConstraintDetails&quot;] = {[&quot;Name&quot;] = &quot;ShowConstraintDetails&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ShowWeldDetails&quot;] = {[&quot;Name&quot;] = &quot;ShowWeldDetails&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;StudioLocaleId&quot;] = {[&quot;Name&quot;] = &quot;StudioLocaleId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UseLocalSpace&quot;] = {[&quot;Name&quot;] = &quot;UseLocalSpace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioTheme&quot;] = {[&quot;Name&quot;] = &quot;StudioTheme&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioUserService&quot;] = {[&quot;Name&quot;] = &quot;StudioUserService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;IsLoggedIn&quot;] = {[&quot;Name&quot;] = &quot;IsLoggedIn&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioWidget&quot;] = {[&quot;Name&quot;] = &quot;StudioWidget&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;StudioObjectBase&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StudioWidgetsService&quot;] = {[&quot;Name&quot;] = &quot;StudioWidgetsService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StyleBase&quot;] = {[&quot;Name&quot;] = &quot;StyleBase&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StyleDerive&quot;] = {[&quot;Name&quot;] = &quot;StyleDerive&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Index&quot;] = {[&quot;Name&quot;] = &quot;Index&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StyleSheet&quot;] = {[&quot;Name&quot;] = &quot;StyleSheet&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Index&quot;] = {[&quot;Int32&quot;] = -1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StyleLink&quot;] = {[&quot;Name&quot;] = &quot;StyleLink&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;StyleSheet&quot;] = {[&quot;Name&quot;] = &quot;StyleSheet&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StyleRule&quot;] = {[&quot;Name&quot;] = &quot;StyleRule&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;StyleBase&quot;,[&quot;Properties&quot;] = {[&quot;Index&quot;] = {[&quot;Name&quot;] = &quot;Index&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Priority&quot;] = {[&quot;Name&quot;] = &quot;Priority&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PropertiesSerialize&quot;] = {[&quot;Name&quot;] = &quot;PropertiesSerialize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Selector&quot;] = {[&quot;Name&quot;] = &quot;Selector&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectorError&quot;] = {[&quot;Name&quot;] = &quot;SelectorError&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;PropertiesSerialize&quot;] = {[&quot;BinaryString&quot;] = &quot;AAAAAA==&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Selector&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StyleSheet&quot;] = {[&quot;Name&quot;] = &quot;StyleSheet&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;StyleBase&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;StylingService&quot;] = {[&quot;Name&quot;] = &quot;StylingService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SunRaysEffect&quot;] = {[&quot;Name&quot;] = &quot;SunRaysEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PostEffect&quot;,[&quot;Properties&quot;] = {[&quot;Intensity&quot;] = {[&quot;Name&quot;] = &quot;Intensity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Spread&quot;] = {[&quot;Name&quot;] = &quot;Spread&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Intensity&quot;] = {[&quot;Float32&quot;] = 0.25,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Spread&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SurfaceAppearance&quot;] = {[&quot;Name&quot;] = &quot;SurfaceAppearance&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AlphaMode&quot;] = {[&quot;Name&quot;] = &quot;AlphaMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AlphaMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ColorMap&quot;] = {[&quot;Name&quot;] = &quot;ColorMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MetalnessMap&quot;] = {[&quot;Name&quot;] = &quot;MetalnessMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NormalMap&quot;] = {[&quot;Name&quot;] = &quot;NormalMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RoughnessMap&quot;] = {[&quot;Name&quot;] = &quot;RoughnessMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TexturePack&quot;] = {[&quot;Name&quot;] = &quot;TexturePack&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AlphaMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;ColorMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MetalnessMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;NormalMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;RoughnessMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TexturePack&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SurfaceGui&quot;] = {[&quot;Name&quot;] = &quot;SurfaceGui&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SurfaceGuiBase&quot;,[&quot;Properties&quot;] = {[&quot;AlwaysOnTop&quot;] = {[&quot;Name&quot;] = &quot;AlwaysOnTop&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Brightness&quot;] = {[&quot;Name&quot;] = &quot;Brightness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CanvasSize&quot;] = {[&quot;Name&quot;] = &quot;CanvasSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClipsDescendants&quot;] = {[&quot;Name&quot;] = &quot;ClipsDescendants&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HorizontalCurvature&quot;] = {[&quot;Name&quot;] = &quot;HorizontalCurvature&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LightInfluence&quot;] = {[&quot;Name&quot;] = &quot;LightInfluence&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxDistance&quot;] = {[&quot;Name&quot;] = &quot;MaxDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PixelsPerStud&quot;] = {[&quot;Name&quot;] = &quot;PixelsPerStud&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Shape&quot;] = {[&quot;Name&quot;] = &quot;Shape&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SurfaceGuiShape&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SizingMode&quot;] = {[&quot;Name&quot;] = &quot;SizingMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SurfaceGuiSizingMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ToolPunchThroughDistance&quot;] = {[&quot;Name&quot;] = &quot;ToolPunchThroughDistance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ZOffset&quot;] = {[&quot;Name&quot;] = &quot;ZOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AlwaysOnTop&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Brightness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;CanvasSize&quot;] = {[&quot;Vector2&quot;] = {800,600,},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Face&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LightInfluence&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MaxDistance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;PixelsPerStud&quot;] = {[&quot;Float32&quot;] = 50,},[&quot;ResetOnSpawn&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SizingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;ToolPunchThroughDistance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ZIndexBehavior&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ZOffset&quot;] = {[&quot;Float32&quot;] = 0,},},},[&quot;SurfaceGuiBase&quot;] = {[&quot;Name&quot;] = &quot;SurfaceGuiBase&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;LayerCollector&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Adornee&quot;] = {[&quot;Name&quot;] = &quot;Adornee&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Face&quot;] = {[&quot;Name&quot;] = &quot;Face&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NormalId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SurfaceLight&quot;] = {[&quot;Name&quot;] = &quot;SurfaceLight&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Light&quot;,[&quot;Properties&quot;] = {[&quot;Angle&quot;] = {[&quot;Name&quot;] = &quot;Angle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Face&quot;] = {[&quot;Name&quot;] = &quot;Face&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NormalId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Range&quot;] = {[&quot;Name&quot;] = &quot;Range&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Angle&quot;] = {[&quot;Float32&quot;] = 90,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Brightness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Face&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Range&quot;] = {[&quot;Float32&quot;] = 16,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Shadows&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SurfaceSelection&quot;] = {[&quot;Name&quot;] = &quot;SurfaceSelection&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PartAdornment&quot;,[&quot;Properties&quot;] = {[&quot;TargetSurface&quot;] = {[&quot;Name&quot;] = &quot;TargetSurface&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;NormalId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TargetSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},},},[&quot;SwimController&quot;] = {[&quot;Name&quot;] = &quot;SwimController&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ControllerBase&quot;,[&quot;Properties&quot;] = {[&quot;AccelerationTime&quot;] = {[&quot;Name&quot;] = &quot;AccelerationTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PitchMaxTorque&quot;] = {[&quot;Name&quot;] = &quot;PitchMaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PitchSpeedFactor&quot;] = {[&quot;Name&quot;] = &quot;PitchSpeedFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RollMaxTorque&quot;] = {[&quot;Name&quot;] = &quot;RollMaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RollSpeedFactor&quot;] = {[&quot;Name&quot;] = &quot;RollSpeedFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AccelerationTime&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BalanceRigidityEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MoveSpeedFactor&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;PitchMaxTorque&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;PitchSpeedFactor&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;RollMaxTorque&quot;] = {[&quot;Float32&quot;] = 10000,},[&quot;RollSpeedFactor&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;SyncScriptBuilder&quot;] = {[&quot;Name&quot;] = &quot;SyncScriptBuilder&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;ScriptBuilder&quot;,[&quot;Properties&quot;] = {[&quot;CompileTarget&quot;] = {[&quot;Name&quot;] = &quot;CompileTarget&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CompileTarget&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CoverageInfo&quot;] = {[&quot;Name&quot;] = &quot;CoverageInfo&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DebugInfo&quot;] = {[&quot;Name&quot;] = &quot;DebugInfo&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PackAsSource&quot;] = {[&quot;Name&quot;] = &quot;PackAsSource&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RawBytecode&quot;] = {[&quot;Name&quot;] = &quot;RawBytecode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TaskScheduler&quot;] = {[&quot;Name&quot;] = &quot;TaskScheduler&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;SchedulerDutyCycle&quot;] = {[&quot;Name&quot;] = &quot;SchedulerDutyCycle&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SchedulerRate&quot;] = {[&quot;Name&quot;] = &quot;SchedulerRate&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ThreadPoolConfig&quot;] = {[&quot;Name&quot;] = &quot;ThreadPoolConfig&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ThreadPoolConfig&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ThreadPoolSize&quot;] = {[&quot;Name&quot;] = &quot;ThreadPoolSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Team&quot;] = {[&quot;Name&quot;] = &quot;Team&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AutoAssignable&quot;] = {[&quot;Name&quot;] = &quot;AutoAssignable&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AutoColorCharacters&quot;] = {[&quot;Name&quot;] = &quot;AutoColorCharacters&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ChildOrder&quot;] = {[&quot;Name&quot;] = &quot;ChildOrder&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Score&quot;] = {[&quot;Name&quot;] = &quot;Score&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TeamColor&quot;] = {[&quot;Name&quot;] = &quot;TeamColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoAssignable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TeamColor&quot;] = {[&quot;BrickColor&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TeamCreateData&quot;] = {[&quot;Name&quot;] = &quot;TeamCreateData&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;InitialCameraCFrame&quot;] = {[&quot;Name&quot;] = &quot;InitialCameraCFrame&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TeamCreatePublishService&quot;] = {[&quot;Name&quot;] = &quot;TeamCreatePublishService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TeamCreateService&quot;] = {[&quot;Name&quot;] = &quot;TeamCreateService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Teams&quot;] = {[&quot;Name&quot;] = &quot;Teams&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TelemetryService&quot;] = {[&quot;Name&quot;] = &quot;TelemetryService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TeleportAsyncResult&quot;] = {[&quot;Name&quot;] = &quot;TeleportAsyncResult&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;PrivateServerId&quot;] = {[&quot;Name&quot;] = &quot;PrivateServerId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ReservedServerAccessCode&quot;] = {[&quot;Name&quot;] = &quot;ReservedServerAccessCode&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TeleportOptions&quot;] = {[&quot;Name&quot;] = &quot;TeleportOptions&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ReservedServerAccessCode&quot;] = {[&quot;Name&quot;] = &quot;ReservedServerAccessCode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ServerInstanceId&quot;] = {[&quot;Name&quot;] = &quot;ServerInstanceId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShouldReserveServer&quot;] = {[&quot;Name&quot;] = &quot;ShouldReserveServer&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ReservedServerAccessCode&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ServerInstanceId&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ShouldReserveServer&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TeleportService&quot;] = {[&quot;Name&quot;] = &quot;TeleportService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CustomizedTeleportUI&quot;] = {[&quot;Name&quot;] = &quot;CustomizedTeleportUI&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TemporaryCageMeshProvider&quot;] = {[&quot;Name&quot;] = &quot;TemporaryCageMeshProvider&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TemporaryScriptService&quot;] = {[&quot;Name&quot;] = &quot;TemporaryScriptService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Terrain&quot;] = {[&quot;Name&quot;] = &quot;Terrain&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;BasePart&quot;,[&quot;Properties&quot;] = {[&quot;AcquisitionMethod&quot;] = {[&quot;Name&quot;] = &quot;AcquisitionMethod&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TerrainAcquisitionMethod&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClusterGrid&quot;] = {[&quot;Name&quot;] = &quot;ClusterGrid&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;WriteOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ClusterGridV2&quot;] = {[&quot;Name&quot;] = &quot;ClusterGridV2&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;WriteOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ClusterGridV3&quot;] = {[&quot;Name&quot;] = &quot;ClusterGridV3&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;WriteOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Decoration&quot;] = {[&quot;Name&quot;] = &quot;Decoration&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GrassLength&quot;] = {[&quot;Name&quot;] = &quot;GrassLength&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsSmooth&quot;] = {[&quot;Name&quot;] = &quot;IsSmooth&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LastUsedModificationMethod&quot;] = {[&quot;Name&quot;] = &quot;LastUsedModificationMethod&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TerrainAcquisitionMethod&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaterialColors&quot;] = {[&quot;Name&quot;] = &quot;MaterialColors&quot;,[&quot;Scriptability&quot;] = &quot;Custom&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;MaterialColors&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxExtents&quot;] = {[&quot;Name&quot;] = &quot;MaxExtents&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Region3int16&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PhysicsGrid&quot;] = {[&quot;Name&quot;] = &quot;PhysicsGrid&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShorelinesUpgraded&quot;] = {[&quot;Name&quot;] = &quot;ShorelinesUpgraded&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SmoothGrid&quot;] = {[&quot;Name&quot;] = &quot;SmoothGrid&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SmoothVoxelsUpgraded&quot;] = {[&quot;Name&quot;] = &quot;SmoothVoxelsUpgraded&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WaterColor&quot;] = {[&quot;Name&quot;] = &quot;WaterColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WaterReflectance&quot;] = {[&quot;Name&quot;] = &quot;WaterReflectance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WaterTransparency&quot;] = {[&quot;Name&quot;] = &quot;WaterTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WaterWaveSize&quot;] = {[&quot;Name&quot;] = &quot;WaterWaveSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WaterWaveSpeed&quot;] = {[&quot;Name&quot;] = &quot;WaterWaveSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AcquisitionMethod&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 4,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {163,162,165,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;Decoration&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;GrassLength&quot;] = {[&quot;Float32&quot;] = 0.7,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialColors&quot;] = {[&quot;MaterialColors&quot;] = {[&quot;Grass&quot;] = {106,127,63,},[&quot;Slate&quot;] = {63,127,107,},[&quot;Concrete&quot;] = {127,102,63,},[&quot;Brick&quot;] = {138,86,62,},[&quot;Sand&quot;] = {143,126,95,},[&quot;WoodPlanks&quot;] = {139,109,79,},[&quot;Rock&quot;] = {102,108,111,},[&quot;Glacier&quot;] = {101,176,234,},[&quot;Snow&quot;] = {195,199,218,},[&quot;Sandstone&quot;] = {137,90,71,},[&quot;Mud&quot;] = {58,46,36,},[&quot;Basalt&quot;] = {30,30,37,},[&quot;Ground&quot;] = {102,92,59,},[&quot;CrackedLava&quot;] = {232,156,74,},[&quot;Asphalt&quot;] = {115,123,107,},[&quot;Cobblestone&quot;] = {132,123,90,},[&quot;Ice&quot;] = {129,194,224,},[&quot;LeafyGrass&quot;] = {115,132,74,},[&quot;Salt&quot;] = {198,189,181,},[&quot;Limestone&quot;] = {206,173,148,},[&quot;Pavement&quot;] = {148,148,140,},},},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;PhysicsGrid&quot;] = {[&quot;BinaryString&quot;] = &quot;AgMAAAAAAAAAAAAAAAA=&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ShorelinesUpgraded&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {2044,252,2044,},},[&quot;SmoothGrid&quot;] = {[&quot;BinaryString&quot;] = &quot;AQU=&quot;,},[&quot;SmoothVoxelsUpgraded&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 3,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;WaterColor&quot;] = {[&quot;Color3&quot;] = {0.05,0.33,0.36,},},[&quot;WaterReflectance&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;WaterTransparency&quot;] = {[&quot;Float32&quot;] = 0.3,},[&quot;WaterWaveSize&quot;] = {[&quot;Float32&quot;] = 0.15,},[&quot;WaterWaveSpeed&quot;] = {[&quot;Float32&quot;] = 10,},},},[&quot;TerrainDetail&quot;] = {[&quot;Name&quot;] = &quot;TerrainDetail&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ColorMap&quot;] = {[&quot;Name&quot;] = &quot;ColorMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Face&quot;] = {[&quot;Name&quot;] = &quot;Face&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TerrainFace&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaterialPattern&quot;] = {[&quot;Name&quot;] = &quot;MaterialPattern&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MaterialPattern&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MetalnessMap&quot;] = {[&quot;Name&quot;] = &quot;MetalnessMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NormalMap&quot;] = {[&quot;Name&quot;] = &quot;NormalMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RoughnessMap&quot;] = {[&quot;Name&quot;] = &quot;RoughnessMap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StudsPerTile&quot;] = {[&quot;Name&quot;] = &quot;StudsPerTile&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TexturePack&quot;] = {[&quot;Name&quot;] = &quot;TexturePack&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ColorMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Face&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaterialPattern&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;MetalnessMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;NormalMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;RoughnessMap&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;StudsPerTile&quot;] = {[&quot;Float32&quot;] = 10,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TexturePack&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TerrainRegion&quot;] = {[&quot;Name&quot;] = &quot;TerrainRegion&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ExtentsMax&quot;] = {[&quot;Name&quot;] = &quot;ExtentsMax&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3int16&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ExtentsMin&quot;] = {[&quot;Name&quot;] = &quot;ExtentsMin&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3int16&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GridV3&quot;] = {[&quot;Name&quot;] = &quot;GridV3&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;WriteOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsSmooth&quot;] = {[&quot;Name&quot;] = &quot;IsSmooth&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SizeInCells&quot;] = {[&quot;Name&quot;] = &quot;SizeInCells&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SmoothGrid&quot;] = {[&quot;Name&quot;] = &quot;SmoothGrid&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ExtentsMax&quot;] = {[&quot;Vector3int16&quot;] = {0,0,0,},},[&quot;ExtentsMin&quot;] = {[&quot;Vector3int16&quot;] = {0,0,0,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SmoothGrid&quot;] = {[&quot;BinaryString&quot;] = &quot;AQU=&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TestService&quot;] = {[&quot;Name&quot;] = &quot;TestService&quot;,[&quot;Tags&quot;] = {&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AutoRuns&quot;] = {[&quot;Name&quot;] = &quot;AutoRuns&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Description&quot;] = {[&quot;Name&quot;] = &quot;Description&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ErrorCount&quot;] = {[&quot;Name&quot;] = &quot;ErrorCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ExecuteWithStudioRun&quot;] = {[&quot;Name&quot;] = &quot;ExecuteWithStudioRun&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Is30FpsThrottleEnabled&quot;] = {[&quot;Name&quot;] = &quot;Is30FpsThrottleEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsPhysicsEnvironmentalThrottled&quot;] = {[&quot;Name&quot;] = &quot;IsPhysicsEnvironmentalThrottled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsSleepAllowed&quot;] = {[&quot;Name&quot;] = &quot;IsSleepAllowed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NumberOfPlayers&quot;] = {[&quot;Name&quot;] = &quot;NumberOfPlayers&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SimulateSecondsLag&quot;] = {[&quot;Name&quot;] = &quot;SimulateSecondsLag&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TestCount&quot;] = {[&quot;Name&quot;] = &quot;TestCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ThrottlePhysicsToRealtime&quot;] = {[&quot;Name&quot;] = &quot;ThrottlePhysicsToRealtime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Timeout&quot;] = {[&quot;Name&quot;] = &quot;Timeout&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WarnCount&quot;] = {[&quot;Name&quot;] = &quot;WarnCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoRuns&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Description&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ExecuteWithStudioRun&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IsPhysicsEnvironmentalThrottled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;IsSleepAllowed&quot;] = {[&quot;Bool&quot;] = true,},[&quot;NumberOfPlayers&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SimulateSecondsLag&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;ThrottlePhysicsToRealtime&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Timeout&quot;] = {[&quot;Float64&quot;] = 10,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextBox&quot;] = {[&quot;Name&quot;] = &quot;TextBox&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;GuiObject&quot;,[&quot;Properties&quot;] = {[&quot;ClearTextOnFocus&quot;] = {[&quot;Name&quot;] = &quot;ClearTextOnFocus&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Confidential&quot;] = {[&quot;Name&quot;] = &quot;Confidential&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ContentText&quot;] = {[&quot;Name&quot;] = &quot;ContentText&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CursorPosition&quot;] = {[&quot;Name&quot;] = &quot;CursorPosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Font&quot;] = {[&quot;Name&quot;] = &quot;Font&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;FontFace&quot;,[&quot;Migration&quot;] = &quot;FontToFontFace&quot;,},},},},},[&quot;FontFace&quot;] = {[&quot;Name&quot;] = &quot;FontFace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FontSize&quot;] = {[&quot;Name&quot;] = &quot;FontSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FontSize&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LineHeight&quot;] = {[&quot;Name&quot;] = &quot;LineHeight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalizationMatchIdentifier&quot;] = {[&quot;Name&quot;] = &quot;LocalizationMatchIdentifier&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalizationMatchedSourceText&quot;] = {[&quot;Name&quot;] = &quot;LocalizationMatchedSourceText&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ManualFocusRelease&quot;] = {[&quot;Name&quot;] = &quot;ManualFocusRelease&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxVisibleGraphemes&quot;] = {[&quot;Name&quot;] = &quot;MaxVisibleGraphemes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MultiLine&quot;] = {[&quot;Name&quot;] = &quot;MultiLine&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OpenTypeFeatures&quot;] = {[&quot;Name&quot;] = &quot;OpenTypeFeatures&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OpenTypeFeaturesError&quot;] = {[&quot;Name&quot;] = &quot;OpenTypeFeaturesError&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;OverlayNativeInput&quot;] = {[&quot;Name&quot;] = &quot;OverlayNativeInput&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PlaceholderColor3&quot;] = {[&quot;Name&quot;] = &quot;PlaceholderColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlaceholderText&quot;] = {[&quot;Name&quot;] = &quot;PlaceholderText&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReturnKeyType&quot;] = {[&quot;Name&quot;] = &quot;ReturnKeyType&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ReturnKeyType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RichText&quot;] = {[&quot;Name&quot;] = &quot;RichText&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionStart&quot;] = {[&quot;Name&quot;] = &quot;SelectionStart&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ShouldEmitReturnEvents&quot;] = {[&quot;Name&quot;] = &quot;ShouldEmitReturnEvents&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShouldEmitUpAndDownArrowEvents&quot;] = {[&quot;Name&quot;] = &quot;ShouldEmitUpAndDownArrowEvents&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShowNativeInput&quot;] = {[&quot;Name&quot;] = &quot;ShowNativeInput&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Text&quot;] = {[&quot;Name&quot;] = &quot;Text&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextBounds&quot;] = {[&quot;Name&quot;] = &quot;TextBounds&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextColor&quot;] = {[&quot;Name&quot;] = &quot;TextColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextColor3&quot;] = {[&quot;Name&quot;] = &quot;TextColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextDirection&quot;] = {[&quot;Name&quot;] = &quot;TextDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextDirection&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextEditable&quot;] = {[&quot;Name&quot;] = &quot;TextEditable&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextFits&quot;] = {[&quot;Name&quot;] = &quot;TextFits&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextInputType&quot;] = {[&quot;Name&quot;] = &quot;TextInputType&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextInputType&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextScaled&quot;] = {[&quot;Name&quot;] = &quot;TextScaled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextSize&quot;] = {[&quot;Name&quot;] = &quot;TextSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeColor3&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextTransparency&quot;] = {[&quot;Name&quot;] = &quot;TextTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextTruncate&quot;] = {[&quot;Name&quot;] = &quot;TextTruncate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextTruncate&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextWrap&quot;] = {[&quot;Name&quot;] = &quot;TextWrap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextWrapped&quot;] = {[&quot;Name&quot;] = &quot;TextWrapped&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextXAlignment&quot;] = {[&quot;Name&quot;] = &quot;TextXAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextXAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextYAlignment&quot;] = {[&quot;Name&quot;] = &quot;TextYAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextYAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AnchorPoint&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.6392157,0.63529414,0.64705884,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;BorderColor3&quot;] = {[&quot;Color3&quot;] = {0.105882354,0.16470589,0.20784314,},},[&quot;BorderMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BorderSizePixel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClearTextOnFocus&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Draggable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;FontFace&quot;] = {[&quot;Font&quot;] = {[&quot;family&quot;] = &quot;rbxasset://fonts/families/LegacyArial.json&quot;,[&quot;weight&quot;] = &quot;Regular&quot;,[&quot;style&quot;] = &quot;Normal&quot;,[&quot;cachedFaceId&quot;] = &quot;rbxasset://fonts/Arimo-Regular.ttf&quot;,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Interactable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LayoutOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;LineHeight&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;LocalizationMatchIdentifier&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;LocalizationMatchedSourceText&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;MaxVisibleGraphemes&quot;] = {[&quot;Int32&quot;] = -1,},[&quot;MultiLine&quot;] = {[&quot;Bool&quot;] = false,},[&quot;OpenTypeFeatures&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;PlaceholderColor3&quot;] = {[&quot;Color3&quot;] = {0.7,0.7,0.7,},},[&quot;PlaceholderText&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Position&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;RichText&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Selectable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;ShouldEmitReturnEvents&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ShouldEmitUpAndDownArrowEvents&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ShowNativeInput&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeConstraint&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Text&quot;] = {[&quot;String&quot;] = &quot;TextBox&quot;,},[&quot;TextColor3&quot;] = {[&quot;Color3&quot;] = {0.10588236,0.16470589,0.20784315,},},[&quot;TextDirection&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TextEditable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;TextScaled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;TextSize&quot;] = {[&quot;Float32&quot;] = 8,},[&quot;TextStrokeColor3&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;TextTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;TextTruncate&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TextWrapped&quot;] = {[&quot;Bool&quot;] = false,},[&quot;TextXAlignment&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;TextYAlignment&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;TextBoxService&quot;] = {[&quot;Name&quot;] = &quot;TextBoxService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextButton&quot;] = {[&quot;Name&quot;] = &quot;TextButton&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;GuiButton&quot;,[&quot;Properties&quot;] = {[&quot;Confidential&quot;] = {[&quot;Name&quot;] = &quot;Confidential&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ContentText&quot;] = {[&quot;Name&quot;] = &quot;ContentText&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Font&quot;] = {[&quot;Name&quot;] = &quot;Font&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;FontFace&quot;,[&quot;Migration&quot;] = &quot;FontToFontFace&quot;,},},},},},[&quot;FontFace&quot;] = {[&quot;Name&quot;] = &quot;FontFace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FontSize&quot;] = {[&quot;Name&quot;] = &quot;FontSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FontSize&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LineHeight&quot;] = {[&quot;Name&quot;] = &quot;LineHeight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalizationMatchIdentifier&quot;] = {[&quot;Name&quot;] = &quot;LocalizationMatchIdentifier&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalizationMatchedSourceText&quot;] = {[&quot;Name&quot;] = &quot;LocalizationMatchedSourceText&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalizedText&quot;] = {[&quot;Name&quot;] = &quot;LocalizedText&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxVisibleGraphemes&quot;] = {[&quot;Name&quot;] = &quot;MaxVisibleGraphemes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OpenTypeFeatures&quot;] = {[&quot;Name&quot;] = &quot;OpenTypeFeatures&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OpenTypeFeaturesError&quot;] = {[&quot;Name&quot;] = &quot;OpenTypeFeaturesError&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RichText&quot;] = {[&quot;Name&quot;] = &quot;RichText&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Text&quot;] = {[&quot;Name&quot;] = &quot;Text&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextBounds&quot;] = {[&quot;Name&quot;] = &quot;TextBounds&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextColor&quot;] = {[&quot;Name&quot;] = &quot;TextColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextColor3&quot;] = {[&quot;Name&quot;] = &quot;TextColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextDirection&quot;] = {[&quot;Name&quot;] = &quot;TextDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextDirection&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextFits&quot;] = {[&quot;Name&quot;] = &quot;TextFits&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextScaled&quot;] = {[&quot;Name&quot;] = &quot;TextScaled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextSize&quot;] = {[&quot;Name&quot;] = &quot;TextSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeColor3&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextTransparency&quot;] = {[&quot;Name&quot;] = &quot;TextTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextTruncate&quot;] = {[&quot;Name&quot;] = &quot;TextTruncate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextTruncate&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextWrap&quot;] = {[&quot;Name&quot;] = &quot;TextWrap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextWrapped&quot;] = {[&quot;Name&quot;] = &quot;TextWrapped&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextXAlignment&quot;] = {[&quot;Name&quot;] = &quot;TextXAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextXAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextYAlignment&quot;] = {[&quot;Name&quot;] = &quot;TextYAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextYAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AnchorPoint&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoButtonColor&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.6392157,0.63529414,0.64705884,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;BorderColor3&quot;] = {[&quot;Color3&quot;] = {0.105882354,0.16470589,0.20784314,},},[&quot;BorderMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BorderSizePixel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Draggable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;FontFace&quot;] = {[&quot;Font&quot;] = {[&quot;family&quot;] = &quot;rbxasset://fonts/families/LegacyArial.json&quot;,[&quot;weight&quot;] = &quot;Regular&quot;,[&quot;style&quot;] = &quot;Normal&quot;,[&quot;cachedFaceId&quot;] = &quot;rbxasset://fonts/Arimo-Regular.ttf&quot;,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Interactable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LayoutOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;LineHeight&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;LocalizationMatchIdentifier&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;LocalizationMatchedSourceText&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;MaxVisibleGraphemes&quot;] = {[&quot;Int32&quot;] = -1,},[&quot;Modal&quot;] = {[&quot;Bool&quot;] = false,},[&quot;OpenTypeFeatures&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Position&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;RichText&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Selectable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Selected&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeConstraint&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Style&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Text&quot;] = {[&quot;String&quot;] = &quot;Button&quot;,},[&quot;TextColor3&quot;] = {[&quot;Color3&quot;] = {0.10588236,0.16470589,0.20784315,},},[&quot;TextDirection&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TextScaled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;TextSize&quot;] = {[&quot;Float32&quot;] = 8,},[&quot;TextStrokeColor3&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;TextTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;TextTruncate&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TextWrapped&quot;] = {[&quot;Bool&quot;] = false,},[&quot;TextXAlignment&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;TextYAlignment&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;TextChannel&quot;] = {[&quot;Name&quot;] = &quot;TextChannel&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;DirectChatRequester&quot;] = {[&quot;Name&quot;] = &quot;DirectChatRequester&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextChatCommand&quot;] = {[&quot;Name&quot;] = &quot;TextChatCommand&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AutocompleteVisible&quot;] = {[&quot;Name&quot;] = &quot;AutocompleteVisible&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PrimaryAlias&quot;] = {[&quot;Name&quot;] = &quot;PrimaryAlias&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SecondaryAlias&quot;] = {[&quot;Name&quot;] = &quot;SecondaryAlias&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutocompleteVisible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;PrimaryAlias&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SecondaryAlias&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextChatConfigurations&quot;] = {[&quot;Name&quot;] = &quot;TextChatConfigurations&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextChatMessage&quot;] = {[&quot;Name&quot;] = &quot;TextChatMessage&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;BubbleChatMessageProperties&quot;] = {[&quot;Name&quot;] = &quot;BubbleChatMessageProperties&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChatWindowMessageProperties&quot;] = {[&quot;Name&quot;] = &quot;ChatWindowMessageProperties&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MessageId&quot;] = {[&quot;Name&quot;] = &quot;MessageId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Metadata&quot;] = {[&quot;Name&quot;] = &quot;Metadata&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PrefixText&quot;] = {[&quot;Name&quot;] = &quot;PrefixText&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Status&quot;] = {[&quot;Name&quot;] = &quot;Status&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextChatMessageStatus&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Text&quot;] = {[&quot;Name&quot;] = &quot;Text&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextChannel&quot;] = {[&quot;Name&quot;] = &quot;TextChannel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextSource&quot;] = {[&quot;Name&quot;] = &quot;TextSource&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Translation&quot;] = {[&quot;Name&quot;] = &quot;Translation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Verified&quot;] = {[&quot;Name&quot;] = &quot;Verified&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextChatMessageProperties&quot;] = {[&quot;Name&quot;] = &quot;TextChatMessageProperties&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;PrefixText&quot;] = {[&quot;Name&quot;] = &quot;PrefixText&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Text&quot;] = {[&quot;Name&quot;] = &quot;Text&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Translation&quot;] = {[&quot;Name&quot;] = &quot;Translation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextChatService&quot;] = {[&quot;Name&quot;] = &quot;TextChatService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ChatTranslationEnabled&quot;] = {[&quot;Name&quot;] = &quot;ChatTranslationEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ChatTranslationFTUXShown&quot;] = {[&quot;Name&quot;] = &quot;ChatTranslationFTUXShown&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChatTranslationToggleEnabled&quot;] = {[&quot;Name&quot;] = &quot;ChatTranslationToggleEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChatVersion&quot;] = {[&quot;Name&quot;] = &quot;ChatVersion&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ChatVersion&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CreateDefaultCommands&quot;] = {[&quot;Name&quot;] = &quot;CreateDefaultCommands&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CreateDefaultTextChannels&quot;] = {[&quot;Name&quot;] = &quot;CreateDefaultTextChannels&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HasSeenDeprecationDialog&quot;] = {[&quot;Name&quot;] = &quot;HasSeenDeprecationDialog&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ChatTranslationFTUXShown&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ChatTranslationToggleEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ChatVersion&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CreateDefaultCommands&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CreateDefaultTextChannels&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HasSeenDeprecationDialog&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextFilterResult&quot;] = {[&quot;Name&quot;] = &quot;TextFilterResult&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextFilterTranslatedResult&quot;] = {[&quot;Name&quot;] = &quot;TextFilterTranslatedResult&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;SourceLanguage&quot;] = {[&quot;Name&quot;] = &quot;SourceLanguage&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SourceText&quot;] = {[&quot;Name&quot;] = &quot;SourceText&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextLabel&quot;] = {[&quot;Name&quot;] = &quot;TextLabel&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;GuiLabel&quot;,[&quot;Properties&quot;] = {[&quot;Confidential&quot;] = {[&quot;Name&quot;] = &quot;Confidential&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ContentText&quot;] = {[&quot;Name&quot;] = &quot;ContentText&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Font&quot;] = {[&quot;Name&quot;] = &quot;Font&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;FontFace&quot;,[&quot;Migration&quot;] = &quot;FontToFontFace&quot;,},},},},},[&quot;FontFace&quot;] = {[&quot;Name&quot;] = &quot;FontFace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Font&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FontSize&quot;] = {[&quot;Name&quot;] = &quot;FontSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FontSize&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LineHeight&quot;] = {[&quot;Name&quot;] = &quot;LineHeight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalizationMatchIdentifier&quot;] = {[&quot;Name&quot;] = &quot;LocalizationMatchIdentifier&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalizationMatchedSourceText&quot;] = {[&quot;Name&quot;] = &quot;LocalizationMatchedSourceText&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalizedText&quot;] = {[&quot;Name&quot;] = &quot;LocalizedText&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxVisibleGraphemes&quot;] = {[&quot;Name&quot;] = &quot;MaxVisibleGraphemes&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OpenTypeFeatures&quot;] = {[&quot;Name&quot;] = &quot;OpenTypeFeatures&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OpenTypeFeaturesError&quot;] = {[&quot;Name&quot;] = &quot;OpenTypeFeaturesError&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RichText&quot;] = {[&quot;Name&quot;] = &quot;RichText&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Text&quot;] = {[&quot;Name&quot;] = &quot;Text&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextBounds&quot;] = {[&quot;Name&quot;] = &quot;TextBounds&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextColor&quot;] = {[&quot;Name&quot;] = &quot;TextColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BrickColor&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextColor3&quot;] = {[&quot;Name&quot;] = &quot;TextColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextDirection&quot;] = {[&quot;Name&quot;] = &quot;TextDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextDirection&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextFits&quot;] = {[&quot;Name&quot;] = &quot;TextFits&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextScaled&quot;] = {[&quot;Name&quot;] = &quot;TextScaled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextSize&quot;] = {[&quot;Name&quot;] = &quot;TextSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeColor3&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Name&quot;] = &quot;TextStrokeTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextTransparency&quot;] = {[&quot;Name&quot;] = &quot;TextTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextTruncate&quot;] = {[&quot;Name&quot;] = &quot;TextTruncate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextTruncate&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextWrap&quot;] = {[&quot;Name&quot;] = &quot;TextWrap&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TextWrapped&quot;] = {[&quot;Name&quot;] = &quot;TextWrapped&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextXAlignment&quot;] = {[&quot;Name&quot;] = &quot;TextXAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextXAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextYAlignment&quot;] = {[&quot;Name&quot;] = &quot;TextYAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextYAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = false,},[&quot;AnchorPoint&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.6392157,0.63529414,0.64705884,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;BorderColor3&quot;] = {[&quot;Color3&quot;] = {0.105882354,0.16470589,0.20784314,},},[&quot;BorderMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BorderSizePixel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Draggable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;FontFace&quot;] = {[&quot;Font&quot;] = {[&quot;family&quot;] = &quot;rbxasset://fonts/families/LegacyArial.json&quot;,[&quot;weight&quot;] = &quot;Regular&quot;,[&quot;style&quot;] = &quot;Normal&quot;,[&quot;cachedFaceId&quot;] = &quot;rbxasset://fonts/Arimo-Regular.ttf&quot;,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Interactable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LayoutOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;LineHeight&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;LocalizationMatchIdentifier&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;LocalizationMatchedSourceText&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;MaxVisibleGraphemes&quot;] = {[&quot;Int32&quot;] = -1,},[&quot;OpenTypeFeatures&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;Position&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;RichText&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Selectable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeConstraint&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Text&quot;] = {[&quot;String&quot;] = &quot;Label&quot;,},[&quot;TextColor3&quot;] = {[&quot;Color3&quot;] = {0.10588236,0.16470589,0.20784315,},},[&quot;TextDirection&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TextScaled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;TextSize&quot;] = {[&quot;Float32&quot;] = 8,},[&quot;TextStrokeColor3&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},[&quot;TextStrokeTransparency&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;TextTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;TextTruncate&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TextWrapped&quot;] = {[&quot;Bool&quot;] = false,},[&quot;TextXAlignment&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;TextYAlignment&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;TextService&quot;] = {[&quot;Name&quot;] = &quot;TextService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextSource&quot;] = {[&quot;Name&quot;] = &quot;TextSource&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CanSend&quot;] = {[&quot;Name&quot;] = &quot;CanSend&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UserId&quot;] = {[&quot;Name&quot;] = &quot;UserId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UserIdReplicated&quot;] = {[&quot;Name&quot;] = &quot;UserIdReplicated&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Texture&quot;] = {[&quot;Name&quot;] = &quot;Texture&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Decal&quot;,[&quot;Properties&quot;] = {[&quot;OffsetStudsU&quot;] = {[&quot;Name&quot;] = &quot;OffsetStudsU&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OffsetStudsV&quot;] = {[&quot;Name&quot;] = &quot;OffsetStudsV&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StudsPerTileU&quot;] = {[&quot;Name&quot;] = &quot;StudsPerTileU&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StudsPerTileV&quot;] = {[&quot;Name&quot;] = &quot;StudsPerTileV&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;Face&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;OffsetStudsU&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;OffsetStudsV&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;StudsPerTileU&quot;] = {[&quot;Float32&quot;] = 2,},[&quot;StudsPerTileV&quot;] = {[&quot;Float32&quot;] = 2,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Texture&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;TextureGenerationPartGroup&quot;] = {[&quot;Name&quot;] = &quot;TextureGenerationPartGroup&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextureGenerationService&quot;] = {[&quot;Name&quot;] = &quot;TextureGenerationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TextureGenerationUnwrappingRequest&quot;] = {[&quot;Name&quot;] = &quot;TextureGenerationUnwrappingRequest&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ThirdPartyUserService&quot;] = {[&quot;Name&quot;] = &quot;ThirdPartyUserService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ThreadState&quot;] = {[&quot;Name&quot;] = &quot;ThreadState&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;FrameCount&quot;] = {[&quot;Name&quot;] = &quot;FrameCount&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Populated&quot;] = {[&quot;Name&quot;] = &quot;Populated&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ThreadId&quot;] = {[&quot;Name&quot;] = &quot;ThreadId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ThreadName&quot;] = {[&quot;Name&quot;] = &quot;ThreadName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TimerService&quot;] = {[&quot;Name&quot;] = &quot;TimerService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ToastNotificationService&quot;] = {[&quot;Name&quot;] = &quot;ToastNotificationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Tool&quot;] = {[&quot;Name&quot;] = &quot;Tool&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;BackpackItem&quot;,[&quot;Properties&quot;] = {[&quot;CanBeDropped&quot;] = {[&quot;Name&quot;] = &quot;CanBeDropped&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Grip&quot;] = {[&quot;Name&quot;] = &quot;Grip&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GripForward&quot;] = {[&quot;Name&quot;] = &quot;GripForward&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GripPos&quot;] = {[&quot;Name&quot;] = &quot;GripPos&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GripRight&quot;] = {[&quot;Name&quot;] = &quot;GripRight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GripUp&quot;] = {[&quot;Name&quot;] = &quot;GripUp&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ManualActivationOnly&quot;] = {[&quot;Name&quot;] = &quot;ManualActivationOnly&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RequiresHandle&quot;] = {[&quot;Name&quot;] = &quot;RequiresHandle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ToolTip&quot;] = {[&quot;Name&quot;] = &quot;ToolTip&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CanBeDropped&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Grip&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LevelOfDetail&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ManualActivationOnly&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ModelMeshCFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;ModelMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;ModelMeshSize&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;ModelStreamingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;NeedsPivotMigration&quot;] = {[&quot;Bool&quot;] = false,},[&quot;RequiresHandle&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TextureId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;ToolTip&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WorldPivotData&quot;] = {[&quot;OptionalCFrame&quot;] = nil,},},},[&quot;Torque&quot;] = {[&quot;Name&quot;] = &quot;Torque&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;RelativeTo&quot;] = {[&quot;Name&quot;] = &quot;RelativeTo&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ActuatorRelativeTo&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Torque&quot;] = {[&quot;Name&quot;] = &quot;Torque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 23,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;RelativeTo&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Torque&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;TorsionSpringConstraint&quot;] = {[&quot;Name&quot;] = &quot;TorsionSpringConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;Coils&quot;] = {[&quot;Name&quot;] = &quot;Coils&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurrentAngle&quot;] = {[&quot;Name&quot;] = &quot;CurrentAngle&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Damping&quot;] = {[&quot;Name&quot;] = &quot;Damping&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LimitEnabled&quot;] = {[&quot;Name&quot;] = &quot;LimitEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LimitsEnabled&quot;] = {[&quot;Name&quot;] = &quot;LimitsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxAngle&quot;] = {[&quot;Name&quot;] = &quot;MaxAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxTorque&quot;] = {[&quot;Name&quot;] = &quot;MaxTorque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Radius&quot;] = {[&quot;Name&quot;] = &quot;Radius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Restitution&quot;] = {[&quot;Name&quot;] = &quot;Restitution&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Stiffness&quot;] = {[&quot;Name&quot;] = &quot;Stiffness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Coils&quot;] = {[&quot;Float32&quot;] = 8,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 200,},[&quot;Damping&quot;] = {[&quot;Float32&quot;] = 0.01,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LimitEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;LimitsEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;MaxAngle&quot;] = {[&quot;Float32&quot;] = 45,},[&quot;MaxTorque&quot;] = {[&quot;Float32&quot;] = math.huge,},[&quot;Radius&quot;] = {[&quot;Float32&quot;] = 0.4,},[&quot;Restitution&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Stiffness&quot;] = {[&quot;Float32&quot;] = 100,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;TotalCountTimeIntervalItem&quot;] = {[&quot;Name&quot;] = &quot;TotalCountTimeIntervalItem&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;StatsItem&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TouchInputService&quot;] = {[&quot;Name&quot;] = &quot;TouchInputService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TouchTransmitter&quot;] = {[&quot;Name&quot;] = &quot;TouchTransmitter&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TracerService&quot;] = {[&quot;Name&quot;] = &quot;TracerService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TrackerLodController&quot;] = {[&quot;Name&quot;] = &quot;TrackerLodController&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AudioMode&quot;] = {[&quot;Name&quot;] = &quot;AudioMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TrackerLodFlagMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VideoExtrapolationMode&quot;] = {[&quot;Name&quot;] = &quot;VideoExtrapolationMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TrackerExtrapolationFlagMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VideoLodMode&quot;] = {[&quot;Name&quot;] = &quot;VideoLodMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TrackerLodValueMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VideoMode&quot;] = {[&quot;Name&quot;] = &quot;VideoMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TrackerLodFlagMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TrackerStreamAnimation&quot;] = {[&quot;Name&quot;] = &quot;TrackerStreamAnimation&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Trail&quot;] = {[&quot;Name&quot;] = &quot;Trail&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Attachment0&quot;] = {[&quot;Name&quot;] = &quot;Attachment0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Attachment1&quot;] = {[&quot;Name&quot;] = &quot;Attachment1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Brightness&quot;] = {[&quot;Name&quot;] = &quot;Brightness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ColorSequence&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FaceCamera&quot;] = {[&quot;Name&quot;] = &quot;FaceCamera&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Lifetime&quot;] = {[&quot;Name&quot;] = &quot;Lifetime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LightEmission&quot;] = {[&quot;Name&quot;] = &quot;LightEmission&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LightInfluence&quot;] = {[&quot;Name&quot;] = &quot;LightInfluence&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LocalTransparencyModifier&quot;] = {[&quot;Name&quot;] = &quot;LocalTransparencyModifier&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MaxLength&quot;] = {[&quot;Name&quot;] = &quot;MaxLength&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinLength&quot;] = {[&quot;Name&quot;] = &quot;MinLength&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Texture&quot;] = {[&quot;Name&quot;] = &quot;Texture&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextureLength&quot;] = {[&quot;Name&quot;] = &quot;TextureLength&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TextureMode&quot;] = {[&quot;Name&quot;] = &quot;TextureMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TextureMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Transparency&quot;] = {[&quot;Name&quot;] = &quot;Transparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberSequence&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;WidthScale&quot;] = {[&quot;Name&quot;] = &quot;WidthScale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberSequence&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Brightness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;ColorSequence&quot;] = {[&quot;keypoints&quot;] = {{[&quot;time&quot;] = 0,[&quot;color&quot;] = {1,1,1,},},{[&quot;time&quot;] = 1,[&quot;color&quot;] = {1,1,1,},},},},},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FaceCamera&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Lifetime&quot;] = {[&quot;Float32&quot;] = 2,},[&quot;LightEmission&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;LightInfluence&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MaxLength&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MinLength&quot;] = {[&quot;Float32&quot;] = 0.1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Texture&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;TextureLength&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;TextureMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;NumberSequence&quot;] = {[&quot;keypoints&quot;] = {{[&quot;time&quot;] = 0,[&quot;value&quot;] = 0.5,[&quot;envelope&quot;] = 0,},{[&quot;time&quot;] = 1,[&quot;value&quot;] = 0.5,[&quot;envelope&quot;] = 0,},},},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WidthScale&quot;] = {[&quot;NumberSequence&quot;] = {[&quot;keypoints&quot;] = {{[&quot;time&quot;] = 0,[&quot;value&quot;] = 1,[&quot;envelope&quot;] = 0,},{[&quot;time&quot;] = 1,[&quot;value&quot;] = 1,[&quot;envelope&quot;] = 0,},},},},},},[&quot;Translator&quot;] = {[&quot;Name&quot;] = &quot;Translator&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;LocaleId&quot;] = {[&quot;Name&quot;] = &quot;LocaleId&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TremoloSoundEffect&quot;] = {[&quot;Name&quot;] = &quot;TremoloSoundEffect&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;SoundEffect&quot;,[&quot;Properties&quot;] = {[&quot;Depth&quot;] = {[&quot;Name&quot;] = &quot;Depth&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Duty&quot;] = {[&quot;Name&quot;] = &quot;Duty&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Frequency&quot;] = {[&quot;Name&quot;] = &quot;Frequency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Depth&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Duty&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Frequency&quot;] = {[&quot;Float32&quot;] = 5,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Priority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TriangleMeshPart&quot;] = {[&quot;Name&quot;] = &quot;TriangleMeshPart&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;BasePart&quot;,[&quot;Properties&quot;] = {[&quot;AeroMeshData&quot;] = {[&quot;Name&quot;] = &quot;AeroMeshData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CollisionFidelity&quot;] = {[&quot;Name&quot;] = &quot;CollisionFidelity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CollisionFidelity&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FluidFidelity&quot;] = {[&quot;Name&quot;] = &quot;FluidFidelity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FluidFidelity&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FluidFidelityInternal&quot;] = {[&quot;Name&quot;] = &quot;FluidFidelityInternal&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FluidFidelity&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MeshSize&quot;] = {[&quot;Name&quot;] = &quot;MeshSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PhysicalConfigData&quot;] = {[&quot;Name&quot;] = &quot;PhysicalConfigData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;SharedString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UnscaledCofm&quot;] = {[&quot;Name&quot;] = &quot;UnscaledCofm&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UnscaledVolInertiaDiags&quot;] = {[&quot;Name&quot;] = &quot;UnscaledVolInertiaDiags&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UnscaledVolInertiaOffDiags&quot;] = {[&quot;Name&quot;] = &quot;UnscaledVolInertiaOffDiags&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UnscaledVolume&quot;] = {[&quot;Name&quot;] = &quot;UnscaledVolume&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TrussPart&quot;] = {[&quot;Name&quot;] = &quot;TrussPart&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;BasePart&quot;,[&quot;Properties&quot;] = {[&quot;Style&quot;] = {[&quot;Name&quot;] = &quot;Style&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Style&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;style&quot;] = {[&quot;Name&quot;] = &quot;style&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;Style&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {163,162,165,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {2,2,2,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 5,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;style&quot;] = {[&quot;Enum&quot;] = 0,},},},[&quot;TutorialService&quot;] = {[&quot;Name&quot;] = &quot;TutorialService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Tween&quot;] = {[&quot;Name&quot;] = &quot;Tween&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;TweenBase&quot;,[&quot;Properties&quot;] = {[&quot;Instance&quot;] = {[&quot;Name&quot;] = &quot;Instance&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TweenBase&quot;] = {[&quot;Name&quot;] = &quot;TweenBase&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;PlaybackState&quot;] = {[&quot;Name&quot;] = &quot;PlaybackState&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PlaybackState&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;TweenService&quot;] = {[&quot;Name&quot;] = &quot;TweenService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UGCAvatarService&quot;] = {[&quot;Name&quot;] = &quot;UGCAvatarService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UGCValidationService&quot;] = {[&quot;Name&quot;] = &quot;UGCValidationService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIAspectRatioConstraint&quot;] = {[&quot;Name&quot;] = &quot;UIAspectRatioConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIConstraint&quot;,[&quot;Properties&quot;] = {[&quot;AspectRatio&quot;] = {[&quot;Name&quot;] = &quot;AspectRatio&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AspectType&quot;] = {[&quot;Name&quot;] = &quot;AspectType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AspectType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DominantAxis&quot;] = {[&quot;Name&quot;] = &quot;DominantAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;DominantAxis&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AspectRatio&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;AspectType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;DominantAxis&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIBase&quot;] = {[&quot;Name&quot;] = &quot;UIBase&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIComponent&quot;] = {[&quot;Name&quot;] = &quot;UIComponent&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;UIBase&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIConstraint&quot;] = {[&quot;Name&quot;] = &quot;UIConstraint&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;UIComponent&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UICorner&quot;] = {[&quot;Name&quot;] = &quot;UICorner&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIComponent&quot;,[&quot;Properties&quot;] = {[&quot;CornerRadius&quot;] = {[&quot;Name&quot;] = &quot;CornerRadius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CornerRadius&quot;] = {[&quot;UDim&quot;] = {0,8,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIDragDetector&quot;] = {[&quot;Name&quot;] = &quot;UIDragDetector&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIComponent&quot;,[&quot;Properties&quot;] = {[&quot;ActivatedCursorIcon&quot;] = {[&quot;Name&quot;] = &quot;ActivatedCursorIcon&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BoundingBehavior&quot;] = {[&quot;Name&quot;] = &quot;BoundingBehavior&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UIDragDetectorBoundingBehavior&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BoundingUI&quot;] = {[&quot;Name&quot;] = &quot;BoundingUI&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CursorIcon&quot;] = {[&quot;Name&quot;] = &quot;CursorIcon&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DragAxis&quot;] = {[&quot;Name&quot;] = &quot;DragAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DragRelativity&quot;] = {[&quot;Name&quot;] = &quot;DragRelativity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UIDragDetectorDragRelativity&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DragRotation&quot;] = {[&quot;Name&quot;] = &quot;DragRotation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DragSpace&quot;] = {[&quot;Name&quot;] = &quot;DragSpace&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UIDragDetectorDragSpace&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DragStyle&quot;] = {[&quot;Name&quot;] = &quot;DragStyle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UIDragDetectorDragStyle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DragUDim2&quot;] = {[&quot;Name&quot;] = &quot;DragUDim2&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxDragAngle&quot;] = {[&quot;Name&quot;] = &quot;MaxDragAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxDragTranslation&quot;] = {[&quot;Name&quot;] = &quot;MaxDragTranslation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinDragAngle&quot;] = {[&quot;Name&quot;] = &quot;MinDragAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinDragTranslation&quot;] = {[&quot;Name&quot;] = &quot;MinDragTranslation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReferenceUIInstance&quot;] = {[&quot;Name&quot;] = &quot;ReferenceUIInstance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ResponseStyle&quot;] = {[&quot;Name&quot;] = &quot;ResponseStyle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UIDragDetectorResponseStyle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionModeDragSpeed&quot;] = {[&quot;Name&quot;] = &quot;SelectionModeDragSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SelectionModeRotateSpeed&quot;] = {[&quot;Name&quot;] = &quot;SelectionModeRotateSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UIDragSpeedAxisMapping&quot;] = {[&quot;Name&quot;] = &quot;UIDragSpeedAxisMapping&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UIDragSpeedAxisMapping&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;ActivatedCursorIcon&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;BoundingBehavior&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CursorIcon&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;DragAxis&quot;] = {[&quot;Vector2&quot;] = {1,0,},},[&quot;DragRelativity&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;DragRotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;DragSpace&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;DragStyle&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;DragUDim2&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxDragAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MaxDragTranslation&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;MinDragAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;MinDragTranslation&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;ResponseStyle&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionModeDragSpeed&quot;] = {[&quot;UDim2&quot;] = {{0,300,},{0,300,},},},[&quot;SelectionModeRotateSpeed&quot;] = {[&quot;Float32&quot;] = 90,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UIDragSpeedAxisMapping&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIDragDetectorService&quot;] = {[&quot;Name&quot;] = &quot;UIDragDetectorService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIFlexItem&quot;] = {[&quot;Name&quot;] = &quot;UIFlexItem&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIComponent&quot;,[&quot;Properties&quot;] = {[&quot;FlexMode&quot;] = {[&quot;Name&quot;] = &quot;FlexMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UIFlexMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GrowRatio&quot;] = {[&quot;Name&quot;] = &quot;GrowRatio&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ItemLineAlignment&quot;] = {[&quot;Name&quot;] = &quot;ItemLineAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ItemLineAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ShrinkRatio&quot;] = {[&quot;Name&quot;] = &quot;ShrinkRatio&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;FlexMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;GrowRatio&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ItemLineAlignment&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ShrinkRatio&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIGradient&quot;] = {[&quot;Name&quot;] = &quot;UIGradient&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIComponent&quot;,[&quot;Properties&quot;] = {[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ColorSequence&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Offset&quot;] = {[&quot;Name&quot;] = &quot;Offset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Rotation&quot;] = {[&quot;Name&quot;] = &quot;Rotation&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Transparency&quot;] = {[&quot;Name&quot;] = &quot;Transparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;NumberSequence&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;ColorSequence&quot;] = {[&quot;keypoints&quot;] = {{[&quot;time&quot;] = 0,[&quot;color&quot;] = {1,1,1,},},{[&quot;time&quot;] = 1,[&quot;color&quot;] = {1,1,1,},},},},},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Offset&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;NumberSequence&quot;] = {[&quot;keypoints&quot;] = {{[&quot;time&quot;] = 0,[&quot;value&quot;] = 0,[&quot;envelope&quot;] = 0,},{[&quot;time&quot;] = 1,[&quot;value&quot;] = 0,[&quot;envelope&quot;] = 0,},},},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIGridLayout&quot;] = {[&quot;Name&quot;] = &quot;UIGridLayout&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIGridStyleLayout&quot;,[&quot;Properties&quot;] = {[&quot;AbsoluteCellCount&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteCellCount&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AbsoluteCellSize&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteCellSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CellPadding&quot;] = {[&quot;Name&quot;] = &quot;CellPadding&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CellSize&quot;] = {[&quot;Name&quot;] = &quot;CellSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FillDirectionMaxCells&quot;] = {[&quot;Name&quot;] = &quot;FillDirectionMaxCells&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StartCorner&quot;] = {[&quot;Name&quot;] = &quot;StartCorner&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;StartCorner&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CellPadding&quot;] = {[&quot;UDim2&quot;] = {{0,5,},{0,5,},},},[&quot;CellSize&quot;] = {[&quot;UDim2&quot;] = {{0,100,},{0,100,},},},[&quot;FillDirection&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FillDirectionMaxCells&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;HorizontalAlignment&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SortOrder&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;StartCorner&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VerticalAlignment&quot;] = {[&quot;Enum&quot;] = 1,},},},[&quot;UIGridStyleLayout&quot;] = {[&quot;Name&quot;] = &quot;UIGridStyleLayout&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;UILayout&quot;,[&quot;Properties&quot;] = {[&quot;AbsoluteContentSize&quot;] = {[&quot;Name&quot;] = &quot;AbsoluteContentSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FillDirection&quot;] = {[&quot;Name&quot;] = &quot;FillDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FillDirection&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HorizontalAlignment&quot;] = {[&quot;Name&quot;] = &quot;HorizontalAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;HorizontalAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SortOrder&quot;] = {[&quot;Name&quot;] = &quot;SortOrder&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SortOrder&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VerticalAlignment&quot;] = {[&quot;Name&quot;] = &quot;VerticalAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VerticalAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UILayout&quot;] = {[&quot;Name&quot;] = &quot;UILayout&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;UIComponent&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIListLayout&quot;] = {[&quot;Name&quot;] = &quot;UIListLayout&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIGridStyleLayout&quot;,[&quot;Properties&quot;] = {[&quot;HorizontalFlex&quot;] = {[&quot;Name&quot;] = &quot;HorizontalFlex&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UIFlexAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HorizontalPadding&quot;] = {[&quot;Name&quot;] = &quot;HorizontalPadding&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ItemLineAlignment&quot;] = {[&quot;Name&quot;] = &quot;ItemLineAlignment&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ItemLineAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Padding&quot;] = {[&quot;Name&quot;] = &quot;Padding&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VerticalFlex&quot;] = {[&quot;Name&quot;] = &quot;VerticalFlex&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UIFlexAlignment&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VerticalPadding&quot;] = {[&quot;Name&quot;] = &quot;VerticalPadding&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Wraps&quot;] = {[&quot;Name&quot;] = &quot;Wraps&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;FillDirection&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;HorizontalAlignment&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;HorizontalFlex&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ItemLineAlignment&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Padding&quot;] = {[&quot;UDim&quot;] = {0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SortOrder&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VerticalAlignment&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;VerticalFlex&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Wraps&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;UIPadding&quot;] = {[&quot;Name&quot;] = &quot;UIPadding&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIComponent&quot;,[&quot;Properties&quot;] = {[&quot;PaddingBottom&quot;] = {[&quot;Name&quot;] = &quot;PaddingBottom&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PaddingLeft&quot;] = {[&quot;Name&quot;] = &quot;PaddingLeft&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PaddingRight&quot;] = {[&quot;Name&quot;] = &quot;PaddingRight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PaddingTop&quot;] = {[&quot;Name&quot;] = &quot;PaddingTop&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;PaddingBottom&quot;] = {[&quot;UDim&quot;] = {0,0,},},[&quot;PaddingLeft&quot;] = {[&quot;UDim&quot;] = {0,0,},},[&quot;PaddingRight&quot;] = {[&quot;UDim&quot;] = {0,0,},},[&quot;PaddingTop&quot;] = {[&quot;UDim&quot;] = {0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIPageLayout&quot;] = {[&quot;Name&quot;] = &quot;UIPageLayout&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIGridStyleLayout&quot;,[&quot;Properties&quot;] = {[&quot;Animated&quot;] = {[&quot;Name&quot;] = &quot;Animated&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Circular&quot;] = {[&quot;Name&quot;] = &quot;Circular&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurrentPage&quot;] = {[&quot;Name&quot;] = &quot;CurrentPage&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;EasingDirection&quot;] = {[&quot;Name&quot;] = &quot;EasingDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;EasingDirection&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;EasingStyle&quot;] = {[&quot;Name&quot;] = &quot;EasingStyle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;EasingStyle&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GamepadInputEnabled&quot;] = {[&quot;Name&quot;] = &quot;GamepadInputEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Padding&quot;] = {[&quot;Name&quot;] = &quot;Padding&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScrollWheelInputEnabled&quot;] = {[&quot;Name&quot;] = &quot;ScrollWheelInputEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TouchInputEnabled&quot;] = {[&quot;Name&quot;] = &quot;TouchInputEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TweenTime&quot;] = {[&quot;Name&quot;] = &quot;TweenTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Animated&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Circular&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EasingDirection&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;EasingStyle&quot;] = {[&quot;Enum&quot;] = 2,},[&quot;FillDirection&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;GamepadInputEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;HorizontalAlignment&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Padding&quot;] = {[&quot;UDim&quot;] = {0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScrollWheelInputEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;SortOrder&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TouchInputEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;TweenTime&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VerticalAlignment&quot;] = {[&quot;Enum&quot;] = 1,},},},[&quot;UIScale&quot;] = {[&quot;Name&quot;] = &quot;UIScale&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIComponent&quot;,[&quot;Properties&quot;] = {[&quot;Scale&quot;] = {[&quot;Name&quot;] = &quot;Scale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UISizeConstraint&quot;] = {[&quot;Name&quot;] = &quot;UISizeConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIConstraint&quot;,[&quot;Properties&quot;] = {[&quot;MaxSize&quot;] = {[&quot;Name&quot;] = &quot;MaxSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinSize&quot;] = {[&quot;Name&quot;] = &quot;MinSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxSize&quot;] = {[&quot;Vector2&quot;] = {math.huge,math.huge,},},[&quot;MinSize&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UIStroke&quot;] = {[&quot;Name&quot;] = &quot;UIStroke&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIComponent&quot;,[&quot;Properties&quot;] = {[&quot;ApplyStrokeMode&quot;] = {[&quot;Name&quot;] = &quot;ApplyStrokeMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ApplyStrokeMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LineJoinMode&quot;] = {[&quot;Name&quot;] = &quot;LineJoinMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;LineJoinMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Thickness&quot;] = {[&quot;Name&quot;] = &quot;Thickness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Transparency&quot;] = {[&quot;Name&quot;] = &quot;Transparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;ApplyStrokeMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3&quot;] = {0,0,0,},},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LineJoinMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Thickness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UITableLayout&quot;] = {[&quot;Name&quot;] = &quot;UITableLayout&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIGridStyleLayout&quot;,[&quot;Properties&quot;] = {[&quot;FillEmptySpaceColumns&quot;] = {[&quot;Name&quot;] = &quot;FillEmptySpaceColumns&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FillEmptySpaceRows&quot;] = {[&quot;Name&quot;] = &quot;FillEmptySpaceRows&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MajorAxis&quot;] = {[&quot;Name&quot;] = &quot;MajorAxis&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TableMajorAxis&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Padding&quot;] = {[&quot;Name&quot;] = &quot;Padding&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;FillDirection&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;FillEmptySpaceColumns&quot;] = {[&quot;Bool&quot;] = false,},[&quot;FillEmptySpaceRows&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;HorizontalAlignment&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;MajorAxis&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Padding&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SortOrder&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VerticalAlignment&quot;] = {[&quot;Enum&quot;] = 1,},},},[&quot;UITextSizeConstraint&quot;] = {[&quot;Name&quot;] = &quot;UITextSizeConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;UIConstraint&quot;,[&quot;Properties&quot;] = {[&quot;MaxTextSize&quot;] = {[&quot;Name&quot;] = &quot;MaxTextSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MinTextSize&quot;] = {[&quot;Name&quot;] = &quot;MinTextSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxTextSize&quot;] = {[&quot;Int32&quot;] = 100,},[&quot;MinTextSize&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UnionOperation&quot;] = {[&quot;Name&quot;] = &quot;UnionOperation&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;PartOperation&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;AeroMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AssetId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ChildData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;ChildData2&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {255,255,255,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FluidFidelityInternal&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FormFactor&quot;] = {[&quot;Enum&quot;] = 3,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;InitialSize&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;MeshData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;MeshData2&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;PhysicalConfigData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;PhysicsData&quot;] = {[&quot;BinaryString&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RenderFidelity&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SmoothingAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UnscaledCofm&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolInertiaDiags&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolInertiaOffDiags&quot;] = {[&quot;Vector3&quot;] = {NaN,NaN,NaN,},},[&quot;UnscaledVolume&quot;] = {[&quot;Float32&quot;] = NaN,},[&quot;UsePartColor&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;UniqueIdLookupService&quot;] = {[&quot;Name&quot;] = &quot;UniqueIdLookupService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UniversalConstraint&quot;] = {[&quot;Name&quot;] = &quot;UniversalConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;LimitsEnabled&quot;] = {[&quot;Name&quot;] = &quot;LimitsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxAngle&quot;] = {[&quot;Name&quot;] = &quot;MaxAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Radius&quot;] = {[&quot;Name&quot;] = &quot;Radius&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Restitution&quot;] = {[&quot;Name&quot;] = &quot;Restitution&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 1009,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LimitsEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;MaxAngle&quot;] = {[&quot;Float32&quot;] = 45,},[&quot;Radius&quot;] = {[&quot;Float32&quot;] = 0.2,},[&quot;Restitution&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;UnreliableRemoteEvent&quot;] = {[&quot;Name&quot;] = &quot;UnreliableRemoteEvent&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;BaseRemoteEvent&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UnvalidatedAssetService&quot;] = {[&quot;Name&quot;] = &quot;UnvalidatedAssetService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;CachedData&quot;] = {[&quot;Name&quot;] = &quot;CachedData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CachedData&quot;] = {[&quot;String&quot;] = &quot;{\&quot;lastSaveTime\&quot;:0,\&quot;lastKnownPublishRequest\&quot;:0,\&quot;users\&quot;:[]}&quot;,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UserGameSettings&quot;] = {[&quot;Name&quot;] = &quot;UserGameSettings&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;UserSettings&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AllTutorialsDisabled&quot;] = {[&quot;Name&quot;] = &quot;AllTutorialsDisabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraMode&quot;] = {[&quot;Name&quot;] = &quot;CameraMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;CustomCameraMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraYInverted&quot;] = {[&quot;Name&quot;] = &quot;CameraYInverted&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChatTranslationEnabled&quot;] = {[&quot;Name&quot;] = &quot;ChatTranslationEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChatTranslationFTUXShown&quot;] = {[&quot;Name&quot;] = &quot;ChatTranslationFTUXShown&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChatTranslationLocale&quot;] = {[&quot;Name&quot;] = &quot;ChatTranslationLocale&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChatTranslationToggleEnabled&quot;] = {[&quot;Name&quot;] = &quot;ChatTranslationToggleEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ChatVisible&quot;] = {[&quot;Name&quot;] = &quot;ChatVisible&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CompletedTutorials&quot;] = {[&quot;Name&quot;] = &quot;CompletedTutorials&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ComputerCameraMovementChanged&quot;] = {[&quot;Name&quot;] = &quot;ComputerCameraMovementChanged&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ComputerCameraMovementMode&quot;] = {[&quot;Name&quot;] = &quot;ComputerCameraMovementMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ComputerCameraMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ComputerMovementChanged&quot;] = {[&quot;Name&quot;] = &quot;ComputerMovementChanged&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ComputerMovementMode&quot;] = {[&quot;Name&quot;] = &quot;ComputerMovementMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ComputerMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ControlMode&quot;] = {[&quot;Name&quot;] = &quot;ControlMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ControlMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DefaultCameraID&quot;] = {[&quot;Name&quot;] = &quot;DefaultCameraID&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FramerateCap&quot;] = {[&quot;Name&quot;] = &quot;FramerateCap&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Fullscreen&quot;] = {[&quot;Name&quot;] = &quot;Fullscreen&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GamepadCameraSensitivity&quot;] = {[&quot;Name&quot;] = &quot;GamepadCameraSensitivity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GraphicsOptimizationMode&quot;] = {[&quot;Name&quot;] = &quot;GraphicsOptimizationMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;GraphicsOptimizationMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GraphicsQualityLevel&quot;] = {[&quot;Name&quot;] = &quot;GraphicsQualityLevel&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HapticStrength&quot;] = {[&quot;Name&quot;] = &quot;HapticStrength&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HasEverUsedVR&quot;] = {[&quot;Name&quot;] = &quot;HasEverUsedVR&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsUsingCameraYInverted&quot;] = {[&quot;Name&quot;] = &quot;IsUsingCameraYInverted&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsUsingGamepadCameraSensitivity&quot;] = {[&quot;Name&quot;] = &quot;IsUsingGamepadCameraSensitivity&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MasterVolume&quot;] = {[&quot;Name&quot;] = &quot;MasterVolume&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MasterVolumeStudio&quot;] = {[&quot;Name&quot;] = &quot;MasterVolumeStudio&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxQualityEnabled&quot;] = {[&quot;Name&quot;] = &quot;MaxQualityEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MicroProfilerWebServerEnabled&quot;] = {[&quot;Name&quot;] = &quot;MicroProfilerWebServerEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MicroProfilerWebServerIP&quot;] = {[&quot;Name&quot;] = &quot;MicroProfilerWebServerIP&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MicroProfilerWebServerPort&quot;] = {[&quot;Name&quot;] = &quot;MicroProfilerWebServerPort&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseSensitivity&quot;] = {[&quot;Name&quot;] = &quot;MouseSensitivity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MouseSensitivityFirstPerson&quot;] = {[&quot;Name&quot;] = &quot;MouseSensitivityFirstPerson&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MouseSensitivityThirdPerson&quot;] = {[&quot;Name&quot;] = &quot;MouseSensitivityThirdPerson&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OnScreenProfilerEnabled&quot;] = {[&quot;Name&quot;] = &quot;OnScreenProfilerEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;OnboardingsCompleted&quot;] = {[&quot;Name&quot;] = &quot;OnboardingsCompleted&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;PartyVoiceVolume&quot;] = {[&quot;Name&quot;] = &quot;PartyVoiceVolume&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PerformanceStatsVisible&quot;] = {[&quot;Name&quot;] = &quot;PerformanceStatsVisible&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlayerHeight&quot;] = {[&quot;Name&quot;] = &quot;PlayerHeight&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PreferredTextSize&quot;] = {[&quot;Name&quot;] = &quot;PreferredTextSize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PreferredTextSize&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PreferredTransparency&quot;] = {[&quot;Name&quot;] = &quot;PreferredTransparency&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;QualityResetLevel&quot;] = {[&quot;Name&quot;] = &quot;QualityResetLevel&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RCCProfilerRecordFrameRate&quot;] = {[&quot;Name&quot;] = &quot;RCCProfilerRecordFrameRate&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RCCProfilerRecordTimeFrame&quot;] = {[&quot;Name&quot;] = &quot;RCCProfilerRecordTimeFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReducedMotion&quot;] = {[&quot;Name&quot;] = &quot;ReducedMotion&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RotationType&quot;] = {[&quot;Name&quot;] = &quot;RotationType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RotationType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SavedQualityLevel&quot;] = {[&quot;Name&quot;] = &quot;SavedQualityLevel&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SavedQualitySetting&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StartMaximized&quot;] = {[&quot;Name&quot;] = &quot;StartMaximized&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StartScreenPosition&quot;] = {[&quot;Name&quot;] = &quot;StartScreenPosition&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StartScreenSize&quot;] = {[&quot;Name&quot;] = &quot;StartScreenSize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TouchCameraMovementChanged&quot;] = {[&quot;Name&quot;] = &quot;TouchCameraMovementChanged&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TouchCameraMovementMode&quot;] = {[&quot;Name&quot;] = &quot;TouchCameraMovementMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TouchCameraMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TouchMovementChanged&quot;] = {[&quot;Name&quot;] = &quot;TouchMovementChanged&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TouchMovementMode&quot;] = {[&quot;Name&quot;] = &quot;TouchMovementMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;TouchMovementMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UiNavigationKeyBindEnabled&quot;] = {[&quot;Name&quot;] = &quot;UiNavigationKeyBindEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UsedCoreGuiIsVisibleToggle&quot;] = {[&quot;Name&quot;] = &quot;UsedCoreGuiIsVisibleToggle&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UsedCustomGuiIsVisibleToggle&quot;] = {[&quot;Name&quot;] = &quot;UsedCustomGuiIsVisibleToggle&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UsedHideHudShortcut&quot;] = {[&quot;Name&quot;] = &quot;UsedHideHudShortcut&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VRComfortSetting&quot;] = {[&quot;Name&quot;] = &quot;VRComfortSetting&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VRComfortSetting&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VREnabled&quot;] = {[&quot;Name&quot;] = &quot;VREnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VRRotationIntensity&quot;] = {[&quot;Name&quot;] = &quot;VRRotationIntensity&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VRSafetyBubbleMode&quot;] = {[&quot;Name&quot;] = &quot;VRSafetyBubbleMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VRSafetyBubbleMode&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VRSmoothRotationEnabled&quot;] = {[&quot;Name&quot;] = &quot;VRSmoothRotationEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VRSmoothRotationEnabledCustomOption&quot;] = {[&quot;Name&quot;] = &quot;VRSmoothRotationEnabledCustomOption&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VRThirdPersonFollowCamEnabled&quot;] = {[&quot;Name&quot;] = &quot;VRThirdPersonFollowCamEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VRThirdPersonFollowCamEnabledCustomOption&quot;] = {[&quot;Name&quot;] = &quot;VRThirdPersonFollowCamEnabledCustomOption&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VignetteEnabled&quot;] = {[&quot;Name&quot;] = &quot;VignetteEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VignetteEnabledCustomOption&quot;] = {[&quot;Name&quot;] = &quot;VignetteEnabledCustomOption&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;gaID&quot;] = {[&quot;Name&quot;] = &quot;gaID&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UserInputService&quot;] = {[&quot;Name&quot;] = &quot;UserInputService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AccelerometerEnabled&quot;] = {[&quot;Name&quot;] = &quot;AccelerometerEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;BottomBarSize&quot;] = {[&quot;Name&quot;] = &quot;BottomBarSize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GamepadEnabled&quot;] = {[&quot;Name&quot;] = &quot;GamepadEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;GyroscopeEnabled&quot;] = {[&quot;Name&quot;] = &quot;GyroscopeEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;KeyboardEnabled&quot;] = {[&quot;Name&quot;] = &quot;KeyboardEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LegacyInputEventsEnabled&quot;] = {[&quot;Name&quot;] = &quot;LegacyInputEventsEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ModalEnabled&quot;] = {[&quot;Name&quot;] = &quot;ModalEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseBehavior&quot;] = {[&quot;Name&quot;] = &quot;MouseBehavior&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MouseBehavior&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MouseDeltaSensitivity&quot;] = {[&quot;Name&quot;] = &quot;MouseDeltaSensitivity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseEnabled&quot;] = {[&quot;Name&quot;] = &quot;MouseEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MouseIcon&quot;] = {[&quot;Name&quot;] = &quot;MouseIcon&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MouseIconEnabled&quot;] = {[&quot;Name&quot;] = &quot;MouseIconEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;NavBarSize&quot;] = {[&quot;Name&quot;] = &quot;NavBarSize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;OnScreenKeyboardAnimationDuration&quot;] = {[&quot;Name&quot;] = &quot;OnScreenKeyboardAnimationDuration&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;OnScreenKeyboardPosition&quot;] = {[&quot;Name&quot;] = &quot;OnScreenKeyboardPosition&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;OnScreenKeyboardSize&quot;] = {[&quot;Name&quot;] = &quot;OnScreenKeyboardSize&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;OnScreenKeyboardVisible&quot;] = {[&quot;Name&quot;] = &quot;OnScreenKeyboardVisible&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;OverrideMouseIconBehavior&quot;] = {[&quot;Name&quot;] = &quot;OverrideMouseIconBehavior&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;OverrideMouseIconBehavior&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;RightBarSize&quot;] = {[&quot;Name&quot;] = &quot;RightBarSize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;StatusBarSize&quot;] = {[&quot;Name&quot;] = &quot;StatusBarSize&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TouchEnabled&quot;] = {[&quot;Name&quot;] = &quot;TouchEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UserHeadCFrame&quot;] = {[&quot;Name&quot;] = &quot;UserHeadCFrame&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VREnabled&quot;] = {[&quot;Name&quot;] = &quot;VREnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UserService&quot;] = {[&quot;Name&quot;] = &quot;UserService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UserSettings&quot;] = {[&quot;Name&quot;] = &quot;UserSettings&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;GenericSettings&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;UserStorageService&quot;] = {[&quot;Name&quot;] = &quot;UserStorageService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;LocalStorageService&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VRService&quot;] = {[&quot;Name&quot;] = &quot;VRService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AutomaticScaling&quot;] = {[&quot;Name&quot;] = &quot;AutomaticScaling&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VRScaling&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AvatarGestures&quot;] = {[&quot;Name&quot;] = &quot;AvatarGestures&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ControllerModels&quot;] = {[&quot;Name&quot;] = &quot;ControllerModels&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VRControllerModelMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DidPointerHit&quot;] = {[&quot;Name&quot;] = &quot;DidPointerHit&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FadeOutViewOnCollision&quot;] = {[&quot;Name&quot;] = &quot;FadeOutViewOnCollision&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GuiInputUserCFrame&quot;] = {[&quot;Name&quot;] = &quot;GuiInputUserCFrame&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;UserCFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LaserDistance&quot;] = {[&quot;Name&quot;] = &quot;LaserDistance&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LaserPointer&quot;] = {[&quot;Name&quot;] = &quot;LaserPointer&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VRLaserPointerMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PointerHitCFrame&quot;] = {[&quot;Name&quot;] = &quot;PointerHitCFrame&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;QuestASWState&quot;] = {[&quot;Name&quot;] = &quot;QuestASWState&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;QuestDisplayRefreshRate&quot;] = {[&quot;Name&quot;] = &quot;QuestDisplayRefreshRate&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ThirdPersonFollowCamEnabled&quot;] = {[&quot;Name&quot;] = &quot;ThirdPersonFollowCamEnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VRDeviceAvailable&quot;] = {[&quot;Name&quot;] = &quot;VRDeviceAvailable&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VRDeviceName&quot;] = {[&quot;Name&quot;] = &quot;VRDeviceName&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VREnabled&quot;] = {[&quot;Name&quot;] = &quot;VREnabled&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VRSessionState&quot;] = {[&quot;Name&quot;] = &quot;VRSessionState&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VRSessionState&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutomaticScaling&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AvatarGestures&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ControllerModels&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;FadeOutViewOnCollision&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LaserPointer&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VRStatusService&quot;] = {[&quot;Name&quot;] = &quot;VRStatusService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ValueBase&quot;] = {[&quot;Name&quot;] = &quot;ValueBase&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Vector3Curve&quot;] = {[&quot;Name&quot;] = &quot;Vector3Curve&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Vector3Value&quot;] = {[&quot;Name&quot;] = &quot;Vector3Value&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;ValueBase&quot;,[&quot;Properties&quot;] = {[&quot;Value&quot;] = {[&quot;Name&quot;] = &quot;Value&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Value&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;VectorForce&quot;] = {[&quot;Name&quot;] = &quot;VectorForce&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Constraint&quot;,[&quot;Properties&quot;] = {[&quot;ApplyAtCenterOfMass&quot;] = {[&quot;Name&quot;] = &quot;ApplyAtCenterOfMass&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Force&quot;] = {[&quot;Name&quot;] = &quot;Force&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RelativeTo&quot;] = {[&quot;Name&quot;] = &quot;RelativeTo&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ActuatorRelativeTo&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;ApplyAtCenterOfMass&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color&quot;] = {[&quot;BrickColor&quot;] = 23,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Force&quot;] = {[&quot;Vector3&quot;] = {1000,0,0,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;RelativeTo&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = false,},},},[&quot;VehicleController&quot;] = {[&quot;Name&quot;] = &quot;VehicleController&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Controller&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VehicleSeat&quot;] = {[&quot;Name&quot;] = &quot;VehicleSeat&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;BasePart&quot;,[&quot;Properties&quot;] = {[&quot;AreHingesDetected&quot;] = {[&quot;Name&quot;] = &quot;AreHingesDetected&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Disabled&quot;] = {[&quot;Name&quot;] = &quot;Disabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;HeadsUpDisplay&quot;] = {[&quot;Name&quot;] = &quot;HeadsUpDisplay&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxSpeed&quot;] = {[&quot;Name&quot;] = &quot;MaxSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Occupant&quot;] = {[&quot;Name&quot;] = &quot;Occupant&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Steer&quot;] = {[&quot;Name&quot;] = &quot;Steer&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SteerFloat&quot;] = {[&quot;Name&quot;] = &quot;SteerFloat&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Throttle&quot;] = {[&quot;Name&quot;] = &quot;Throttle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ThrottleFloat&quot;] = {[&quot;Name&quot;] = &quot;ThrottleFloat&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Torque&quot;] = {[&quot;Name&quot;] = &quot;Torque&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TurnSpeed&quot;] = {[&quot;Name&quot;] = &quot;TurnSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 4,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {163,162,165,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;Disabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HeadsUpDisplay&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;MaxSpeed&quot;] = {[&quot;Float32&quot;] = 25,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Steer&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;SteerFloat&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Throttle&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;ThrottleFloat&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 3,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Torque&quot;] = {[&quot;Float32&quot;] = 10,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;TurnSpeed&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;VelocityMotor&quot;] = {[&quot;Name&quot;] = &quot;VelocityMotor&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;JointInstance&quot;,[&quot;Properties&quot;] = {[&quot;CurrentAngle&quot;] = {[&quot;Name&quot;] = &quot;CurrentAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DesiredAngle&quot;] = {[&quot;Name&quot;] = &quot;DesiredAngle&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Hole&quot;] = {[&quot;Name&quot;] = &quot;Hole&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MaxVelocity&quot;] = {[&quot;Name&quot;] = &quot;MaxVelocity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;C0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;C1&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CurrentAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;DesiredAngle&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;MaxVelocity&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VersionControlService&quot;] = {[&quot;Name&quot;] = &quot;VersionControlService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ScriptCollabEnabled&quot;] = {[&quot;Name&quot;] = &quot;ScriptCollabEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ScriptCollabVersionHistoryEnabled&quot;] = {[&quot;Name&quot;] = &quot;ScriptCollabVersionHistoryEnabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VideoCaptureService&quot;] = {[&quot;Name&quot;] = &quot;VideoCaptureService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CameraID&quot;] = {[&quot;Name&quot;] = &quot;CameraID&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VideoDeviceInput&quot;] = {[&quot;Name&quot;] = &quot;VideoDeviceInput&quot;,[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraId&quot;] = {[&quot;Name&quot;] = &quot;CameraId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CaptureQuality&quot;] = {[&quot;Name&quot;] = &quot;CaptureQuality&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VideoDeviceCaptureQuality&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsReady&quot;] = {[&quot;Name&quot;] = &quot;IsReady&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VideoDisplay&quot;] = {[&quot;Name&quot;] = &quot;VideoDisplay&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,},[&quot;Superclass&quot;] = &quot;GuiObject&quot;,[&quot;Properties&quot;] = {[&quot;ResampleMode&quot;] = {[&quot;Name&quot;] = &quot;ResampleMode&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ResamplerMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ScaleType&quot;] = {[&quot;Name&quot;] = &quot;ScaleType&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ScaleType&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TileSize&quot;] = {[&quot;Name&quot;] = &quot;TileSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;UDim2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VideoColor3&quot;] = {[&quot;Name&quot;] = &quot;VideoColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VideoRectOffset&quot;] = {[&quot;Name&quot;] = &quot;VideoRectOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VideoRectSize&quot;] = {[&quot;Name&quot;] = &quot;VideoRectSize&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;VideoTransparency&quot;] = {[&quot;Name&quot;] = &quot;VideoTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = false,},[&quot;AnchorPoint&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.6392157,0.63529414,0.64705884,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;BorderColor3&quot;] = {[&quot;Color3&quot;] = {0.105882354,0.16470589,0.20784314,},},[&quot;BorderMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BorderSizePixel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Draggable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Interactable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LayoutOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Position&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;ResampleMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ScaleType&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Selectable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeConstraint&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TileSize&quot;] = {[&quot;UDim2&quot;] = {{1,0,},{1,0,},},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;VideoColor3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;VideoRectOffset&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;VideoRectSize&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;VideoTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;VideoFrame&quot;] = {[&quot;Name&quot;] = &quot;VideoFrame&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;GuiObject&quot;,[&quot;Properties&quot;] = {[&quot;IsLoaded&quot;] = {[&quot;Name&quot;] = &quot;IsLoaded&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Looped&quot;] = {[&quot;Name&quot;] = &quot;Looped&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Playing&quot;] = {[&quot;Name&quot;] = &quot;Playing&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlayingReplicating&quot;] = {[&quot;Name&quot;] = &quot;PlayingReplicating&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Resolution&quot;] = {[&quot;Name&quot;] = &quot;Resolution&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TimeLength&quot;] = {[&quot;Name&quot;] = &quot;TimeLength&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TimePosition&quot;] = {[&quot;Name&quot;] = &quot;TimePosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TimePositionReplicating&quot;] = {[&quot;Name&quot;] = &quot;TimePositionReplicating&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Video&quot;] = {[&quot;Name&quot;] = &quot;Video&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Volume&quot;] = {[&quot;Name&quot;] = &quot;Volume&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = false,},[&quot;AnchorPoint&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.6392157,0.63529414,0.64705884,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;BorderColor3&quot;] = {[&quot;Color3&quot;] = {0.105882354,0.16470589,0.20784314,},},[&quot;BorderMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BorderSizePixel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Draggable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Interactable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LayoutOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Looped&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Playing&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Position&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Selectable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeConstraint&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TimePosition&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Video&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Volume&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;VideoPlayer&quot;] = {[&quot;Name&quot;] = &quot;VideoPlayer&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Asset&quot;] = {[&quot;Name&quot;] = &quot;Asset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AutoLoad&quot;] = {[&quot;Name&quot;] = &quot;AutoLoad&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsPlaying&quot;] = {[&quot;Name&quot;] = &quot;IsPlaying&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;IsReady&quot;] = {[&quot;Name&quot;] = &quot;IsReady&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Looping&quot;] = {[&quot;Name&quot;] = &quot;Looping&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlaybackSpeed&quot;] = {[&quot;Name&quot;] = &quot;PlaybackSpeed&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Resolution&quot;] = {[&quot;Name&quot;] = &quot;Resolution&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector2&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Thumbnail&quot;] = {[&quot;Name&quot;] = &quot;Thumbnail&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TimeLength&quot;] = {[&quot;Name&quot;] = &quot;TimeLength&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TimePosition&quot;] = {[&quot;Name&quot;] = &quot;TimePosition&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Volume&quot;] = {[&quot;Name&quot;] = &quot;Volume&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Asset&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLoad&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Looping&quot;] = {[&quot;Bool&quot;] = false,},[&quot;PlaybackSpeed&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Thumbnail&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;TimePosition&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Volume&quot;] = {[&quot;Float32&quot;] = 1,},},},[&quot;VideoService&quot;] = {[&quot;Name&quot;] = &quot;VideoService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;ViewportFrame&quot;] = {[&quot;Name&quot;] = &quot;ViewportFrame&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;GuiObject&quot;,[&quot;Properties&quot;] = {[&quot;Ambient&quot;] = {[&quot;Name&quot;] = &quot;Ambient&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraCFrame&quot;] = {[&quot;Name&quot;] = &quot;CameraCFrame&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CameraFieldOfView&quot;] = {[&quot;Name&quot;] = &quot;CameraFieldOfView&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurrentCamera&quot;] = {[&quot;Name&quot;] = &quot;CurrentCamera&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ImageColor3&quot;] = {[&quot;Name&quot;] = &quot;ImageColor3&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ImageTransparency&quot;] = {[&quot;Name&quot;] = &quot;ImageTransparency&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IsMirrored&quot;] = {[&quot;Name&quot;] = &quot;IsMirrored&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;LightColor&quot;] = {[&quot;Name&quot;] = &quot;LightColor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;LightDirection&quot;] = {[&quot;Name&quot;] = &quot;LightDirection&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Active&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Ambient&quot;] = {[&quot;Color3&quot;] = {0.78431374,0.78431374,0.78431374,},},[&quot;AnchorPoint&quot;] = {[&quot;Vector2&quot;] = {0,0,},},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoLocalize&quot;] = {[&quot;Bool&quot;] = true,},[&quot;AutomaticSize&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackgroundColor3&quot;] = {[&quot;Color3&quot;] = {0.6392157,0.63529414,0.64705884,},},[&quot;BackgroundTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;BorderColor3&quot;] = {[&quot;Color3&quot;] = {0.105882354,0.16470589,0.20784314,},},[&quot;BorderMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BorderSizePixel&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;CameraCFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CameraFieldOfView&quot;] = {[&quot;Float32&quot;] = 1.2217306,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClipsDescendants&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Draggable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ImageColor3&quot;] = {[&quot;Color3&quot;] = {1,1,1,},},[&quot;ImageTransparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Interactable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;LayoutOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;LightColor&quot;] = {[&quot;Color3&quot;] = {0.54901963,0.54901963,0.54901963,},},[&quot;LightDirection&quot;] = {[&quot;Vector3&quot;] = {-1,-1,-1,},},[&quot;Position&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;Rotation&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Selectable&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionBehaviorDown&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorLeft&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorRight&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionBehaviorUp&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SelectionGroup&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SelectionOrder&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Size&quot;] = {[&quot;UDim2&quot;] = {{0,0,},{0,0,},},},[&quot;SizeConstraint&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = 1,},},},[&quot;VirtualInputManager&quot;] = {[&quot;Name&quot;] = &quot;VirtualInputManager&quot;,[&quot;Tags&quot;] = {&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;AdditionalLuaState&quot;] = {[&quot;Name&quot;] = &quot;AdditionalLuaState&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VirtualUser&quot;] = {[&quot;Name&quot;] = &quot;VirtualUser&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VisibilityCheckDispatcher&quot;] = {[&quot;Name&quot;] = &quot;VisibilityCheckDispatcher&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Visit&quot;] = {[&quot;Name&quot;] = &quot;Visit&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VisualizationMode&quot;] = {[&quot;Name&quot;] = &quot;VisualizationMode&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Title&quot;] = {[&quot;Name&quot;] = &quot;Title&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ToolTip&quot;] = {[&quot;Name&quot;] = &quot;ToolTip&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Title&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;ToolTip&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VisualizationModeCategory&quot;] = {[&quot;Name&quot;] = &quot;VisualizationModeCategory&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Title&quot;] = {[&quot;Name&quot;] = &quot;Title&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Title&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VisualizationModeService&quot;] = {[&quot;Name&quot;] = &quot;VisualizationModeService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VoiceChatInternal&quot;] = {[&quot;Name&quot;] = &quot;VoiceChatInternal&quot;,[&quot;Tags&quot;] = {&quot;NotBrowsable&quot;,&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;VoiceChatState&quot;] = {[&quot;Name&quot;] = &quot;VoiceChatState&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;VoiceChatState&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;VoiceChatService&quot;] = {[&quot;Name&quot;] = &quot;VoiceChatService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;EnableDefaultVoice&quot;] = {[&quot;Name&quot;] = &quot;EnableDefaultVoice&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UseAudioApi&quot;] = {[&quot;Name&quot;] = &quot;UseAudioApi&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AudioApiRollout&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;UseNewAudioApi&quot;] = {[&quot;Name&quot;] = &quot;UseNewAudioApi&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UseNewControlPaths&quot;] = {[&quot;Name&quot;] = &quot;UseNewControlPaths&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;UseNewJoinFlow&quot;] = {[&quot;Name&quot;] = &quot;UseNewJoinFlow&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VoiceChatEnabledForPlaceOnRcc&quot;] = {[&quot;Name&quot;] = &quot;VoiceChatEnabledForPlaceOnRcc&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;VoiceChatEnabledForUniverseOnRcc&quot;] = {[&quot;Name&quot;] = &quot;VoiceChatEnabledForUniverseOnRcc&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;EnableDefaultVoice&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UseAudioApi&quot;] = {[&quot;Enum&quot;] = 1,},},},[&quot;WebSocketClient&quot;] = {[&quot;Name&quot;] = &quot;WebSocketClient&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;ConnectionState&quot;] = {[&quot;Name&quot;] = &quot;ConnectionState&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;WebSocketState&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;WebSocketService&quot;] = {[&quot;Name&quot;] = &quot;WebSocketService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;WebViewService&quot;] = {[&quot;Name&quot;] = &quot;WebViewService&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;NotReplicated&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;WedgePart&quot;] = {[&quot;Name&quot;] = &quot;WedgePart&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;FormFactorPart&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Anchored&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AudioCanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;BackParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BackParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BackSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BackSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BottomParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;BottomParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;BottomSurface&quot;] = {[&quot;Enum&quot;] = 4,},[&quot;BottomSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CanCollide&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanQuery&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CanTouch&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;CastShadow&quot;] = {[&quot;Bool&quot;] = true,},[&quot;CollisionGroup&quot;] = {[&quot;String&quot;] = &quot;Default&quot;,},[&quot;CollisionGroupId&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;Color&quot;] = {[&quot;Color3uint8&quot;] = {163,162,165,},},[&quot;CustomPhysicalProperties&quot;] = {[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,},[&quot;EnableFluidForces&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FormFactor&quot;] = {[&quot;Enum&quot;] = 1,},[&quot;FrontParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;FrontParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;FrontSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;FrontSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LeftParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;LeftParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;LeftSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LeftSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Locked&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Massless&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Material&quot;] = {[&quot;Enum&quot;] = 256,},[&quot;MaterialVariant&quot;] = {[&quot;String&quot;] = &quot;&quot;,},[&quot;PivotOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Reflectance&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;RightParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;RightParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;RightSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RightSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RootPriority&quot;] = {[&quot;Int32&quot;] = 0,},[&quot;RotVelocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Size&quot;] = {[&quot;Vector3&quot;] = {4,1.2,2,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TopParamA&quot;] = {[&quot;Float32&quot;] = -0.5,},[&quot;TopParamB&quot;] = {[&quot;Float32&quot;] = 0.5,},[&quot;TopSurface&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TopSurfaceInput&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Velocity&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},},},[&quot;Weld&quot;] = {[&quot;Name&quot;] = &quot;Weld&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;JointInstance&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;C0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;C1&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;WeldConstraint&quot;] = {[&quot;Name&quot;] = &quot;WeldConstraint&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Active&quot;] = {[&quot;Name&quot;] = &quot;Active&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;CFrame0&quot;] = {[&quot;Name&quot;] = &quot;CFrame0&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CFrame1&quot;] = {[&quot;Name&quot;] = &quot;CFrame1&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Part0&quot;] = {[&quot;Name&quot;] = &quot;Part0&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;Part0Internal&quot;,},},},},[&quot;Part0Internal&quot;] = {[&quot;Name&quot;] = &quot;Part0Internal&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Part0&quot;,},},},[&quot;Part1&quot;] = {[&quot;Name&quot;] = &quot;Part1&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;Part1Internal&quot;,},},},},[&quot;Part1Internal&quot;] = {[&quot;Name&quot;] = &quot;Part1Internal&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;Part1&quot;,},},},[&quot;State&quot;] = {[&quot;Name&quot;] = &quot;State&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame0&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;State&quot;] = {[&quot;Int32&quot;] = 3,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;Wire&quot;] = {[&quot;Name&quot;] = &quot;Wire&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Instance&quot;,[&quot;Properties&quot;] = {[&quot;Connected&quot;] = {[&quot;Name&quot;] = &quot;Connected&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;SourceInstance&quot;] = {[&quot;Name&quot;] = &quot;SourceInstance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SourceName&quot;] = {[&quot;Name&quot;] = &quot;SourceName&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TargetInstance&quot;] = {[&quot;Name&quot;] = &quot;TargetInstance&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TargetName&quot;] = {[&quot;Name&quot;] = &quot;TargetName&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;SourceName&quot;] = {[&quot;String&quot;] = &quot;Output&quot;,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TargetName&quot;] = {[&quot;String&quot;] = &quot;Input&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;WireframeHandleAdornment&quot;] = {[&quot;Name&quot;] = &quot;WireframeHandleAdornment&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;HandleAdornment&quot;,[&quot;Properties&quot;] = {[&quot;Scale&quot;] = {[&quot;Name&quot;] = &quot;Scale&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AdornCullingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;AlwaysOnTop&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Color3&quot;] = {[&quot;Color3&quot;] = {0.050980393,0.4117647,0.6745098,},},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Vector3&quot;] = {1,1,1,},},[&quot;SizeRelativeOffset&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;Transparency&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;Visible&quot;] = {[&quot;Bool&quot;] = true,},[&quot;ZIndex&quot;] = {[&quot;Int32&quot;] = -1,},},},[&quot;Workspace&quot;] = {[&quot;Name&quot;] = &quot;Workspace&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,&quot;Service&quot;,},[&quot;Superclass&quot;] = &quot;WorldRoot&quot;,[&quot;Properties&quot;] = {[&quot;AirDensity&quot;] = {[&quot;Name&quot;] = &quot;AirDensity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AllowThirdPartySales&quot;] = {[&quot;Name&quot;] = &quot;AllowThirdPartySales&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;AvatarUnificationMode&quot;] = {[&quot;Name&quot;] = &quot;AvatarUnificationMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AvatarUnificationMode&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ClientAnimatorThrottling&quot;] = {[&quot;Name&quot;] = &quot;ClientAnimatorThrottling&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ClientAnimatorThrottlingMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CollisionGroupData&quot;] = {[&quot;Name&quot;] = &quot;CollisionGroupData&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;BinaryString&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CollisionGroups&quot;] = {[&quot;Name&quot;] = &quot;CollisionGroups&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;String&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,&quot;WriteOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;CurrentCamera&quot;] = {[&quot;Name&quot;] = &quot;CurrentCamera&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;DataModelPlaceVersion&quot;] = {[&quot;Name&quot;] = &quot;DataModelPlaceVersion&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DistributedGameTime&quot;] = {[&quot;Name&quot;] = &quot;DistributedGameTime&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float64&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ExplicitAutoJoints&quot;] = {[&quot;Name&quot;] = &quot;ExplicitAutoJoints&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FallHeightEnabled&quot;] = {[&quot;Name&quot;] = &quot;FallHeightEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FallenPartsDestroyHeight&quot;] = {[&quot;Name&quot;] = &quot;FallenPartsDestroyHeight&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;FilteringEnabled&quot;] = {[&quot;Name&quot;] = &quot;FilteringEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;FluidForces&quot;] = {[&quot;Name&quot;] = &quot;FluidForces&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;FluidForces&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;GlobalWind&quot;] = {[&quot;Name&quot;] = &quot;GlobalWind&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Gravity&quot;] = {[&quot;Name&quot;] = &quot;Gravity&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;IKControlConstraintSupport&quot;] = {[&quot;Name&quot;] = &quot;IKControlConstraintSupport&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;IKControlConstraintSupport&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;InsertPoint&quot;] = {[&quot;Name&quot;] = &quot;InsertPoint&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;InterpolationThrottling&quot;] = {[&quot;Name&quot;] = &quot;InterpolationThrottling&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;InterpolationThrottlingMode&quot;,},[&quot;Tags&quot;] = {&quot;Deprecated&quot;,&quot;Hidden&quot;,&quot;NotReplicated&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;MeshPartHeadsAndAccessories&quot;] = {[&quot;Name&quot;] = &quot;MeshPartHeadsAndAccessories&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MeshPartHeadsAndAccessories&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ModelStreamingBehavior&quot;] = {[&quot;Name&quot;] = &quot;ModelStreamingBehavior&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ModelStreamingBehavior&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;MoverConstraintRootBehavior&quot;] = {[&quot;Name&quot;] = &quot;MoverConstraintRootBehavior&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;MoverConstraintRootBehaviorMode&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PathfindingUseImprovedSearch&quot;] = {[&quot;Name&quot;] = &quot;PathfindingUseImprovedSearch&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PathfindingUseImprovedSearch&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PhysicsImprovedSleep&quot;] = {[&quot;Name&quot;] = &quot;PhysicsImprovedSleep&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RolloutState&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PhysicsSteppingMethod&quot;] = {[&quot;Name&quot;] = &quot;PhysicsSteppingMethod&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PhysicsSteppingMethod&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PlayerCharacterDestroyBehavior&quot;] = {[&quot;Name&quot;] = &quot;PlayerCharacterDestroyBehavior&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PlayerCharacterDestroyBehavior&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;PrimalPhysicsSolver&quot;] = {[&quot;Name&quot;] = &quot;PrimalPhysicsSolver&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;PrimalPhysicsSolver&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RejectCharacterDeletions&quot;] = {[&quot;Name&quot;] = &quot;RejectCharacterDeletions&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RejectCharacterDeletions&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;RenderingCacheOptimizations&quot;] = {[&quot;Name&quot;] = &quot;RenderingCacheOptimizations&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RenderingCacheOptimizationMode&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReplicateInstanceDestroySetting&quot;] = {[&quot;Name&quot;] = &quot;ReplicateInstanceDestroySetting&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;ReplicateInstanceDestroySetting&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Retargeting&quot;] = {[&quot;Name&quot;] = &quot;Retargeting&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;AnimatorRetargetingMode&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SandboxedInstanceMode&quot;] = {[&quot;Name&quot;] = &quot;SandboxedInstanceMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SandboxedInstanceMode&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;SignalBehavior&quot;] = {[&quot;Name&quot;] = &quot;SignalBehavior&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SignalBehavior&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;SerializesAs&quot;] = &quot;SignalBehavior2&quot;,},},},},[&quot;SignalBehavior2&quot;] = {[&quot;Name&quot;] = &quot;SignalBehavior2&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;SignalBehavior&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Alias&quot;] = {[&quot;AliasFor&quot;] = &quot;SignalBehavior&quot;,},},},[&quot;StreamOutBehavior&quot;] = {[&quot;Name&quot;] = &quot;StreamOutBehavior&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;StreamOutBehavior&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StreamingEnabled&quot;] = {[&quot;Name&quot;] = &quot;StreamingEnabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StreamingIntegrityMode&quot;] = {[&quot;Name&quot;] = &quot;StreamingIntegrityMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;StreamingIntegrityMode&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StreamingMinRadius&quot;] = {[&quot;Name&quot;] = &quot;StreamingMinRadius&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;StreamingPauseMode&quot;] = {[&quot;Name&quot;] = &quot;StreamingPauseMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;StreamingPauseMode&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;StreamingTargetRadius&quot;] = {[&quot;Name&quot;] = &quot;StreamingTargetRadius&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Terrain&quot;] = {[&quot;Name&quot;] = &quot;Terrain&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;TerrainWeldsFixed&quot;] = {[&quot;Name&quot;] = &quot;TerrainWeldsFixed&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TouchEventsUseCollisionGroups&quot;] = {[&quot;Name&quot;] = &quot;TouchEventsUseCollisionGroups&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;RolloutState&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TouchesUseCollisionGroups&quot;] = {[&quot;Name&quot;] = &quot;TouchesUseCollisionGroups&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;AirDensity&quot;] = {[&quot;Float32&quot;] = 0.0012,},[&quot;AllowThirdPartySales&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AvatarUnificationMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;ClientAnimatorThrottling&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;CollisionGroupData&quot;] = {[&quot;BinaryString&quot;] = &quot;AQEABP////8HRGVmYXVsdA==&quot;,},[&quot;DistributedGameTime&quot;] = {[&quot;Float64&quot;] = 0,},[&quot;ExplicitAutoJoints&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FallHeightEnabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;FallenPartsDestroyHeight&quot;] = {[&quot;Float32&quot;] = -500,},[&quot;FluidForces&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;GlobalWind&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;Gravity&quot;] = {[&quot;Float32&quot;] = 196.2,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;IKControlConstraintSupport&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;LevelOfDetail&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;MeshPartHeadsAndAccessories&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ModelMeshCFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;ModelMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;ModelMeshSize&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;ModelStreamingBehavior&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ModelStreamingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;MoverConstraintRootBehavior&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;NeedsPivotMigration&quot;] = {[&quot;Bool&quot;] = false,},[&quot;PathfindingUseImprovedSearch&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;PhysicsImprovedSleep&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;PhysicsSteppingMethod&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;PlayerCharacterDestroyBehavior&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;PrimalPhysicsSolver&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RejectCharacterDeletions&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;RenderingCacheOptimizations&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ReplicateInstanceDestroySetting&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Retargeting&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SandboxedInstanceMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;Scale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SignalBehavior&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;StreamOutBehavior&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;StreamingEnabled&quot;] = {[&quot;Bool&quot;] = false,},[&quot;StreamingIntegrityMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;StreamingMinRadius&quot;] = {[&quot;Int32&quot;] = 64,},[&quot;StreamingTargetRadius&quot;] = {[&quot;Int32&quot;] = 1024,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TerrainWeldsFixed&quot;] = {[&quot;Bool&quot;] = true,},[&quot;TouchEventsUseCollisionGroups&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;TouchesUseCollisionGroups&quot;] = {[&quot;Bool&quot;] = false,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WorldPivotData&quot;] = {[&quot;OptionalCFrame&quot;] = nil,},},},[&quot;WorkspaceAnnotation&quot;] = {[&quot;Name&quot;] = &quot;WorkspaceAnnotation&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;Annotation&quot;,[&quot;Properties&quot;] = {[&quot;Adornee&quot;] = {[&quot;Name&quot;] = &quot;Adornee&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Ref&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;AdorneeOffset&quot;] = {[&quot;Name&quot;] = &quot;AdorneeOffset&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Vector3&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;WorldModel&quot;] = {[&quot;Name&quot;] = &quot;WorldModel&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;WorldRoot&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;LevelOfDetail&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;ModelMeshCFrame&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;ModelMeshData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;ModelMeshSize&quot;] = {[&quot;Vector3&quot;] = {0,0,0,},},[&quot;ModelStreamingMode&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;NeedsPivotMigration&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;Scale&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WorldPivotData&quot;] = {[&quot;OptionalCFrame&quot;] = nil,},},},[&quot;WorldRoot&quot;] = {[&quot;Name&quot;] = &quot;WorldRoot&quot;,[&quot;Tags&quot;] = {&quot;NotCreatable&quot;,},[&quot;Superclass&quot;] = &quot;Model&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;WorldPivotData&quot;] = {[&quot;OptionalCFrame&quot;] = nil,},},},[&quot;WrapDeformer&quot;] = {[&quot;Name&quot;] = &quot;WrapDeformer&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;BaseWrap&quot;,[&quot;Properties&quot;] = {},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CageMeshContent&quot;] = {[&quot;Content&quot;] = &quot;None&quot;,},[&quot;CageOrigin&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HSRAssetId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;HSRData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;HSRMeshIdData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ImportOrigin&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TemporaryCageMeshId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;WrapLayer&quot;] = {[&quot;Name&quot;] = &quot;WrapLayer&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;BaseWrap&quot;,[&quot;Properties&quot;] = {[&quot;AutoSkin&quot;] = {[&quot;Name&quot;] = &quot;AutoSkin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;WrapLayerAutoSkin&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;BindOffset&quot;] = {[&quot;Name&quot;] = &quot;BindOffset&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DebugMode&quot;] = {[&quot;Name&quot;] = &quot;DebugMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;WrapLayerDebugMode&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Enabled&quot;] = {[&quot;Name&quot;] = &quot;Enabled&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Bool&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Order&quot;] = {[&quot;Name&quot;] = &quot;Order&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Int32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;Puffiness&quot;] = {[&quot;Name&quot;] = &quot;Puffiness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReferenceMeshContent&quot;] = {[&quot;Name&quot;] = &quot;ReferenceMeshContent&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Content&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReferenceMeshId&quot;] = {[&quot;Name&quot;] = &quot;ReferenceMeshId&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = {[&quot;Migrate&quot;] = {[&quot;To&quot;] = &quot;ReferenceMeshContent&quot;,[&quot;Migration&quot;] = &quot;ContentIdToContent&quot;,},},},},},[&quot;ReferenceOrigin&quot;] = {[&quot;Name&quot;] = &quot;ReferenceOrigin&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;ReferenceOriginWorld&quot;] = {[&quot;Name&quot;] = &quot;ReferenceOriginWorld&quot;,[&quot;Scriptability&quot;] = &quot;Read&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;CFrame&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;ReadOnly&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;ShrinkFactor&quot;] = {[&quot;Name&quot;] = &quot;ShrinkFactor&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},[&quot;TemporaryReferenceId&quot;] = {[&quot;Name&quot;] = &quot;TemporaryReferenceId&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;ContentId&quot;,},[&quot;Tags&quot;] = {&quot;Hidden&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;AutoSkin&quot;] = {[&quot;Enum&quot;] = 0,},[&quot;BindOffset&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;CageMeshContent&quot;] = {[&quot;Content&quot;] = &quot;None&quot;,},[&quot;CageOrigin&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;Enabled&quot;] = {[&quot;Bool&quot;] = true,},[&quot;HSRAssetId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;HSRData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;HSRMeshIdData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ImportOrigin&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Order&quot;] = {[&quot;Int32&quot;] = 1,},[&quot;Puffiness&quot;] = {[&quot;Float32&quot;] = 1,},[&quot;ReferenceMeshContent&quot;] = {[&quot;Content&quot;] = &quot;None&quot;,},[&quot;ReferenceOrigin&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;ShrinkFactor&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TemporaryCageMeshId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;TemporaryReferenceId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},[&quot;WrapTarget&quot;] = {[&quot;Name&quot;] = &quot;WrapTarget&quot;,[&quot;Tags&quot;] = {},[&quot;Superclass&quot;] = &quot;BaseWrap&quot;,[&quot;Properties&quot;] = {[&quot;Color&quot;] = {[&quot;Name&quot;] = &quot;Color&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Color3&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;DebugMode&quot;] = {[&quot;Name&quot;] = &quot;DebugMode&quot;,[&quot;Scriptability&quot;] = &quot;None&quot;,[&quot;DataType&quot;] = {[&quot;Enum&quot;] = &quot;WrapTargetDebugMode&quot;,},[&quot;Tags&quot;] = {&quot;NotReplicated&quot;,&quot;NotScriptable&quot;,},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;DoesNotSerialize&quot;,},},},[&quot;Stiffness&quot;] = {[&quot;Name&quot;] = &quot;Stiffness&quot;,[&quot;Scriptability&quot;] = &quot;ReadWrite&quot;,[&quot;DataType&quot;] = {[&quot;Value&quot;] = &quot;Float32&quot;,},[&quot;Tags&quot;] = {},[&quot;Kind&quot;] = {[&quot;Canonical&quot;] = {[&quot;Serialization&quot;] = &quot;Serializes&quot;,},},},},[&quot;DefaultProperties&quot;] = {[&quot;Archivable&quot;] = {[&quot;Bool&quot;] = true,},[&quot;Attributes&quot;] = {[&quot;Attributes&quot;] = {},},[&quot;CageMeshContent&quot;] = {[&quot;Content&quot;] = &quot;None&quot;,},[&quot;CageOrigin&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Capabilities&quot;] = {[&quot;SecurityCapabilities&quot;] = 0,},[&quot;HSRAssetId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;HSRData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;HSRMeshIdData&quot;] = {[&quot;SharedString&quot;] = &quot;&quot;,},[&quot;HistoryId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},[&quot;ImportOrigin&quot;] = {[&quot;CFrame&quot;] = {[&quot;position&quot;] = {0,0,0,},[&quot;orientation&quot;] = {{1,0,0,},{0,1,0,},{0,0,1,},},},},[&quot;Sandboxed&quot;] = {[&quot;Bool&quot;] = false,},[&quot;SourceAssetId&quot;] = {[&quot;Int64&quot;] = -1,},[&quot;Stiffness&quot;] = {[&quot;Float32&quot;] = 0,},[&quot;Tags&quot;] = {[&quot;Tags&quot;] = {},},[&quot;TemporaryCageMeshId&quot;] = {[&quot;ContentId&quot;] = &quot;&quot;,},[&quot;UniqueId&quot;] = {[&quot;UniqueId&quot;] = &quot;00000000000000000000000000000000&quot;,},},},},[&quot;Enums&quot;] = {[&quot;AccessModifierType&quot;] = {[&quot;name&quot;] = &quot;AccessModifierType&quot;,[&quot;items&quot;] = {[&quot;Allow&quot;] = 0,[&quot;Deny&quot;] = 1,},},[&quot;AccessoryType&quot;] = {[&quot;name&quot;] = &quot;AccessoryType&quot;,[&quot;items&quot;] = {[&quot;Back&quot;] = 7,[&quot;DressSkirt&quot;] = 17,[&quot;Eyebrow&quot;] = 18,[&quot;Eyelash&quot;] = 19,[&quot;Face&quot;] = 3,[&quot;Front&quot;] = 6,[&quot;Hair&quot;] = 2,[&quot;Hat&quot;] = 1,[&quot;Jacket&quot;] = 12,[&quot;LeftShoe&quot;] = 15,[&quot;Neck&quot;] = 4,[&quot;Pants&quot;] = 11,[&quot;RightShoe&quot;] = 16,[&quot;Shirt&quot;] = 10,[&quot;Shorts&quot;] = 14,[&quot;Shoulder&quot;] = 5,[&quot;Sweater&quot;] = 13,[&quot;TShirt&quot;] = 9,[&quot;Unknown&quot;] = 0,[&quot;Waist&quot;] = 8,},},[&quot;ActionOnStopSync&quot;] = {[&quot;name&quot;] = &quot;ActionOnStopSync&quot;,[&quot;items&quot;] = {[&quot;AlwaysAsk&quot;] = 0,[&quot;DeleteLocalFiles&quot;] = 2,[&quot;KeepLocalFiles&quot;] = 1,},},[&quot;ActionType&quot;] = {[&quot;name&quot;] = &quot;ActionType&quot;,[&quot;items&quot;] = {[&quot;Draw&quot;] = 3,[&quot;Lose&quot;] = 2,[&quot;Nothing&quot;] = 0,[&quot;Pause&quot;] = 1,[&quot;Win&quot;] = 4,},},[&quot;ActuatorRelativeTo&quot;] = {[&quot;name&quot;] = &quot;ActuatorRelativeTo&quot;,[&quot;items&quot;] = {[&quot;Attachment0&quot;] = 0,[&quot;Attachment1&quot;] = 1,[&quot;World&quot;] = 2,},},[&quot;ActuatorType&quot;] = {[&quot;name&quot;] = &quot;ActuatorType&quot;,[&quot;items&quot;] = {[&quot;Motor&quot;] = 1,[&quot;None&quot;] = 0,[&quot;Servo&quot;] = 2,},},[&quot;AdAvailabilityResult&quot;] = {[&quot;name&quot;] = &quot;AdAvailabilityResult&quot;,[&quot;items&quot;] = {[&quot;DeviceIneligible&quot;] = 2,[&quot;ExperienceIneligible&quot;] = 3,[&quot;InternalError&quot;] = 4,[&quot;IsAvailable&quot;] = 1,[&quot;NoFill&quot;] = 5,[&quot;PlayerIneligible&quot;] = 6,[&quot;PublisherIneligible&quot;] = 7,},},[&quot;AdEventType&quot;] = {[&quot;name&quot;] = &quot;AdEventType&quot;,[&quot;items&quot;] = {[&quot;RewardedAdGrant&quot;] = 4,[&quot;RewardedAdLoaded&quot;] = 3,[&quot;RewardedAdUnloaded&quot;] = 5,[&quot;UserCompletedVideo&quot;] = 2,[&quot;VideoLoaded&quot;] = 0,[&quot;VideoRemoved&quot;] = 1,},},[&quot;AdFormat&quot;] = {[&quot;name&quot;] = &quot;AdFormat&quot;,[&quot;items&quot;] = {[&quot;RewardedVideo&quot;] = 0,},},[&quot;AdShape&quot;] = {[&quot;name&quot;] = &quot;AdShape&quot;,[&quot;items&quot;] = {[&quot;HorizontalRectangle&quot;] = 1,},},[&quot;AdTeleportMethod&quot;] = {[&quot;name&quot;] = &quot;AdTeleportMethod&quot;,[&quot;items&quot;] = {[&quot;InGameMenuBackButton&quot;] = 2,[&quot;PortalForward&quot;] = 1,[&quot;UIBackButton&quot;] = 3,[&quot;Undefined&quot;] = 0,},},[&quot;AdUIEventType&quot;] = {[&quot;name&quot;] = &quot;AdUIEventType&quot;,[&quot;items&quot;] = {[&quot;AdLabelClicked&quot;] = 0,[&quot;CloseButtonClicked&quot;] = 5,[&quot;FullscreenButtonClicked&quot;] = 2,[&quot;PauseButtonClicked&quot;] = 4,[&quot;PauseEventTriggered&quot;] = 8,[&quot;PlayButtonClicked&quot;] = 3,[&quot;PlayEventTriggered&quot;] = 7,[&quot;VolumeButtonClicked&quot;] = 1,[&quot;WhyThisAdClicked&quot;] = 6,},},[&quot;AdUIType&quot;] = {[&quot;name&quot;] = &quot;AdUIType&quot;,[&quot;items&quot;] = {[&quot;Image&quot;] = 1,[&quot;None&quot;] = 0,[&quot;Video&quot;] = 2,},},[&quot;AdUnitStatus&quot;] = {[&quot;name&quot;] = &quot;AdUnitStatus&quot;,[&quot;items&quot;] = {[&quot;Active&quot;] = 1,[&quot;Inactive&quot;] = 0,},},[&quot;AdornCullingMode&quot;] = {[&quot;name&quot;] = &quot;AdornCullingMode&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 0,[&quot;Never&quot;] = 1,},},[&quot;AlignType&quot;] = {[&quot;name&quot;] = &quot;AlignType&quot;,[&quot;items&quot;] = {[&quot;AllAxes&quot;] = 5,[&quot;Parallel&quot;] = 0,[&quot;Perpendicular&quot;] = 1,[&quot;PrimaryAxisLookAt&quot;] = 4,[&quot;PrimaryAxisParallel&quot;] = 2,[&quot;PrimaryAxisPerpendicular&quot;] = 3,},},[&quot;AlphaMode&quot;] = {[&quot;name&quot;] = &quot;AlphaMode&quot;,[&quot;items&quot;] = {[&quot;Overlay&quot;] = 0,[&quot;TintMask&quot;] = 2,[&quot;Transparency&quot;] = 1,},},[&quot;AnalyticsCustomFieldKeys&quot;] = {[&quot;name&quot;] = &quot;AnalyticsCustomFieldKeys&quot;,[&quot;items&quot;] = {[&quot;CustomField01&quot;] = 0,[&quot;CustomField02&quot;] = 1,[&quot;CustomField03&quot;] = 2,},},[&quot;AnalyticsEconomyAction&quot;] = {[&quot;name&quot;] = &quot;AnalyticsEconomyAction&quot;,[&quot;items&quot;] = {[&quot;Acquire&quot;] = 1,[&quot;Default&quot;] = 0,[&quot;Spend&quot;] = 2,},},[&quot;AnalyticsEconomyFlowType&quot;] = {[&quot;name&quot;] = &quot;AnalyticsEconomyFlowType&quot;,[&quot;items&quot;] = {[&quot;Sink&quot;] = 0,[&quot;Source&quot;] = 1,},},[&quot;AnalyticsEconomyTransactionType&quot;] = {[&quot;name&quot;] = &quot;AnalyticsEconomyTransactionType&quot;,[&quot;items&quot;] = {[&quot;ContextualPurchase&quot;] = 3,[&quot;Gameplay&quot;] = 2,[&quot;IAP&quot;] = 0,[&quot;Onboarding&quot;] = 5,[&quot;Shop&quot;] = 1,[&quot;TimedReward&quot;] = 4,},},[&quot;AnalyticsLogLevel&quot;] = {[&quot;name&quot;] = &quot;AnalyticsLogLevel&quot;,[&quot;items&quot;] = {[&quot;Debug&quot;] = 1,[&quot;Error&quot;] = 4,[&quot;Fatal&quot;] = 5,[&quot;Information&quot;] = 2,[&quot;Trace&quot;] = 0,[&quot;Warning&quot;] = 3,},},[&quot;AnalyticsProgressionStatus&quot;] = {[&quot;name&quot;] = &quot;AnalyticsProgressionStatus&quot;,[&quot;items&quot;] = {[&quot;Abandon&quot;] = 3,[&quot;Begin&quot;] = 1,[&quot;Complete&quot;] = 2,[&quot;Default&quot;] = 0,[&quot;Fail&quot;] = 4,},},[&quot;AnalyticsProgressionType&quot;] = {[&quot;name&quot;] = &quot;AnalyticsProgressionType&quot;,[&quot;items&quot;] = {[&quot;Complete&quot;] = 3,[&quot;Custom&quot;] = 0,[&quot;Fail&quot;] = 2,[&quot;Start&quot;] = 1,},},[&quot;AnimationClipFromVideoStatus&quot;] = {[&quot;name&quot;] = &quot;AnimationClipFromVideoStatus&quot;,[&quot;items&quot;] = {[&quot;Cancelled&quot;] = 11,[&quot;ErrorGeneric&quot;] = 4,[&quot;ErrorMultiplePeople&quot;] = 12,[&quot;ErrorNoPersonDetected&quot;] = 8,[&quot;ErrorUploadingVideo&quot;] = 2001,[&quot;ErrorVideoTooLong&quot;] = 7,[&quot;ErrorVideoUnstable&quot;] = 9,[&quot;Initializing&quot;] = 0,[&quot;Pending&quot;] = 1,[&quot;Processing&quot;] = 2,[&quot;Success&quot;] = 6,[&quot;Timeout&quot;] = 10,},},[&quot;AnimationPriority&quot;] = {[&quot;name&quot;] = &quot;AnimationPriority&quot;,[&quot;items&quot;] = {[&quot;Action&quot;] = 2,[&quot;Action2&quot;] = 3,[&quot;Action3&quot;] = 4,[&quot;Action4&quot;] = 5,[&quot;Core&quot;] = 1000,[&quot;Idle&quot;] = 0,[&quot;Movement&quot;] = 1,},},[&quot;AnimatorRetargetingMode&quot;] = {[&quot;name&quot;] = &quot;AnimatorRetargetingMode&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;AnnotationEditingMode&quot;] = {[&quot;name&quot;] = &quot;AnnotationEditingMode&quot;,[&quot;items&quot;] = {[&quot;None&quot;] = 0,[&quot;PlacingNew&quot;] = 1,[&quot;WritingNew&quot;] = 2,},},[&quot;AnnotationRequestResult&quot;] = {[&quot;name&quot;] = &quot;AnnotationRequestResult&quot;,[&quot;items&quot;] = {[&quot;ErrorInternalFailure&quot;] = 1,[&quot;ErrorModerated&quot;] = 3,[&quot;ErrorNotFound&quot;] = 2,[&quot;Success&quot;] = 0,},},[&quot;AnnotationRequestType&quot;] = {[&quot;name&quot;] = &quot;AnnotationRequestType&quot;,[&quot;items&quot;] = {[&quot;Create&quot;] = 1,[&quot;Delete&quot;] = 3,[&quot;Edit&quot;] = 4,[&quot;Resolve&quot;] = 2,[&quot;Unknown&quot;] = 0,},},[&quot;AppLifecycleManagerState&quot;] = {[&quot;name&quot;] = &quot;AppLifecycleManagerState&quot;,[&quot;items&quot;] = {[&quot;Active&quot;] = 1,[&quot;Detached&quot;] = 0,[&quot;Hidden&quot;] = 3,[&quot;Inactive&quot;] = 2,},},[&quot;AppShellActionType&quot;] = {[&quot;name&quot;] = &quot;AppShellActionType&quot;,[&quot;items&quot;] = {[&quot;AvatarEditorPageLoaded&quot;] = 10,[&quot;GamePageLoaded&quot;] = 8,[&quot;HomePageLoaded&quot;] = 9,[&quot;None&quot;] = 0,[&quot;OpenApp&quot;] = 1,[&quot;ReadConversation&quot;] = 5,[&quot;TapAvatarTab&quot;] = 4,[&quot;TapChatTab&quot;] = 2,[&quot;TapConversationEntry&quot;] = 3,[&quot;TapGamePageTab&quot;] = 6,[&quot;TapHomePageTab&quot;] = 7,},},[&quot;AppShellFeature&quot;] = {[&quot;name&quot;] = &quot;AppShellFeature&quot;,[&quot;items&quot;] = {[&quot;AvatarEditor&quot;] = 2,[&quot;Chat&quot;] = 1,[&quot;GamePage&quot;] = 3,[&quot;HomePage&quot;] = 4,[&quot;Landing&quot;] = 6,[&quot;More&quot;] = 5,[&quot;None&quot;] = 0,},},[&quot;AppUpdateStatus&quot;] = {[&quot;name&quot;] = &quot;AppUpdateStatus&quot;,[&quot;items&quot;] = {[&quot;Available&quot;] = 4,[&quot;AvailableBoundChannel&quot;] = 5,[&quot;Failed&quot;] = 2,[&quot;NotAvailable&quot;] = 3,[&quot;NotSupported&quot;] = 1,[&quot;Unknown&quot;] = 0,},},[&quot;ApplyStrokeMode&quot;] = {[&quot;name&quot;] = &quot;ApplyStrokeMode&quot;,[&quot;items&quot;] = {[&quot;Border&quot;] = 1,[&quot;Contextual&quot;] = 0,},},[&quot;AspectType&quot;] = {[&quot;name&quot;] = &quot;AspectType&quot;,[&quot;items&quot;] = {[&quot;FitWithinMaxSize&quot;] = 0,[&quot;ScaleWithParentSize&quot;] = 1,},},[&quot;AssetCreatorType&quot;] = {[&quot;name&quot;] = &quot;AssetCreatorType&quot;,[&quot;items&quot;] = {[&quot;Group&quot;] = 1,[&quot;User&quot;] = 0,},},[&quot;AssetFetchStatus&quot;] = {[&quot;name&quot;] = &quot;AssetFetchStatus&quot;,[&quot;items&quot;] = {[&quot;Failure&quot;] = 1,[&quot;Loading&quot;] = 3,[&quot;None&quot;] = 2,[&quot;Success&quot;] = 0,[&quot;TimedOut&quot;] = 4,},},[&quot;AssetType&quot;] = {[&quot;name&quot;] = &quot;AssetType&quot;,[&quot;items&quot;] = {[&quot;Animation&quot;] = 24,[&quot;Audio&quot;] = 3,[&quot;BackAccessory&quot;] = 46,[&quot;Badge&quot;] = 21,[&quot;ClimbAnimation&quot;] = 48,[&quot;DeathAnimation&quot;] = 49,[&quot;Decal&quot;] = 13,[&quot;DressSkirtAccessory&quot;] = 72,[&quot;DynamicHead&quot;] = 79,[&quot;EarAccessory&quot;] = 57,[&quot;EmoteAnimation&quot;] = 61,[&quot;EyeAccessory&quot;] = 58,[&quot;EyebrowAccessory&quot;] = 76,[&quot;EyelashAccessory&quot;] = 77,[&quot;Face&quot;] = 18,[&quot;FaceAccessory&quot;] = 42,[&quot;FallAnimation&quot;] = 50,[&quot;FontFamily&quot;] = 73,[&quot;FrontAccessory&quot;] = 45,[&quot;GamePass&quot;] = 34,[&quot;Gear&quot;] = 19,[&quot;HairAccessory&quot;] = 41,[&quot;Hat&quot;] = 8,[&quot;Head&quot;] = 17,[&quot;IdleAnimation&quot;] = 51,[&quot;Image&quot;] = 1,[&quot;JacketAccessory&quot;] = 67,[&quot;JumpAnimation&quot;] = 52,[&quot;LeftArm&quot;] = 29,[&quot;LeftLeg&quot;] = 30,[&quot;LeftShoeAccessory&quot;] = 70,[&quot;Lua&quot;] = 5,[&quot;Mesh&quot;] = 4,[&quot;MeshPart&quot;] = 40,[&quot;Model&quot;] = 10,[&quot;MoodAnimation&quot;] = 78,[&quot;NeckAccessory&quot;] = 43,[&quot;Package&quot;] = 32,[&quot;Pants&quot;] = 12,[&quot;PantsAccessory&quot;] = 66,[&quot;Place&quot;] = 9,[&quot;Plugin&quot;] = 38,[&quot;PoseAnimation&quot;] = 56,[&quot;RightArm&quot;] = 28,[&quot;RightLeg&quot;] = 31,[&quot;RightShoeAccessory&quot;] = 71,[&quot;RunAnimation&quot;] = 53,[&quot;Shirt&quot;] = 11,[&quot;ShirtAccessory&quot;] = 65,[&quot;ShortsAccessory&quot;] = 69,[&quot;ShoulderAccessory&quot;] = 44,[&quot;SweaterAccessory&quot;] = 68,[&quot;SwimAnimation&quot;] = 54,[&quot;TShirt&quot;] = 2,[&quot;TShirtAccessory&quot;] = 64,[&quot;Torso&quot;] = 27,[&quot;Video&quot;] = 62,[&quot;WaistAccessory&quot;] = 47,[&quot;WalkAnimation&quot;] = 55,},},[&quot;AssetTypeVerification&quot;] = {[&quot;name&quot;] = &quot;AssetTypeVerification&quot;,[&quot;items&quot;] = {[&quot;Always&quot;] = 3,[&quot;ClientOnly&quot;] = 2,[&quot;Default&quot;] = 1,},},[&quot;AudioApiRollout&quot;] = {[&quot;name&quot;] = &quot;AudioApiRollout&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 1,[&quot;Disabled&quot;] = 0,[&quot;Enabled&quot;] = 2,},},[&quot;AudioChannelLayout&quot;] = {[&quot;name&quot;] = &quot;AudioChannelLayout&quot;,[&quot;items&quot;] = {[&quot;Mono&quot;] = 0,[&quot;Quad&quot;] = 2,[&quot;Stereo&quot;] = 1,[&quot;Surround_5&quot;] = 3,[&quot;Surround_5_1&quot;] = 4,[&quot;Surround_7_1&quot;] = 5,[&quot;Surround_7_1_4&quot;] = 6,},},[&quot;AudioFilterType&quot;] = {[&quot;name&quot;] = &quot;AudioFilterType&quot;,[&quot;items&quot;] = {[&quot;Bandpass&quot;] = 9,[&quot;HighShelf&quot;] = 2,[&quot;Highpass12dB&quot;] = 6,[&quot;Highpass24dB&quot;] = 7,[&quot;Highpass48dB&quot;] = 8,[&quot;LowShelf&quot;] = 1,[&quot;Lowpass12dB&quot;] = 3,[&quot;Lowpass24dB&quot;] = 4,[&quot;Lowpass48dB&quot;] = 5,[&quot;Notch&quot;] = 10,[&quot;Peak&quot;] = 0,},},[&quot;AudioSimulationFidelity&quot;] = {[&quot;name&quot;] = &quot;AudioSimulationFidelity&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 1,[&quot;None&quot;] = 0,},},[&quot;AudioSubType&quot;] = {[&quot;name&quot;] = &quot;AudioSubType&quot;,[&quot;items&quot;] = {[&quot;Music&quot;] = 1,[&quot;SoundEffect&quot;] = 2,},},[&quot;AudioWindowSize&quot;] = {[&quot;name&quot;] = &quot;AudioWindowSize&quot;,[&quot;items&quot;] = {[&quot;Large&quot;] = 2,[&quot;Medium&quot;] = 1,[&quot;Small&quot;] = 0,},},[&quot;AutoIndentRule&quot;] = {[&quot;name&quot;] = &quot;AutoIndentRule&quot;,[&quot;items&quot;] = {[&quot;Absolute&quot;] = 1,[&quot;Off&quot;] = 0,[&quot;Relative&quot;] = 2,},},[&quot;AutomaticSize&quot;] = {[&quot;name&quot;] = &quot;AutomaticSize&quot;,[&quot;items&quot;] = {[&quot;None&quot;] = 0,[&quot;X&quot;] = 1,[&quot;XY&quot;] = 3,[&quot;Y&quot;] = 2,},},[&quot;AvatarAssetType&quot;] = {[&quot;name&quot;] = &quot;AvatarAssetType&quot;,[&quot;items&quot;] = {[&quot;BackAccessory&quot;] = 46,[&quot;ClimbAnimation&quot;] = 48,[&quot;DressSkirtAccessory&quot;] = 72,[&quot;DynamicHead&quot;] = 79,[&quot;EmoteAnimation&quot;] = 61,[&quot;EyebrowAccessory&quot;] = 76,[&quot;EyelashAccessory&quot;] = 77,[&quot;Face&quot;] = 18,[&quot;FaceAccessory&quot;] = 42,[&quot;FallAnimation&quot;] = 50,[&quot;FrontAccessory&quot;] = 45,[&quot;Gear&quot;] = 19,[&quot;HairAccessory&quot;] = 41,[&quot;Hat&quot;] = 8,[&quot;Head&quot;] = 17,[&quot;IdleAnimation&quot;] = 51,[&quot;JacketAccessory&quot;] = 67,[&quot;JumpAnimation&quot;] = 52,[&quot;LeftArm&quot;] = 29,[&quot;LeftLeg&quot;] = 30,[&quot;LeftShoeAccessory&quot;] = 70,[&quot;MoodAnimation&quot;] = 78,[&quot;NeckAccessory&quot;] = 43,[&quot;Pants&quot;] = 12,[&quot;PantsAccessory&quot;] = 66,[&quot;RightArm&quot;] = 28,[&quot;RightLeg&quot;] = 31,[&quot;RightShoeAccessory&quot;] = 71,[&quot;RunAnimation&quot;] = 53,[&quot;Shirt&quot;] = 11,[&quot;ShirtAccessory&quot;] = 65,[&quot;ShortsAccessory&quot;] = 69,[&quot;ShoulderAccessory&quot;] = 44,[&quot;SweaterAccessory&quot;] = 68,[&quot;SwimAnimation&quot;] = 54,[&quot;TShirt&quot;] = 2,[&quot;TShirtAccessory&quot;] = 64,[&quot;Torso&quot;] = 27,[&quot;WaistAccessory&quot;] = 47,[&quot;WalkAnimation&quot;] = 55,},},[&quot;AvatarChatServiceFeature&quot;] = {[&quot;name&quot;] = &quot;AvatarChatServiceFeature&quot;,[&quot;items&quot;] = {[&quot;None&quot;] = 0,[&quot;PlaceAudio&quot;] = 4,[&quot;PlaceVideo&quot;] = 8,[&quot;UniverseAudio&quot;] = 1,[&quot;UniverseVideo&quot;] = 2,[&quot;UserAudio&quot;] = 32,[&quot;UserAudioEligible&quot;] = 16,[&quot;UserBanned&quot;] = 256,[&quot;UserVerifiedForVoice&quot;] = 512,[&quot;UserVideo&quot;] = 128,[&quot;UserVideoEligible&quot;] = 64,},},[&quot;AvatarContextMenuOption&quot;] = {[&quot;name&quot;] = &quot;AvatarContextMenuOption&quot;,[&quot;items&quot;] = {[&quot;Chat&quot;] = 1,[&quot;Emote&quot;] = 2,[&quot;Friend&quot;] = 0,[&quot;InspectMenu&quot;] = 3,},},[&quot;AvatarGenerationError&quot;] = {[&quot;name&quot;] = &quot;AvatarGenerationError&quot;,[&quot;items&quot;] = {[&quot;Canceled&quot;] = 3,[&quot;DownloadFailed&quot;] = 2,[&quot;JobNotFound&quot;] = 6,[&quot;None&quot;] = 0,[&quot;Offensive&quot;] = 4,[&quot;Timeout&quot;] = 5,[&quot;Unknown&quot;] = 1,},},[&quot;AvatarItemType&quot;] = {[&quot;name&quot;] = &quot;AvatarItemType&quot;,[&quot;items&quot;] = {[&quot;Asset&quot;] = 1,[&quot;Bundle&quot;] = 2,},},[&quot;AvatarPromptResult&quot;] = {[&quot;name&quot;] = &quot;AvatarPromptResult&quot;,[&quot;items&quot;] = {[&quot;Failed&quot;] = 3,[&quot;PermissionDenied&quot;] = 2,[&quot;Success&quot;] = 1,},},[&quot;AvatarThumbnailCustomizationType&quot;] = {[&quot;name&quot;] = &quot;AvatarThumbnailCustomizationType&quot;,[&quot;items&quot;] = {[&quot;Closeup&quot;] = 1,[&quot;FullBody&quot;] = 2,},},[&quot;AvatarUnificationMode&quot;] = {[&quot;name&quot;] = &quot;AvatarUnificationMode&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;Axis&quot;] = {[&quot;name&quot;] = &quot;Axis&quot;,[&quot;items&quot;] = {[&quot;X&quot;] = 0,[&quot;Y&quot;] = 1,[&quot;Z&quot;] = 2,},},[&quot;BenefitType&quot;] = {[&quot;name&quot;] = &quot;BenefitType&quot;,[&quot;items&quot;] = {[&quot;AvatarAsset&quot;] = 1,[&quot;AvatarBundle&quot;] = 2,[&quot;DeveloperProduct&quot;] = 0,},},[&quot;BinType&quot;] = {[&quot;name&quot;] = &quot;BinType&quot;,[&quot;items&quot;] = {[&quot;Clone&quot;] = 3,[&quot;GameTool&quot;] = 1,[&quot;Grab&quot;] = 2,[&quot;Hammer&quot;] = 4,[&quot;Script&quot;] = 0,},},[&quot;BodyPart&quot;] = {[&quot;name&quot;] = &quot;BodyPart&quot;,[&quot;items&quot;] = {[&quot;Head&quot;] = 0,[&quot;LeftArm&quot;] = 2,[&quot;LeftLeg&quot;] = 4,[&quot;RightArm&quot;] = 3,[&quot;RightLeg&quot;] = 5,[&quot;Torso&quot;] = 1,},},[&quot;BodyPartR15&quot;] = {[&quot;name&quot;] = &quot;BodyPartR15&quot;,[&quot;items&quot;] = {[&quot;Head&quot;] = 0,[&quot;LeftFoot&quot;] = 3,[&quot;LeftHand&quot;] = 9,[&quot;LeftLowerArm&quot;] = 10,[&quot;LeftLowerLeg&quot;] = 4,[&quot;LeftUpperArm&quot;] = 11,[&quot;LeftUpperLeg&quot;] = 5,[&quot;LowerTorso&quot;] = 2,[&quot;RightFoot&quot;] = 6,[&quot;RightHand&quot;] = 12,[&quot;RightLowerArm&quot;] = 13,[&quot;RightLowerLeg&quot;] = 7,[&quot;RightUpperArm&quot;] = 14,[&quot;RightUpperLeg&quot;] = 8,[&quot;RootPart&quot;] = 15,[&quot;Unknown&quot;] = 17,[&quot;UpperTorso&quot;] = 1,},},[&quot;BorderMode&quot;] = {[&quot;name&quot;] = &quot;BorderMode&quot;,[&quot;items&quot;] = {[&quot;Inset&quot;] = 2,[&quot;Middle&quot;] = 1,[&quot;Outline&quot;] = 0,},},[&quot;BreakReason&quot;] = {[&quot;name&quot;] = &quot;BreakReason&quot;,[&quot;items&quot;] = {[&quot;Error&quot;] = 1,[&quot;Other&quot;] = 0,[&quot;SpecialBreakpoint&quot;] = 2,[&quot;UserBreakpoint&quot;] = 3,},},[&quot;BreakpointRemoveReason&quot;] = {[&quot;name&quot;] = &quot;BreakpointRemoveReason&quot;,[&quot;items&quot;] = {[&quot;Requested&quot;] = 0,[&quot;ScriptChanged&quot;] = 1,[&quot;ScriptRemoved&quot;] = 2,},},[&quot;BulkMoveMode&quot;] = {[&quot;name&quot;] = &quot;BulkMoveMode&quot;,[&quot;items&quot;] = {[&quot;FireAllEvents&quot;] = 0,[&quot;FireCFrameChanged&quot;] = 1,},},[&quot;BundleType&quot;] = {[&quot;name&quot;] = &quot;BundleType&quot;,[&quot;items&quot;] = {[&quot;Animations&quot;] = 2,[&quot;BodyParts&quot;] = 1,[&quot;DynamicHead&quot;] = 4,[&quot;DynamicHeadAvatar&quot;] = 5,[&quot;Shoes&quot;] = 3,},},[&quot;Button&quot;] = {[&quot;name&quot;] = &quot;Button&quot;,[&quot;items&quot;] = {[&quot;Dismount&quot;] = 8,[&quot;Jump&quot;] = 32,},},[&quot;ButtonStyle&quot;] = {[&quot;name&quot;] = &quot;ButtonStyle&quot;,[&quot;items&quot;] = {[&quot;Custom&quot;] = 0,[&quot;RobloxButton&quot;] = 2,[&quot;RobloxButtonDefault&quot;] = 1,[&quot;RobloxRoundButton&quot;] = 3,[&quot;RobloxRoundDefaultButton&quot;] = 4,[&quot;RobloxRoundDropdownButton&quot;] = 5,},},[&quot;CageType&quot;] = {[&quot;name&quot;] = &quot;CageType&quot;,[&quot;items&quot;] = {[&quot;Inner&quot;] = 0,[&quot;Outer&quot;] = 1,},},[&quot;CameraMode&quot;] = {[&quot;name&quot;] = &quot;CameraMode&quot;,[&quot;items&quot;] = {[&quot;Classic&quot;] = 0,[&quot;LockFirstPerson&quot;] = 1,},},[&quot;CameraPanMode&quot;] = {[&quot;name&quot;] = &quot;CameraPanMode&quot;,[&quot;items&quot;] = {[&quot;Classic&quot;] = 0,[&quot;EdgeBump&quot;] = 1,},},[&quot;CameraSpeedAdjustBinding&quot;] = {[&quot;name&quot;] = &quot;CameraSpeedAdjustBinding&quot;,[&quot;items&quot;] = {[&quot;AltScroll&quot;] = 2,[&quot;None&quot;] = 0,[&quot;RmbScroll&quot;] = 1,},},[&quot;CameraType&quot;] = {[&quot;name&quot;] = &quot;CameraType&quot;,[&quot;items&quot;] = {[&quot;Attach&quot;] = 1,[&quot;Custom&quot;] = 5,[&quot;Fixed&quot;] = 0,[&quot;Follow&quot;] = 4,[&quot;Orbital&quot;] = 7,[&quot;Scriptable&quot;] = 6,[&quot;Track&quot;] = 3,[&quot;Watch&quot;] = 2,},},[&quot;CatalogCategoryFilter&quot;] = {[&quot;name&quot;] = &quot;CatalogCategoryFilter&quot;,[&quot;items&quot;] = {[&quot;Collectibles&quot;] = 3,[&quot;CommunityCreations&quot;] = 4,[&quot;Featured&quot;] = 2,[&quot;None&quot;] = 1,[&quot;Premium&quot;] = 5,[&quot;Recommended&quot;] = 6,},},[&quot;CatalogSortAggregation&quot;] = {[&quot;name&quot;] = &quot;CatalogSortAggregation&quot;,[&quot;items&quot;] = {[&quot;AllTime&quot;] = 6,[&quot;Past12Hours&quot;] = 1,[&quot;Past3Days&quot;] = 3,[&quot;PastDay&quot;] = 2,[&quot;PastMonth&quot;] = 5,[&quot;PastWeek&quot;] = 4,},},[&quot;CatalogSortType&quot;] = {[&quot;name&quot;] = &quot;CatalogSortType&quot;,[&quot;items&quot;] = {[&quot;Bestselling&quot;] = 7,[&quot;MostFavorited&quot;] = 5,[&quot;PriceHighToLow&quot;] = 2,[&quot;PriceLowToHigh&quot;] = 3,[&quot;RecentlyCreated&quot;] = 6,[&quot;Relevance&quot;] = 1,},},[&quot;CellBlock&quot;] = {[&quot;name&quot;] = &quot;CellBlock&quot;,[&quot;items&quot;] = {[&quot;CornerWedge&quot;] = 2,[&quot;HorizontalWedge&quot;] = 4,[&quot;InverseCornerWedge&quot;] = 3,[&quot;Solid&quot;] = 0,[&quot;VerticalWedge&quot;] = 1,},},[&quot;CellMaterial&quot;] = {[&quot;name&quot;] = &quot;CellMaterial&quot;,[&quot;items&quot;] = {[&quot;Aluminum&quot;] = 7,[&quot;Asphalt&quot;] = 5,[&quot;BluePlastic&quot;] = 16,[&quot;Brick&quot;] = 3,[&quot;Cement&quot;] = 14,[&quot;CinderBlock&quot;] = 12,[&quot;Empty&quot;] = 0,[&quot;Gold&quot;] = 8,[&quot;Granite&quot;] = 4,[&quot;Grass&quot;] = 1,[&quot;Gravel&quot;] = 11,[&quot;Iron&quot;] = 6,[&quot;MossyStone&quot;] = 13,[&quot;RedPlastic&quot;] = 15,[&quot;Sand&quot;] = 2,[&quot;Water&quot;] = 17,[&quot;WoodLog&quot;] = 10,[&quot;WoodPlank&quot;] = 9,},},[&quot;CellOrientation&quot;] = {[&quot;name&quot;] = &quot;CellOrientation&quot;,[&quot;items&quot;] = {[&quot;NegX&quot;] = 3,[&quot;NegZ&quot;] = 0,[&quot;X&quot;] = 1,[&quot;Z&quot;] = 2,},},[&quot;CenterDialogType&quot;] = {[&quot;name&quot;] = &quot;CenterDialogType&quot;,[&quot;items&quot;] = {[&quot;ModalDialog&quot;] = 3,[&quot;PlayerInitiatedDialog&quot;] = 2,[&quot;QuitDialog&quot;] = 4,[&quot;UnsolicitedDialog&quot;] = 1,},},[&quot;CharacterControlMode&quot;] = {[&quot;name&quot;] = &quot;CharacterControlMode&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Legacy&quot;] = 1,[&quot;LuaCharacterController&quot;] = 3,[&quot;NoCharacterController&quot;] = 2,},},[&quot;ChatCallbackType&quot;] = {[&quot;name&quot;] = &quot;ChatCallbackType&quot;,[&quot;items&quot;] = {[&quot;OnClientFormattingMessage&quot;] = 3,[&quot;OnClientSendingMessage&quot;] = 2,[&quot;OnCreatingChatWindow&quot;] = 1,[&quot;OnServerReceivingMessage&quot;] = 17,},},[&quot;ChatColor&quot;] = {[&quot;name&quot;] = &quot;ChatColor&quot;,[&quot;items&quot;] = {[&quot;Blue&quot;] = 0,[&quot;Green&quot;] = 1,[&quot;Red&quot;] = 2,[&quot;White&quot;] = 3,},},[&quot;ChatMode&quot;] = {[&quot;name&quot;] = &quot;ChatMode&quot;,[&quot;items&quot;] = {[&quot;Menu&quot;] = 0,[&quot;TextAndMenu&quot;] = 1,},},[&quot;ChatPrivacyMode&quot;] = {[&quot;name&quot;] = &quot;ChatPrivacyMode&quot;,[&quot;items&quot;] = {[&quot;AllUsers&quot;] = 0,[&quot;Friends&quot;] = 2,[&quot;NoOne&quot;] = 1,},},[&quot;ChatRestrictionStatus&quot;] = {[&quot;name&quot;] = &quot;ChatRestrictionStatus&quot;,[&quot;items&quot;] = {[&quot;NotRestricted&quot;] = 1,[&quot;Restricted&quot;] = 2,[&quot;Unknown&quot;] = 0,},},[&quot;ChatStyle&quot;] = {[&quot;name&quot;] = &quot;ChatStyle&quot;,[&quot;items&quot;] = {[&quot;Bubble&quot;] = 1,[&quot;Classic&quot;] = 0,[&quot;ClassicAndBubble&quot;] = 2,},},[&quot;ChatVersion&quot;] = {[&quot;name&quot;] = &quot;ChatVersion&quot;,[&quot;items&quot;] = {[&quot;LegacyChatService&quot;] = 0,[&quot;TextChatService&quot;] = 1,},},[&quot;ClientAnimatorThrottlingMode&quot;] = {[&quot;name&quot;] = &quot;ClientAnimatorThrottlingMode&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;CloseReason&quot;] = {[&quot;name&quot;] = &quot;CloseReason&quot;,[&quot;items&quot;] = {[&quot;DeveloperShutdown&quot;] = 2,[&quot;DeveloperUpdate&quot;] = 3,[&quot;OutOfMemory&quot;] = 5,[&quot;RobloxMaintenance&quot;] = 1,[&quot;ServerEmpty&quot;] = 4,[&quot;Unknown&quot;] = 0,},},[&quot;CollaboratorStatus&quot;] = {[&quot;name&quot;] = &quot;CollaboratorStatus&quot;,[&quot;items&quot;] = {[&quot;Editing3D&quot;] = 1,[&quot;None&quot;] = 0,[&quot;PrivateScripting&quot;] = 3,[&quot;Scripting&quot;] = 2,},},[&quot;CollisionFidelity&quot;] = {[&quot;name&quot;] = &quot;CollisionFidelity&quot;,[&quot;items&quot;] = {[&quot;Box&quot;] = 2,[&quot;Default&quot;] = 0,[&quot;Hull&quot;] = 1,[&quot;PreciseConvexDecomposition&quot;] = 3,},},[&quot;CommandPermission&quot;] = {[&quot;name&quot;] = &quot;CommandPermission&quot;,[&quot;items&quot;] = {[&quot;LocalUser&quot;] = 1,[&quot;Plugin&quot;] = 0,},},[&quot;CompileTarget&quot;] = {[&quot;name&quot;] = &quot;CompileTarget&quot;,[&quot;items&quot;] = {[&quot;Client&quot;] = 0,[&quot;CoreScript&quot;] = 1,[&quot;CoreScriptRaw&quot;] = 3,[&quot;Studio&quot;] = 2,},},[&quot;CompletionAcceptanceBehavior&quot;] = {[&quot;name&quot;] = &quot;CompletionAcceptanceBehavior&quot;,[&quot;items&quot;] = {[&quot;Insert&quot;] = 0,[&quot;InsertOnEnterReplaceOnTab&quot;] = 3,[&quot;Replace&quot;] = 1,[&quot;ReplaceOnEnterInsertOnTab&quot;] = 2,},},[&quot;CompletionItemKind&quot;] = {[&quot;name&quot;] = &quot;CompletionItemKind&quot;,[&quot;items&quot;] = {[&quot;Class&quot;] = 7,[&quot;Color&quot;] = 16,[&quot;Constant&quot;] = 21,[&quot;Constructor&quot;] = 4,[&quot;Enum&quot;] = 13,[&quot;EnumMember&quot;] = 20,[&quot;Event&quot;] = 23,[&quot;Field&quot;] = 5,[&quot;File&quot;] = 17,[&quot;Folder&quot;] = 19,[&quot;Function&quot;] = 3,[&quot;Interface&quot;] = 8,[&quot;Keyword&quot;] = 14,[&quot;Method&quot;] = 2,[&quot;Module&quot;] = 9,[&quot;Operator&quot;] = 24,[&quot;Property&quot;] = 10,[&quot;Reference&quot;] = 18,[&quot;Snippet&quot;] = 15,[&quot;Struct&quot;] = 22,[&quot;Text&quot;] = 1,[&quot;TypeParameter&quot;] = 25,[&quot;Unit&quot;] = 11,[&quot;Value&quot;] = 12,[&quot;Variable&quot;] = 6,},},[&quot;CompletionItemTag&quot;] = {[&quot;name&quot;] = &quot;CompletionItemTag&quot;,[&quot;items&quot;] = {[&quot;AddParens&quot;] = 6,[&quot;ClientServerBoundaryViolation&quot;] = 9,[&quot;CommandLinePermissions&quot;] = 4,[&quot;Deprecated&quot;] = 1,[&quot;IncorrectIndexType&quot;] = 2,[&quot;Invalidated&quot;] = 10,[&quot;PluginPermissions&quot;] = 3,[&quot;PutCursorBeforeEnd&quot;] = 11,[&quot;PutCursorInParens&quot;] = 7,[&quot;RobloxPermissions&quot;] = 5,[&quot;TypeCorrect&quot;] = 8,},},[&quot;CompletionTriggerKind&quot;] = {[&quot;name&quot;] = &quot;CompletionTriggerKind&quot;,[&quot;items&quot;] = {[&quot;Invoked&quot;] = 1,[&quot;TriggerCharacter&quot;] = 2,[&quot;TriggerForIncompleteCompletions&quot;] = 3,},},[&quot;ComputerCameraMovementMode&quot;] = {[&quot;name&quot;] = &quot;ComputerCameraMovementMode&quot;,[&quot;items&quot;] = {[&quot;CameraToggle&quot;] = 4,[&quot;Classic&quot;] = 1,[&quot;Default&quot;] = 0,[&quot;Follow&quot;] = 2,[&quot;Orbital&quot;] = 3,},},[&quot;ComputerMovementMode&quot;] = {[&quot;name&quot;] = &quot;ComputerMovementMode&quot;,[&quot;items&quot;] = {[&quot;ClickToMove&quot;] = 2,[&quot;Default&quot;] = 0,[&quot;KeyboardMouse&quot;] = 1,},},[&quot;ConfigSnapshotErrorState&quot;] = {[&quot;name&quot;] = &quot;ConfigSnapshotErrorState&quot;,[&quot;items&quot;] = {[&quot;LoadFailed&quot;] = 1,[&quot;None&quot;] = 0,},},[&quot;ConnectionError&quot;] = {[&quot;name&quot;] = &quot;ConnectionError&quot;,[&quot;items&quot;] = {[&quot;AndroidAnticheatKick&quot;] = 304,[&quot;AndroidEmulatorKick&quot;] = 305,[&quot;DisconnectBadhash&quot;] = 257,[&quot;DisconnectBlockedIP&quot;] = 282,[&quot;DisconnectBySecurityPolicy&quot;] = 281,[&quot;DisconnectClientFailure&quot;] = 284,[&quot;DisconnectClientRequest&quot;] = 285,[&quot;DisconnectCloudEditKick&quot;] = 270,[&quot;DisconnectCollaboratorPermissionRevoked&quot;] = 294,[&quot;DisconnectCollaboratorUnderage&quot;] = 295,[&quot;DisconnectConnectionLost&quot;] = 277,[&quot;DisconnectDevMaintenance&quot;] = 274,[&quot;DisconnectDuplicatePlayer&quot;] = 264,[&quot;DisconnectDuplicateTicket&quot;] = 265,[&quot;DisconnectErrors&quot;] = 256,[&quot;DisconnectEvicted&quot;] = 273,[&quot;DisconnectHashTimeout&quot;] = 269,[&quot;DisconnectIdle&quot;] = 278,[&quot;DisconnectIllegalTeleport&quot;] = 263,[&quot;DisconnectLuaKick&quot;] = 267,[&quot;DisconnectModeratedGame&quot;] = 287,[&quot;DisconnectNewSecurityKeyMismatch&quot;] = 272,[&quot;DisconnectOnRemoteSysStats&quot;] = 268,[&quot;DisconnectOutOfMemoryKeepPlayingLeave&quot;] = 292,[&quot;DisconnectPlayerless&quot;] = 271,[&quot;DisconnectPrivateServerKickout&quot;] = 286,[&quot;DisconnectProtocolMismatch&quot;] = 259,[&quot;DisconnectRaknetErrors&quot;] = 279,[&quot;DisconnectReceivePacketError&quot;] = 260,[&quot;DisconnectReceivePacketStreamError&quot;] = 261,[&quot;DisconnectRejoin&quot;] = 276,[&quot;DisconnectRobloxMaintenance&quot;] = 275,[&quot;DisconnectRomarkEndOfTest&quot;] = 293,[&quot;DisconnectSecurityKeyMismatch&quot;] = 258,[&quot;DisconnectSendPacketError&quot;] = 262,[&quot;DisconnectTimeout&quot;] = 266,[&quot;DisconnectWrongVersion&quot;] = 280,[&quot;NetworkInternal&quot;] = 296,[&quot;NetworkMisbehavior&quot;] = 299,[&quot;NetworkSecurity&quot;] = 300,[&quot;NetworkSend&quot;] = 297,[&quot;NetworkTimeout&quot;] = 298,[&quot;OK&quot;] = 0,[&quot;PhantomFreeze&quot;] = 303,[&quot;PlacelaunchCreatorBan&quot;] = 600,[&quot;PlacelaunchCustomMessage&quot;] = 610,[&quot;PlacelaunchDisabled&quot;] = 515,[&quot;PlacelaunchError&quot;] = 516,[&quot;PlacelaunchErrors&quot;] = 512,[&quot;PlacelaunchFlooded&quot;] = 525,[&quot;PlacelaunchGameEnded&quot;] = 517,[&quot;PlacelaunchGameFull&quot;] = 518,[&quot;PlacelaunchHashException&quot;] = 527,[&quot;PlacelaunchHashExpired&quot;] = 526,[&quot;PlacelaunchHttpError&quot;] = 529,[&quot;PlacelaunchOtherError&quot;] = 611,[&quot;PlacelaunchPartyCannotFit&quot;] = 528,[&quot;PlacelaunchRestricted&quot;] = 523,[&quot;PlacelaunchUnauthorized&quot;] = 524,[&quot;PlacelaunchUserLeft&quot;] = 522,[&quot;PlacelaunchUserPrivacyUnauthorized&quot;] = 533,[&quot;PlayerRemoved&quot;] = 291,[&quot;ReplacementReady&quot;] = 301,[&quot;ReplicatorTimeout&quot;] = 290,[&quot;ServerEmpty&quot;] = 302,[&quot;ServerShutdown&quot;] = 288,[&quot;TeleportErrors&quot;] = 768,[&quot;TeleportFailure&quot;] = 769,[&quot;TeleportFlooded&quot;] = 774,[&quot;TeleportGameEnded&quot;] = 771,[&quot;TeleportGameFull&quot;] = 772,[&quot;TeleportGameNotFound&quot;] = 770,[&quot;TeleportIsTeleporting&quot;] = 775,[&quot;TeleportUnauthorized&quot;] = 773,[&quot;Unknown&quot;] = 1,},},[&quot;ConnectionState&quot;] = {[&quot;name&quot;] = &quot;ConnectionState&quot;,[&quot;items&quot;] = {[&quot;Connected&quot;] = 0,[&quot;Disconnected&quot;] = 1,},},[&quot;ContentSourceType&quot;] = {[&quot;name&quot;] = &quot;ContentSourceType&quot;,[&quot;items&quot;] = {[&quot;None&quot;] = 0,[&quot;Object&quot;] = 2,[&quot;Uri&quot;] = 1,},},[&quot;ContextActionPriority&quot;] = {[&quot;name&quot;] = &quot;ContextActionPriority&quot;,[&quot;items&quot;] = {[&quot;High&quot;] = 3000,[&quot;Low&quot;] = 1000,[&quot;Medium&quot;] = 2000,},},[&quot;ContextActionResult&quot;] = {[&quot;name&quot;] = &quot;ContextActionResult&quot;,[&quot;items&quot;] = {[&quot;Pass&quot;] = 1,[&quot;Sink&quot;] = 0,},},[&quot;ControlMode&quot;] = {[&quot;name&quot;] = &quot;ControlMode&quot;,[&quot;items&quot;] = {[&quot;Classic&quot;] = 0,[&quot;MouseLockSwitch&quot;] = 1,},},[&quot;CoreGuiType&quot;] = {[&quot;name&quot;] = &quot;CoreGuiType&quot;,[&quot;items&quot;] = {[&quot;All&quot;] = 4,[&quot;Backpack&quot;] = 2,[&quot;Captures&quot;] = 7,[&quot;Chat&quot;] = 3,[&quot;EmotesMenu&quot;] = 5,[&quot;Health&quot;] = 1,[&quot;PlayerList&quot;] = 0,[&quot;SelfView&quot;] = 6,},},[&quot;CreateAssetResult&quot;] = {[&quot;name&quot;] = &quot;CreateAssetResult&quot;,[&quot;items&quot;] = {[&quot;PermissionDenied&quot;] = 2,[&quot;Success&quot;] = 1,[&quot;Unknown&quot;] = 4,[&quot;UploadFailed&quot;] = 3,},},[&quot;CreateOutfitFailure&quot;] = {[&quot;name&quot;] = &quot;CreateOutfitFailure&quot;,[&quot;items&quot;] = {[&quot;InvalidName&quot;] = 1,[&quot;Other&quot;] = 3,[&quot;OutfitLimitReached&quot;] = 2,},},[&quot;CreatorType&quot;] = {[&quot;name&quot;] = &quot;CreatorType&quot;,[&quot;items&quot;] = {[&quot;Group&quot;] = 1,[&quot;User&quot;] = 0,},},[&quot;CreatorTypeFilter&quot;] = {[&quot;name&quot;] = &quot;CreatorTypeFilter&quot;,[&quot;items&quot;] = {[&quot;All&quot;] = 2,[&quot;Group&quot;] = 1,[&quot;User&quot;] = 0,},},[&quot;CurrencyType&quot;] = {[&quot;name&quot;] = &quot;CurrencyType&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Robux&quot;] = 1,[&quot;Tix&quot;] = 2,},},[&quot;CustomCameraMode&quot;] = {[&quot;name&quot;] = &quot;CustomCameraMode&quot;,[&quot;items&quot;] = {[&quot;Classic&quot;] = 1,[&quot;Default&quot;] = 0,[&quot;Follow&quot;] = 2,},},[&quot;DataStoreRequestType&quot;] = {[&quot;name&quot;] = &quot;DataStoreRequestType&quot;,[&quot;items&quot;] = {[&quot;GetAsync&quot;] = 0,[&quot;GetSortedAsync&quot;] = 3,[&quot;GetVersionAsync&quot;] = 7,[&quot;ListAsync&quot;] = 6,[&quot;OnUpdate&quot;] = 5,[&quot;RemoveVersionAsync&quot;] = 8,[&quot;SetIncrementAsync&quot;] = 1,[&quot;SetIncrementSortedAsync&quot;] = 4,[&quot;UpdateAsync&quot;] = 2,},},[&quot;DebuggerEndReason&quot;] = {[&quot;name&quot;] = &quot;DebuggerEndReason&quot;,[&quot;items&quot;] = {[&quot;ClientRequest&quot;] = 0,[&quot;ConfigurationFailed&quot;] = 6,[&quot;Disconnected&quot;] = 3,[&quot;InvalidHost&quot;] = 2,[&quot;RpcError&quot;] = 7,[&quot;ServerProtocolMismatch&quot;] = 5,[&quot;ServerShutdown&quot;] = 4,[&quot;Timeout&quot;] = 1,},},[&quot;DebuggerExceptionBreakMode&quot;] = {[&quot;name&quot;] = &quot;DebuggerExceptionBreakMode&quot;,[&quot;items&quot;] = {[&quot;Always&quot;] = 1,[&quot;Never&quot;] = 0,[&quot;Unhandled&quot;] = 2,},},[&quot;DebuggerFrameType&quot;] = {[&quot;name&quot;] = &quot;DebuggerFrameType&quot;,[&quot;items&quot;] = {[&quot;C&quot;] = 0,[&quot;Lua&quot;] = 1,},},[&quot;DebuggerPauseReason&quot;] = {[&quot;name&quot;] = &quot;DebuggerPauseReason&quot;,[&quot;items&quot;] = {[&quot;Breakpoint&quot;] = 2,[&quot;Entrypoint&quot;] = 5,[&quot;Exception&quot;] = 3,[&quot;Requested&quot;] = 1,[&quot;SingleStep&quot;] = 4,[&quot;Unknown&quot;] = 0,},},[&quot;DebuggerStatus&quot;] = {[&quot;name&quot;] = &quot;DebuggerStatus&quot;,[&quot;items&quot;] = {[&quot;ConnectionClosed&quot;] = 8,[&quot;ConnectionLost&quot;] = 2,[&quot;InternalError&quot;] = 4,[&quot;InvalidArgument&quot;] = 7,[&quot;InvalidResponse&quot;] = 3,[&quot;InvalidState&quot;] = 5,[&quot;RpcError&quot;] = 6,[&quot;Success&quot;] = 0,[&quot;Timeout&quot;] = 1,},},[&quot;DevCameraOcclusionMode&quot;] = {[&quot;name&quot;] = &quot;DevCameraOcclusionMode&quot;,[&quot;items&quot;] = {[&quot;Invisicam&quot;] = 1,[&quot;Zoom&quot;] = 0,},},[&quot;DevComputerCameraMovementMode&quot;] = {[&quot;name&quot;] = &quot;DevComputerCameraMovementMode&quot;,[&quot;items&quot;] = {[&quot;CameraToggle&quot;] = 4,[&quot;Classic&quot;] = 1,[&quot;Follow&quot;] = 2,[&quot;Orbital&quot;] = 3,[&quot;UserChoice&quot;] = 0,},},[&quot;DevComputerMovementMode&quot;] = {[&quot;name&quot;] = &quot;DevComputerMovementMode&quot;,[&quot;items&quot;] = {[&quot;ClickToMove&quot;] = 2,[&quot;KeyboardMouse&quot;] = 1,[&quot;Scriptable&quot;] = 3,[&quot;UserChoice&quot;] = 0,},},[&quot;DevTouchCameraMovementMode&quot;] = {[&quot;name&quot;] = &quot;DevTouchCameraMovementMode&quot;,[&quot;items&quot;] = {[&quot;Classic&quot;] = 1,[&quot;Follow&quot;] = 2,[&quot;Orbital&quot;] = 3,[&quot;UserChoice&quot;] = 0,},},[&quot;DevTouchMovementMode&quot;] = {[&quot;name&quot;] = &quot;DevTouchMovementMode&quot;,[&quot;items&quot;] = {[&quot;ClickToMove&quot;] = 4,[&quot;DPad&quot;] = 2,[&quot;DynamicThumbstick&quot;] = 6,[&quot;Scriptable&quot;] = 5,[&quot;Thumbpad&quot;] = 3,[&quot;Thumbstick&quot;] = 1,[&quot;UserChoice&quot;] = 0,},},[&quot;DeveloperMemoryTag&quot;] = {[&quot;name&quot;] = &quot;DeveloperMemoryTag&quot;,[&quot;items&quot;] = {[&quot;Animation&quot;] = 22,[&quot;GeometryCSG&quot;] = 24,[&quot;GraphicsMeshParts&quot;] = 10,[&quot;GraphicsParticles&quot;] = 11,[&quot;GraphicsParts&quot;] = 12,[&quot;GraphicsSolidModels&quot;] = 8,[&quot;GraphicsSpatialHash&quot;] = 13,[&quot;GraphicsTerrain&quot;] = 14,[&quot;GraphicsTexture&quot;] = 15,[&quot;GraphicsTextureCharacter&quot;] = 16,[&quot;Gui&quot;] = 21,[&quot;HttpCache&quot;] = 1,[&quot;Instances&quot;] = 2,[&quot;Internal&quot;] = 0,[&quot;LuaHeap&quot;] = 4,[&quot;Navigation&quot;] = 23,[&quot;PhysicsCollision&quot;] = 6,[&quot;PhysicsParts&quot;] = 7,[&quot;Script&quot;] = 5,[&quot;Signals&quot;] = 3,[&quot;Sounds&quot;] = 17,[&quot;StreamingSounds&quot;] = 18,[&quot;TerrainVoxels&quot;] = 19,},},[&quot;DeviceFeatureType&quot;] = {[&quot;name&quot;] = &quot;DeviceFeatureType&quot;,[&quot;items&quot;] = {[&quot;DeviceCapture&quot;] = 0,},},[&quot;DeviceForm&quot;] = {[&quot;name&quot;] = &quot;DeviceForm&quot;,[&quot;items&quot;] = {[&quot;Console&quot;] = 0,[&quot;Desktop&quot;] = 3,[&quot;Phone&quot;] = 1,[&quot;Tablet&quot;] = 2,[&quot;VR&quot;] = 4,},},[&quot;DeviceLevel&quot;] = {[&quot;name&quot;] = &quot;DeviceLevel&quot;,[&quot;items&quot;] = {[&quot;High&quot;] = 2,[&quot;Low&quot;] = 0,[&quot;Medium&quot;] = 1,},},[&quot;DeviceType&quot;] = {[&quot;name&quot;] = &quot;DeviceType&quot;,[&quot;items&quot;] = {[&quot;Desktop&quot;] = 1,[&quot;Phone&quot;] = 3,[&quot;Tablet&quot;] = 2,[&quot;Unknown&quot;] = 0,},},[&quot;DialogBehaviorType&quot;] = {[&quot;name&quot;] = &quot;DialogBehaviorType&quot;,[&quot;items&quot;] = {[&quot;MultiplePlayers&quot;] = 1,[&quot;SinglePlayer&quot;] = 0,},},[&quot;DialogPurpose&quot;] = {[&quot;name&quot;] = &quot;DialogPurpose&quot;,[&quot;items&quot;] = {[&quot;Help&quot;] = 1,[&quot;Quest&quot;] = 0,[&quot;Shop&quot;] = 2,},},[&quot;DialogTone&quot;] = {[&quot;name&quot;] = &quot;DialogTone&quot;,[&quot;items&quot;] = {[&quot;Enemy&quot;] = 2,[&quot;Friendly&quot;] = 1,[&quot;Neutral&quot;] = 0,},},[&quot;DominantAxis&quot;] = {[&quot;name&quot;] = &quot;DominantAxis&quot;,[&quot;items&quot;] = {[&quot;Height&quot;] = 1,[&quot;Width&quot;] = 0,},},[&quot;DraftStatusCode&quot;] = {[&quot;name&quot;] = &quot;DraftStatusCode&quot;,[&quot;items&quot;] = {[&quot;DraftCommitted&quot;] = 3,[&quot;DraftOutdated&quot;] = 1,[&quot;OK&quot;] = 0,[&quot;ScriptRemoved&quot;] = 2,},},[&quot;DragDetectorDragStyle&quot;] = {[&quot;name&quot;] = &quot;DragDetectorDragStyle&quot;,[&quot;items&quot;] = {[&quot;BestForDevice&quot;] = 8,[&quot;RotateAxis&quot;] = 5,[&quot;RotateTrackball&quot;] = 6,[&quot;Scriptable&quot;] = 7,[&quot;TranslateLine&quot;] = 0,[&quot;TranslateLineOrPlane&quot;] = 3,[&quot;TranslatePlane&quot;] = 1,[&quot;TranslatePlaneOrLine&quot;] = 2,[&quot;TranslateViewPlane&quot;] = 4,},},[&quot;DragDetectorPermissionPolicy&quot;] = {[&quot;name&quot;] = &quot;DragDetectorPermissionPolicy&quot;,[&quot;items&quot;] = {[&quot;Everybody&quot;] = 1,[&quot;Nobody&quot;] = 0,[&quot;Scriptable&quot;] = 2,},},[&quot;DragDetectorResponseStyle&quot;] = {[&quot;name&quot;] = &quot;DragDetectorResponseStyle&quot;,[&quot;items&quot;] = {[&quot;Custom&quot;] = 2,[&quot;Geometric&quot;] = 0,[&quot;Physical&quot;] = 1,},},[&quot;DraggerCoordinateSpace&quot;] = {[&quot;name&quot;] = &quot;DraggerCoordinateSpace&quot;,[&quot;items&quot;] = {[&quot;Object&quot;] = 0,[&quot;World&quot;] = 1,},},[&quot;DraggerMovementMode&quot;] = {[&quot;name&quot;] = &quot;DraggerMovementMode&quot;,[&quot;items&quot;] = {[&quot;Geometric&quot;] = 0,[&quot;Physical&quot;] = 1,},},[&quot;DraggingScrollBar&quot;] = {[&quot;name&quot;] = &quot;DraggingScrollBar&quot;,[&quot;items&quot;] = {[&quot;Horizontal&quot;] = 1,[&quot;None&quot;] = 0,[&quot;Vertical&quot;] = 2,},},[&quot;EasingDirection&quot;] = {[&quot;name&quot;] = &quot;EasingDirection&quot;,[&quot;items&quot;] = {[&quot;In&quot;] = 0,[&quot;InOut&quot;] = 2,[&quot;Out&quot;] = 1,},},[&quot;EasingStyle&quot;] = {[&quot;name&quot;] = &quot;EasingStyle&quot;,[&quot;items&quot;] = {[&quot;Back&quot;] = 2,[&quot;Bounce&quot;] = 6,[&quot;Circular&quot;] = 9,[&quot;Cubic&quot;] = 10,[&quot;Elastic&quot;] = 7,[&quot;Exponential&quot;] = 8,[&quot;Linear&quot;] = 0,[&quot;Quad&quot;] = 3,[&quot;Quart&quot;] = 4,[&quot;Quint&quot;] = 5,[&quot;Sine&quot;] = 1,},},[&quot;EditableStatus&quot;] = {[&quot;name&quot;] = &quot;EditableStatus&quot;,[&quot;items&quot;] = {[&quot;Allowed&quot;] = 1,[&quot;Disallowed&quot;] = 2,[&quot;Unknown&quot;] = 0,},},[&quot;ElasticBehavior&quot;] = {[&quot;name&quot;] = &quot;ElasticBehavior&quot;,[&quot;items&quot;] = {[&quot;Always&quot;] = 1,[&quot;Never&quot;] = 2,[&quot;WhenScrollable&quot;] = 0,},},[&quot;EnviromentalPhysicsThrottle&quot;] = {[&quot;name&quot;] = &quot;EnviromentalPhysicsThrottle&quot;,[&quot;items&quot;] = {[&quot;Always&quot;] = 2,[&quot;DefaultAuto&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Skip16&quot;] = 6,[&quot;Skip2&quot;] = 3,[&quot;Skip4&quot;] = 4,[&quot;Skip8&quot;] = 5,},},[&quot;ExperienceAuthScope&quot;] = {[&quot;name&quot;] = &quot;ExperienceAuthScope&quot;,[&quot;items&quot;] = {[&quot;CreatorAssetsCreate&quot;] = 1,[&quot;DefaultScope&quot;] = 0,},},[&quot;ExplosionType&quot;] = {[&quot;name&quot;] = &quot;ExplosionType&quot;,[&quot;items&quot;] = {[&quot;Craters&quot;] = 1,[&quot;NoCraters&quot;] = 0,},},[&quot;FACSDataLod&quot;] = {[&quot;name&quot;] = &quot;FACSDataLod&quot;,[&quot;items&quot;] = {[&quot;LOD0&quot;] = 0,[&quot;LOD1&quot;] = 1,[&quot;LODCount&quot;] = 2,},},[&quot;FacialAnimationStreamingState&quot;] = {[&quot;name&quot;] = &quot;FacialAnimationStreamingState&quot;,[&quot;items&quot;] = {[&quot;Audio&quot;] = 1,[&quot;None&quot;] = 0,[&quot;Place&quot;] = 4,[&quot;Server&quot;] = 8,[&quot;Video&quot;] = 2,},},[&quot;FieldOfViewMode&quot;] = {[&quot;name&quot;] = &quot;FieldOfViewMode&quot;,[&quot;items&quot;] = {[&quot;Diagonal&quot;] = 1,[&quot;MaxAxis&quot;] = 2,[&quot;Vertical&quot;] = 0,},},[&quot;FillDirection&quot;] = {[&quot;name&quot;] = &quot;FillDirection&quot;,[&quot;items&quot;] = {[&quot;Horizontal&quot;] = 0,[&quot;Vertical&quot;] = 1,},},[&quot;FilterErrorType&quot;] = {[&quot;name&quot;] = &quot;FilterErrorType&quot;,[&quot;items&quot;] = {[&quot;BackslashNotEscapingAnything&quot;] = 0,[&quot;BadBespokeFilter&quot;] = 1,[&quot;BadName&quot;] = 2,[&quot;IncompleteOr&quot;] = 3,[&quot;IncompleteParenthesis&quot;] = 4,[&quot;InvalidDoubleStar&quot;] = 5,[&quot;InvalidTilde&quot;] = 6,[&quot;PropertyBadOperator&quot;] = 7,[&quot;PropertyDoesNotExist&quot;] = 8,[&quot;PropertyInvalidField&quot;] = 9,[&quot;PropertyInvalidValue&quot;] = 10,[&quot;PropertyUnsupportedFields&quot;] = 11,[&quot;PropertyUnsupportedProperty&quot;] = 12,[&quot;UnexpectedNameIndex&quot;] = 13,[&quot;UnexpectedToken&quot;] = 14,[&quot;UnfinishedBinaryOperator&quot;] = 15,[&quot;UnfinishedQuote&quot;] = 16,[&quot;UnknownBespokeFilter&quot;] = 17,[&quot;WildcardInProperty&quot;] = 18,},},[&quot;FilterResult&quot;] = {[&quot;name&quot;] = &quot;FilterResult&quot;,[&quot;items&quot;] = {[&quot;Accepted&quot;] = 0,[&quot;Rejected&quot;] = 1,},},[&quot;FinishRecordingOperation&quot;] = {[&quot;name&quot;] = &quot;FinishRecordingOperation&quot;,[&quot;items&quot;] = {[&quot;Append&quot;] = 2,[&quot;Cancel&quot;] = 0,[&quot;Commit&quot;] = 1,},},[&quot;FluidFidelity&quot;] = {[&quot;name&quot;] = &quot;FluidFidelity&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 0,[&quot;UseCollisionGeometry&quot;] = 1,[&quot;UsePreciseGeometry&quot;] = 2,},},[&quot;FluidForces&quot;] = {[&quot;name&quot;] = &quot;FluidForces&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Experimental&quot;] = 1,},},[&quot;Font&quot;] = {[&quot;name&quot;] = &quot;Font&quot;,[&quot;items&quot;] = {[&quot;AmaticSC&quot;] = 21,[&quot;Antique&quot;] = 15,[&quot;Arcade&quot;] = 13,[&quot;Arial&quot;] = 1,[&quot;ArialBold&quot;] = 2,[&quot;Arimo&quot;] = 50,[&quot;ArimoBold&quot;] = 51,[&quot;Bangers&quot;] = 22,[&quot;Bodoni&quot;] = 7,[&quot;BuilderSans&quot;] = 46,[&quot;BuilderSansBold&quot;] = 48,[&quot;BuilderSansExtraBold&quot;] = 49,[&quot;BuilderSansMedium&quot;] = 47,[&quot;Cartoon&quot;] = 9,[&quot;Code&quot;] = 10,[&quot;Creepster&quot;] = 23,[&quot;DenkOne&quot;] = 24,[&quot;Fantasy&quot;] = 14,[&quot;Fondamento&quot;] = 25,[&quot;FredokaOne&quot;] = 26,[&quot;Garamond&quot;] = 8,[&quot;Gotham&quot;] = 17,[&quot;GothamBlack&quot;] = 20,[&quot;GothamBold&quot;] = 19,[&quot;GothamMedium&quot;] = 18,[&quot;GrenzeGotisch&quot;] = 27,[&quot;Highway&quot;] = 11,[&quot;IndieFlower&quot;] = 28,[&quot;JosefinSans&quot;] = 29,[&quot;Jura&quot;] = 30,[&quot;Kalam&quot;] = 31,[&quot;Legacy&quot;] = 0,[&quot;LuckiestGuy&quot;] = 32,[&quot;Merriweather&quot;] = 33,[&quot;Michroma&quot;] = 34,[&quot;Nunito&quot;] = 35,[&quot;Oswald&quot;] = 36,[&quot;PatrickHand&quot;] = 37,[&quot;PermanentMarker&quot;] = 38,[&quot;Roboto&quot;] = 39,[&quot;RobotoCondensed&quot;] = 40,[&quot;RobotoMono&quot;] = 41,[&quot;Sarpanch&quot;] = 42,[&quot;SciFi&quot;] = 12,[&quot;SourceSans&quot;] = 3,[&quot;SourceSansBold&quot;] = 4,[&quot;SourceSansItalic&quot;] = 6,[&quot;SourceSansLight&quot;] = 5,[&quot;SourceSansSemibold&quot;] = 16,[&quot;SpecialElite&quot;] = 43,[&quot;TitilliumWeb&quot;] = 44,[&quot;Ubuntu&quot;] = 45,[&quot;Unknown&quot;] = 100,},},[&quot;FontSize&quot;] = {[&quot;name&quot;] = &quot;FontSize&quot;,[&quot;items&quot;] = {[&quot;Size10&quot;] = 2,[&quot;Size11&quot;] = 3,[&quot;Size12&quot;] = 4,[&quot;Size14&quot;] = 5,[&quot;Size18&quot;] = 6,[&quot;Size24&quot;] = 7,[&quot;Size28&quot;] = 10,[&quot;Size32&quot;] = 11,[&quot;Size36&quot;] = 8,[&quot;Size42&quot;] = 12,[&quot;Size48&quot;] = 9,[&quot;Size60&quot;] = 13,[&quot;Size8&quot;] = 0,[&quot;Size9&quot;] = 1,[&quot;Size96&quot;] = 14,},},[&quot;FontStyle&quot;] = {[&quot;name&quot;] = &quot;FontStyle&quot;,[&quot;items&quot;] = {[&quot;Italic&quot;] = 1,[&quot;Normal&quot;] = 0,},},[&quot;FontWeight&quot;] = {[&quot;name&quot;] = &quot;FontWeight&quot;,[&quot;items&quot;] = {[&quot;Bold&quot;] = 700,[&quot;ExtraBold&quot;] = 800,[&quot;ExtraLight&quot;] = 200,[&quot;Heavy&quot;] = 900,[&quot;Light&quot;] = 300,[&quot;Medium&quot;] = 500,[&quot;Regular&quot;] = 400,[&quot;SemiBold&quot;] = 600,[&quot;Thin&quot;] = 100,},},[&quot;ForceLimitMode&quot;] = {[&quot;name&quot;] = &quot;ForceLimitMode&quot;,[&quot;items&quot;] = {[&quot;Magnitude&quot;] = 0,[&quot;PerAxis&quot;] = 1,},},[&quot;FormFactor&quot;] = {[&quot;name&quot;] = &quot;FormFactor&quot;,[&quot;items&quot;] = {[&quot;Brick&quot;] = 1,[&quot;Custom&quot;] = 3,[&quot;Plate&quot;] = 2,[&quot;Symmetric&quot;] = 0,},},[&quot;FrameStyle&quot;] = {[&quot;name&quot;] = &quot;FrameStyle&quot;,[&quot;items&quot;] = {[&quot;ChatBlue&quot;] = 1,[&quot;ChatGreen&quot;] = 4,[&quot;ChatRed&quot;] = 5,[&quot;Custom&quot;] = 0,[&quot;DropShadow&quot;] = 6,[&quot;RobloxRound&quot;] = 3,[&quot;RobloxSquare&quot;] = 2,},},[&quot;FramerateManagerMode&quot;] = {[&quot;name&quot;] = &quot;FramerateManagerMode&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 0,[&quot;Off&quot;] = 2,[&quot;On&quot;] = 1,},},[&quot;FriendRequestEvent&quot;] = {[&quot;name&quot;] = &quot;FriendRequestEvent&quot;,[&quot;items&quot;] = {[&quot;Accept&quot;] = 2,[&quot;Deny&quot;] = 3,[&quot;Issue&quot;] = 0,[&quot;Revoke&quot;] = 1,},},[&quot;FriendStatus&quot;] = {[&quot;name&quot;] = &quot;FriendStatus&quot;,[&quot;items&quot;] = {[&quot;Friend&quot;] = 2,[&quot;FriendRequestReceived&quot;] = 4,[&quot;FriendRequestSent&quot;] = 3,[&quot;NotFriend&quot;] = 1,[&quot;Unknown&quot;] = 0,},},[&quot;FunctionalTestResult&quot;] = {[&quot;name&quot;] = &quot;FunctionalTestResult&quot;,[&quot;items&quot;] = {[&quot;Error&quot;] = 2,[&quot;Passed&quot;] = 0,[&quot;Warning&quot;] = 1,},},[&quot;GameAvatarType&quot;] = {[&quot;name&quot;] = &quot;GameAvatarType&quot;,[&quot;items&quot;] = {[&quot;PlayerChoice&quot;] = 2,[&quot;R15&quot;] = 1,[&quot;R6&quot;] = 0,},},[&quot;GamepadType&quot;] = {[&quot;name&quot;] = &quot;GamepadType&quot;,[&quot;items&quot;] = {[&quot;PS4&quot;] = 1,[&quot;PS5&quot;] = 2,[&quot;Unknown&quot;] = 0,[&quot;XboxOne&quot;] = 3,},},[&quot;GearGenreSetting&quot;] = {[&quot;name&quot;] = &quot;GearGenreSetting&quot;,[&quot;items&quot;] = {[&quot;AllGenres&quot;] = 0,[&quot;MatchingGenreOnly&quot;] = 1,},},[&quot;GearType&quot;] = {[&quot;name&quot;] = &quot;GearType&quot;,[&quot;items&quot;] = {[&quot;BuildingTools&quot;] = 7,[&quot;Explosives&quot;] = 2,[&quot;MeleeWeapons&quot;] = 0,[&quot;MusicalInstruments&quot;] = 5,[&quot;NavigationEnhancers&quot;] = 4,[&quot;PowerUps&quot;] = 3,[&quot;RangedWeapons&quot;] = 1,[&quot;SocialItems&quot;] = 6,[&quot;Transport&quot;] = 8,},},[&quot;Genre&quot;] = {[&quot;name&quot;] = &quot;Genre&quot;,[&quot;items&quot;] = {[&quot;Adventure&quot;] = 7,[&quot;All&quot;] = 0,[&quot;Fantasy&quot;] = 2,[&quot;Funny&quot;] = 9,[&quot;Ninja&quot;] = 4,[&quot;Pirate&quot;] = 6,[&quot;Scary&quot;] = 5,[&quot;SciFi&quot;] = 3,[&quot;SkatePark&quot;] = 12,[&quot;Sports&quot;] = 8,[&quot;TownAndCity&quot;] = 1,[&quot;Tutorial&quot;] = 13,[&quot;War&quot;] = 11,[&quot;WildWest&quot;] = 10,},},[&quot;GraphicsMode&quot;] = {[&quot;name&quot;] = &quot;GraphicsMode&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 1,[&quot;Direct3D11&quot;] = 2,[&quot;Metal&quot;] = 5,[&quot;NoGraphics&quot;] = 9,[&quot;OpenGL&quot;] = 4,[&quot;Vulkan&quot;] = 6,},},[&quot;GraphicsOptimizationMode&quot;] = {[&quot;name&quot;] = &quot;GraphicsOptimizationMode&quot;,[&quot;items&quot;] = {[&quot;Balanced&quot;] = 1,[&quot;Performance&quot;] = 0,[&quot;Quality&quot;] = 2,},},[&quot;GuiState&quot;] = {[&quot;name&quot;] = &quot;GuiState&quot;,[&quot;items&quot;] = {[&quot;Hover&quot;] = 1,[&quot;Idle&quot;] = 0,[&quot;NonInteractable&quot;] = 3,[&quot;Press&quot;] = 2,},},[&quot;GuiType&quot;] = {[&quot;name&quot;] = &quot;GuiType&quot;,[&quot;items&quot;] = {[&quot;Core&quot;] = 0,[&quot;CoreBillboards&quot;] = 4,[&quot;Custom&quot;] = 1,[&quot;CustomBillboards&quot;] = 3,[&quot;PlayerNameplates&quot;] = 2,},},[&quot;HandlesStyle&quot;] = {[&quot;name&quot;] = &quot;HandlesStyle&quot;,[&quot;items&quot;] = {[&quot;Movement&quot;] = 1,[&quot;Resize&quot;] = 0,},},[&quot;HapticEffectType&quot;] = {[&quot;name&quot;] = &quot;HapticEffectType&quot;,[&quot;items&quot;] = {[&quot;Custom&quot;] = 0,[&quot;GameplayCollision&quot;] = 5,[&quot;GameplayExplosion&quot;] = 4,[&quot;UIClick&quot;] = 2,[&quot;UIHover&quot;] = 1,[&quot;UINotification&quot;] = 3,},},[&quot;HighlightDepthMode&quot;] = {[&quot;name&quot;] = &quot;HighlightDepthMode&quot;,[&quot;items&quot;] = {[&quot;AlwaysOnTop&quot;] = 0,[&quot;Occluded&quot;] = 1,},},[&quot;HorizontalAlignment&quot;] = {[&quot;name&quot;] = &quot;HorizontalAlignment&quot;,[&quot;items&quot;] = {[&quot;Center&quot;] = 0,[&quot;Left&quot;] = 1,[&quot;Right&quot;] = 2,},},[&quot;HoverAnimateSpeed&quot;] = {[&quot;name&quot;] = &quot;HoverAnimateSpeed&quot;,[&quot;items&quot;] = {[&quot;Fast&quot;] = 3,[&quot;Medium&quot;] = 2,[&quot;Slow&quot;] = 1,[&quot;VeryFast&quot;] = 4,[&quot;VerySlow&quot;] = 0,},},[&quot;HttpCachePolicy&quot;] = {[&quot;name&quot;] = &quot;HttpCachePolicy&quot;,[&quot;items&quot;] = {[&quot;DataOnly&quot;] = 2,[&quot;Default&quot;] = 3,[&quot;Full&quot;] = 1,[&quot;InternalRedirectRefresh&quot;] = 4,[&quot;None&quot;] = 0,},},[&quot;HttpCompression&quot;] = {[&quot;name&quot;] = &quot;HttpCompression&quot;,[&quot;items&quot;] = {[&quot;Gzip&quot;] = 1,[&quot;None&quot;] = 0,},},[&quot;HttpContentType&quot;] = {[&quot;name&quot;] = &quot;HttpContentType&quot;,[&quot;items&quot;] = {[&quot;ApplicationJson&quot;] = 0,[&quot;ApplicationUrlEncoded&quot;] = 2,[&quot;ApplicationXml&quot;] = 1,[&quot;TextPlain&quot;] = 3,[&quot;TextXml&quot;] = 4,},},[&quot;HttpError&quot;] = {[&quot;name&quot;] = &quot;HttpError&quot;,[&quot;items&quot;] = {[&quot;Aborted&quot;] = 9,[&quot;ConnectFail&quot;] = 3,[&quot;DnsResolve&quot;] = 2,[&quot;InvalidRedirect&quot;] = 7,[&quot;InvalidUrl&quot;] = 1,[&quot;NetFail&quot;] = 8,[&quot;OK&quot;] = 0,[&quot;OutOfMemory&quot;] = 4,[&quot;SslConnectFail&quot;] = 10,[&quot;SslVerificationFail&quot;] = 11,[&quot;TimedOut&quot;] = 5,[&quot;TooManyRedirects&quot;] = 6,[&quot;Unknown&quot;] = 12,},},[&quot;HttpRequestType&quot;] = {[&quot;name&quot;] = &quot;HttpRequestType&quot;,[&quot;items&quot;] = {[&quot;Analytics&quot;] = 23,[&quot;Avatar&quot;] = 16,[&quot;Chat&quot;] = 15,[&quot;Default&quot;] = 0,[&quot;Localization&quot;] = 25,[&quot;MarketplaceService&quot;] = 2,[&quot;Players&quot;] = 7,},},[&quot;HumanoidCollisionType&quot;] = {[&quot;name&quot;] = &quot;HumanoidCollisionType&quot;,[&quot;items&quot;] = {[&quot;InnerBox&quot;] = 1,[&quot;OuterBox&quot;] = 0,},},[&quot;HumanoidDisplayDistanceType&quot;] = {[&quot;name&quot;] = &quot;HumanoidDisplayDistanceType&quot;,[&quot;items&quot;] = {[&quot;None&quot;] = 2,[&quot;Subject&quot;] = 1,[&quot;Viewer&quot;] = 0,},},[&quot;HumanoidHealthDisplayType&quot;] = {[&quot;name&quot;] = &quot;HumanoidHealthDisplayType&quot;,[&quot;items&quot;] = {[&quot;AlwaysOff&quot;] = 2,[&quot;AlwaysOn&quot;] = 1,[&quot;DisplayWhenDamaged&quot;] = 0,},},[&quot;HumanoidRigType&quot;] = {[&quot;name&quot;] = &quot;HumanoidRigType&quot;,[&quot;items&quot;] = {[&quot;R15&quot;] = 1,[&quot;R6&quot;] = 0,},},[&quot;HumanoidStateType&quot;] = {[&quot;name&quot;] = &quot;HumanoidStateType&quot;,[&quot;items&quot;] = {[&quot;Climbing&quot;] = 12,[&quot;Dead&quot;] = 15,[&quot;FallingDown&quot;] = 0,[&quot;Flying&quot;] = 6,[&quot;Freefall&quot;] = 5,[&quot;GettingUp&quot;] = 2,[&quot;Jumping&quot;] = 3,[&quot;Landed&quot;] = 7,[&quot;None&quot;] = 18,[&quot;Physics&quot;] = 16,[&quot;PlatformStanding&quot;] = 14,[&quot;Ragdoll&quot;] = 1,[&quot;Running&quot;] = 8,[&quot;RunningNoPhysics&quot;] = 10,[&quot;Seated&quot;] = 13,[&quot;StrafingNoPhysics&quot;] = 11,[&quot;Swimming&quot;] = 4,},},[&quot;IKCollisionsMode&quot;] = {[&quot;name&quot;] = &quot;IKCollisionsMode&quot;,[&quot;items&quot;] = {[&quot;IncludeContactedMechanisms&quot;] = 2,[&quot;NoCollisions&quot;] = 0,[&quot;OtherMechanismsAnchored&quot;] = 1,},},[&quot;IKControlConstraintSupport&quot;] = {[&quot;name&quot;] = &quot;IKControlConstraintSupport&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;IKControlType&quot;] = {[&quot;name&quot;] = &quot;IKControlType&quot;,[&quot;items&quot;] = {[&quot;LookAt&quot;] = 3,[&quot;Position&quot;] = 1,[&quot;Rotation&quot;] = 2,[&quot;Transform&quot;] = 0,},},[&quot;IXPLoadingStatus&quot;] = {[&quot;name&quot;] = &quot;IXPLoadingStatus&quot;,[&quot;items&quot;] = {[&quot;ErrorConnection&quot;] = 4,[&quot;ErrorInvalidUser&quot;] = 3,[&quot;ErrorJsonParse&quot;] = 5,[&quot;ErrorTimedOut&quot;] = 6,[&quot;Initialized&quot;] = 2,[&quot;None&quot;] = 0,[&quot;Pending&quot;] = 1,},},[&quot;ImageAlphaType&quot;] = {[&quot;name&quot;] = &quot;ImageAlphaType&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 1,[&quot;LockCanvasAlpha&quot;] = 2,[&quot;LockCanvasColor&quot;] = 3,},},[&quot;ImageCombineType&quot;] = {[&quot;name&quot;] = &quot;ImageCombineType&quot;,[&quot;items&quot;] = {[&quot;Add&quot;] = 3,[&quot;AlphaBlend&quot;] = 5,[&quot;BlendSourceOver&quot;] = 1,[&quot;Multiply&quot;] = 4,[&quot;Overwrite&quot;] = 2,},},[&quot;InOut&quot;] = {[&quot;name&quot;] = &quot;InOut&quot;,[&quot;items&quot;] = {[&quot;Center&quot;] = 2,[&quot;Edge&quot;] = 0,[&quot;Inset&quot;] = 1,},},[&quot;InfoType&quot;] = {[&quot;name&quot;] = &quot;InfoType&quot;,[&quot;items&quot;] = {[&quot;Asset&quot;] = 0,[&quot;Bundle&quot;] = 4,[&quot;GamePass&quot;] = 2,[&quot;Product&quot;] = 1,[&quot;Subscription&quot;] = 3,},},[&quot;InitialDockState&quot;] = {[&quot;name&quot;] = &quot;InitialDockState&quot;,[&quot;items&quot;] = {[&quot;Bottom&quot;] = 1,[&quot;Float&quot;] = 4,[&quot;Left&quot;] = 2,[&quot;Right&quot;] = 3,[&quot;Top&quot;] = 0,},},[&quot;InputActionType&quot;] = {[&quot;name&quot;] = &quot;InputActionType&quot;,[&quot;items&quot;] = {[&quot;Bool&quot;] = 0,[&quot;Direction2D&quot;] = 2,[&quot;Float&quot;] = 1,},},[&quot;InputType&quot;] = {[&quot;name&quot;] = &quot;InputType&quot;,[&quot;items&quot;] = {[&quot;Constant&quot;] = 12,[&quot;NoInput&quot;] = 0,[&quot;Sin&quot;] = 13,},},[&quot;IntermediateMeshGenerationResult&quot;] = {[&quot;name&quot;] = &quot;IntermediateMeshGenerationResult&quot;,[&quot;items&quot;] = {[&quot;HighQualityMesh&quot;] = 0,},},[&quot;InterpolationThrottlingMode&quot;] = {[&quot;name&quot;] = &quot;InterpolationThrottlingMode&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;InviteState&quot;] = {[&quot;name&quot;] = &quot;InviteState&quot;,[&quot;items&quot;] = {[&quot;Accepted&quot;] = 1,[&quot;Declined&quot;] = 2,[&quot;Missed&quot;] = 3,[&quot;Placed&quot;] = 0,},},[&quot;ItemLineAlignment&quot;] = {[&quot;name&quot;] = &quot;ItemLineAlignment&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 0,[&quot;Center&quot;] = 2,[&quot;End&quot;] = 3,[&quot;Start&quot;] = 1,[&quot;Stretch&quot;] = 4,},},[&quot;JoinSource&quot;] = {[&quot;name&quot;] = &quot;JoinSource&quot;,[&quot;items&quot;] = {[&quot;CreatedItemAttribution&quot;] = 1,},},[&quot;JointCreationMode&quot;] = {[&quot;name&quot;] = &quot;JointCreationMode&quot;,[&quot;items&quot;] = {[&quot;All&quot;] = 0,[&quot;None&quot;] = 2,[&quot;Surface&quot;] = 1,},},[&quot;KeyCode&quot;] = {[&quot;name&quot;] = &quot;KeyCode&quot;,[&quot;items&quot;] = {[&quot;A&quot;] = 97,[&quot;Ampersand&quot;] = 38,[&quot;Asterisk&quot;] = 42,[&quot;At&quot;] = 64,[&quot;B&quot;] = 98,[&quot;BackSlash&quot;] = 92,[&quot;Backquote&quot;] = 96,[&quot;Backspace&quot;] = 8,[&quot;Break&quot;] = 318,[&quot;ButtonA&quot;] = 1002,[&quot;ButtonB&quot;] = 1003,[&quot;ButtonL1&quot;] = 1005,[&quot;ButtonL2&quot;] = 1007,[&quot;ButtonL3&quot;] = 1009,[&quot;ButtonR1&quot;] = 1004,[&quot;ButtonR2&quot;] = 1006,[&quot;ButtonR3&quot;] = 1008,[&quot;ButtonSelect&quot;] = 1011,[&quot;ButtonStart&quot;] = 1010,[&quot;ButtonX&quot;] = 1000,[&quot;ButtonY&quot;] = 1001,[&quot;C&quot;] = 99,[&quot;CapsLock&quot;] = 301,[&quot;Caret&quot;] = 94,[&quot;Clear&quot;] = 12,[&quot;Colon&quot;] = 58,[&quot;Comma&quot;] = 44,[&quot;Compose&quot;] = 314,[&quot;D&quot;] = 100,[&quot;DPadDown&quot;] = 1015,[&quot;DPadLeft&quot;] = 1012,[&quot;DPadRight&quot;] = 1013,[&quot;DPadUp&quot;] = 1014,[&quot;Delete&quot;] = 127,[&quot;Dollar&quot;] = 36,[&quot;Down&quot;] = 274,[&quot;E&quot;] = 101,[&quot;Eight&quot;] = 56,[&quot;End&quot;] = 279,[&quot;Equals&quot;] = 61,[&quot;Escape&quot;] = 27,[&quot;Euro&quot;] = 321,[&quot;F&quot;] = 102,[&quot;F1&quot;] = 282,[&quot;F10&quot;] = 291,[&quot;F11&quot;] = 292,[&quot;F12&quot;] = 293,[&quot;F13&quot;] = 294,[&quot;F14&quot;] = 295,[&quot;F15&quot;] = 296,[&quot;F2&quot;] = 283,[&quot;F3&quot;] = 284,[&quot;F4&quot;] = 285,[&quot;F5&quot;] = 286,[&quot;F6&quot;] = 287,[&quot;F7&quot;] = 288,[&quot;F8&quot;] = 289,[&quot;F9&quot;] = 290,[&quot;Five&quot;] = 53,[&quot;Four&quot;] = 52,[&quot;G&quot;] = 103,[&quot;GreaterThan&quot;] = 62,[&quot;H&quot;] = 104,[&quot;Hash&quot;] = 35,[&quot;Help&quot;] = 315,[&quot;Home&quot;] = 278,[&quot;I&quot;] = 105,[&quot;Insert&quot;] = 277,[&quot;J&quot;] = 106,[&quot;K&quot;] = 107,[&quot;KeypadDivide&quot;] = 267,[&quot;KeypadEight&quot;] = 264,[&quot;KeypadEnter&quot;] = 271,[&quot;KeypadEquals&quot;] = 272,[&quot;KeypadFive&quot;] = 261,[&quot;KeypadFour&quot;] = 260,[&quot;KeypadMinus&quot;] = 269,[&quot;KeypadMultiply&quot;] = 268,[&quot;KeypadNine&quot;] = 265,[&quot;KeypadOne&quot;] = 257,[&quot;KeypadPeriod&quot;] = 266,[&quot;KeypadPlus&quot;] = 270,[&quot;KeypadSeven&quot;] = 263,[&quot;KeypadSix&quot;] = 262,[&quot;KeypadThree&quot;] = 259,[&quot;KeypadTwo&quot;] = 258,[&quot;KeypadZero&quot;] = 256,[&quot;L&quot;] = 108,[&quot;Left&quot;] = 276,[&quot;LeftAlt&quot;] = 308,[&quot;LeftBracket&quot;] = 91,[&quot;LeftControl&quot;] = 306,[&quot;LeftCurly&quot;] = 123,[&quot;LeftMeta&quot;] = 310,[&quot;LeftParenthesis&quot;] = 40,[&quot;LeftShift&quot;] = 304,[&quot;LeftSuper&quot;] = 311,[&quot;LessThan&quot;] = 60,[&quot;M&quot;] = 109,[&quot;Menu&quot;] = 319,[&quot;Minus&quot;] = 45,[&quot;Mode&quot;] = 313,[&quot;MouseBackButton&quot;] = 1021,[&quot;MouseLeftButton&quot;] = 1018,[&quot;MouseMiddleButton&quot;] = 1020,[&quot;MouseNoButton&quot;] = 1022,[&quot;MouseRightButton&quot;] = 1019,[&quot;MouseX&quot;] = 1023,[&quot;MouseY&quot;] = 1024,[&quot;N&quot;] = 110,[&quot;Nine&quot;] = 57,[&quot;NumLock&quot;] = 300,[&quot;O&quot;] = 111,[&quot;One&quot;] = 49,[&quot;P&quot;] = 112,[&quot;PageDown&quot;] = 281,[&quot;PageUp&quot;] = 280,[&quot;Pause&quot;] = 19,[&quot;Percent&quot;] = 37,[&quot;Period&quot;] = 46,[&quot;Pipe&quot;] = 124,[&quot;Plus&quot;] = 43,[&quot;Power&quot;] = 320,[&quot;Print&quot;] = 316,[&quot;Q&quot;] = 113,[&quot;Question&quot;] = 63,[&quot;Quote&quot;] = 39,[&quot;QuotedDouble&quot;] = 34,[&quot;R&quot;] = 114,[&quot;Return&quot;] = 13,[&quot;Right&quot;] = 275,[&quot;RightAlt&quot;] = 307,[&quot;RightBracket&quot;] = 93,[&quot;RightControl&quot;] = 305,[&quot;RightCurly&quot;] = 125,[&quot;RightMeta&quot;] = 309,[&quot;RightParenthesis&quot;] = 41,[&quot;RightShift&quot;] = 303,[&quot;RightSuper&quot;] = 312,[&quot;S&quot;] = 115,[&quot;ScrollLock&quot;] = 302,[&quot;Semicolon&quot;] = 59,[&quot;Seven&quot;] = 55,[&quot;Six&quot;] = 54,[&quot;Slash&quot;] = 47,[&quot;Space&quot;] = 32,[&quot;SysReq&quot;] = 317,[&quot;T&quot;] = 116,[&quot;Tab&quot;] = 9,[&quot;Three&quot;] = 51,[&quot;Thumbstick1&quot;] = 1016,[&quot;Thumbstick2&quot;] = 1017,[&quot;Tilde&quot;] = 126,[&quot;Two&quot;] = 50,[&quot;U&quot;] = 117,[&quot;Underscore&quot;] = 95,[&quot;Undo&quot;] = 322,[&quot;Unknown&quot;] = 0,[&quot;Up&quot;] = 273,[&quot;V&quot;] = 118,[&quot;W&quot;] = 119,[&quot;World0&quot;] = 160,[&quot;World1&quot;] = 161,[&quot;World10&quot;] = 170,[&quot;World11&quot;] = 171,[&quot;World12&quot;] = 172,[&quot;World13&quot;] = 173,[&quot;World14&quot;] = 174,[&quot;World15&quot;] = 175,[&quot;World16&quot;] = 176,[&quot;World17&quot;] = 177,[&quot;World18&quot;] = 178,[&quot;World19&quot;] = 179,[&quot;World2&quot;] = 162,[&quot;World20&quot;] = 180,[&quot;World21&quot;] = 181,[&quot;World22&quot;] = 182,[&quot;World23&quot;] = 183,[&quot;World24&quot;] = 184,[&quot;World25&quot;] = 185,[&quot;World26&quot;] = 186,[&quot;World27&quot;] = 187,[&quot;World28&quot;] = 188,[&quot;World29&quot;] = 189,[&quot;World3&quot;] = 163,[&quot;World30&quot;] = 190,[&quot;World31&quot;] = 191,[&quot;World32&quot;] = 192,[&quot;World33&quot;] = 193,[&quot;World34&quot;] = 194,[&quot;World35&quot;] = 195,[&quot;World36&quot;] = 196,[&quot;World37&quot;] = 197,[&quot;World38&quot;] = 198,[&quot;World39&quot;] = 199,[&quot;World4&quot;] = 164,[&quot;World40&quot;] = 200,[&quot;World41&quot;] = 201,[&quot;World42&quot;] = 202,[&quot;World43&quot;] = 203,[&quot;World44&quot;] = 204,[&quot;World45&quot;] = 205,[&quot;World46&quot;] = 206,[&quot;World47&quot;] = 207,[&quot;World48&quot;] = 208,[&quot;World49&quot;] = 209,[&quot;World5&quot;] = 165,[&quot;World50&quot;] = 210,[&quot;World51&quot;] = 211,[&quot;World52&quot;] = 212,[&quot;World53&quot;] = 213,[&quot;World54&quot;] = 214,[&quot;World55&quot;] = 215,[&quot;World56&quot;] = 216,[&quot;World57&quot;] = 217,[&quot;World58&quot;] = 218,[&quot;World59&quot;] = 219,[&quot;World6&quot;] = 166,[&quot;World60&quot;] = 220,[&quot;World61&quot;] = 221,[&quot;World62&quot;] = 222,[&quot;World63&quot;] = 223,[&quot;World64&quot;] = 224,[&quot;World65&quot;] = 225,[&quot;World66&quot;] = 226,[&quot;World67&quot;] = 227,[&quot;World68&quot;] = 228,[&quot;World69&quot;] = 229,[&quot;World7&quot;] = 167,[&quot;World70&quot;] = 230,[&quot;World71&quot;] = 231,[&quot;World72&quot;] = 232,[&quot;World73&quot;] = 233,[&quot;World74&quot;] = 234,[&quot;World75&quot;] = 235,[&quot;World76&quot;] = 236,[&quot;World77&quot;] = 237,[&quot;World78&quot;] = 238,[&quot;World79&quot;] = 239,[&quot;World8&quot;] = 168,[&quot;World80&quot;] = 240,[&quot;World81&quot;] = 241,[&quot;World82&quot;] = 242,[&quot;World83&quot;] = 243,[&quot;World84&quot;] = 244,[&quot;World85&quot;] = 245,[&quot;World86&quot;] = 246,[&quot;World87&quot;] = 247,[&quot;World88&quot;] = 248,[&quot;World89&quot;] = 249,[&quot;World9&quot;] = 169,[&quot;World90&quot;] = 250,[&quot;World91&quot;] = 251,[&quot;World92&quot;] = 252,[&quot;World93&quot;] = 253,[&quot;World94&quot;] = 254,[&quot;World95&quot;] = 255,[&quot;X&quot;] = 120,[&quot;Y&quot;] = 121,[&quot;Z&quot;] = 122,[&quot;Zero&quot;] = 48,},},[&quot;KeyInterpolationMode&quot;] = {[&quot;name&quot;] = &quot;KeyInterpolationMode&quot;,[&quot;items&quot;] = {[&quot;Constant&quot;] = 0,[&quot;Cubic&quot;] = 2,[&quot;Linear&quot;] = 1,},},[&quot;KeywordFilterType&quot;] = {[&quot;name&quot;] = &quot;KeywordFilterType&quot;,[&quot;items&quot;] = {[&quot;Exclude&quot;] = 1,[&quot;Include&quot;] = 0,},},[&quot;Language&quot;] = {[&quot;name&quot;] = &quot;Language&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,},},[&quot;LeftRight&quot;] = {[&quot;name&quot;] = &quot;LeftRight&quot;,[&quot;items&quot;] = {[&quot;Center&quot;] = 1,[&quot;Left&quot;] = 0,[&quot;Right&quot;] = 2,},},[&quot;LexemeType&quot;] = {[&quot;name&quot;] = &quot;LexemeType&quot;,[&quot;items&quot;] = {[&quot;And&quot;] = 4,[&quot;Colon&quot;] = 12,[&quot;Dot&quot;] = 13,[&quot;DoubleStar&quot;] = 17,[&quot;Eof&quot;] = 0,[&quot;Equal&quot;] = 6,[&quot;GreaterThan&quot;] = 8,[&quot;GreaterThanEqual&quot;] = 9,[&quot;LeftParenthesis&quot;] = 14,[&quot;LessThan&quot;] = 10,[&quot;LessThanEqual&quot;] = 11,[&quot;Name&quot;] = 1,[&quot;Number&quot;] = 3,[&quot;Or&quot;] = 5,[&quot;QuotedString&quot;] = 2,[&quot;ReservedSpecial&quot;] = 18,[&quot;RightParenthesis&quot;] = 15,[&quot;Star&quot;] = 16,[&quot;TildeEqual&quot;] = 7,},},[&quot;LightingStyle&quot;] = {[&quot;name&quot;] = &quot;LightingStyle&quot;,[&quot;items&quot;] = {[&quot;Realistic&quot;] = 0,[&quot;Soft&quot;] = 1,},},[&quot;Limb&quot;] = {[&quot;name&quot;] = &quot;Limb&quot;,[&quot;items&quot;] = {[&quot;Head&quot;] = 0,[&quot;LeftArm&quot;] = 2,[&quot;LeftLeg&quot;] = 4,[&quot;RightArm&quot;] = 3,[&quot;RightLeg&quot;] = 5,[&quot;Torso&quot;] = 1,[&quot;Unknown&quot;] = 6,},},[&quot;LineJoinMode&quot;] = {[&quot;name&quot;] = &quot;LineJoinMode&quot;,[&quot;items&quot;] = {[&quot;Bevel&quot;] = 1,[&quot;Miter&quot;] = 2,[&quot;Round&quot;] = 0,},},[&quot;ListDisplayMode&quot;] = {[&quot;name&quot;] = &quot;ListDisplayMode&quot;,[&quot;items&quot;] = {[&quot;Horizontal&quot;] = 0,[&quot;Vertical&quot;] = 1,},},[&quot;ListenerLocation&quot;] = {[&quot;name&quot;] = &quot;ListenerLocation&quot;,[&quot;items&quot;] = {[&quot;Camera&quot;] = 3,[&quot;Character&quot;] = 2,[&quot;Default&quot;] = 0,[&quot;None&quot;] = 1,},},[&quot;ListenerType&quot;] = {[&quot;name&quot;] = &quot;ListenerType&quot;,[&quot;items&quot;] = {[&quot;CFrame&quot;] = 1,[&quot;Camera&quot;] = 0,[&quot;ObjectCFrame&quot;] = 3,[&quot;ObjectPosition&quot;] = 2,},},[&quot;LiveEditingAtomicUpdateResponse&quot;] = {[&quot;name&quot;] = &quot;LiveEditingAtomicUpdateResponse&quot;,[&quot;items&quot;] = {[&quot;FailureGuidNotFound&quot;] = 1,[&quot;FailureHashMismatch&quot;] = 2,[&quot;FailureOperationIllegal&quot;] = 3,[&quot;Success&quot;] = 0,},},[&quot;LiveEditingBroadcastMessageType&quot;] = {[&quot;name&quot;] = &quot;LiveEditingBroadcastMessageType&quot;,[&quot;items&quot;] = {[&quot;Error&quot;] = 2,[&quot;Normal&quot;] = 0,[&quot;Warning&quot;] = 1,},},[&quot;LoadCharacterLayeredClothing&quot;] = {[&quot;name&quot;] = &quot;LoadCharacterLayeredClothing&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;LoadDynamicHeads&quot;] = {[&quot;name&quot;] = &quot;LoadDynamicHeads&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;LocationType&quot;] = {[&quot;name&quot;] = &quot;LocationType&quot;,[&quot;items&quot;] = {[&quot;Camera&quot;] = 1,[&quot;Character&quot;] = 0,[&quot;ObjectPosition&quot;] = 2,},},[&quot;MarketplaceBulkPurchasePromptStatus&quot;] = {[&quot;name&quot;] = &quot;MarketplaceBulkPurchasePromptStatus&quot;,[&quot;items&quot;] = {[&quot;Aborted&quot;] = 2,[&quot;Completed&quot;] = 1,[&quot;Error&quot;] = 3,},},[&quot;MarketplaceItemPurchaseStatus&quot;] = {[&quot;name&quot;] = &quot;MarketplaceItemPurchaseStatus&quot;,[&quot;items&quot;] = {[&quot;AlreadyOwned&quot;] = 3,[&quot;InsufficientMembership&quot;] = 12,[&quot;InsufficientRobux&quot;] = 4,[&quot;NotAvailableForPurchaser&quot;] = 8,[&quot;NotForSale&quot;] = 7,[&quot;PlaceInvalid&quot;] = 13,[&quot;PriceMismatch&quot;] = 9,[&quot;PurchaserIsSeller&quot;] = 11,[&quot;QuantityLimitExceeded&quot;] = 5,[&quot;QuotaExceeded&quot;] = 6,[&quot;SoldOut&quot;] = 10,[&quot;Success&quot;] = 1,[&quot;SystemError&quot;] = 2,},},[&quot;MarketplaceProductType&quot;] = {[&quot;name&quot;] = &quot;MarketplaceProductType&quot;,[&quot;items&quot;] = {[&quot;AvatarAsset&quot;] = 1,[&quot;AvatarBundle&quot;] = 2,},},[&quot;MarkupKind&quot;] = {[&quot;name&quot;] = &quot;MarkupKind&quot;,[&quot;items&quot;] = {[&quot;Markdown&quot;] = 1,[&quot;PlainText&quot;] = 0,},},[&quot;MatchmakingType&quot;] = {[&quot;name&quot;] = &quot;MatchmakingType&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 1,[&quot;PlayStationOnly&quot;] = 3,[&quot;XboxOnly&quot;] = 2,},},[&quot;Material&quot;] = {[&quot;name&quot;] = &quot;Material&quot;,[&quot;items&quot;] = {[&quot;Air&quot;] = 1792,[&quot;Asphalt&quot;] = 1376,[&quot;Basalt&quot;] = 788,[&quot;Brick&quot;] = 848,[&quot;Cardboard&quot;] = 2304,[&quot;Carpet&quot;] = 2305,[&quot;CeramicTiles&quot;] = 2306,[&quot;ClayRoofTiles&quot;] = 2307,[&quot;Cobblestone&quot;] = 880,[&quot;Concrete&quot;] = 816,[&quot;CorrodedMetal&quot;] = 1040,[&quot;CrackedLava&quot;] = 804,[&quot;DiamondPlate&quot;] = 1056,[&quot;Fabric&quot;] = 1312,[&quot;Foil&quot;] = 1072,[&quot;ForceField&quot;] = 1584,[&quot;Glacier&quot;] = 1552,[&quot;Glass&quot;] = 1568,[&quot;Granite&quot;] = 832,[&quot;Grass&quot;] = 1280,[&quot;Ground&quot;] = 1360,[&quot;Ice&quot;] = 1536,[&quot;LeafyGrass&quot;] = 1284,[&quot;Leather&quot;] = 2309,[&quot;Limestone&quot;] = 820,[&quot;Marble&quot;] = 784,[&quot;Metal&quot;] = 1088,[&quot;Mud&quot;] = 1344,[&quot;Neon&quot;] = 288,[&quot;Pavement&quot;] = 836,[&quot;Pebble&quot;] = 864,[&quot;Plaster&quot;] = 2310,[&quot;Plastic&quot;] = 256,[&quot;Rock&quot;] = 896,[&quot;RoofShingles&quot;] = 2308,[&quot;Rubber&quot;] = 2311,[&quot;Salt&quot;] = 1392,[&quot;Sand&quot;] = 1296,[&quot;Sandstone&quot;] = 912,[&quot;Slate&quot;] = 800,[&quot;SmoothPlastic&quot;] = 272,[&quot;Snow&quot;] = 1328,[&quot;Water&quot;] = 2048,[&quot;Wood&quot;] = 512,[&quot;WoodPlanks&quot;] = 528,},},[&quot;MaterialPattern&quot;] = {[&quot;name&quot;] = &quot;MaterialPattern&quot;,[&quot;items&quot;] = {[&quot;Organic&quot;] = 1,[&quot;Regular&quot;] = 0,},},[&quot;MembershipType&quot;] = {[&quot;name&quot;] = &quot;MembershipType&quot;,[&quot;items&quot;] = {[&quot;BuildersClub&quot;] = 1,[&quot;None&quot;] = 0,[&quot;OutrageousBuildersClub&quot;] = 3,[&quot;Premium&quot;] = 4,[&quot;TurboBuildersClub&quot;] = 2,},},[&quot;MeshPartDetailLevel&quot;] = {[&quot;name&quot;] = &quot;MeshPartDetailLevel&quot;,[&quot;items&quot;] = {[&quot;DistanceBased&quot;] = 0,[&quot;Level00&quot;] = 1,[&quot;Level01&quot;] = 2,[&quot;Level02&quot;] = 3,[&quot;Level03&quot;] = 4,[&quot;Level04&quot;] = 5,},},[&quot;MeshPartHeadsAndAccessories&quot;] = {[&quot;name&quot;] = &quot;MeshPartHeadsAndAccessories&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;MeshScaleUnit&quot;] = {[&quot;name&quot;] = &quot;MeshScaleUnit&quot;,[&quot;items&quot;] = {[&quot;CM&quot;] = 2,[&quot;Foot&quot;] = 4,[&quot;Inch&quot;] = 5,[&quot;MM&quot;] = 3,[&quot;Meter&quot;] = 1,[&quot;Stud&quot;] = 0,},},[&quot;MeshType&quot;] = {[&quot;name&quot;] = &quot;MeshType&quot;,[&quot;items&quot;] = {[&quot;Brick&quot;] = 6,[&quot;CornerWedge&quot;] = 11,[&quot;Cylinder&quot;] = 4,[&quot;FileMesh&quot;] = 5,[&quot;Head&quot;] = 0,[&quot;ParallelRamp&quot;] = 9,[&quot;Prism&quot;] = 7,[&quot;Pyramid&quot;] = 8,[&quot;RightAngleRamp&quot;] = 10,[&quot;Sphere&quot;] = 3,[&quot;Torso&quot;] = 1,[&quot;Wedge&quot;] = 2,},},[&quot;MessageType&quot;] = {[&quot;name&quot;] = &quot;MessageType&quot;,[&quot;items&quot;] = {[&quot;MessageError&quot;] = 3,[&quot;MessageInfo&quot;] = 1,[&quot;MessageOutput&quot;] = 0,[&quot;MessageWarning&quot;] = 2,},},[&quot;ModelLevelOfDetail&quot;] = {[&quot;name&quot;] = &quot;ModelLevelOfDetail&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 0,[&quot;Disabled&quot;] = 2,[&quot;StreamingMesh&quot;] = 1,},},[&quot;ModelStreamingBehavior&quot;] = {[&quot;name&quot;] = &quot;ModelStreamingBehavior&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Improved&quot;] = 2,[&quot;Legacy&quot;] = 1,},},[&quot;ModelStreamingMode&quot;] = {[&quot;name&quot;] = &quot;ModelStreamingMode&quot;,[&quot;items&quot;] = {[&quot;Atomic&quot;] = 1,[&quot;Default&quot;] = 0,[&quot;Nonatomic&quot;] = 4,[&quot;Persistent&quot;] = 2,[&quot;PersistentPerPlayer&quot;] = 3,},},[&quot;ModerationStatus&quot;] = {[&quot;name&quot;] = &quot;ModerationStatus&quot;,[&quot;items&quot;] = {[&quot;Invalid&quot;] = 5,[&quot;NotApplicable&quot;] = 4,[&quot;NotReviewed&quot;] = 3,[&quot;ReviewedApproved&quot;] = 1,[&quot;ReviewedRejected&quot;] = 2,},},[&quot;ModifierKey&quot;] = {[&quot;name&quot;] = &quot;ModifierKey&quot;,[&quot;items&quot;] = {[&quot;Alt&quot;] = 2,[&quot;Ctrl&quot;] = 1,[&quot;Meta&quot;] = 3,[&quot;Shift&quot;] = 0,},},[&quot;MouseBehavior&quot;] = {[&quot;name&quot;] = &quot;MouseBehavior&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;LockCenter&quot;] = 1,[&quot;LockCurrentPosition&quot;] = 2,},},[&quot;MoveState&quot;] = {[&quot;name&quot;] = &quot;MoveState&quot;,[&quot;items&quot;] = {[&quot;AirFree&quot;] = 4,[&quot;Coasting&quot;] = 1,[&quot;Pushing&quot;] = 2,[&quot;Stopped&quot;] = 0,[&quot;Stopping&quot;] = 3,},},[&quot;MoverConstraintRootBehaviorMode&quot;] = {[&quot;name&quot;] = &quot;MoverConstraintRootBehaviorMode&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;MuteState&quot;] = {[&quot;name&quot;] = &quot;MuteState&quot;,[&quot;items&quot;] = {[&quot;Muted&quot;] = 1,[&quot;Unmuted&quot;] = 0,},},[&quot;NameOcclusion&quot;] = {[&quot;name&quot;] = &quot;NameOcclusion&quot;,[&quot;items&quot;] = {[&quot;EnemyOcclusion&quot;] = 1,[&quot;NoOcclusion&quot;] = 0,[&quot;OccludeAll&quot;] = 2,},},[&quot;NetworkOwnership&quot;] = {[&quot;name&quot;] = &quot;NetworkOwnership&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 0,[&quot;Manual&quot;] = 1,[&quot;OnContact&quot;] = 2,},},[&quot;NetworkStatus&quot;] = {[&quot;name&quot;] = &quot;NetworkStatus&quot;,[&quot;items&quot;] = {[&quot;Connected&quot;] = 1,[&quot;Disconnected&quot;] = 2,[&quot;Unknown&quot;] = 0,},},[&quot;NoiseType&quot;] = {[&quot;name&quot;] = &quot;NoiseType&quot;,[&quot;items&quot;] = {[&quot;SimplexGabor&quot;] = 0,},},[&quot;NormalId&quot;] = {[&quot;name&quot;] = &quot;NormalId&quot;,[&quot;items&quot;] = {[&quot;Back&quot;] = 2,[&quot;Bottom&quot;] = 4,[&quot;Front&quot;] = 5,[&quot;Left&quot;] = 3,[&quot;Right&quot;] = 0,[&quot;Top&quot;] = 1,},},[&quot;NotificationButtonType&quot;] = {[&quot;name&quot;] = &quot;NotificationButtonType&quot;,[&quot;items&quot;] = {[&quot;Primary&quot;] = 0,[&quot;Secondary&quot;] = 1,},},[&quot;OperationType&quot;] = {[&quot;name&quot;] = &quot;OperationType&quot;,[&quot;items&quot;] = {[&quot;Intersection&quot;] = 3,[&quot;Null&quot;] = 0,[&quot;Primitive&quot;] = 4,[&quot;Subtraction&quot;] = 2,[&quot;Union&quot;] = 1,},},[&quot;OrientationAlignmentMode&quot;] = {[&quot;name&quot;] = &quot;OrientationAlignmentMode&quot;,[&quot;items&quot;] = {[&quot;OneAttachment&quot;] = 0,[&quot;TwoAttachment&quot;] = 1,},},[&quot;OutfitSource&quot;] = {[&quot;name&quot;] = &quot;OutfitSource&quot;,[&quot;items&quot;] = {[&quot;All&quot;] = 1,[&quot;Created&quot;] = 2,[&quot;Purchased&quot;] = 3,},},[&quot;OutfitType&quot;] = {[&quot;name&quot;] = &quot;OutfitType&quot;,[&quot;items&quot;] = {[&quot;All&quot;] = 1,[&quot;Avatar&quot;] = 2,[&quot;DynamicHead&quot;] = 3,},},[&quot;OutputLayoutMode&quot;] = {[&quot;name&quot;] = &quot;OutputLayoutMode&quot;,[&quot;items&quot;] = {[&quot;Horizontal&quot;] = 0,[&quot;Vertical&quot;] = 1,},},[&quot;OverrideMouseIconBehavior&quot;] = {[&quot;name&quot;] = &quot;OverrideMouseIconBehavior&quot;,[&quot;items&quot;] = {[&quot;ForceHide&quot;] = 2,[&quot;ForceShow&quot;] = 1,[&quot;None&quot;] = 0,},},[&quot;PackagePermission&quot;] = {[&quot;name&quot;] = &quot;PackagePermission&quot;,[&quot;items&quot;] = {[&quot;Edit&quot;] = 4,[&quot;NoAccess&quot;] = 1,[&quot;None&quot;] = 0,[&quot;Own&quot;] = 5,[&quot;Revoked&quot;] = 2,[&quot;UseView&quot;] = 3,},},[&quot;PartType&quot;] = {[&quot;name&quot;] = &quot;PartType&quot;,[&quot;items&quot;] = {[&quot;Ball&quot;] = 0,[&quot;Block&quot;] = 1,[&quot;CornerWedge&quot;] = 4,[&quot;Cylinder&quot;] = 2,[&quot;Wedge&quot;] = 3,},},[&quot;ParticleEmitterShape&quot;] = {[&quot;name&quot;] = &quot;ParticleEmitterShape&quot;,[&quot;items&quot;] = {[&quot;Box&quot;] = 0,[&quot;Cylinder&quot;] = 2,[&quot;Disc&quot;] = 3,[&quot;Sphere&quot;] = 1,},},[&quot;ParticleEmitterShapeInOut&quot;] = {[&quot;name&quot;] = &quot;ParticleEmitterShapeInOut&quot;,[&quot;items&quot;] = {[&quot;InAndOut&quot;] = 2,[&quot;Inward&quot;] = 1,[&quot;Outward&quot;] = 0,},},[&quot;ParticleEmitterShapeStyle&quot;] = {[&quot;name&quot;] = &quot;ParticleEmitterShapeStyle&quot;,[&quot;items&quot;] = {[&quot;Surface&quot;] = 1,[&quot;Volume&quot;] = 0,},},[&quot;ParticleFlipbookLayout&quot;] = {[&quot;name&quot;] = &quot;ParticleFlipbookLayout&quot;,[&quot;items&quot;] = {[&quot;Grid2x2&quot;] = 1,[&quot;Grid4x4&quot;] = 2,[&quot;Grid8x8&quot;] = 3,[&quot;None&quot;] = 0,},},[&quot;ParticleFlipbookMode&quot;] = {[&quot;name&quot;] = &quot;ParticleFlipbookMode&quot;,[&quot;items&quot;] = {[&quot;Loop&quot;] = 0,[&quot;OneShot&quot;] = 1,[&quot;PingPong&quot;] = 2,[&quot;Random&quot;] = 3,},},[&quot;ParticleFlipbookTextureCompatible&quot;] = {[&quot;name&quot;] = &quot;ParticleFlipbookTextureCompatible&quot;,[&quot;items&quot;] = {[&quot;Compatible&quot;] = 1,[&quot;NotCompatible&quot;] = 0,[&quot;Unknown&quot;] = 2,},},[&quot;ParticleOrientation&quot;] = {[&quot;name&quot;] = &quot;ParticleOrientation&quot;,[&quot;items&quot;] = {[&quot;FacingCamera&quot;] = 0,[&quot;FacingCameraWorldUp&quot;] = 1,[&quot;VelocityParallel&quot;] = 2,[&quot;VelocityPerpendicular&quot;] = 3,},},[&quot;PathStatus&quot;] = {[&quot;name&quot;] = &quot;PathStatus&quot;,[&quot;items&quot;] = {[&quot;ClosestNoPath&quot;] = 1,[&quot;ClosestOutOfRange&quot;] = 2,[&quot;FailFinishNotEmpty&quot;] = 4,[&quot;FailStartNotEmpty&quot;] = 3,[&quot;NoPath&quot;] = 5,[&quot;Success&quot;] = 0,},},[&quot;PathWaypointAction&quot;] = {[&quot;name&quot;] = &quot;PathWaypointAction&quot;,[&quot;items&quot;] = {[&quot;Custom&quot;] = 2,[&quot;Jump&quot;] = 1,[&quot;Walk&quot;] = 0,},},[&quot;PathfindingUseImprovedSearch&quot;] = {[&quot;name&quot;] = &quot;PathfindingUseImprovedSearch&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;PermissionLevelShown&quot;] = {[&quot;name&quot;] = &quot;PermissionLevelShown&quot;,[&quot;items&quot;] = {[&quot;Game&quot;] = 0,[&quot;Roblox&quot;] = 4,[&quot;RobloxGame&quot;] = 1,[&quot;RobloxScript&quot;] = 2,[&quot;Studio&quot;] = 3,},},[&quot;PhysicsSimulationRate&quot;] = {[&quot;name&quot;] = &quot;PhysicsSimulationRate&quot;,[&quot;items&quot;] = {[&quot;Fixed120Hz&quot;] = 1,[&quot;Fixed240Hz&quot;] = 0,[&quot;Fixed60Hz&quot;] = 2,},},[&quot;PhysicsSteppingMethod&quot;] = {[&quot;name&quot;] = &quot;PhysicsSteppingMethod&quot;,[&quot;items&quot;] = {[&quot;Adaptive&quot;] = 2,[&quot;Default&quot;] = 0,[&quot;Fixed&quot;] = 1,},},[&quot;Platform&quot;] = {[&quot;name&quot;] = &quot;Platform&quot;,[&quot;items&quot;] = {[&quot;Android&quot;] = 3,[&quot;AndroidTV&quot;] = 11,[&quot;BeOS&quot;] = 17,[&quot;Chromecast&quot;] = 12,[&quot;DOS&quot;] = 16,[&quot;IOS&quot;] = 2,[&quot;Linux&quot;] = 13,[&quot;MetaOS&quot;] = 20,[&quot;NX&quot;] = 9,[&quot;None&quot;] = 21,[&quot;OSX&quot;] = 1,[&quot;Ouya&quot;] = 10,[&quot;PS3&quot;] = 6,[&quot;PS4&quot;] = 5,[&quot;PS5&quot;] = 19,[&quot;SteamOS&quot;] = 14,[&quot;UWP&quot;] = 18,[&quot;WebOS&quot;] = 15,[&quot;WiiU&quot;] = 8,[&quot;Windows&quot;] = 0,[&quot;XBox360&quot;] = 7,[&quot;XBoxOne&quot;] = 4,},},[&quot;PlaybackState&quot;] = {[&quot;name&quot;] = &quot;PlaybackState&quot;,[&quot;items&quot;] = {[&quot;Begin&quot;] = 0,[&quot;Cancelled&quot;] = 5,[&quot;Completed&quot;] = 4,[&quot;Delayed&quot;] = 1,[&quot;Paused&quot;] = 3,[&quot;Playing&quot;] = 2,},},[&quot;PlayerActions&quot;] = {[&quot;name&quot;] = &quot;PlayerActions&quot;,[&quot;items&quot;] = {[&quot;CharacterBackward&quot;] = 1,[&quot;CharacterForward&quot;] = 0,[&quot;CharacterJump&quot;] = 4,[&quot;CharacterLeft&quot;] = 2,[&quot;CharacterRight&quot;] = 3,},},[&quot;PlayerCharacterDestroyBehavior&quot;] = {[&quot;name&quot;] = &quot;PlayerCharacterDestroyBehavior&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;PlayerChatType&quot;] = {[&quot;name&quot;] = &quot;PlayerChatType&quot;,[&quot;items&quot;] = {[&quot;All&quot;] = 0,[&quot;Team&quot;] = 1,[&quot;Whisper&quot;] = 2,},},[&quot;PlayerDataErrorState&quot;] = {[&quot;name&quot;] = &quot;PlayerDataErrorState&quot;,[&quot;items&quot;] = {[&quot;FlushFailed&quot;] = 1,[&quot;LoadFailed&quot;] = 0,[&quot;None&quot;] = 3,[&quot;ReleaseFailed&quot;] = 2,},},[&quot;PlayerDataLoadFailureBehavior&quot;] = {[&quot;name&quot;] = &quot;PlayerDataLoadFailureBehavior&quot;,[&quot;items&quot;] = {[&quot;Failure&quot;] = 0,[&quot;FallbackToDefault&quot;] = 1,[&quot;Kick&quot;] = 2,},},[&quot;PoseEasingDirection&quot;] = {[&quot;name&quot;] = &quot;PoseEasingDirection&quot;,[&quot;items&quot;] = {[&quot;In&quot;] = 0,[&quot;InOut&quot;] = 2,[&quot;Out&quot;] = 1,},},[&quot;PoseEasingStyle&quot;] = {[&quot;name&quot;] = &quot;PoseEasingStyle&quot;,[&quot;items&quot;] = {[&quot;Bounce&quot;] = 4,[&quot;Constant&quot;] = 1,[&quot;Cubic&quot;] = 3,[&quot;CubicV2&quot;] = 5,[&quot;Elastic&quot;] = 2,[&quot;Linear&quot;] = 0,},},[&quot;PositionAlignmentMode&quot;] = {[&quot;name&quot;] = &quot;PositionAlignmentMode&quot;,[&quot;items&quot;] = {[&quot;OneAttachment&quot;] = 0,[&quot;TwoAttachment&quot;] = 1,},},[&quot;PreferredTextSize&quot;] = {[&quot;name&quot;] = &quot;PreferredTextSize&quot;,[&quot;items&quot;] = {[&quot;Large&quot;] = 2,[&quot;Larger&quot;] = 3,[&quot;Largest&quot;] = 4,[&quot;Medium&quot;] = 1,},},[&quot;PrimalPhysicsSolver&quot;] = {[&quot;name&quot;] = &quot;PrimalPhysicsSolver&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 2,[&quot;Experimental&quot;] = 1,},},[&quot;PrimitiveType&quot;] = {[&quot;name&quot;] = &quot;PrimitiveType&quot;,[&quot;items&quot;] = {[&quot;Ball&quot;] = 1,[&quot;Block&quot;] = 3,[&quot;CornerWedge&quot;] = 5,[&quot;Cylinder&quot;] = 2,[&quot;Null&quot;] = 0,[&quot;Wedge&quot;] = 4,},},[&quot;PrivilegeType&quot;] = {[&quot;name&quot;] = &quot;PrivilegeType&quot;,[&quot;items&quot;] = {[&quot;Admin&quot;] = 240,[&quot;Banned&quot;] = 0,[&quot;Member&quot;] = 128,[&quot;Owner&quot;] = 255,[&quot;Visitor&quot;] = 10,},},[&quot;ProductLocationRestriction&quot;] = {[&quot;name&quot;] = &quot;ProductLocationRestriction&quot;,[&quot;items&quot;] = {[&quot;AllGames&quot;] = 2,[&quot;AllowedGames&quot;] = 1,[&quot;AvatarShop&quot;] = 0,},},[&quot;ProductPurchaseChannel&quot;] = {[&quot;name&quot;] = &quot;ProductPurchaseChannel&quot;,[&quot;items&quot;] = {[&quot;AdReward&quot;] = 3,[&quot;CommerceProduct&quot;] = 4,[&quot;ExperienceDetailsPage&quot;] = 2,[&quot;InExperience&quot;] = 1,},},[&quot;ProductPurchaseDecision&quot;] = {[&quot;name&quot;] = &quot;ProductPurchaseDecision&quot;,[&quot;items&quot;] = {[&quot;NotProcessedYet&quot;] = 0,[&quot;PurchaseGranted&quot;] = 1,},},[&quot;PromptCreateAssetResult&quot;] = {[&quot;name&quot;] = &quot;PromptCreateAssetResult&quot;,[&quot;items&quot;] = {[&quot;NoUserInput&quot;] = 5,[&quot;PermissionDenied&quot;] = 2,[&quot;Success&quot;] = 1,[&quot;Timeout&quot;] = 3,[&quot;UnknownFailure&quot;] = 6,[&quot;UploadFailed&quot;] = 4,},},[&quot;PromptCreateAvatarResult&quot;] = {[&quot;name&quot;] = &quot;PromptCreateAvatarResult&quot;,[&quot;items&quot;] = {[&quot;InvalidHumanoidDescription&quot;] = 6,[&quot;MaxOutfits&quot;] = 9,[&quot;ModeratedName&quot;] = 8,[&quot;NoUserInput&quot;] = 5,[&quot;PermissionDenied&quot;] = 2,[&quot;PurchaseFailure&quot;] = 10,[&quot;Success&quot;] = 1,[&quot;Timeout&quot;] = 3,[&quot;TokenInvalid&quot;] = 12,[&quot;UGCValidationFailed&quot;] = 7,[&quot;UnknownFailure&quot;] = 11,[&quot;UploadFailed&quot;] = 4,},},[&quot;PromptPublishAssetResult&quot;] = {[&quot;name&quot;] = &quot;PromptPublishAssetResult&quot;,[&quot;items&quot;] = {[&quot;NoUserInput&quot;] = 5,[&quot;PermissionDenied&quot;] = 2,[&quot;Success&quot;] = 1,[&quot;Timeout&quot;] = 3,[&quot;UnknownFailure&quot;] = 6,[&quot;UploadFailed&quot;] = 4,},},[&quot;PropertyStatus&quot;] = {[&quot;name&quot;] = &quot;PropertyStatus&quot;,[&quot;items&quot;] = {[&quot;Error&quot;] = 2,[&quot;Ok&quot;] = 0,[&quot;Warning&quot;] = 1,},},[&quot;ProximityPromptExclusivity&quot;] = {[&quot;name&quot;] = &quot;ProximityPromptExclusivity&quot;,[&quot;items&quot;] = {[&quot;AlwaysShow&quot;] = 2,[&quot;OneGlobally&quot;] = 1,[&quot;OnePerButton&quot;] = 0,},},[&quot;ProximityPromptInputType&quot;] = {[&quot;name&quot;] = &quot;ProximityPromptInputType&quot;,[&quot;items&quot;] = {[&quot;Gamepad&quot;] = 1,[&quot;Keyboard&quot;] = 0,[&quot;Touch&quot;] = 2,},},[&quot;ProximityPromptStyle&quot;] = {[&quot;name&quot;] = &quot;ProximityPromptStyle&quot;,[&quot;items&quot;] = {[&quot;Custom&quot;] = 1,[&quot;Default&quot;] = 0,},},[&quot;QualityLevel&quot;] = {[&quot;name&quot;] = &quot;QualityLevel&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 0,[&quot;Level01&quot;] = 1,[&quot;Level02&quot;] = 2,[&quot;Level03&quot;] = 3,[&quot;Level04&quot;] = 4,[&quot;Level05&quot;] = 5,[&quot;Level06&quot;] = 6,[&quot;Level07&quot;] = 7,[&quot;Level08&quot;] = 8,[&quot;Level09&quot;] = 9,[&quot;Level10&quot;] = 10,[&quot;Level11&quot;] = 11,[&quot;Level12&quot;] = 12,[&quot;Level13&quot;] = 13,[&quot;Level14&quot;] = 14,[&quot;Level15&quot;] = 15,[&quot;Level16&quot;] = 16,[&quot;Level17&quot;] = 17,[&quot;Level18&quot;] = 18,[&quot;Level19&quot;] = 19,[&quot;Level20&quot;] = 20,[&quot;Level21&quot;] = 21,},},[&quot;R15CollisionType&quot;] = {[&quot;name&quot;] = &quot;R15CollisionType&quot;,[&quot;items&quot;] = {[&quot;InnerBox&quot;] = 1,[&quot;OuterBox&quot;] = 0,},},[&quot;RaycastFilterType&quot;] = {[&quot;name&quot;] = &quot;RaycastFilterType&quot;,[&quot;items&quot;] = {[&quot;Exclude&quot;] = 0,[&quot;Include&quot;] = 1,},},[&quot;RejectCharacterDeletions&quot;] = {[&quot;name&quot;] = &quot;RejectCharacterDeletions&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;RenderFidelity&quot;] = {[&quot;name&quot;] = &quot;RenderFidelity&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 0,[&quot;Performance&quot;] = 2,[&quot;Precise&quot;] = 1,},},[&quot;RenderPriority&quot;] = {[&quot;name&quot;] = &quot;RenderPriority&quot;,[&quot;items&quot;] = {[&quot;Camera&quot;] = 200,[&quot;Character&quot;] = 300,[&quot;First&quot;] = 0,[&quot;Input&quot;] = 100,[&quot;Last&quot;] = 2000,},},[&quot;RenderingCacheOptimizationMode&quot;] = {[&quot;name&quot;] = &quot;RenderingCacheOptimizationMode&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;RenderingTestComparisonMethod&quot;] = {[&quot;name&quot;] = &quot;RenderingTestComparisonMethod&quot;,[&quot;items&quot;] = {[&quot;diff&quot;] = 1,[&quot;psnr&quot;] = 0,},},[&quot;ReplicateInstanceDestroySetting&quot;] = {[&quot;name&quot;] = &quot;ReplicateInstanceDestroySetting&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;ResamplerMode&quot;] = {[&quot;name&quot;] = &quot;ResamplerMode&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Pixelated&quot;] = 1,},},[&quot;ReservedHighlightId&quot;] = {[&quot;name&quot;] = &quot;ReservedHighlightId&quot;,[&quot;items&quot;] = {[&quot;Active&quot;] = 131072,[&quot;Hover&quot;] = 262144,[&quot;Selection&quot;] = 524288,[&quot;Standard&quot;] = 0,},},[&quot;RestPose&quot;] = {[&quot;name&quot;] = &quot;RestPose&quot;,[&quot;items&quot;] = {[&quot;Custom&quot;] = 2,[&quot;Default&quot;] = 0,[&quot;RotationsReset&quot;] = 1,},},[&quot;ReturnKeyType&quot;] = {[&quot;name&quot;] = &quot;ReturnKeyType&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Done&quot;] = 1,[&quot;Go&quot;] = 2,[&quot;Next&quot;] = 3,[&quot;Search&quot;] = 4,[&quot;Send&quot;] = 5,},},[&quot;ReverbType&quot;] = {[&quot;name&quot;] = &quot;ReverbType&quot;,[&quot;items&quot;] = {[&quot;Alley&quot;] = 15,[&quot;Arena&quot;] = 10,[&quot;Auditorium&quot;] = 7,[&quot;Bathroom&quot;] = 4,[&quot;CarpettedHallway&quot;] = 12,[&quot;Cave&quot;] = 9,[&quot;City&quot;] = 17,[&quot;ConcertHall&quot;] = 8,[&quot;Forest&quot;] = 16,[&quot;GenericReverb&quot;] = 1,[&quot;Hallway&quot;] = 13,[&quot;Hangar&quot;] = 11,[&quot;LivingRoom&quot;] = 5,[&quot;Mountains&quot;] = 18,[&quot;NoReverb&quot;] = 0,[&quot;PaddedCell&quot;] = 2,[&quot;ParkingLot&quot;] = 21,[&quot;Plain&quot;] = 20,[&quot;Quarry&quot;] = 19,[&quot;Room&quot;] = 3,[&quot;SewerPipe&quot;] = 22,[&quot;StoneCorridor&quot;] = 14,[&quot;StoneRoom&quot;] = 6,[&quot;UnderWater&quot;] = 23,},},[&quot;RibbonTool&quot;] = {[&quot;name&quot;] = &quot;RibbonTool&quot;,[&quot;items&quot;] = {[&quot;ColorPicker&quot;] = 5,[&quot;Group&quot;] = 7,[&quot;MaterialPicker&quot;] = 6,[&quot;Move&quot;] = 3,[&quot;None&quot;] = 9,[&quot;PivotEditor&quot;] = 10,[&quot;Rotate&quot;] = 2,[&quot;Scale&quot;] = 1,[&quot;Select&quot;] = 0,[&quot;Transform&quot;] = 4,[&quot;Ungroup&quot;] = 8,},},[&quot;RigScale&quot;] = {[&quot;name&quot;] = &quot;RigScale&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Rthro&quot;] = 1,[&quot;RthroNarrow&quot;] = 2,},},[&quot;RigType&quot;] = {[&quot;name&quot;] = &quot;RigType&quot;,[&quot;items&quot;] = {[&quot;Custom&quot;] = 1,[&quot;None&quot;] = 2,[&quot;R15&quot;] = 0,},},[&quot;RollOffMode&quot;] = {[&quot;name&quot;] = &quot;RollOffMode&quot;,[&quot;items&quot;] = {[&quot;Inverse&quot;] = 0,[&quot;InverseTapered&quot;] = 3,[&quot;Linear&quot;] = 1,[&quot;LinearSquare&quot;] = 2,},},[&quot;RolloutState&quot;] = {[&quot;name&quot;] = &quot;RolloutState&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;RotationOrder&quot;] = {[&quot;name&quot;] = &quot;RotationOrder&quot;,[&quot;items&quot;] = {[&quot;XYZ&quot;] = 0,[&quot;XZY&quot;] = 1,[&quot;YXZ&quot;] = 3,[&quot;YZX&quot;] = 2,[&quot;ZXY&quot;] = 4,[&quot;ZYX&quot;] = 5,},},[&quot;RotationType&quot;] = {[&quot;name&quot;] = &quot;RotationType&quot;,[&quot;items&quot;] = {[&quot;CameraRelative&quot;] = 1,[&quot;MovementRelative&quot;] = 0,},},[&quot;RtlTextSupport&quot;] = {[&quot;name&quot;] = &quot;RtlTextSupport&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;RunContext&quot;] = {[&quot;name&quot;] = &quot;RunContext&quot;,[&quot;items&quot;] = {[&quot;Client&quot;] = 2,[&quot;Legacy&quot;] = 0,[&quot;Plugin&quot;] = 3,[&quot;Server&quot;] = 1,},},[&quot;RunState&quot;] = {[&quot;name&quot;] = &quot;RunState&quot;,[&quot;items&quot;] = {[&quot;Paused&quot;] = 2,[&quot;Running&quot;] = 1,[&quot;Stopped&quot;] = 0,},},[&quot;RuntimeUndoBehavior&quot;] = {[&quot;name&quot;] = &quot;RuntimeUndoBehavior&quot;,[&quot;items&quot;] = {[&quot;Aggregate&quot;] = 0,[&quot;Hybrid&quot;] = 2,[&quot;Snapshot&quot;] = 1,},},[&quot;SafeAreaCompatibility&quot;] = {[&quot;name&quot;] = &quot;SafeAreaCompatibility&quot;,[&quot;items&quot;] = {[&quot;FullscreenExtension&quot;] = 1,[&quot;None&quot;] = 0,},},[&quot;SalesTypeFilter&quot;] = {[&quot;name&quot;] = &quot;SalesTypeFilter&quot;,[&quot;items&quot;] = {[&quot;All&quot;] = 1,[&quot;Collectibles&quot;] = 2,[&quot;Premium&quot;] = 3,},},[&quot;SandboxedInstanceMode&quot;] = {[&quot;name&quot;] = &quot;SandboxedInstanceMode&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Experimental&quot;] = 1,},},[&quot;SaveAvatarThumbnailCustomizationFailure&quot;] = {[&quot;name&quot;] = &quot;SaveAvatarThumbnailCustomizationFailure&quot;,[&quot;items&quot;] = {[&quot;BadDistanceScale&quot;] = 4,[&quot;BadFieldOfViewDeg&quot;] = 3,[&quot;BadThumbnailType&quot;] = 1,[&quot;BadYRotDeg&quot;] = 2,[&quot;Other&quot;] = 5,[&quot;Throttled&quot;] = 6,},},[&quot;SaveFilter&quot;] = {[&quot;name&quot;] = &quot;SaveFilter&quot;,[&quot;items&quot;] = {[&quot;SaveAll&quot;] = 2,[&quot;SaveGame&quot;] = 1,[&quot;SaveWorld&quot;] = 0,},},[&quot;SavedQualitySetting&quot;] = {[&quot;name&quot;] = &quot;SavedQualitySetting&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 0,[&quot;QualityLevel1&quot;] = 1,[&quot;QualityLevel10&quot;] = 10,[&quot;QualityLevel2&quot;] = 2,[&quot;QualityLevel3&quot;] = 3,[&quot;QualityLevel4&quot;] = 4,[&quot;QualityLevel5&quot;] = 5,[&quot;QualityLevel6&quot;] = 6,[&quot;QualityLevel7&quot;] = 7,[&quot;QualityLevel8&quot;] = 8,[&quot;QualityLevel9&quot;] = 9,},},[&quot;ScaleType&quot;] = {[&quot;name&quot;] = &quot;ScaleType&quot;,[&quot;items&quot;] = {[&quot;Crop&quot;] = 4,[&quot;Fit&quot;] = 3,[&quot;Slice&quot;] = 1,[&quot;Stretch&quot;] = 0,[&quot;Tile&quot;] = 2,},},[&quot;ScopeCheckResult&quot;] = {[&quot;name&quot;] = &quot;ScopeCheckResult&quot;,[&quot;items&quot;] = {[&quot;BackendError&quot;] = 4,[&quot;ConsentAccepted&quot;] = 0,[&quot;ConsentDenied&quot;] = 7,[&quot;InvalidArgument&quot;] = 6,[&quot;InvalidScopes&quot;] = 1,[&quot;NoUserInput&quot;] = 3,[&quot;Timeout&quot;] = 2,[&quot;UnexpectedError&quot;] = 5,},},[&quot;ScreenInsets&quot;] = {[&quot;name&quot;] = &quot;ScreenInsets&quot;,[&quot;items&quot;] = {[&quot;CoreUISafeInsets&quot;] = 2,[&quot;DeviceSafeInsets&quot;] = 1,[&quot;None&quot;] = 0,[&quot;TopbarSafeInsets&quot;] = 3,},},[&quot;ScreenOrientation&quot;] = {[&quot;name&quot;] = &quot;ScreenOrientation&quot;,[&quot;items&quot;] = {[&quot;LandscapeLeft&quot;] = 0,[&quot;LandscapeRight&quot;] = 1,[&quot;LandscapeSensor&quot;] = 2,[&quot;Portrait&quot;] = 3,[&quot;Sensor&quot;] = 4,},},[&quot;ScrollBarInset&quot;] = {[&quot;name&quot;] = &quot;ScrollBarInset&quot;,[&quot;items&quot;] = {[&quot;Always&quot;] = 2,[&quot;None&quot;] = 0,[&quot;ScrollBar&quot;] = 1,},},[&quot;ScrollingDirection&quot;] = {[&quot;name&quot;] = &quot;ScrollingDirection&quot;,[&quot;items&quot;] = {[&quot;X&quot;] = 1,[&quot;XY&quot;] = 4,[&quot;Y&quot;] = 2,},},[&quot;SecurityCapability&quot;] = {[&quot;name&quot;] = &quot;SecurityCapability&quot;,[&quot;items&quot;] = {[&quot;AccessOutsideWrite&quot;] = 2,[&quot;Animation&quot;] = 15,[&quot;AssetRequire&quot;] = 3,[&quot;Audio&quot;] = 8,[&quot;Avatar&quot;] = 16,[&quot;Basic&quot;] = 7,[&quot;CSG&quot;] = 13,[&quot;Chat&quot;] = 14,[&quot;CreateInstances&quot;] = 6,[&quot;DataStore&quot;] = 9,[&quot;Environment&quot;] = 18,[&quot;Input&quot;] = 17,[&quot;LegacySound&quot;] = 20,[&quot;LoadString&quot;] = 4,[&quot;Network&quot;] = 10,[&quot;Physics&quot;] = 11,[&quot;Players&quot;] = 21,[&quot;RemoteEvent&quot;] = 19,[&quot;RunClientScript&quot;] = 0,[&quot;RunServerScript&quot;] = 1,[&quot;ScriptGlobals&quot;] = 5,[&quot;UI&quot;] = 12,},},[&quot;SelectionBehavior&quot;] = {[&quot;name&quot;] = &quot;SelectionBehavior&quot;,[&quot;items&quot;] = {[&quot;Escape&quot;] = 0,[&quot;Stop&quot;] = 1,},},[&quot;SelectionRenderMode&quot;] = {[&quot;name&quot;] = &quot;SelectionRenderMode&quot;,[&quot;items&quot;] = {[&quot;Both&quot;] = 2,[&quot;BoundingBoxes&quot;] = 1,[&quot;Outlines&quot;] = 0,},},[&quot;SelfViewPosition&quot;] = {[&quot;name&quot;] = &quot;SelfViewPosition&quot;,[&quot;items&quot;] = {[&quot;BottomLeft&quot;] = 3,[&quot;BottomRight&quot;] = 4,[&quot;LastPosition&quot;] = 0,[&quot;TopLeft&quot;] = 1,[&quot;TopRight&quot;] = 2,},},[&quot;SensorMode&quot;] = {[&quot;name&quot;] = &quot;SensorMode&quot;,[&quot;items&quot;] = {[&quot;Floor&quot;] = 0,[&quot;Ladder&quot;] = 1,},},[&quot;SensorUpdateType&quot;] = {[&quot;name&quot;] = &quot;SensorUpdateType&quot;,[&quot;items&quot;] = {[&quot;Manual&quot;] = 1,[&quot;OnRead&quot;] = 0,},},[&quot;ServerLiveEditingMode&quot;] = {[&quot;name&quot;] = &quot;ServerLiveEditingMode&quot;,[&quot;items&quot;] = {[&quot;Disabled&quot;] = 2,[&quot;Enabled&quot;] = 1,[&quot;Uninitialized&quot;] = 0,},},[&quot;ServiceVisibility&quot;] = {[&quot;name&quot;] = &quot;ServiceVisibility&quot;,[&quot;items&quot;] = {[&quot;Always&quot;] = 0,[&quot;Off&quot;] = 1,[&quot;WithChildren&quot;] = 2,},},[&quot;Severity&quot;] = {[&quot;name&quot;] = &quot;Severity&quot;,[&quot;items&quot;] = {[&quot;Error&quot;] = 1,[&quot;Hint&quot;] = 4,[&quot;Information&quot;] = 3,[&quot;Warning&quot;] = 2,},},[&quot;ShowAdResult&quot;] = {[&quot;name&quot;] = &quot;ShowAdResult&quot;,[&quot;items&quot;] = {[&quot;AdAlreadyShowing&quot;] = 3,[&quot;AdNotReady&quot;] = 2,[&quot;InsufficientMemory&quot;] = 6,[&quot;InternalError&quot;] = 4,[&quot;ShowCompleted&quot;] = 1,[&quot;ShowInterrupted&quot;] = 5,},},[&quot;SignalBehavior&quot;] = {[&quot;name&quot;] = &quot;SignalBehavior&quot;,[&quot;items&quot;] = {[&quot;AncestryDeferred&quot;] = 3,[&quot;Default&quot;] = 0,[&quot;Deferred&quot;] = 2,[&quot;Immediate&quot;] = 1,},},[&quot;SizeConstraint&quot;] = {[&quot;name&quot;] = &quot;SizeConstraint&quot;,[&quot;items&quot;] = {[&quot;RelativeXX&quot;] = 1,[&quot;RelativeXY&quot;] = 0,[&quot;RelativeYY&quot;] = 2,},},[&quot;SolverConvergenceMetricType&quot;] = {[&quot;name&quot;] = &quot;SolverConvergenceMetricType&quot;,[&quot;items&quot;] = {[&quot;AlgorithmAgnostic&quot;] = 1,[&quot;IterationBased&quot;] = 0,},},[&quot;SolverConvergenceVisualizationMode&quot;] = {[&quot;name&quot;] = &quot;SolverConvergenceVisualizationMode&quot;,[&quot;items&quot;] = {[&quot;Disabled&quot;] = 0,[&quot;PerEdge&quot;] = 2,[&quot;PerIsland&quot;] = 1,},},[&quot;SortDirection&quot;] = {[&quot;name&quot;] = &quot;SortDirection&quot;,[&quot;items&quot;] = {[&quot;Ascending&quot;] = 0,[&quot;Descending&quot;] = 1,},},[&quot;SortOrder&quot;] = {[&quot;name&quot;] = &quot;SortOrder&quot;,[&quot;items&quot;] = {[&quot;Custom&quot;] = 1,[&quot;LayoutOrder&quot;] = 2,[&quot;Name&quot;] = 0,},},[&quot;SpecialKey&quot;] = {[&quot;name&quot;] = &quot;SpecialKey&quot;,[&quot;items&quot;] = {[&quot;ChatHotkey&quot;] = 5,[&quot;End&quot;] = 2,[&quot;Home&quot;] = 1,[&quot;Insert&quot;] = 0,[&quot;PageDown&quot;] = 4,[&quot;PageUp&quot;] = 3,},},[&quot;StartCorner&quot;] = {[&quot;name&quot;] = &quot;StartCorner&quot;,[&quot;items&quot;] = {[&quot;BottomLeft&quot;] = 2,[&quot;BottomRight&quot;] = 3,[&quot;TopLeft&quot;] = 0,[&quot;TopRight&quot;] = 1,},},[&quot;StateObjectFieldType&quot;] = {[&quot;name&quot;] = &quot;StateObjectFieldType&quot;,[&quot;items&quot;] = {[&quot;Boolean&quot;] = 0,[&quot;CFrame&quot;] = 1,[&quot;Float&quot;] = 2,[&quot;INVALID&quot;] = 7,[&quot;Instance&quot;] = 3,[&quot;Random&quot;] = 4,[&quot;Vector2&quot;] = 5,[&quot;Vector3&quot;] = 6,},},[&quot;Status&quot;] = {[&quot;name&quot;] = &quot;Status&quot;,[&quot;items&quot;] = {[&quot;Confusion&quot;] = 1,[&quot;Poison&quot;] = 0,},},[&quot;StreamOutBehavior&quot;] = {[&quot;name&quot;] = &quot;StreamOutBehavior&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;LowMemory&quot;] = 1,[&quot;Opportunistic&quot;] = 2,},},[&quot;StreamingIntegrityMode&quot;] = {[&quot;name&quot;] = &quot;StreamingIntegrityMode&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;MinimumRadiusPause&quot;] = 2,[&quot;PauseOutsideLoadedArea&quot;] = 3,},},[&quot;StreamingPauseMode&quot;] = {[&quot;name&quot;] = &quot;StreamingPauseMode&quot;,[&quot;items&quot;] = {[&quot;ClientPhysicsPause&quot;] = 2,[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,},},[&quot;StudioCloseMode&quot;] = {[&quot;name&quot;] = &quot;StudioCloseMode&quot;,[&quot;items&quot;] = {[&quot;CloseDoc&quot;] = 2,[&quot;CloseStudio&quot;] = 1,[&quot;LogOut&quot;] = 3,[&quot;None&quot;] = 0,},},[&quot;StudioDataModelType&quot;] = {[&quot;name&quot;] = &quot;StudioDataModelType&quot;,[&quot;items&quot;] = {[&quot;Edit&quot;] = 0,[&quot;None&quot;] = 4,[&quot;PlayClient&quot;] = 1,[&quot;PlayServer&quot;] = 2,[&quot;Standalone&quot;] = 3,},},[&quot;StudioPlaceUpdateFailureReason&quot;] = {[&quot;name&quot;] = &quot;StudioPlaceUpdateFailureReason&quot;,[&quot;items&quot;] = {[&quot;Other&quot;] = 0,[&quot;TeamCreateConflict&quot;] = 1,},},[&quot;StudioScriptEditorColorCategories&quot;] = {[&quot;name&quot;] = &quot;StudioScriptEditorColorCategories&quot;,[&quot;items&quot;] = {[&quot;AICOOverlayButtonBackground&quot;] = 43,[&quot;AICOOverlayButtonBackgroundHover&quot;] = 44,[&quot;AICOOverlayButtonBackgroundPressed&quot;] = 45,[&quot;AICOOverlayText&quot;] = 42,[&quot;ActiveLine&quot;] = 27,[&quot;Background&quot;] = 17,[&quot;Bool&quot;] = 10,[&quot;Bracket&quot;] = 31,[&quot;Builtin&quot;] = 6,[&quot;Comment&quot;] = 4,[&quot;DebuggerCurrentLine&quot;] = 28,[&quot;DebuggerErrorLine&quot;] = 29,[&quot;Default&quot;] = 0,[&quot;DocViewCodeBackground&quot;] = 41,[&quot;Error&quot;] = 23,[&quot;FindSelectionBackground&quot;] = 20,[&quot;Function&quot;] = 11,[&quot;FunctionName&quot;] = 15,[&quot;Hint&quot;] = 25,[&quot;IndentationRuler&quot;] = 46,[&quot;Info&quot;] = 24,[&quot;Keyword&quot;] = 5,[&quot;Local&quot;] = 12,[&quot;LuauKeyword&quot;] = 14,[&quot;MatchingWordBackground&quot;] = 21,[&quot;MenuBackground&quot;] = 36,[&quot;MenuBorder&quot;] = 40,[&quot;MenuPrimaryText&quot;] = 33,[&quot;MenuScrollbarBackground&quot;] = 38,[&quot;MenuScrollbarHandle&quot;] = 39,[&quot;MenuSecondaryText&quot;] = 34,[&quot;MenuSelectedBackground&quot;] = 37,[&quot;MenuSelectedText&quot;] = 35,[&quot;Method&quot;] = 7,[&quot;Nil&quot;] = 9,[&quot;Number&quot;] = 2,[&quot;Operator&quot;] = 1,[&quot;Property&quot;] = 8,[&quot;Ruler&quot;] = 30,[&quot;SelectionBackground&quot;] = 19,[&quot;SelectionText&quot;] = 18,[&quot;Self&quot;] = 13,[&quot;String&quot;] = 3,[&quot;TODO&quot;] = 16,[&quot;Type&quot;] = 32,[&quot;Warning&quot;] = 22,[&quot;Whitespace&quot;] = 26,},},[&quot;StudioScriptEditorColorPresets&quot;] = {[&quot;name&quot;] = &quot;StudioScriptEditorColorPresets&quot;,[&quot;items&quot;] = {[&quot;Custom&quot;] = 3,[&quot;Extra1&quot;] = 1,[&quot;Extra2&quot;] = 2,[&quot;RobloxDefault&quot;] = 0,},},[&quot;StudioStyleGuideColor&quot;] = {[&quot;name&quot;] = &quot;StudioStyleGuideColor&quot;,[&quot;items&quot;] = {[&quot;AICOOverlayButtonBackground&quot;] = 129,[&quot;AICOOverlayButtonBackgroundHover&quot;] = 130,[&quot;AICOOverlayButtonBackgroundPressed&quot;] = 131,[&quot;AICOOverlayText&quot;] = 128,[&quot;AttributeCog&quot;] = 119,[&quot;Border&quot;] = 31,[&quot;BreakpointMarker&quot;] = 136,[&quot;BrightText&quot;] = 40,[&quot;Button&quot;] = 17,[&quot;ButtonBorder&quot;] = 91,[&quot;ButtonText&quot;] = 92,[&quot;CategoryItem&quot;] = 24,[&quot;ChatIncomingBgColor&quot;] = 85,[&quot;ChatIncomingTextColor&quot;] = 86,[&quot;ChatModeratedMessageColor&quot;] = 89,[&quot;ChatOutgoingBgColor&quot;] = 87,[&quot;ChatOutgoingTextColor&quot;] = 88,[&quot;CheckedFieldBackground&quot;] = 94,[&quot;CheckedFieldBorder&quot;] = 95,[&quot;CheckedFieldIndicator&quot;] = 96,[&quot;ColorPickerFrame&quot;] = 29,[&quot;CurrentMarker&quot;] = 30,[&quot;Dark&quot;] = 35,[&quot;DebuggerCurrentLine&quot;] = 67,[&quot;DebuggerErrorLine&quot;] = 68,[&quot;DialogButton&quot;] = 100,[&quot;DialogButtonBorder&quot;] = 102,[&quot;DialogButtonText&quot;] = 101,[&quot;DialogMainButton&quot;] = 103,[&quot;DialogMainButtonText&quot;] = 104,[&quot;DiffFilePathBackground&quot;] = 83,[&quot;DiffFilePathBorder&quot;] = 84,[&quot;DiffFilePathText&quot;] = 69,[&quot;DiffLineNum&quot;] = 78,[&quot;DiffLineNumAdditionBackground&quot;] = 81,[&quot;DiffLineNumDeletionBackground&quot;] = 82,[&quot;DiffLineNumHover&quot;] = 137,[&quot;DiffLineNumNoChangeBackground&quot;] = 80,[&quot;DiffLineNumSeparatorBackground&quot;] = 79,[&quot;DiffLineNumSeparatorBackgroundHover&quot;] = 138,[&quot;DiffTextAddition&quot;] = 72,[&quot;DiffTextAdditionBackground&quot;] = 76,[&quot;DiffTextDeletion&quot;] = 73,[&quot;DiffTextDeletionBackground&quot;] = 77,[&quot;DiffTextHunkInfo&quot;] = 70,[&quot;DiffTextNoChange&quot;] = 71,[&quot;DiffTextNoChangeBackground&quot;] = 75,[&quot;DiffTextSeparatorBackground&quot;] = 74,[&quot;DimmedText&quot;] = 41,[&quot;DocViewCodeBackground&quot;] = 66,[&quot;DropShadow&quot;] = 32,[&quot;Dropdown&quot;] = 2,[&quot;EmulatorBar&quot;] = 27,[&quot;EmulatorDropDown&quot;] = 28,[&quot;ErrorText&quot;] = 44,[&quot;FilterButtonAccent&quot;] = 12,[&quot;FilterButtonBorder&quot;] = 13,[&quot;FilterButtonBorderAlt&quot;] = 14,[&quot;FilterButtonChecked&quot;] = 11,[&quot;FilterButtonDefault&quot;] = 9,[&quot;FilterButtonHover&quot;] = 10,[&quot;GameSettingsTableItem&quot;] = 25,[&quot;GameSettingsTooltip&quot;] = 26,[&quot;HeaderSection&quot;] = 97,[&quot;InfoBarWarningBackground&quot;] = 105,[&quot;InfoBarWarningText&quot;] = 106,[&quot;InfoText&quot;] = 45,[&quot;InputFieldBackground&quot;] = 21,[&quot;InputFieldBorder&quot;] = 93,[&quot;Item&quot;] = 22,[&quot;Light&quot;] = 34,[&quot;LinkText&quot;] = 42,[&quot;MainBackground&quot;] = 0,[&quot;MainButton&quot;] = 18,[&quot;MainText&quot;] = 37,[&quot;Mid&quot;] = 36,[&quot;Midlight&quot;] = 98,[&quot;Notification&quot;] = 4,[&quot;OnboardingCover&quot;] = 132,[&quot;OnboardingHighlight&quot;] = 133,[&quot;OnboardingShadow&quot;] = 134,[&quot;RibbonButton&quot;] = 19,[&quot;RibbonTab&quot;] = 15,[&quot;RibbonTabTopBar&quot;] = 16,[&quot;ScriptBackground&quot;] = 48,[&quot;ScriptBool&quot;] = 111,[&quot;ScriptBracket&quot;] = 118,[&quot;ScriptBuiltInFunction&quot;] = 59,[&quot;ScriptComment&quot;] = 57,[&quot;ScriptEditorCurrentLine&quot;] = 107,[&quot;ScriptError&quot;] = 61,[&quot;ScriptFindSelectionBackground&quot;] = 52,[&quot;ScriptFunction&quot;] = 112,[&quot;ScriptFunctionName&quot;] = 116,[&quot;ScriptHint&quot;] = 63,[&quot;ScriptInformation&quot;] = 62,[&quot;ScriptKeyword&quot;] = 58,[&quot;ScriptLocal&quot;] = 113,[&quot;ScriptLuauKeyword&quot;] = 115,[&quot;ScriptMatchingWordSelectionBackground&quot;] = 53,[&quot;ScriptMethod&quot;] = 108,[&quot;ScriptNil&quot;] = 110,[&quot;ScriptNumber&quot;] = 55,[&quot;ScriptOperator&quot;] = 54,[&quot;ScriptProperty&quot;] = 109,[&quot;ScriptRuler&quot;] = 65,[&quot;ScriptSelectionBackground&quot;] = 51,[&quot;ScriptSelectionText&quot;] = 50,[&quot;ScriptSelf&quot;] = 114,[&quot;ScriptSideWidget&quot;] = 47,[&quot;ScriptString&quot;] = 56,[&quot;ScriptText&quot;] = 49,[&quot;ScriptTodo&quot;] = 117,[&quot;ScriptWarning&quot;] = 60,[&quot;ScriptWhitespace&quot;] = 64,[&quot;ScrollBar&quot;] = 5,[&quot;ScrollBarBackground&quot;] = 6,[&quot;SensitiveText&quot;] = 46,[&quot;Separator&quot;] = 90,[&quot;Shadow&quot;] = 33,[&quot;StatusBar&quot;] = 99,[&quot;SubText&quot;] = 38,[&quot;Tab&quot;] = 8,[&quot;TabBar&quot;] = 7,[&quot;TableItem&quot;] = 23,[&quot;Titlebar&quot;] = 1,[&quot;TitlebarText&quot;] = 39,[&quot;Tooltip&quot;] = 3,[&quot;ViewPortBackground&quot;] = 20,[&quot;WarningText&quot;] = 43,},},[&quot;StudioStyleGuideModifier&quot;] = {[&quot;name&quot;] = &quot;StudioStyleGuideModifier&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 3,[&quot;Hover&quot;] = 4,[&quot;Pressed&quot;] = 2,[&quot;Selected&quot;] = 1,},},[&quot;Style&quot;] = {[&quot;name&quot;] = &quot;Style&quot;,[&quot;items&quot;] = {[&quot;AlternatingSupports&quot;] = 0,[&quot;BridgeStyleSupports&quot;] = 1,[&quot;NoSupports&quot;] = 2,},},[&quot;SubscriptionExpirationReason&quot;] = {[&quot;name&quot;] = &quot;SubscriptionExpirationReason&quot;,[&quot;items&quot;] = {[&quot;Lapsed&quot;] = 4,[&quot;ProductDeleted&quot;] = 1,[&quot;ProductInactive&quot;] = 0,[&quot;SubscriberCancelled&quot;] = 2,[&quot;SubscriberRefunded&quot;] = 3,},},[&quot;SubscriptionPaymentStatus&quot;] = {[&quot;name&quot;] = &quot;SubscriptionPaymentStatus&quot;,[&quot;items&quot;] = {[&quot;Paid&quot;] = 0,[&quot;Refunded&quot;] = 1,},},[&quot;SubscriptionPeriod&quot;] = {[&quot;name&quot;] = &quot;SubscriptionPeriod&quot;,[&quot;items&quot;] = {[&quot;Month&quot;] = 0,},},[&quot;SubscriptionState&quot;] = {[&quot;name&quot;] = &quot;SubscriptionState&quot;,[&quot;items&quot;] = {[&quot;Expired&quot;] = 4,[&quot;NeverSubscribed&quot;] = 0,[&quot;SubscribedRenewalPaymentPending&quot;] = 3,[&quot;SubscribedWillNotRenew&quot;] = 2,[&quot;SubscribedWillRenew&quot;] = 1,},},[&quot;SurfaceConstraint&quot;] = {[&quot;name&quot;] = &quot;SurfaceConstraint&quot;,[&quot;items&quot;] = {[&quot;Hinge&quot;] = 1,[&quot;Motor&quot;] = 3,[&quot;None&quot;] = 0,[&quot;SteppingMotor&quot;] = 2,},},[&quot;SurfaceGuiShape&quot;] = {[&quot;name&quot;] = &quot;SurfaceGuiShape&quot;,[&quot;items&quot;] = {[&quot;CurvedHorizontally&quot;] = 1,[&quot;Flat&quot;] = 0,},},[&quot;SurfaceGuiSizingMode&quot;] = {[&quot;name&quot;] = &quot;SurfaceGuiSizingMode&quot;,[&quot;items&quot;] = {[&quot;FixedSize&quot;] = 0,[&quot;PixelsPerStud&quot;] = 1,},},[&quot;SurfaceType&quot;] = {[&quot;name&quot;] = &quot;SurfaceType&quot;,[&quot;items&quot;] = {[&quot;Glue&quot;] = 1,[&quot;Hinge&quot;] = 6,[&quot;Inlet&quot;] = 4,[&quot;Motor&quot;] = 7,[&quot;Smooth&quot;] = 0,[&quot;SmoothNoOutlines&quot;] = 10,[&quot;SteppingMotor&quot;] = 8,[&quot;Studs&quot;] = 3,[&quot;Universal&quot;] = 5,[&quot;Weld&quot;] = 2,},},[&quot;SwipeDirection&quot;] = {[&quot;name&quot;] = &quot;SwipeDirection&quot;,[&quot;items&quot;] = {[&quot;Down&quot;] = 3,[&quot;Left&quot;] = 1,[&quot;None&quot;] = 4,[&quot;Right&quot;] = 0,[&quot;Up&quot;] = 2,},},[&quot;TableMajorAxis&quot;] = {[&quot;name&quot;] = &quot;TableMajorAxis&quot;,[&quot;items&quot;] = {[&quot;ColumnMajor&quot;] = 1,[&quot;RowMajor&quot;] = 0,},},[&quot;TeamCreateErrorState&quot;] = {[&quot;name&quot;] = &quot;TeamCreateErrorState&quot;,[&quot;items&quot;] = {[&quot;NoError&quot;] = 2,[&quot;PlaceSizeApproachingLimit&quot;] = 1,[&quot;PlaceSizeTooLarge&quot;] = 0,},},[&quot;Technology&quot;] = {[&quot;name&quot;] = &quot;Technology&quot;,[&quot;items&quot;] = {[&quot;Compatibility&quot;] = 2,[&quot;Future&quot;] = 4,[&quot;Legacy&quot;] = 0,[&quot;ShadowMap&quot;] = 3,[&quot;Unified&quot;] = 5,[&quot;Voxel&quot;] = 1,},},[&quot;TeleportMethod&quot;] = {[&quot;name&quot;] = &quot;TeleportMethod&quot;,[&quot;items&quot;] = {[&quot;TeleportPartyAsync&quot;] = 3,[&quot;TeleportToInstanceBack&quot;] = 5,[&quot;TeleportToPlaceInstance&quot;] = 1,[&quot;TeleportToPrivateServer&quot;] = 2,[&quot;TeleportToSpawnByName&quot;] = 0,[&quot;TeleportToVIPServer&quot;] = 4,[&quot;TeleportUnknown&quot;] = 6,},},[&quot;TeleportResult&quot;] = {[&quot;name&quot;] = &quot;TeleportResult&quot;,[&quot;items&quot;] = {[&quot;Failure&quot;] = 1,[&quot;Flooded&quot;] = 6,[&quot;GameEnded&quot;] = 3,[&quot;GameFull&quot;] = 4,[&quot;GameNotFound&quot;] = 2,[&quot;IsTeleporting&quot;] = 7,[&quot;Success&quot;] = 0,[&quot;Unauthorized&quot;] = 5,},},[&quot;TeleportState&quot;] = {[&quot;name&quot;] = &quot;TeleportState&quot;,[&quot;items&quot;] = {[&quot;Failed&quot;] = 3,[&quot;InProgress&quot;] = 4,[&quot;RequestedFromServer&quot;] = 0,[&quot;Started&quot;] = 1,[&quot;WaitingForServer&quot;] = 2,},},[&quot;TeleportType&quot;] = {[&quot;name&quot;] = &quot;TeleportType&quot;,[&quot;items&quot;] = {[&quot;ToInstance&quot;] = 1,[&quot;ToInstanceBack&quot;] = 4,[&quot;ToPlace&quot;] = 0,[&quot;ToReservedServer&quot;] = 2,[&quot;ToVIPServer&quot;] = 3,},},[&quot;TerrainAcquisitionMethod&quot;] = {[&quot;name&quot;] = &quot;TerrainAcquisitionMethod&quot;,[&quot;items&quot;] = {[&quot;Convert&quot;] = 5,[&quot;EditAddTool&quot;] = 6,[&quot;EditReplaceTool&quot;] = 8,[&quot;EditSeaLevelTool&quot;] = 7,[&quot;Generate&quot;] = 3,[&quot;Import&quot;] = 4,[&quot;Legacy&quot;] = 1,[&quot;None&quot;] = 0,[&quot;Other&quot;] = 11,[&quot;RegionFillTool&quot;] = 9,[&quot;RegionPasteTool&quot;] = 10,[&quot;Template&quot;] = 2,},},[&quot;TerrainFace&quot;] = {[&quot;name&quot;] = &quot;TerrainFace&quot;,[&quot;items&quot;] = {[&quot;Bottom&quot;] = 2,[&quot;Side&quot;] = 1,[&quot;Top&quot;] = 0,},},[&quot;TextChatMessageStatus&quot;] = {[&quot;name&quot;] = &quot;TextChatMessageStatus&quot;,[&quot;items&quot;] = {[&quot;Floodchecked&quot;] = 5,[&quot;InvalidPrivacySettings&quot;] = 6,[&quot;InvalidTextChannelPermissions&quot;] = 7,[&quot;MessageTooLong&quot;] = 8,[&quot;ModerationTimeout&quot;] = 9,[&quot;Sending&quot;] = 3,[&quot;Success&quot;] = 2,[&quot;TextFilterFailed&quot;] = 4,[&quot;Unknown&quot;] = 1,},},[&quot;TextDirection&quot;] = {[&quot;name&quot;] = &quot;TextDirection&quot;,[&quot;items&quot;] = {[&quot;Auto&quot;] = 0,[&quot;LeftToRight&quot;] = 1,[&quot;RightToLeft&quot;] = 2,},},[&quot;TextFilterContext&quot;] = {[&quot;name&quot;] = &quot;TextFilterContext&quot;,[&quot;items&quot;] = {[&quot;PrivateChat&quot;] = 2,[&quot;PublicChat&quot;] = 1,},},[&quot;TextInputType&quot;] = {[&quot;name&quot;] = &quot;TextInputType&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Email&quot;] = 3,[&quot;NoSuggestions&quot;] = 1,[&quot;Number&quot;] = 2,[&quot;OneTimePassword&quot;] = 8,[&quot;Password&quot;] = 5,[&quot;PasswordShown&quot;] = 6,[&quot;Phone&quot;] = 4,[&quot;Username&quot;] = 7,},},[&quot;TextTruncate&quot;] = {[&quot;name&quot;] = &quot;TextTruncate&quot;,[&quot;items&quot;] = {[&quot;AtEnd&quot;] = 1,[&quot;None&quot;] = 0,[&quot;SplitWord&quot;] = 2,},},[&quot;TextXAlignment&quot;] = {[&quot;name&quot;] = &quot;TextXAlignment&quot;,[&quot;items&quot;] = {[&quot;Center&quot;] = 2,[&quot;Left&quot;] = 0,[&quot;Right&quot;] = 1,},},[&quot;TextYAlignment&quot;] = {[&quot;name&quot;] = &quot;TextYAlignment&quot;,[&quot;items&quot;] = {[&quot;Bottom&quot;] = 2,[&quot;Center&quot;] = 1,[&quot;Top&quot;] = 0,},},[&quot;TextureMode&quot;] = {[&quot;name&quot;] = &quot;TextureMode&quot;,[&quot;items&quot;] = {[&quot;Static&quot;] = 2,[&quot;Stretch&quot;] = 0,[&quot;Wrap&quot;] = 1,},},[&quot;TextureQueryType&quot;] = {[&quot;name&quot;] = &quot;TextureQueryType&quot;,[&quot;items&quot;] = {[&quot;Humanoid&quot;] = 2,[&quot;HumanoidOrphaned&quot;] = 3,[&quot;NonHumanoid&quot;] = 0,[&quot;NonHumanoidOrphaned&quot;] = 1,},},[&quot;ThreadPoolConfig&quot;] = {[&quot;name&quot;] = &quot;ThreadPoolConfig&quot;,[&quot;items&quot;] = {[&quot;Auto&quot;] = 0,[&quot;PerCore1&quot;] = 101,[&quot;PerCore2&quot;] = 102,[&quot;PerCore3&quot;] = 103,[&quot;PerCore4&quot;] = 104,[&quot;Threads1&quot;] = 1,[&quot;Threads16&quot;] = 16,[&quot;Threads2&quot;] = 2,[&quot;Threads3&quot;] = 3,[&quot;Threads4&quot;] = 4,[&quot;Threads8&quot;] = 8,},},[&quot;ThrottlingPriority&quot;] = {[&quot;name&quot;] = &quot;ThrottlingPriority&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;ElevatedOnServer&quot;] = 1,[&quot;Extreme&quot;] = 2,},},[&quot;ThumbnailSize&quot;] = {[&quot;name&quot;] = &quot;ThumbnailSize&quot;,[&quot;items&quot;] = {[&quot;Size100x100&quot;] = 4,[&quot;Size150x150&quot;] = 5,[&quot;Size180x180&quot;] = 1,[&quot;Size352x352&quot;] = 6,[&quot;Size420x420&quot;] = 2,[&quot;Size48x48&quot;] = 0,[&quot;Size60x60&quot;] = 3,},},[&quot;ThumbnailType&quot;] = {[&quot;name&quot;] = &quot;ThumbnailType&quot;,[&quot;items&quot;] = {[&quot;AvatarBust&quot;] = 1,[&quot;AvatarThumbnail&quot;] = 2,[&quot;HeadShot&quot;] = 0,},},[&quot;TickCountSampleMethod&quot;] = {[&quot;name&quot;] = &quot;TickCountSampleMethod&quot;,[&quot;items&quot;] = {[&quot;Benchmark&quot;] = 1,[&quot;Fast&quot;] = 0,[&quot;Precise&quot;] = 2,},},[&quot;TonemapperPreset&quot;] = {[&quot;name&quot;] = &quot;TonemapperPreset&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Retro&quot;] = 1,},},[&quot;TopBottom&quot;] = {[&quot;name&quot;] = &quot;TopBottom&quot;,[&quot;items&quot;] = {[&quot;Bottom&quot;] = 2,[&quot;Center&quot;] = 1,[&quot;Top&quot;] = 0,},},[&quot;TouchCameraMovementMode&quot;] = {[&quot;name&quot;] = &quot;TouchCameraMovementMode&quot;,[&quot;items&quot;] = {[&quot;Classic&quot;] = 1,[&quot;Default&quot;] = 0,[&quot;Follow&quot;] = 2,[&quot;Orbital&quot;] = 3,},},[&quot;TouchMovementMode&quot;] = {[&quot;name&quot;] = &quot;TouchMovementMode&quot;,[&quot;items&quot;] = {[&quot;ClickToMove&quot;] = 4,[&quot;DPad&quot;] = 2,[&quot;Default&quot;] = 0,[&quot;DynamicThumbstick&quot;] = 5,[&quot;Thumbpad&quot;] = 3,[&quot;Thumbstick&quot;] = 1,},},[&quot;TrackerError&quot;] = {[&quot;name&quot;] = &quot;TrackerError&quot;,[&quot;items&quot;] = {[&quot;AudioError&quot;] = 8,[&quot;AudioNoPermission&quot;] = 9,[&quot;InitFailed&quot;] = 2,[&quot;NoAudio&quot;] = 7,[&quot;NoService&quot;] = 1,[&quot;NoVideo&quot;] = 3,[&quot;Ok&quot;] = 0,[&quot;UnsupportedDevice&quot;] = 10,[&quot;VideoError&quot;] = 4,[&quot;VideoNoPermission&quot;] = 5,[&quot;VideoUnsupported&quot;] = 6,},},[&quot;TrackerExtrapolationFlagMode&quot;] = {[&quot;name&quot;] = &quot;TrackerExtrapolationFlagMode&quot;,[&quot;items&quot;] = {[&quot;Auto&quot;] = 3,[&quot;ExtrapolateFacsAndPose&quot;] = 1,[&quot;ExtrapolateFacsOnly&quot;] = 2,[&quot;ForceDisabled&quot;] = 0,},},[&quot;TrackerFaceTrackingStatus&quot;] = {[&quot;name&quot;] = &quot;TrackerFaceTrackingStatus&quot;,[&quot;items&quot;] = {[&quot;FaceTrackingHasTrackingError&quot;] = 4,[&quot;FaceTrackingIsOccluded&quot;] = 5,[&quot;FaceTrackingLost&quot;] = 3,[&quot;FaceTrackingNoFaceFound&quot;] = 1,[&quot;FaceTrackingSuccess&quot;] = 0,[&quot;FaceTrackingUninitialized&quot;] = 6,[&quot;FaceTrackingUnknown&quot;] = 2,},},[&quot;TrackerLodFlagMode&quot;] = {[&quot;name&quot;] = &quot;TrackerLodFlagMode&quot;,[&quot;items&quot;] = {[&quot;Auto&quot;] = 2,[&quot;ForceFalse&quot;] = 0,[&quot;ForceTrue&quot;] = 1,},},[&quot;TrackerLodValueMode&quot;] = {[&quot;name&quot;] = &quot;TrackerLodValueMode&quot;,[&quot;items&quot;] = {[&quot;Auto&quot;] = 2,[&quot;Force0&quot;] = 0,[&quot;Force1&quot;] = 1,},},[&quot;TrackerMode&quot;] = {[&quot;name&quot;] = &quot;TrackerMode&quot;,[&quot;items&quot;] = {[&quot;Audio&quot;] = 1,[&quot;AudioVideo&quot;] = 3,[&quot;None&quot;] = 0,[&quot;Video&quot;] = 2,},},[&quot;TrackerPromptEvent&quot;] = {[&quot;name&quot;] = &quot;TrackerPromptEvent&quot;,[&quot;items&quot;] = {[&quot;LODCameraRecommendDisable&quot;] = 0,},},[&quot;TrackerType&quot;] = {[&quot;name&quot;] = &quot;TrackerType&quot;,[&quot;items&quot;] = {[&quot;Face&quot;] = 1,[&quot;None&quot;] = 0,[&quot;UpperBody&quot;] = 2,},},[&quot;TriStateBoolean&quot;] = {[&quot;name&quot;] = &quot;TriStateBoolean&quot;,[&quot;items&quot;] = {[&quot;False&quot;] = 2,[&quot;True&quot;] = 1,[&quot;Unknown&quot;] = 0,},},[&quot;TweenStatus&quot;] = {[&quot;name&quot;] = &quot;TweenStatus&quot;,[&quot;items&quot;] = {[&quot;Canceled&quot;] = 0,[&quot;Completed&quot;] = 1,},},[&quot;UICaptureMode&quot;] = {[&quot;name&quot;] = &quot;UICaptureMode&quot;,[&quot;items&quot;] = {[&quot;All&quot;] = 0,[&quot;None&quot;] = 1,[&quot;PlayerGui&quot;] = 2,},},[&quot;UIDragDetectorBoundingBehavior&quot;] = {[&quot;name&quot;] = &quot;UIDragDetectorBoundingBehavior&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 0,[&quot;EntireObject&quot;] = 1,[&quot;HitPoint&quot;] = 2,},},[&quot;UIDragDetectorDragRelativity&quot;] = {[&quot;name&quot;] = &quot;UIDragDetectorDragRelativity&quot;,[&quot;items&quot;] = {[&quot;Absolute&quot;] = 0,[&quot;Relative&quot;] = 1,},},[&quot;UIDragDetectorDragSpace&quot;] = {[&quot;name&quot;] = &quot;UIDragDetectorDragSpace&quot;,[&quot;items&quot;] = {[&quot;LayerCollector&quot;] = 1,[&quot;Parent&quot;] = 0,[&quot;Reference&quot;] = 2,},},[&quot;UIDragDetectorDragStyle&quot;] = {[&quot;name&quot;] = &quot;UIDragDetectorDragStyle&quot;,[&quot;items&quot;] = {[&quot;Rotate&quot;] = 2,[&quot;Scriptable&quot;] = 3,[&quot;TranslateLine&quot;] = 1,[&quot;TranslatePlane&quot;] = 0,},},[&quot;UIDragDetectorResponseStyle&quot;] = {[&quot;name&quot;] = &quot;UIDragDetectorResponseStyle&quot;,[&quot;items&quot;] = {[&quot;CustomOffset&quot;] = 2,[&quot;CustomScale&quot;] = 3,[&quot;Offset&quot;] = 0,[&quot;Scale&quot;] = 1,},},[&quot;UIDragSpeedAxisMapping&quot;] = {[&quot;name&quot;] = &quot;UIDragSpeedAxisMapping&quot;,[&quot;items&quot;] = {[&quot;XX&quot;] = 1,[&quot;XY&quot;] = 0,[&quot;YY&quot;] = 2,},},[&quot;UIFlexAlignment&quot;] = {[&quot;name&quot;] = &quot;UIFlexAlignment&quot;,[&quot;items&quot;] = {[&quot;Fill&quot;] = 1,[&quot;None&quot;] = 0,[&quot;SpaceAround&quot;] = 2,[&quot;SpaceBetween&quot;] = 3,[&quot;SpaceEvenly&quot;] = 4,},},[&quot;UIFlexMode&quot;] = {[&quot;name&quot;] = &quot;UIFlexMode&quot;,[&quot;items&quot;] = {[&quot;Custom&quot;] = 4,[&quot;Fill&quot;] = 3,[&quot;Grow&quot;] = 1,[&quot;None&quot;] = 0,[&quot;Shrink&quot;] = 2,},},[&quot;UITheme&quot;] = {[&quot;name&quot;] = &quot;UITheme&quot;,[&quot;items&quot;] = {[&quot;Dark&quot;] = 1,[&quot;Light&quot;] = 0,},},[&quot;UiMessageType&quot;] = {[&quot;name&quot;] = &quot;UiMessageType&quot;,[&quot;items&quot;] = {[&quot;UiMessageError&quot;] = 0,[&quot;UiMessageInfo&quot;] = 1,},},[&quot;UsageContext&quot;] = {[&quot;name&quot;] = &quot;UsageContext&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Preview&quot;] = 1,},},[&quot;UserCFrame&quot;] = {[&quot;name&quot;] = &quot;UserCFrame&quot;,[&quot;items&quot;] = {[&quot;Floor&quot;] = 3,[&quot;Head&quot;] = 0,[&quot;LeftHand&quot;] = 1,[&quot;RightHand&quot;] = 2,},},[&quot;UserInputState&quot;] = {[&quot;name&quot;] = &quot;UserInputState&quot;,[&quot;items&quot;] = {[&quot;Begin&quot;] = 0,[&quot;Cancel&quot;] = 3,[&quot;Change&quot;] = 1,[&quot;End&quot;] = 2,[&quot;None&quot;] = 4,},},[&quot;UserInputType&quot;] = {[&quot;name&quot;] = &quot;UserInputType&quot;,[&quot;items&quot;] = {[&quot;Accelerometer&quot;] = 10,[&quot;Focus&quot;] = 9,[&quot;Gamepad1&quot;] = 12,[&quot;Gamepad2&quot;] = 13,[&quot;Gamepad3&quot;] = 14,[&quot;Gamepad4&quot;] = 15,[&quot;Gamepad5&quot;] = 16,[&quot;Gamepad6&quot;] = 17,[&quot;Gamepad7&quot;] = 18,[&quot;Gamepad8&quot;] = 19,[&quot;Gyro&quot;] = 11,[&quot;InputMethod&quot;] = 21,[&quot;Keyboard&quot;] = 8,[&quot;MouseButton1&quot;] = 0,[&quot;MouseButton2&quot;] = 1,[&quot;MouseButton3&quot;] = 2,[&quot;MouseMovement&quot;] = 4,[&quot;MouseWheel&quot;] = 3,[&quot;None&quot;] = 22,[&quot;TextInput&quot;] = 20,[&quot;Touch&quot;] = 7,},},[&quot;VRComfortSetting&quot;] = {[&quot;name&quot;] = &quot;VRComfortSetting&quot;,[&quot;items&quot;] = {[&quot;Comfort&quot;] = 0,[&quot;Custom&quot;] = 3,[&quot;Expert&quot;] = 2,[&quot;Normal&quot;] = 1,},},[&quot;VRControllerModelMode&quot;] = {[&quot;name&quot;] = &quot;VRControllerModelMode&quot;,[&quot;items&quot;] = {[&quot;Disabled&quot;] = 0,[&quot;Transparent&quot;] = 1,},},[&quot;VRDeviceType&quot;] = {[&quot;name&quot;] = &quot;VRDeviceType&quot;,[&quot;items&quot;] = {[&quot;HTCVive&quot;] = 2,[&quot;OculusQuest&quot;] = 4,[&quot;OculusRift&quot;] = 1,[&quot;Unknown&quot;] = 0,[&quot;ValveIndex&quot;] = 3,},},[&quot;VRLaserPointerMode&quot;] = {[&quot;name&quot;] = &quot;VRLaserPointerMode&quot;,[&quot;items&quot;] = {[&quot;Disabled&quot;] = 0,[&quot;DualPointer&quot;] = 2,[&quot;Pointer&quot;] = 1,},},[&quot;VRSafetyBubbleMode&quot;] = {[&quot;name&quot;] = &quot;VRSafetyBubbleMode&quot;,[&quot;items&quot;] = {[&quot;Anyone&quot;] = 2,[&quot;NoOne&quot;] = 0,[&quot;OnlyFriends&quot;] = 1,},},[&quot;VRScaling&quot;] = {[&quot;name&quot;] = &quot;VRScaling&quot;,[&quot;items&quot;] = {[&quot;Off&quot;] = 1,[&quot;World&quot;] = 0,},},[&quot;VRSessionState&quot;] = {[&quot;name&quot;] = &quot;VRSessionState&quot;,[&quot;items&quot;] = {[&quot;Focused&quot;] = 3,[&quot;Idle&quot;] = 1,[&quot;Stopping&quot;] = 4,[&quot;Undefined&quot;] = 0,[&quot;Visible&quot;] = 2,},},[&quot;VRTouchpad&quot;] = {[&quot;name&quot;] = &quot;VRTouchpad&quot;,[&quot;items&quot;] = {[&quot;Left&quot;] = 0,[&quot;Right&quot;] = 1,},},[&quot;VRTouchpadMode&quot;] = {[&quot;name&quot;] = &quot;VRTouchpadMode&quot;,[&quot;items&quot;] = {[&quot;ABXY&quot;] = 2,[&quot;Touch&quot;] = 0,[&quot;VirtualThumbstick&quot;] = 1,},},[&quot;VelocityConstraintMode&quot;] = {[&quot;name&quot;] = &quot;VelocityConstraintMode&quot;,[&quot;items&quot;] = {[&quot;Line&quot;] = 0,[&quot;Plane&quot;] = 1,[&quot;Vector&quot;] = 2,},},[&quot;VerticalAlignment&quot;] = {[&quot;name&quot;] = &quot;VerticalAlignment&quot;,[&quot;items&quot;] = {[&quot;Bottom&quot;] = 2,[&quot;Center&quot;] = 0,[&quot;Top&quot;] = 1,},},[&quot;VerticalScrollBarPosition&quot;] = {[&quot;name&quot;] = &quot;VerticalScrollBarPosition&quot;,[&quot;items&quot;] = {[&quot;Left&quot;] = 1,[&quot;Right&quot;] = 0,},},[&quot;VibrationMotor&quot;] = {[&quot;name&quot;] = &quot;VibrationMotor&quot;,[&quot;items&quot;] = {[&quot;Large&quot;] = 0,[&quot;LeftHand&quot;] = 4,[&quot;LeftTrigger&quot;] = 2,[&quot;RightHand&quot;] = 5,[&quot;RightTrigger&quot;] = 3,[&quot;Small&quot;] = 1,},},[&quot;VideoDeviceCaptureQuality&quot;] = {[&quot;name&quot;] = &quot;VideoDeviceCaptureQuality&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;High&quot;] = 3,[&quot;Low&quot;] = 1,[&quot;Medium&quot;] = 2,},},[&quot;VideoError&quot;] = {[&quot;name&quot;] = &quot;VideoError&quot;,[&quot;items&quot;] = {[&quot;AllocFailed&quot;] = 4,[&quot;BadParameter&quot;] = 3,[&quot;CodecCloseFailed&quot;] = 6,[&quot;CodecInitFailed&quot;] = 5,[&quot;CreateFailed&quot;] = 14,[&quot;DecodeFailed&quot;] = 7,[&quot;DownloadFailed&quot;] = 11,[&quot;EAgain&quot;] = 2,[&quot;EncodeFailed&quot;] = 13,[&quot;Eof&quot;] = 1,[&quot;Generic&quot;] = 10,[&quot;NoPermission&quot;] = 15,[&quot;NoService&quot;] = 16,[&quot;Ok&quot;] = 0,[&quot;ParsingFailed&quot;] = 8,[&quot;ReleaseFailed&quot;] = 17,[&quot;StreamNotFound&quot;] = 12,[&quot;Unknown&quot;] = 18,[&quot;Unsupported&quot;] = 9,},},[&quot;ViewMode&quot;] = {[&quot;name&quot;] = &quot;ViewMode&quot;,[&quot;items&quot;] = {[&quot;Decal&quot;] = 3,[&quot;GeometryComplexity&quot;] = 1,[&quot;None&quot;] = 0,[&quot;Transparent&quot;] = 2,},},[&quot;VirtualCursorMode&quot;] = {[&quot;name&quot;] = &quot;VirtualCursorMode&quot;,[&quot;items&quot;] = {[&quot;Default&quot;] = 0,[&quot;Disabled&quot;] = 1,[&quot;Enabled&quot;] = 2,},},[&quot;VirtualInputMode&quot;] = {[&quot;name&quot;] = &quot;VirtualInputMode&quot;,[&quot;items&quot;] = {[&quot;None&quot;] = 0,[&quot;Playing&quot;] = 2,[&quot;Recording&quot;] = 1,},},[&quot;VoiceChatState&quot;] = {[&quot;name&quot;] = &quot;VoiceChatState&quot;,[&quot;items&quot;] = {[&quot;Ended&quot;] = 5,[&quot;Failed&quot;] = 6,[&quot;Idle&quot;] = 0,[&quot;Joined&quot;] = 3,[&quot;Joining&quot;] = 1,[&quot;JoiningRetry&quot;] = 2,[&quot;Leaving&quot;] = 4,},},[&quot;VoiceControlPath&quot;] = {[&quot;name&quot;] = &quot;VoiceControlPath&quot;,[&quot;items&quot;] = {[&quot;Join&quot;] = 2,[&quot;Publish&quot;] = 0,[&quot;Subscribe&quot;] = 1,},},[&quot;VolumetricAudio&quot;] = {[&quot;name&quot;] = &quot;VolumetricAudio&quot;,[&quot;items&quot;] = {[&quot;Automatic&quot;] = 1,[&quot;Disabled&quot;] = 0,[&quot;Enabled&quot;] = 2,},},[&quot;WaterDirection&quot;] = {[&quot;name&quot;] = &quot;WaterDirection&quot;,[&quot;items&quot;] = {[&quot;NegX&quot;] = 0,[&quot;NegY&quot;] = 2,[&quot;NegZ&quot;] = 4,[&quot;X&quot;] = 1,[&quot;Y&quot;] = 3,[&quot;Z&quot;] = 5,},},[&quot;WaterForce&quot;] = {[&quot;name&quot;] = &quot;WaterForce&quot;,[&quot;items&quot;] = {[&quot;Max&quot;] = 4,[&quot;Medium&quot;] = 2,[&quot;None&quot;] = 0,[&quot;Small&quot;] = 1,[&quot;Strong&quot;] = 3,},},[&quot;WebSocketState&quot;] = {[&quot;name&quot;] = &quot;WebSocketState&quot;,[&quot;items&quot;] = {[&quot;Closed&quot;] = 3,[&quot;Closing&quot;] = 2,[&quot;Connecting&quot;] = 0,[&quot;Open&quot;] = 1,},},[&quot;WeldConstraintPreserve&quot;] = {[&quot;name&quot;] = &quot;WeldConstraintPreserve&quot;,[&quot;items&quot;] = {[&quot;All&quot;] = 0,[&quot;None&quot;] = 1,[&quot;Touching&quot;] = 2,},},[&quot;WhisperChatPrivacyMode&quot;] = {[&quot;name&quot;] = &quot;WhisperChatPrivacyMode&quot;,[&quot;items&quot;] = {[&quot;AllUsers&quot;] = 0,[&quot;NoOne&quot;] = 1,},},[&quot;WrapLayerAutoSkin&quot;] = {[&quot;name&quot;] = &quot;WrapLayerAutoSkin&quot;,[&quot;items&quot;] = {[&quot;Disabled&quot;] = 0,[&quot;EnabledOverride&quot;] = 2,[&quot;EnabledPreserve&quot;] = 1,},},[&quot;WrapLayerDebugMode&quot;] = {[&quot;name&quot;] = &quot;WrapLayerDebugMode&quot;,[&quot;items&quot;] = {[&quot;BoundCage&quot;] = 1,[&quot;BoundCageAndLinks&quot;] = 3,[&quot;HSRInner&quot;] = 10,[&quot;HSRInnerReverse&quot;] = 11,[&quot;HSROuter&quot;] = 9,[&quot;HSROuterDetail&quot;] = 8,[&quot;LayerCage&quot;] = 2,[&quot;LayerCageFittedToBase&quot;] = 12,[&quot;LayerCageFittedToPrev&quot;] = 13,[&quot;None&quot;] = 0,[&quot;OuterCage&quot;] = 6,[&quot;Rbf&quot;] = 5,[&quot;Reference&quot;] = 4,[&quot;ReferenceMeshAfterMorph&quot;] = 7,},},[&quot;WrapTargetDebugMode&quot;] = {[&quot;name&quot;] = &quot;WrapTargetDebugMode&quot;,[&quot;items&quot;] = {[&quot;None&quot;] = 0,[&quot;OuterCageDetail&quot;] = 8,[&quot;Rbf&quot;] = 7,[&quot;TargetCageCompressed&quot;] = 2,[&quot;TargetCageInterface&quot;] = 3,[&quot;TargetCageOriginal&quot;] = 1,[&quot;TargetLayerCageCompressed&quot;] = 5,[&quot;TargetLayerCageOriginal&quot;] = 4,[&quot;TargetLayerInterface&quot;] = 6,},},[&quot;ZIndexBehavior&quot;] = {[&quot;name&quot;] = &quot;ZIndexBehavior&quot;,[&quot;items&quot;] = {[&quot;Global&quot;] = 0,[&quot;Sibling&quot;] = 1,},},},}</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001055</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX7A6BD78669594E03BEEC21B5E914EC72">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b40</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Error</string>
					<string name="ScriptGuid">{25201698-693f-4450-ba5e-345d12bf14ee}</string>
					<string name="Source">local Error = {}
Error.__index = Error

Error.Kind = {
&#9;UnknownProperty = &quot;UnknownProperty&quot;,
&#9;PropertyNotReadable = &quot;PropertyNotReadable&quot;,
&#9;PropertyNotWritable = &quot;PropertyNotWritable&quot;,
&#9;CannotParseBinaryString = &quot;CannotParseBinaryString&quot;,
&#9;Roblox = &quot;Roblox&quot;,
}

setmetatable(Error.Kind, {
&#9;__index = function(_, key)
&#9;&#9;error((&quot;%q is not a valid member of Error.Kind&quot;):format(tostring(key)), 2)
&#9;end,
})

function Error.new(kind, extra)
&#9;return setmetatable({
&#9;&#9;kind = kind,
&#9;&#9;extra = extra,
&#9;}, Error)
end

function Error:__tostring()
&#9;return (&quot;Error(%s: %s)&quot;):format(self.kind, tostring(self.extra))
end

return Error
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001056</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX12867ECCF49343E599004AF06505D8C9">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b41</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">PropertyDescriptor</string>
					<string name="ScriptGuid">{ca45eda7-d376-4a64-bd8c-c50eb63a34e6}</string>
					<string name="Source">local Error = require(script.Parent.Error)
local customProperties = require(script.Parent.customProperties)

-- A wrapper around a property descriptor from the reflection database with some
-- extra convenience methods.
--
-- The aim of this API is to facilitate looking up a property once, then reading
-- from it or writing to it multiple times. It&apos;s also useful when a consumer
-- wants to check additional constraints on the property before trying to use
-- it, like scriptability.
local PropertyDescriptor = {}
PropertyDescriptor.__index = PropertyDescriptor

local function get(container, key)
&#9;return container[key]
end

local function set(container, key, value)
&#9;container[key] = value
end

function PropertyDescriptor.fromRaw(data, className, propertyName)
&#9;local key, value = next(data.DataType)

&#9;return setmetatable({
&#9;&#9;-- The meanings of the key and value in DataType differ when the type of
&#9;&#9;-- the property is Enum. When the property is of type Enum, the key is
&#9;&#9;-- the name of the type:
&#9;&#9;--
&#9;&#9;-- { Enum = &quot;&lt;name of enum&gt;&quot; }
&#9;&#9;--
&#9;&#9;-- When the property is not of type Enum, the value is the name of the
&#9;&#9;-- type:
&#9;&#9;--
&#9;&#9;-- { Value = &quot;&lt;data type&gt;&quot; }
&#9;&#9;dataType = key == &quot;Enum&quot; and key or value,

&#9;&#9;scriptability = data.Scriptability,
&#9;&#9;className = className,
&#9;&#9;name = propertyName,
&#9;}, PropertyDescriptor)
end

function PropertyDescriptor:read(instance)
&#9;if self.scriptability == &quot;ReadWrite&quot; or self.scriptability == &quot;Read&quot; then
&#9;&#9;local success, value = xpcall(get, debug.traceback, instance, self.name)

&#9;&#9;if success then
&#9;&#9;&#9;return success, value
&#9;&#9;else
&#9;&#9;&#9;return false, Error.new(Error.Kind.Roblox, value)
&#9;&#9;end
&#9;end

&#9;if self.scriptability == &quot;Custom&quot; then
&#9;&#9;if customProperties[self.className] == nil then
&#9;&#9;&#9;local fullName = (&quot;%s.%s&quot;):format(instance.className, self.name)
&#9;&#9;&#9;return false, Error.new(Error.Kind.PropertyNotReadable, fullName)
&#9;&#9;end

&#9;&#9;local interface = customProperties[self.className][self.name]

&#9;&#9;return interface.read(instance, self.name)
&#9;end

&#9;if self.scriptability == &quot;None&quot; or self.scriptability == &quot;Write&quot; then
&#9;&#9;local fullName = (&quot;%s.%s&quot;):format(instance.className, self.name)

&#9;&#9;return false, Error.new(Error.Kind.PropertyNotReadable, fullName)
&#9;end

&#9;error((&quot;Internal error: unexpected value of &apos;scriptability&apos;: %s&quot;):format(tostring(self.scriptability)), 2)
end

function PropertyDescriptor:write(instance, value)
&#9;if self.scriptability == &quot;ReadWrite&quot; or self.scriptability == &quot;Write&quot; then
&#9;&#9;local success, err = xpcall(set, debug.traceback, instance, self.name, value)

&#9;&#9;if success then
&#9;&#9;&#9;return success
&#9;&#9;else
&#9;&#9;&#9;return false, Error.new(Error.Kind.Roblox, err)
&#9;&#9;end
&#9;end

&#9;if self.scriptability == &quot;Custom&quot; then
&#9;&#9;if customProperties[self.className] == nil then
&#9;&#9;&#9;local fullName = (&quot;%s.%s&quot;):format(instance.className, self.name)
&#9;&#9;&#9;return false, Error.new(Error.Kind.PropertyNotWritable, fullName)
&#9;&#9;end

&#9;&#9;local interface = customProperties[self.className][self.name]

&#9;&#9;return interface.write(instance, self.name, value)
&#9;end

&#9;if self.scriptability == &quot;None&quot; or self.scriptability == &quot;Read&quot; then
&#9;&#9;local fullName = (&quot;%s.%s&quot;):format(instance.className, self.name)

&#9;&#9;return false, Error.new(Error.Kind.PropertyNotWritable, fullName)
&#9;end

&#9;error((&quot;Internal error: unexpected value of &apos;scriptability&apos;: %s&quot;):format(tostring(self.scriptability)), 2)
end

return PropertyDescriptor
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001057</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXD98BF8B3C21446D085025059CEAB2011">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b42</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">customProperties</string>
					<string name="ScriptGuid">{e30940d7-1373-4a9e-b375-41210f24574b}</string>
					<string name="Source">local CollectionService = game:GetService(&quot;CollectionService&quot;)
local ScriptEditorService = game:GetService(&quot;ScriptEditorService&quot;)

local Error = require(script.Parent.Error)

--- A list of `Enum.Material` values that are used for Terrain.MaterialColors
local TERRAIN_MATERIAL_COLORS = {
&#9;Enum.Material.Grass,
&#9;Enum.Material.Slate,
&#9;Enum.Material.Concrete,
&#9;Enum.Material.Brick,
&#9;Enum.Material.Sand,
&#9;Enum.Material.WoodPlanks,
&#9;Enum.Material.Rock,
&#9;Enum.Material.Glacier,
&#9;Enum.Material.Snow,
&#9;Enum.Material.Sandstone,
&#9;Enum.Material.Mud,
&#9;Enum.Material.Basalt,
&#9;Enum.Material.Ground,
&#9;Enum.Material.CrackedLava,
&#9;Enum.Material.Asphalt,
&#9;Enum.Material.Cobblestone,
&#9;Enum.Material.Ice,
&#9;Enum.Material.LeafyGrass,
&#9;Enum.Material.Salt,
&#9;Enum.Material.Limestone,
&#9;Enum.Material.Pavement,
}

local function isAttributeNameValid(attributeName)
&#9;-- For SetAttribute to succeed, the attribute name must be less than or
&#9;-- equal to 100 characters...
&#9;return #attributeName &lt;= 100
&#9;&#9;-- ...and must only contain alphanumeric characters, periods, hyphens,
&#9;&#9;-- underscores, or forward slashes.
&#9;&#9;and attributeName:match(&quot;[^%w%.%-_/]&quot;) == nil
end

local function isAttributeNameReserved(attributeName)
&#9;-- For SetAttribute to succeed, attribute names must not use the RBX
&#9;-- prefix, which is reserved by Roblox.
&#9;return attributeName:sub(1, 3) == &quot;RBX&quot;
end

-- Defines how to read and write properties that aren&apos;t directly scriptable.
--
-- The reflection database refers to these as having scriptability = &quot;Custom&quot;
return {
&#9;Instance = {
&#9;&#9;Attributes = {
&#9;&#9;&#9;read = function(instance)
&#9;&#9;&#9;&#9;return true, instance:GetAttributes()
&#9;&#9;&#9;end,
&#9;&#9;&#9;write = function(instance, _, value)
&#9;&#9;&#9;&#9;if typeof(value) ~= &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;return false, Error.new(Error.Kind.CannotParseBinaryString)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local existing = instance:GetAttributes()
&#9;&#9;&#9;&#9;local didAllWritesSucceed = true

&#9;&#9;&#9;&#9;for attributeName, attributeValue in pairs(value) do
&#9;&#9;&#9;&#9;&#9;if isAttributeNameReserved(attributeName) then
&#9;&#9;&#9;&#9;&#9;&#9;-- If the attribute name is reserved, then we don&apos;t
&#9;&#9;&#9;&#9;&#9;&#9;-- really care about reporting any failures about
&#9;&#9;&#9;&#9;&#9;&#9;-- it.
&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;if not isAttributeNameValid(attributeName) then
&#9;&#9;&#9;&#9;&#9;&#9;didAllWritesSucceed = false
&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;instance:SetAttribute(attributeName, attributeValue)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;for existingAttributeName in pairs(existing) do
&#9;&#9;&#9;&#9;&#9;if isAttributeNameReserved(existingAttributeName) then
&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;if not isAttributeNameValid(existingAttributeName) then
&#9;&#9;&#9;&#9;&#9;&#9;didAllWritesSucceed = false
&#9;&#9;&#9;&#9;&#9;&#9;continue
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;if value[existingAttributeName] == nil then
&#9;&#9;&#9;&#9;&#9;&#9;instance:SetAttribute(existingAttributeName, nil)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;return didAllWritesSucceed
&#9;&#9;&#9;end,
&#9;&#9;},
&#9;&#9;Tags = {
&#9;&#9;&#9;read = function(instance)
&#9;&#9;&#9;&#9;return true, CollectionService:GetTags(instance)
&#9;&#9;&#9;end,
&#9;&#9;&#9;write = function(instance, _, value)
&#9;&#9;&#9;&#9;local existingTags = CollectionService:GetTags(instance)

&#9;&#9;&#9;&#9;local unseenTags = {}
&#9;&#9;&#9;&#9;for _, tag in ipairs(existingTags) do
&#9;&#9;&#9;&#9;&#9;unseenTags[tag] = true
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;for _, tag in ipairs(value) do
&#9;&#9;&#9;&#9;&#9;unseenTags[tag] = nil
&#9;&#9;&#9;&#9;&#9;CollectionService:AddTag(instance, tag)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;for tag in pairs(unseenTags) do
&#9;&#9;&#9;&#9;&#9;CollectionService:RemoveTag(instance, tag)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;end,
&#9;&#9;},
&#9;},
&#9;LocalizationTable = {
&#9;&#9;Contents = {
&#9;&#9;&#9;read = function(instance, _)
&#9;&#9;&#9;&#9;return true, instance:GetContents()
&#9;&#9;&#9;end,
&#9;&#9;&#9;write = function(instance, _, value)
&#9;&#9;&#9;&#9;instance:SetContents(value)
&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;end,
&#9;&#9;},
&#9;},
&#9;Model = {
&#9;&#9;Scale = {
&#9;&#9;&#9;read = function(instance, _, _)
&#9;&#9;&#9;&#9;return true, instance:GetScale()
&#9;&#9;&#9;end,
&#9;&#9;&#9;write = function(instance, _, value)
&#9;&#9;&#9;&#9;return true, instance:ScaleTo(value)
&#9;&#9;&#9;end,
&#9;&#9;},
&#9;&#9;WorldPivotData = {
&#9;&#9;&#9;read = function(instance)
&#9;&#9;&#9;&#9;return true, instance.WorldPivot
&#9;&#9;&#9;end,
&#9;&#9;&#9;write = function(instance, _, value)
&#9;&#9;&#9;&#9;if value == nil then
&#9;&#9;&#9;&#9;&#9;return true, nil
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;instance.WorldPivot = value
&#9;&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end,
&#9;&#9;},
&#9;},
&#9;Terrain = {
&#9;&#9;MaterialColors = {
&#9;&#9;&#9;read = function(instance: Terrain)
&#9;&#9;&#9;&#9;-- There&apos;s no way to get a list of every color, so we have to
&#9;&#9;&#9;&#9;-- make one.
&#9;&#9;&#9;&#9;local colors = {}
&#9;&#9;&#9;&#9;for _, material in TERRAIN_MATERIAL_COLORS do
&#9;&#9;&#9;&#9;&#9;colors[material] = instance:GetMaterialColor(material)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;return true, colors
&#9;&#9;&#9;end,
&#9;&#9;&#9;write = function(instance: Terrain, _, value: { [Enum.Material]: Color3 })
&#9;&#9;&#9;&#9;if typeof(value) ~= &quot;table&quot; then
&#9;&#9;&#9;&#9;&#9;return false, Error.new(Error.Kind.CannotParseBinaryString)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;for material, color in value do
&#9;&#9;&#9;&#9;&#9;instance:SetMaterialColor(material, color)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;end,
&#9;&#9;},
&#9;},
&#9;Script = {
&#9;&#9;Source = {
&#9;&#9;&#9;read = function(instance: Script)
&#9;&#9;&#9;&#9;return true, ScriptEditorService:GetEditorSource(instance)
&#9;&#9;&#9;end,
&#9;&#9;&#9;write = function(instance: Script, _, value: string)
&#9;&#9;&#9;&#9;task.spawn(function()
&#9;&#9;&#9;&#9;&#9;ScriptEditorService:UpdateSourceAsync(instance, function()
&#9;&#9;&#9;&#9;&#9;&#9;return value
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;end,
&#9;&#9;},
&#9;},
&#9;ModuleScript = {
&#9;&#9;Source = {
&#9;&#9;&#9;read = function(instance: ModuleScript)
&#9;&#9;&#9;&#9;return true, ScriptEditorService:GetEditorSource(instance)
&#9;&#9;&#9;end,
&#9;&#9;&#9;write = function(instance: ModuleScript, _, value: string)
&#9;&#9;&#9;&#9;task.spawn(function()
&#9;&#9;&#9;&#9;&#9;ScriptEditorService:UpdateSourceAsync(instance, function()
&#9;&#9;&#9;&#9;&#9;&#9;return value
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;end,
&#9;&#9;},
&#9;},
&#9;MeshPart = {
&#9;&#9;MeshContent = {
&#9;&#9;&#9;read = function(instance: MeshPart)
&#9;&#9;&#9;&#9;return true, instance.MeshContent
&#9;&#9;&#9;end,
&#9;&#9;&#9;write = function()
&#9;&#9;&#9;&#9;-- Lemonade handles this in a custom way
&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;end,
&#9;&#9;},
&#9;&#9;InitialSize = {
&#9;&#9;&#9;read = function(instance: MeshPart)
&#9;&#9;&#9;&#9;return true, instance.MeshSize
&#9;&#9;&#9;end,
&#9;&#9;&#9;write = function()
&#9;&#9;&#9;&#9;-- Lemonade handles this in a custom way
&#9;&#9;&#9;&#9;return true
&#9;&#9;&#9;end,
&#9;&#9;},
&#9;},
}
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001058</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX7E1149662A064B158D10A0DA7AEA0767">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b43</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">EncodedValue</string>
					<string name="ScriptGuid">{26e83a6f-c4fa-430f-bec4-f27730d1bb9d}</string>
					<string name="Source">local base64 = require(script.Parent.base64)

local function identity(...)
&#9;return ...
end

local function unpackDecoder(f)
&#9;return function(value)
&#9;&#9;return f(unpack(value))
&#9;end
end

local ALL_AXES = { &quot;X&quot;, &quot;Y&quot;, &quot;Z&quot; }
local ALL_FACES = { &quot;Right&quot;, &quot;Top&quot;, &quot;Back&quot;, &quot;Left&quot;, &quot;Bottom&quot;, &quot;Front&quot; }

local EncodedValue = {}

local types
types = {
&#9;Attributes = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;local output = {}

&#9;&#9;&#9;for key, value in pairs(pod) do
&#9;&#9;&#9;&#9;local ok, result = EncodedValue.decode(value)

&#9;&#9;&#9;&#9;if ok then
&#9;&#9;&#9;&#9;&#9;output[key] = result
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;local warning = (&quot;Could not decode attribute value of type %q: %s&quot;):format(
&#9;&#9;&#9;&#9;&#9;&#9;typeof(value),
&#9;&#9;&#9;&#9;&#9;&#9;tostring(result)
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;warn(warning)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;return output
&#9;&#9;end,
&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;local output = {}

&#9;&#9;&#9;for key, value in pairs(roblox) do
&#9;&#9;&#9;&#9;local ok, result = EncodedValue.encodeNaive(value)

&#9;&#9;&#9;&#9;if ok then
&#9;&#9;&#9;&#9;&#9;output[key] = result
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;local warning = (&quot;Could not encode attribute value of type %q: %s&quot;):format(
&#9;&#9;&#9;&#9;&#9;&#9;typeof(value),
&#9;&#9;&#9;&#9;&#9;&#9;tostring(result)
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;warn(warning)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;return output
&#9;&#9;end,
&#9;},

&#9;Axes = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;local axes = {}

&#9;&#9;&#9;for index, axisName in ipairs(pod) do
&#9;&#9;&#9;&#9;axes[index] = Enum.Axis[axisName]
&#9;&#9;&#9;end

&#9;&#9;&#9;return Axes.new(unpack(axes))
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;local json = {}

&#9;&#9;&#9;for _, axis in ipairs(ALL_AXES) do
&#9;&#9;&#9;&#9;if roblox[axis] then
&#9;&#9;&#9;&#9;&#9;table.insert(json, axis)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;return json
&#9;&#9;end,
&#9;},

&#9;BinaryString = {
&#9;&#9;fromPod = base64.decode,
&#9;&#9;toPod = base64.encode,
&#9;},

&#9;Bool = {
&#9;&#9;fromPod = identity,
&#9;&#9;toPod = identity,
&#9;},

&#9;BrickColor = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;return BrickColor.new(pod)
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return roblox.Number
&#9;&#9;end,
&#9;},

&#9;CFrame = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;local pos = pod.position
&#9;&#9;&#9;local orient = pod.orientation

&#9;&#9;&#9;--stylua: ignore
&#9;&#9;&#9;return CFrame.new(
&#9;&#9;&#9;&#9;pos[1], pos[2], pos[3],
&#9;&#9;&#9;&#9;orient[1][1], orient[1][2], orient[1][3],
&#9;&#9;&#9;&#9;orient[2][1], orient[2][2], orient[2][3],
&#9;&#9;&#9;&#9;orient[3][1], orient[3][2], orient[3][3]
&#9;&#9;&#9;)
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;local x, y, z, r00, r01, r02, r10, r11, r12, r20, r21, r22 = roblox:GetComponents()

&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;position = { x, y, z },
&#9;&#9;&#9;&#9;orientation = {
&#9;&#9;&#9;&#9;&#9;{ r00, r01, r02 },
&#9;&#9;&#9;&#9;&#9;{ r10, r11, r12 },
&#9;&#9;&#9;&#9;&#9;{ r20, r21, r22 },
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;Color3 = {
&#9;&#9;fromPod = unpackDecoder(Color3.new),

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return { roblox.r, roblox.g, roblox.b }
&#9;&#9;end,
&#9;},

&#9;Color3uint8 = {
&#9;&#9;fromPod = unpackDecoder(Color3.fromRGB),

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;math.round(roblox.R * 255),
&#9;&#9;&#9;&#9;math.round(roblox.G * 255),
&#9;&#9;&#9;&#9;math.round(roblox.B * 255),
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;ColorSequence = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;local keypoints = {}

&#9;&#9;&#9;for index, keypoint in ipairs(pod.keypoints) do
&#9;&#9;&#9;&#9;keypoints[index] = ColorSequenceKeypoint.new(keypoint.time, types.Color3.fromPod(keypoint.color))
&#9;&#9;&#9;end

&#9;&#9;&#9;return ColorSequence.new(keypoints)
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;local keypoints = {}

&#9;&#9;&#9;for index, keypoint in ipairs(roblox.Keypoints) do
&#9;&#9;&#9;&#9;keypoints[index] = {
&#9;&#9;&#9;&#9;&#9;time = keypoint.Time,
&#9;&#9;&#9;&#9;&#9;color = types.Color3.toPod(keypoint.Value),
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;end

&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;keypoints = keypoints,
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;Content = {
&#9;&#9;fromPod = function(pod): Content
&#9;&#9;&#9;if type(pod) == &quot;string&quot; then
&#9;&#9;&#9;&#9;if pod == &quot;None&quot; then
&#9;&#9;&#9;&#9;&#9;-- Create an empty Content with None type
&#9;&#9;&#9;&#9;&#9;return &quot;&quot;
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;error(`unexpected Content value &apos;{pod}&apos;`)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;local ty, value = next(pod)
&#9;&#9;&#9;&#9;if ty == &quot;Uri&quot; then
&#9;&#9;&#9;&#9;&#9;return value
&#9;&#9;&#9;&#9;elseif ty == &quot;Object&quot; then
&#9;&#9;&#9;&#9;&#9;error(&quot;Object deserializing is not currently implemented&quot;)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;error(`Unknown Content type &apos;{ty}&apos; (could not deserialize)`)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;&#9;toPod = function(roblox: Content?)
&#9;&#9;&#9;-- Handle nil or invalid roblox values gracefully
&#9;&#9;&#9;if not roblox or typeof(roblox) ~= &quot;Content&quot; then
&#9;&#9;&#9;&#9;return &quot;None&quot;
&#9;&#9;&#9;end

&#9;&#9;&#9;if roblox.SourceType == Enum.ContentSourceType.None then
&#9;&#9;&#9;&#9;return &quot;None&quot;
&#9;&#9;&#9;elseif roblox.SourceType == Enum.ContentSourceType.Uri then
&#9;&#9;&#9;&#9;return { Uri = roblox.Uri }
&#9;&#9;&#9;elseif roblox.SourceType == Enum.ContentSourceType.Object then
&#9;&#9;&#9;&#9;-- Gracefully handle Object types by returning None instead of erroring
&#9;&#9;&#9;&#9;warn(`Content Object serializing not supported, defaulting to None for: {roblox}`)
&#9;&#9;&#9;&#9;return &quot;None&quot;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;-- Gracefully handle unknown types by returning None instead of crashing
&#9;&#9;&#9;&#9;warn(`Unknown Content type &apos;{roblox.SourceType}&apos;, defaulting to None for: {roblox}`)
&#9;&#9;&#9;&#9;return &quot;None&quot;
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;},

&#9;ContentId = {
&#9;&#9;fromPod = identity,
&#9;&#9;toPod = identity,
&#9;},

&#9;Enum = {
&#9;&#9;fromPod = identity,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;-- FIXME: More robust handling of enums
&#9;&#9;&#9;if typeof(roblox) == &quot;number&quot; then
&#9;&#9;&#9;&#9;return roblox
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;return roblox.Value
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;},

&#9;EnumItem = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;return Enum[pod.type]:FromValue(pod.value)
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;type = tostring(roblox.EnumType),
&#9;&#9;&#9;&#9;value = roblox.Value,
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;Faces = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;local faces = {}

&#9;&#9;&#9;for index, faceName in ipairs(pod) do
&#9;&#9;&#9;&#9;faces[index] = Enum.NormalId[faceName]
&#9;&#9;&#9;end

&#9;&#9;&#9;return Faces.new(unpack(faces))
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;local pod = {}

&#9;&#9;&#9;for _, face in ipairs(ALL_FACES) do
&#9;&#9;&#9;&#9;if roblox[face] then
&#9;&#9;&#9;&#9;&#9;table.insert(pod, face)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;return pod
&#9;&#9;end,
&#9;},

&#9;Float32 = {
&#9;&#9;fromPod = identity,
&#9;&#9;toPod = identity,
&#9;},

&#9;Float64 = {
&#9;&#9;fromPod = identity,
&#9;&#9;toPod = identity,
&#9;},

&#9;Font = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;return Font.new(
&#9;&#9;&#9;&#9;pod.family,
&#9;&#9;&#9;&#9;if pod.weight ~= nil then Enum.FontWeight[pod.weight] else nil,
&#9;&#9;&#9;&#9;if pod.style ~= nil then Enum.FontStyle[pod.style] else nil
&#9;&#9;&#9;)
&#9;&#9;end,
&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;family = roblox.Family,
&#9;&#9;&#9;&#9;weight = roblox.Weight.Name,
&#9;&#9;&#9;&#9;style = roblox.Style.Name,
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;Int32 = {
&#9;&#9;fromPod = identity,
&#9;&#9;toPod = identity,
&#9;},

&#9;Int64 = {
&#9;&#9;fromPod = identity,
&#9;&#9;toPod = identity,
&#9;},

&#9;MaterialColors = {
&#9;&#9;fromPod = function(pod: { [string]: { number } })
&#9;&#9;&#9;local real = {}
&#9;&#9;&#9;for name, color in pod do
&#9;&#9;&#9;&#9;real[Enum.Material[name]] = Color3.fromRGB(color[1], color[2], color[3])
&#9;&#9;&#9;end
&#9;&#9;&#9;return real
&#9;&#9;end,
&#9;&#9;toPod = function(roblox: { [Enum.Material]: Color3 })
&#9;&#9;&#9;local pod = {}
&#9;&#9;&#9;for material, color in roblox do
&#9;&#9;&#9;&#9;pod[material.Name] = {
&#9;&#9;&#9;&#9;&#9;math.round(math.clamp(color.R, 0, 1) * 255),
&#9;&#9;&#9;&#9;&#9;math.round(math.clamp(color.G, 0, 1) * 255),
&#9;&#9;&#9;&#9;&#9;math.round(math.clamp(color.B, 0, 1) * 255),
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;end
&#9;&#9;&#9;return pod
&#9;&#9;end,
&#9;},

&#9;NumberRange = {
&#9;&#9;fromPod = unpackDecoder(NumberRange.new),

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return { roblox.Min, roblox.Max }
&#9;&#9;end,
&#9;},

&#9;NumberSequence = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;local keypoints = {}

&#9;&#9;&#9;for index, keypoint in ipairs(pod.keypoints) do
&#9;&#9;&#9;&#9;-- TODO: Add a test for NaN or Infinity values and envelopes
&#9;&#9;&#9;&#9;-- Right now it isn&apos;t possible because it&apos;d fail the roundtrip.
&#9;&#9;&#9;&#9;-- It&apos;s more important that it works right now, though.
&#9;&#9;&#9;&#9;local value = keypoint.value or 0
&#9;&#9;&#9;&#9;local envelope = keypoint.envelope or 0
&#9;&#9;&#9;&#9;keypoints[index] = NumberSequenceKeypoint.new(keypoint.time, value, envelope)
&#9;&#9;&#9;end

&#9;&#9;&#9;return NumberSequence.new(keypoints)
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;local keypoints = {}

&#9;&#9;&#9;for index, keypoint in ipairs(roblox.Keypoints) do
&#9;&#9;&#9;&#9;keypoints[index] = {
&#9;&#9;&#9;&#9;&#9;time = keypoint.Time,
&#9;&#9;&#9;&#9;&#9;value = keypoint.Value,
&#9;&#9;&#9;&#9;&#9;envelope = keypoint.Envelope,
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;end

&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;keypoints = keypoints,
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;PhysicalProperties = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;if pod == &quot;Default&quot; then
&#9;&#9;&#9;&#9;return nil
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;return PhysicalProperties.new(
&#9;&#9;&#9;&#9;&#9;pod.density,
&#9;&#9;&#9;&#9;&#9;pod.friction,
&#9;&#9;&#9;&#9;&#9;pod.elasticity,
&#9;&#9;&#9;&#9;&#9;pod.frictionWeight,
&#9;&#9;&#9;&#9;&#9;pod.elasticityWeight
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;end
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;if roblox == nil then
&#9;&#9;&#9;&#9;return &quot;Default&quot;
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;&#9;Custom = {
&#9;&#9;&#9;&#9;&#9;&#9;density = roblox.Density,
&#9;&#9;&#9;&#9;&#9;&#9;friction = roblox.Friction,
&#9;&#9;&#9;&#9;&#9;&#9;elasticity = roblox.Elasticity,
&#9;&#9;&#9;&#9;&#9;&#9;frictionWeight = roblox.FrictionWeight,
&#9;&#9;&#9;&#9;&#9;&#9;elasticityWeight = roblox.ElasticityWeight,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;end
&#9;&#9;end,
&#9;},

&#9;Ray = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;return Ray.new(types.Vector3.fromPod(pod.origin), types.Vector3.fromPod(pod.direction))
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;origin = types.Vector3.toPod(roblox.Origin),
&#9;&#9;&#9;&#9;direction = types.Vector3.toPod(roblox.Direction),
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;Rect = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;return Rect.new(types.Vector2.fromPod(pod[1]), types.Vector2.fromPod(pod[2]))
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;types.Vector2.toPod(roblox.Min),
&#9;&#9;&#9;&#9;types.Vector2.toPod(roblox.Max),
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;Ref = {
&#9;&#9;fromPod = function(_)
&#9;&#9;&#9;error(&quot;Ref cannot be decoded on its own&quot;)
&#9;&#9;end,

&#9;&#9;toPod = function(_)
&#9;&#9;&#9;error(&quot;Ref can not be encoded on its own&quot;)
&#9;&#9;end,
&#9;},

&#9;Region3 = {
&#9;&#9;fromPod = function(_)
&#9;&#9;&#9;error(&quot;Region3 is not implemented&quot;)
&#9;&#9;end,

&#9;&#9;toPod = function(_)
&#9;&#9;&#9;error(&quot;Region3 is not implemented&quot;)
&#9;&#9;end,
&#9;},

&#9;Region3int16 = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;return Region3int16.new(types.Vector3int16.fromPod(pod[1]), types.Vector3int16.fromPod(pod[2]))
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;types.Vector3int16.toPod(roblox.Min),
&#9;&#9;&#9;&#9;types.Vector3int16.toPod(roblox.Max),
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;SharedString = {
&#9;&#9;fromPod = function(_pod)
&#9;&#9;&#9;error(&quot;SharedString is not supported&quot;)
&#9;&#9;end,

&#9;&#9;toPod = function(_roblox)
&#9;&#9;&#9;error(&quot;SharedString is not supported&quot;)
&#9;&#9;end,
&#9;},

&#9;String = {
&#9;&#9;fromPod = identity,
&#9;&#9;toPod = identity,
&#9;},

&#9;UDim = {
&#9;&#9;fromPod = unpackDecoder(UDim.new),

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return { roblox.Scale, roblox.Offset }
&#9;&#9;end,
&#9;},

&#9;UDim2 = {
&#9;&#9;fromPod = function(pod)
&#9;&#9;&#9;return UDim2.new(types.UDim.fromPod(pod[1]), types.UDim.fromPod(pod[2]))
&#9;&#9;end,

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;types.UDim.toPod(roblox.X),
&#9;&#9;&#9;&#9;types.UDim.toPod(roblox.Y),
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;Tags = {
&#9;&#9;fromPod = identity,
&#9;&#9;toPod = identity,
&#9;},

&#9;Vector2 = {
&#9;&#9;fromPod = unpackDecoder(Vector2.new),

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;identity(roblox.X),
&#9;&#9;&#9;&#9;identity(roblox.Y),
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;Vector2int16 = {
&#9;&#9;fromPod = unpackDecoder(Vector2int16.new),

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return { roblox.X, roblox.Y }
&#9;&#9;end,
&#9;},

&#9;Vector3 = {
&#9;&#9;fromPod = unpackDecoder(Vector3.new),

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return {
&#9;&#9;&#9;&#9;identity(roblox.X),
&#9;&#9;&#9;&#9;identity(roblox.Y),
&#9;&#9;&#9;&#9;identity(roblox.Z),
&#9;&#9;&#9;}
&#9;&#9;end,
&#9;},

&#9;Vector3int16 = {
&#9;&#9;fromPod = unpackDecoder(Vector3int16.new),

&#9;&#9;toPod = function(roblox)
&#9;&#9;&#9;return { roblox.X, roblox.Y, roblox.Z }
&#9;&#9;end,
&#9;},
}

types.OptionalCFrame = {
&#9;fromPod = function(pod)
&#9;&#9;if pod == nil then
&#9;&#9;&#9;return nil
&#9;&#9;else
&#9;&#9;&#9;return types.CFrame.fromPod(pod)
&#9;&#9;end
&#9;end,

&#9;toPod = function(roblox)
&#9;&#9;if roblox == nil then
&#9;&#9;&#9;return nil
&#9;&#9;else
&#9;&#9;&#9;return types.CFrame.toPod(roblox)
&#9;&#9;end
&#9;end,
}

function EncodedValue.decode(encodedValue)
&#9;local ty, value = next(encodedValue)

&#9;if ty == nil then
&#9;&#9;-- If the encoded pair is empty, assume it is an unoccupied optional value
&#9;&#9;return true, nil
&#9;end

&#9;local typeImpl = types[ty]
&#9;if typeImpl == nil then
&#9;&#9;return false, &quot;Couldn&apos;t decode value &quot; .. tostring(ty)
&#9;end

&#9;return true, typeImpl.fromPod(value)
end

function EncodedValue.encode(rbxValue, propertyType)
&#9;assert(propertyType ~= nil, &quot;Property type descriptor is required&quot;)

&#9;local typeImpl = types[propertyType]
&#9;if typeImpl == nil then
&#9;&#9;return false, (&quot;Missing encoder for property type %q&quot;):format(propertyType)
&#9;end

&#9;return true, {
&#9;&#9;[propertyType] = typeImpl.toPod(rbxValue),
&#9;}
end

local propertyTypeRenames = {
&#9;number = &quot;Float64&quot;,
&#9;boolean = &quot;Bool&quot;,
&#9;string = &quot;String&quot;,
}

function EncodedValue.encodeNaive(rbxValue)
&#9;local propertyType = typeof(rbxValue)
&#9;if propertyTypeRenames[propertyType] ~= nil then
&#9;&#9;propertyType = propertyTypeRenames[propertyType]
&#9;end

&#9;return EncodedValue.encode(rbxValue, propertyType)
end

return EncodedValue
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001059</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXE3750CC4C5084458910940E69FE12D6F">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b44</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">allValues</string>
					<string name="ScriptGuid">{5fe7625a-46a1-4eef-9312-4cec7d7622e7}</string>
					<string name="Source">return {
&#9;[&quot;Attributes&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Attributes&quot;] = {
&#9;&#9;&#9;&#9;[&quot;TestBool&quot;] = {
&#9;&#9;&#9;&#9;&#9;[&quot;Bool&quot;] = true,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;TestBrickColor&quot;] = {
&#9;&#9;&#9;&#9;&#9;[&quot;BrickColor&quot;] = 24,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;TestColor3&quot;] = {
&#9;&#9;&#9;&#9;&#9;[&quot;Color3&quot;] = {
&#9;&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;&#9;0.5,
&#9;&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;TestEnumItem&quot;] = {
&#9;&#9;&#9;&#9;&#9;[&quot;EnumItem&quot;] = {
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;type&quot;] = &quot;Material&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;value&quot;] = 256,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;TestNumber&quot;] = {
&#9;&#9;&#9;&#9;&#9;[&quot;Float64&quot;] = 1337.0,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;TestRect&quot;] = {
&#9;&#9;&#9;&#9;&#9;[&quot;Rect&quot;] = {
&#9;&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;2.0,
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;&#9;3.0,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;4.0,
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;TestString&quot;] = {
&#9;&#9;&#9;&#9;&#9;[&quot;String&quot;] = &quot;Test&quot;,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;TestUDim&quot;] = {
&#9;&#9;&#9;&#9;&#9;[&quot;UDim&quot;] = {
&#9;&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;&#9;2,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;TestUDim2&quot;] = {
&#9;&#9;&#9;&#9;&#9;[&quot;UDim2&quot;] = {
&#9;&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;2,
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;&#9;3.0,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;4,
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;TestVector2&quot;] = {
&#9;&#9;&#9;&#9;&#9;[&quot;Vector2&quot;] = {
&#9;&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;&#9;2.0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;TestVector3&quot;] = {
&#9;&#9;&#9;&#9;&#9;[&quot;Vector3&quot;] = {
&#9;&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;&#9;2.0,
&#9;&#9;&#9;&#9;&#9;&#9;3.0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Attributes&quot;,
&#9;},
&#9;[&quot;Axes&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Axes&quot;] = {
&#9;&#9;&#9;&#9;&quot;X&quot;,
&#9;&#9;&#9;&#9;&quot;Y&quot;,
&#9;&#9;&#9;&#9;&quot;Z&quot;,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Axes&quot;,
&#9;},
&#9;[&quot;BinaryString&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;BinaryString&quot;] = &quot;SGVsbG8h&quot;,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;BinaryString&quot;,
&#9;},
&#9;[&quot;Bool&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Bool&quot;] = true,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Bool&quot;,
&#9;},
&#9;[&quot;BrickColor&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;BrickColor&quot;] = 1004,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;BrickColor&quot;,
&#9;},
&#9;[&quot;CFrame&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;CFrame&quot;] = {
&#9;&#9;&#9;&#9;[&quot;position&quot;] = {
&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;2.0,
&#9;&#9;&#9;&#9;&#9;3.0,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;orientation&quot;] = {
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;4.0,
&#9;&#9;&#9;&#9;&#9;&#9;5.0,
&#9;&#9;&#9;&#9;&#9;&#9;6.0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;7.0,
&#9;&#9;&#9;&#9;&#9;&#9;8.0,
&#9;&#9;&#9;&#9;&#9;&#9;9.0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;10.0,
&#9;&#9;&#9;&#9;&#9;&#9;11.0,
&#9;&#9;&#9;&#9;&#9;&#9;12.0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;CFrame&quot;,
&#9;},
&#9;[&quot;Color3&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Color3&quot;] = {
&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;2.0,
&#9;&#9;&#9;&#9;3.0,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Color3&quot;,
&#9;},
&#9;[&quot;Color3uint8&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Color3uint8&quot;] = {
&#9;&#9;&#9;&#9;0,
&#9;&#9;&#9;&#9;128,
&#9;&#9;&#9;&#9;255,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Color3uint8&quot;,
&#9;},
&#9;[&quot;ColorSequence&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;ColorSequence&quot;] = {
&#9;&#9;&#9;&#9;[&quot;keypoints&quot;] = {
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;time&quot;] = 0.0,
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;color&quot;] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;0.5,
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;time&quot;] = 1.0,
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;color&quot;] = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;ColorSequence&quot;,
&#9;},
&#9;[&quot;ContentId&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;ContentId&quot;] = &quot;rbxassetid://12345&quot;,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;ContentId&quot;,
&#9;},
&#9;[&quot;Content_None&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Content&quot;] = &quot;None&quot;,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Content&quot;,
&#9;},
&#9;[&quot;Content_Uri&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Content&quot;] = {
&#9;&#9;&#9;&#9;[&quot;Uri&quot;] = &quot;rbxasset://abc/123.rojo&quot;,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Content&quot;,
&#9;},
&#9;[&quot;Enum&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Enum&quot;] = 1234,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Enum&quot;,
&#9;},
&#9;[&quot;EnumItem&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;EnumItem&quot;] = {
&#9;&#9;&#9;&#9;[&quot;type&quot;] = &quot;Material&quot;,
&#9;&#9;&#9;&#9;[&quot;value&quot;] = 256,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;EnumItem&quot;,
&#9;},
&#9;[&quot;Faces&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Faces&quot;] = {
&#9;&#9;&#9;&#9;&quot;Right&quot;,
&#9;&#9;&#9;&#9;&quot;Top&quot;,
&#9;&#9;&#9;&#9;&quot;Back&quot;,
&#9;&#9;&#9;&#9;&quot;Left&quot;,
&#9;&#9;&#9;&#9;&quot;Bottom&quot;,
&#9;&#9;&#9;&#9;&quot;Front&quot;,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Faces&quot;,
&#9;},
&#9;[&quot;Float32&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Float32&quot;] = 15.0,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Float32&quot;,
&#9;},
&#9;[&quot;Float64&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Float64&quot;] = 15123.0,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Float64&quot;,
&#9;},
&#9;[&quot;Font&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Font&quot;] = {
&#9;&#9;&#9;&#9;[&quot;family&quot;] = &quot;rbxasset://fonts/families/SourceSansPro.json&quot;,
&#9;&#9;&#9;&#9;[&quot;weight&quot;] = &quot;Regular&quot;,
&#9;&#9;&#9;&#9;[&quot;style&quot;] = &quot;Normal&quot;,
&#9;&#9;&#9;&#9;[&quot;cachedFaceId&quot;] = nil,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Font&quot;,
&#9;},
&#9;[&quot;Int32&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Int32&quot;] = 6014,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Int32&quot;,
&#9;},
&#9;[&quot;Int64&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Int64&quot;] = 23491023,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Int64&quot;,
&#9;},
&#9;[&quot;MaterialColors&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;MaterialColors&quot;] = {
&#9;&#9;&#9;&#9;[&quot;Grass&quot;] = {
&#9;&#9;&#9;&#9;&#9;106,
&#9;&#9;&#9;&#9;&#9;127,
&#9;&#9;&#9;&#9;&#9;63,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Slate&quot;] = {
&#9;&#9;&#9;&#9;&#9;63,
&#9;&#9;&#9;&#9;&#9;127,
&#9;&#9;&#9;&#9;&#9;107,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Concrete&quot;] = {
&#9;&#9;&#9;&#9;&#9;127,
&#9;&#9;&#9;&#9;&#9;102,
&#9;&#9;&#9;&#9;&#9;63,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Brick&quot;] = {
&#9;&#9;&#9;&#9;&#9;138,
&#9;&#9;&#9;&#9;&#9;86,
&#9;&#9;&#9;&#9;&#9;62,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Sand&quot;] = {
&#9;&#9;&#9;&#9;&#9;143,
&#9;&#9;&#9;&#9;&#9;126,
&#9;&#9;&#9;&#9;&#9;95,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;WoodPlanks&quot;] = {
&#9;&#9;&#9;&#9;&#9;139,
&#9;&#9;&#9;&#9;&#9;109,
&#9;&#9;&#9;&#9;&#9;79,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Rock&quot;] = {
&#9;&#9;&#9;&#9;&#9;102,
&#9;&#9;&#9;&#9;&#9;108,
&#9;&#9;&#9;&#9;&#9;111,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Glacier&quot;] = {
&#9;&#9;&#9;&#9;&#9;101,
&#9;&#9;&#9;&#9;&#9;176,
&#9;&#9;&#9;&#9;&#9;234,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Snow&quot;] = {
&#9;&#9;&#9;&#9;&#9;195,
&#9;&#9;&#9;&#9;&#9;199,
&#9;&#9;&#9;&#9;&#9;218,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Sandstone&quot;] = {
&#9;&#9;&#9;&#9;&#9;137,
&#9;&#9;&#9;&#9;&#9;90,
&#9;&#9;&#9;&#9;&#9;71,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Mud&quot;] = {
&#9;&#9;&#9;&#9;&#9;58,
&#9;&#9;&#9;&#9;&#9;46,
&#9;&#9;&#9;&#9;&#9;36,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Basalt&quot;] = {
&#9;&#9;&#9;&#9;&#9;30,
&#9;&#9;&#9;&#9;&#9;30,
&#9;&#9;&#9;&#9;&#9;37,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Ground&quot;] = {
&#9;&#9;&#9;&#9;&#9;102,
&#9;&#9;&#9;&#9;&#9;92,
&#9;&#9;&#9;&#9;&#9;59,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;CrackedLava&quot;] = {
&#9;&#9;&#9;&#9;&#9;232,
&#9;&#9;&#9;&#9;&#9;156,
&#9;&#9;&#9;&#9;&#9;74,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Asphalt&quot;] = {
&#9;&#9;&#9;&#9;&#9;115,
&#9;&#9;&#9;&#9;&#9;123,
&#9;&#9;&#9;&#9;&#9;107,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Cobblestone&quot;] = {
&#9;&#9;&#9;&#9;&#9;132,
&#9;&#9;&#9;&#9;&#9;123,
&#9;&#9;&#9;&#9;&#9;90,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Ice&quot;] = {
&#9;&#9;&#9;&#9;&#9;129,
&#9;&#9;&#9;&#9;&#9;194,
&#9;&#9;&#9;&#9;&#9;224,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;LeafyGrass&quot;] = {
&#9;&#9;&#9;&#9;&#9;115,
&#9;&#9;&#9;&#9;&#9;132,
&#9;&#9;&#9;&#9;&#9;74,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Salt&quot;] = {
&#9;&#9;&#9;&#9;&#9;198,
&#9;&#9;&#9;&#9;&#9;189,
&#9;&#9;&#9;&#9;&#9;181,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Limestone&quot;] = {
&#9;&#9;&#9;&#9;&#9;206,
&#9;&#9;&#9;&#9;&#9;173,
&#9;&#9;&#9;&#9;&#9;148,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;Pavement&quot;] = {
&#9;&#9;&#9;&#9;&#9;148,
&#9;&#9;&#9;&#9;&#9;148,
&#9;&#9;&#9;&#9;&#9;140,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;MaterialColors&quot;,
&#9;},
&#9;[&quot;NumberRange&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;NumberRange&quot;] = {
&#9;&#9;&#9;&#9;-36.0,
&#9;&#9;&#9;&#9;94.0,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;NumberRange&quot;,
&#9;},
&#9;[&quot;NumberSequence&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;NumberSequence&quot;] = {
&#9;&#9;&#9;&#9;[&quot;keypoints&quot;] = {
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;time&quot;] = 0.0,
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;value&quot;] = 5.0,
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;envelope&quot;] = 2.0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;time&quot;] = 1.0,
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;value&quot;] = 22.0,
&#9;&#9;&#9;&#9;&#9;&#9;[&quot;envelope&quot;] = 0.0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;NumberSequence&quot;,
&#9;},
&#9;[&quot;OptionalCFrame-None&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;OptionalCFrame&quot;] = nil,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;OptionalCFrame&quot;,
&#9;},
&#9;[&quot;OptionalCFrame-Some&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;OptionalCFrame&quot;] = {
&#9;&#9;&#9;&#9;[&quot;position&quot;] = {
&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;orientation&quot;] = {
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;OptionalCFrame&quot;,
&#9;},
&#9;[&quot;PhysicalProperties-Custom&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;PhysicalProperties&quot;] = {
&#9;&#9;&#9;&#9;[&quot;density&quot;] = 0.5,
&#9;&#9;&#9;&#9;[&quot;friction&quot;] = 1.0,
&#9;&#9;&#9;&#9;[&quot;elasticity&quot;] = 0.0,
&#9;&#9;&#9;&#9;[&quot;frictionWeight&quot;] = 50.0,
&#9;&#9;&#9;&#9;[&quot;elasticityWeight&quot;] = 25.0,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;PhysicalProperties&quot;,
&#9;},
&#9;[&quot;PhysicalProperties-Default&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;PhysicalProperties&quot;] = &quot;Default&quot;,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;PhysicalProperties&quot;,
&#9;},
&#9;[&quot;Ray&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Ray&quot;] = {
&#9;&#9;&#9;&#9;[&quot;origin&quot;] = {
&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;2.0,
&#9;&#9;&#9;&#9;&#9;3.0,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;[&quot;direction&quot;] = {
&#9;&#9;&#9;&#9;&#9;4.0,
&#9;&#9;&#9;&#9;&#9;5.0,
&#9;&#9;&#9;&#9;&#9;6.0,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Ray&quot;,
&#9;},
&#9;[&quot;Rect&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Rect&quot;] = {
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;&#9;5.0,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;10.0,
&#9;&#9;&#9;&#9;&#9;15.0,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Rect&quot;,
&#9;},
&#9;[&quot;Region3int16&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Region3int16&quot;] = {
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;-10,
&#9;&#9;&#9;&#9;&#9;-5,
&#9;&#9;&#9;&#9;&#9;0,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;5,
&#9;&#9;&#9;&#9;&#9;10,
&#9;&#9;&#9;&#9;&#9;15,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Region3int16&quot;,
&#9;},
&#9;[&quot;String&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;String&quot;] = &quot;Hello, world!&quot;,
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;String&quot;,
&#9;},
&#9;[&quot;Tags&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Tags&quot;] = {
&#9;&#9;&#9;&#9;&quot;foo&quot;,
&#9;&#9;&#9;&#9;&quot;con&apos;fusion?!&quot;,
&#9;&#9;&#9;&#9;&quot;bar&quot;,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Tags&quot;,
&#9;},
&#9;[&quot;UDim&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;UDim&quot;] = {
&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;32,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;UDim&quot;,
&#9;},
&#9;[&quot;UDim2&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;UDim2&quot;] = {
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;-1.0,
&#9;&#9;&#9;&#9;&#9;100,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;&#9;{
&#9;&#9;&#9;&#9;&#9;1.0,
&#9;&#9;&#9;&#9;&#9;-100,
&#9;&#9;&#9;&#9;},
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;UDim2&quot;,
&#9;},
&#9;[&quot;Vector2&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Vector2&quot;] = {
&#9;&#9;&#9;&#9;-50.0,
&#9;&#9;&#9;&#9;50.0,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Vector2&quot;,
&#9;},
&#9;[&quot;Vector2int16&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Vector2int16&quot;] = {
&#9;&#9;&#9;&#9;-300,
&#9;&#9;&#9;&#9;300,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Vector2int16&quot;,
&#9;},
&#9;[&quot;Vector3&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Vector3&quot;] = {
&#9;&#9;&#9;&#9;-300.0,
&#9;&#9;&#9;&#9;0.0,
&#9;&#9;&#9;&#9;1500.0,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Vector3&quot;,
&#9;},
&#9;[&quot;Vector3int16&quot;] = {
&#9;&#9;[&quot;value&quot;] = {
&#9;&#9;&#9;[&quot;Vector3int16&quot;] = {
&#9;&#9;&#9;&#9;60,
&#9;&#9;&#9;&#9;37,
&#9;&#9;&#9;&#9;-450,
&#9;&#9;&#9;},
&#9;&#9;},
&#9;&#9;[&quot;ty&quot;] = &quot;Vector3int16&quot;,
&#9;},
}</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a40000105a</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXA94EF03F417E4F74A530503F1D45BA0E">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b45</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">base64</string>
					<string name="ScriptGuid">{a3f3924f-deb6-4e94-9fbc-193182740ac7}</string>
					<string name="Source">-- Use HashLib&apos;s Base64 implementation
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local HashLib = require(Lemonade.Packages.hashlib)

return {
&#9;decode = HashLib.base64_decode,
&#9;encode = HashLib.base64_encode,
}
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a40000105b</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBXD4163A996204426495C32E9E33487570">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b46</UniqueId>
				<string name="Name">Helpers</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a40000105c</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBXAB659B5685A849DE9236F1A2140CD046">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b47</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">generateRef</string>
					<string name="ScriptGuid">{8eb72164-8bc9-489f-b74e-39d55841a6e4}</string>
					<string name="Source">--!strict
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Types = require(Lemonade.Types)
local hashlib = require(Lemonade.Packages.hashlib)

return function(): Types.Ref
&#9;-- Generate a random UUID-like ID using hashlib
&#9;local randomInput = tostring(math.random()) .. tostring(os.clock()) .. tostring(tick())
&#9;local hash = hashlib.sha256(randomInput)

&#9;-- Take first 22 characters for a shorter, cleaner ID
&#9;local id = string.sub(hash, 1, 22)

&#9;-- Convert to buffer for consistency with Types.Ref
&#9;return buffer.fromstring(id)
end
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a40000105d</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXE58B4E52BD0142E58BA32A6B8269F970">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b48</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">equals</string>
					<string name="ScriptGuid">{6cd966e7-aef4-43ce-b638-11bec134d837}</string>
					<string name="Source">--!strict
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)

local Util = require(Lemonade.Util)

local function fuzzy(a: number, b: number): boolean
&#9;return math.abs(a - b) &lt; 0.0001
end

local function componentEq(a: { number }, b: { number }): boolean
&#9;for i, aComp in a do
&#9;&#9;if not fuzzy(aComp, b[i]) then
&#9;&#9;&#9;return false
&#9;&#9;end
&#9;end

&#9;return true
end

local function equals(a: any, b: any): boolean
&#9;if a == b then
&#9;&#9;return true
&#9;end

&#9;local tA, tB = typeof(a), typeof(b)

&#9;if tA == &quot;number&quot; and tB == &quot;number&quot; then
&#9;&#9;return fuzzy(a, b)
&#9;elseif tA == &quot;CFrame&quot; and tB == &quot;CFrame&quot; then
&#9;&#9;return componentEq({ a:components() }, { b:components() })
&#9;elseif tA == &quot;Vector3&quot; and tB == &quot;Vector3&quot; then
&#9;&#9;return componentEq({ a.X, a.Y, a.Z }, { b.X, b.Y, b.Z })
&#9;elseif tA == &quot;Vector2&quot; and tB == &quot;Vector2&quot; then
&#9;&#9;return componentEq({ a.X, a.Y }, { b.X, b.Y })
&#9;elseif tA == &quot;Color3&quot; and tB == &quot;Color3&quot; then
&#9;&#9;return componentEq({ a.R, a.G, a.B }, { b.R, b.G, b.B })
&#9;elseif tA == &quot;EnumItem&quot; and tB == &quot;number&quot; then
&#9;&#9;return a.Value == b
&#9;elseif tA == &quot;number&quot; and tB == &quot;EnumItem&quot; then
&#9;&#9;return a == b.Value
&#9;elseif tA == &quot;table&quot; and tB == &quot;table&quot; then
&#9;&#9;if #a ~= #b or Util.len(a) ~= Util.len(b) then
&#9;&#9;&#9;return false
&#9;&#9;end

&#9;&#9;for kA, vA in a do
&#9;&#9;&#9;local found = false

&#9;&#9;&#9;for kB, vB in b do
&#9;&#9;&#9;&#9;if equals(kA, kB) then
&#9;&#9;&#9;&#9;&#9;if not equals(vA, vB) then
&#9;&#9;&#9;&#9;&#9;&#9;return false
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;found = true
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if not found then
&#9;&#9;&#9;&#9;return false
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;return true
&#9;elseif tA == &quot;buffer&quot; and tB == &quot;buffer&quot; then
&#9;&#9;return buffer.tostring(a) == buffer.tostring(b)
&#9;end

&#9;return false
end

return equals
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a40000105e</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXDBBEA9410E28457C9CF1A4A6AA4B1BF2">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b49</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">describeChanges</string>
					<string name="ScriptGuid">{aa44c8b2-4d08-4af5-8730-1b54eff7a3d1}</string>
					<string name="Source">--!strict
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local App = Lemonade.App

local Types = require(Lemonade.Types)
local Theme = require(App.Theme)

local function s(len: number): string
&#9;return len &gt; 1 and &quot;s&quot; or &quot;&quot;
end

local function hex(kind: string): string
&#9;local colorValue = Theme.Colors.Diff[kind]

&#9;-- Handle both Fusion Value objects and direct Color3 values
&#9;local color
&#9;if typeof(colorValue) == &quot;Color3&quot; then
&#9;&#9;-- Direct Color3 value
&#9;&#9;color = colorValue
&#9;elseif colorValue and typeof(colorValue.peek) == &quot;function&quot; then
&#9;&#9;-- Fusion Value with peek method
&#9;&#9;color = colorValue:peek()
&#9;else
&#9;&#9;-- Fallback to a default color if something goes wrong
&#9;&#9;warn(
&#9;&#9;&#9;&quot;[describeChanges] Could not get color for kind:&quot;,
&#9;&#9;&#9;kind,
&#9;&#9;&#9;&quot;using fallback. ColorValue type:&quot;,
&#9;&#9;&#9;typeof(colorValue)
&#9;&#9;)
&#9;&#9;color = Color3.fromRGB(128, 128, 128) -- Gray fallback
&#9;end

&#9;return &quot;#&quot; .. color:ToHex()
end

return function(changes: Types.Changes): string
&#9;local additions = #changes.additions
&#9;local updates = #changes.updates
&#9;local removals = #changes.removals

&#9;local text = &quot;There will be &quot;

&#9;if additions &gt; 0 then
&#9;&#9;text ..= `&lt;font color=&quot;{hex(&quot;Add&quot;)}&quot;&gt;{additions} addition{s(additions)}&lt;/font&gt;`

&#9;&#9;if updates &gt; 0 or removals &gt; 0 then
&#9;&#9;&#9;text ..= &quot;, &quot;
&#9;&#9;end
&#9;end

&#9;if updates &gt; 0 then
&#9;&#9;text ..= `&lt;font color=&quot;{hex(&quot;Update&quot;)}&quot;&gt;{updates} update{s(updates)}&lt;/font&gt;`

&#9;&#9;if removals &gt; 0 then
&#9;&#9;&#9;text ..= &quot;, &quot;
&#9;&#9;end
&#9;end

&#9;if removals &gt; 0 then
&#9;&#9;text ..= `&lt;font color=&quot;{hex(&quot;Remove&quot;)}&quot;&gt;{removals} removal{s(removals)}&lt;/font&gt;`
&#9;end

&#9;text ..= &quot; applied compared to the server&quot;

&#9;return text
end
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a40000105f</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX02470FE77A5C4C32A8599C110D00B09F">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b4a</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">getClassName</string>
					<string name="ScriptGuid">{23698cba-58ed-4219-9942-a652e6d90bcc}</string>
					<string name="Source">local function getClassName(instance: Instance): string
&#9;-- Return the appropriate source property name based on instance class
&#9;if instance:IsA(&quot;Script&quot;) or instance:IsA(&quot;LocalScript&quot;) or instance:IsA(&quot;ModuleScript&quot;) then
&#9;&#9;return &quot;Source&quot;
&#9;elseif instance:IsA(&quot;StringValue&quot;) then
&#9;&#9;return &quot;Value&quot;
&#9;else
&#9;&#9;-- Default fallback
&#9;&#9;return &quot;Source&quot;
&#9;end
end

return getClassName
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001060</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX7552BB8D614C40C3B2F4B66397C79183">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b4b</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">getPathFromInstance</string>
					<string name="ScriptGuid">{d3accfbd-09bd-4bfb-bc84-f2093911374f}</string>
					<string name="Source">--!strict
local Lemonade = script:FindFirstAncestor(&quot;Lemonade&quot;)
local Tree = require(Lemonade.Core.Tree) -- Assuming Tree type definition is accessible
-- local Types = require(Lemonade.Types) -- For Ref type if needed -- Removed unused variable

-- Recursively builds the path from a known ancestor down to the target instance
local function buildPath(targetInstance: Instance, currentInstance: Instance, currentPath: string): string?
&#9;if currentInstance == targetInstance then
&#9;&#9;return currentPath
&#9;end

&#9;for _, child in ipairs(currentInstance:GetChildren()) do
&#9;&#9;local childPath = currentPath .. &quot;/&quot; .. child.Name
&#9;&#9;local result = buildPath(targetInstance, child, childPath)
&#9;&#9;if result then
&#9;&#9;&#9;return result
&#9;&#9;end
&#9;end

&#9;return nil
end

-- Walks up the tree to find an ancestor with a known Ref in the Tree manager,
-- then constructs the relative path.
local function getPathFromInstance(instance: Instance, _tree: typeof(Tree.new())): string?
&#9;-- Walk up to the DataModel, gathering names
&#9;if not instance or instance == game then
&#9;&#9;return nil
&#9;end

&#9;local segments = {}
&#9;local current = instance

&#9;while current and current ~= game do
&#9;&#9;table.insert(segments, 1, current.Name)
&#9;&#9;current = current.Parent
&#9;end

&#9;if #segments == 0 then
&#9;&#9;return nil
&#9;end

&#9;-- Historically we stripped the first path segment assuming it represented the DataModel (e.g. &quot;Place1&quot;).
&#9;-- However the loop above never includes `game` itself, so the first segment is actually the root *service*
&#9;-- (Workspace, StarterPlayer, ReplicatedStorage, ...). Stripping it caused paths like
&#9;-- &quot;StarterPlayerScripts/foo.lua&quot; where the correct path should be &quot;StarterPlayer/StarterPlayerScripts/foo.lua&quot;.
&#9;-- Only strip the very first segment if it exactly matches the DataModel name; otherwise leave it intact.
&#9;if #segments &gt; 1 and segments[1] == game.Name then
&#9;&#9;table.remove(segments, 1)
&#9;end

&#9;local path = table.concat(segments, &quot;/&quot;)

&#9;-- Path is already rooted at the Roblox service (e.g. &quot;ServerScriptService/...&quot;)
&#9;-- so send it verbatim without any &quot;src/&quot; prefix

&#9;-- No longer auto-adding extensions to script files

&#9;return path
end

return getPathFromInstance
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001061</UniqueId>
				</Properties>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBX4C3F4EA6EC0F4024BD6589F1BC14DD03">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b4c</UniqueId>
				<string name="LinkedSource"></string>
				<string name="Name">LogConfig</string>
				<string name="ScriptGuid">{13577210-614a-49c0-b577-bd63ce3e5ca3}</string>
				<string name="Source">--!strict
-- Simple logging configuration - single source of truth

local LogConfig = {
&#9;ENABLE_LOGS = true, -- Temporarily enabled for debugging sync
}

-- Function to toggle logging state
function LogConfig.setLogging(enabled: boolean)
&#9;LogConfig.ENABLE_LOGS = enabled
end

function LogConfig.getLogging(): boolean
&#9;return LogConfig.ENABLE_LOGS
end

return LogConfig
</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a400001062</UniqueId>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX292A833AEF294AE7B9D711D745086EDE">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b4d</UniqueId>
				<string name="Name">Packages</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a400001063</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="RBX71318B6F12084A8E8BD2BF5B52944849">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b4e</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">hashlib</string>
					<string name="ScriptGuid">{a7f08f4d-41aa-455b-8e18-cffb2e4fbc91}</string>
					<string name="Source">return require(script.Parent._Index[&quot;boatbomber_hashlib@1.0.0&quot;][&quot;hashlib&quot;])
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001064</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX3972E262D4B641449CCFB8679C958878">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b4f</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Promise</string>
					<string name="ScriptGuid">{b6d8d57b-6681-4e79-b8b1-ef874a54ce0d}</string>
					<string name="Source">return require(script.Parent._Index[&quot;lukadev-0_typed-promise@4.0.2&quot;][&quot;typed-promise&quot;])
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001065</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXD3AD3CA9A24142DBBA0812976C6B4D0A">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b50</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Signal</string>
					<string name="ScriptGuid">{9d0f0ecf-7a29-4abe-87ac-fed2ae3527da}</string>
					<string name="Source">return require(script.Parent._Index[&quot;dervexhero_advancedsignal@1.0.1&quot;][&quot;advancedsignal&quot;])
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001066</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXCA7EBD6CC5404F92BBB41B45B761C6C9">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b51</UniqueId>
					<string name="LinkedSource"></string>
					<string name="Name">Fusion</string>
					<string name="ScriptGuid">{f690be45-9b8d-4044-834e-098a4d5de5c2}</string>
					<string name="Source">return require(script.Parent._Index[&quot;dervexhero_fusion-03-dev@0.3.0-dev.1&quot;][&quot;fusion-03-dev&quot;])
</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001067</UniqueId>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX01BAA90AA5AC417F90061EFBCF32ABAC">
				<Properties>
					<string name="AttributesSerialize"></string>
					<bool name="DefinesCapabilities">false</bool>
					<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b52</UniqueId>
					<string name="Name">_Index</string>
					<int64 name="SourceAssetId">-1</int64>
					<string name="Tags"></string>
					<UniqueId name="UniqueId">793a702cfff58dd608f229a400001068</UniqueId>
				</Properties>
				<Item class="Folder" referent="RBX11A7478C12374DB1AD3B59A8F1FB3036">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b53</UniqueId>
						<string name="Name">dervexhero_advancedsignal@1.0.1</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a400001069</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX8E58B2C173724DD8AC8D32240D690718">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b54</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">advancedsignal</string>
							<string name="ScriptGuid">{f64b8cd8-158e-4967-a26c-1b8409a014f5}</string>
							<string name="Source">---------------------------------------------------------------------------------------------------
--       ___    ____ _    _____    _   __________________     _____ ___________   _____    __    --
--      /   |  / __ | |  / /   |  / | / / ____/ ____/ __ \   / ___//  _/ ____/ | / /   |  / /    --
--     / /| | / / / | | / / /| | /  |/ / /   / __/ / / / /   \__ \ / // / __/  |/ / /| | / /     --
--    / ___ |/ /_/ /| |/ / ___ |/ /|  / /___/ /___/ /_/ /   ___/ // // /_/ / /|  / ___ |/ /___   --
--   /_/  |_/_____/ |___/_/  |_/_/ |_/\____/_____/_____/   /____/___/\____/_/ |_/_/  |_/_____/   --
--                                                                                               --
--                                    Made with &lt;3 by Dervex                                     --
--                                                                                               --
-- About:                                                                                        --
--   Advanced Signal lets you choose whether you prefer performance or ease of use.              --
--   Signal is yieldable by default, so yielding inside one of its bindings won&apos;t cause any      --
--   problems but will slightly decrease performance. By default, the binding order is not       --
--   preserved thus connection that were made first will be fired last. Behavior of these two    --
--   settings can be changed by providing additional arguments to Signal.new(), by creating      --
--   config module inside ReplicatedStorage or by changing DEFAULT_SETTINGS.                     --
--                                                                                               --
-- API usage:                                                                                    --
--   local Signal = require(path.to.this.module)                                                 --
--                                                                                               --
--   local signal = Signal.new(false)                                                            --
--                                                                                               --
--   local handle = signal:Bind(function(params)                                                 --
--      print(params)                                                                            --
--   end)                                                                                        --
--                                                                                               --
--   signal:Once(function(params)                                                                --
--      print(params)                                                                            --
--   end)                                                                                        --
--                                                                                               --
--   signal:Fire(args)                                                                           --
--                                                                                               --
--   handle:Unbind() or signal:Unbind(handle)                                                    --
--                                                                                               --
--   signal:UnbindAll()                                                                          --
--                                                                                               --
--   signal:Wait()                                                                               --
--                                                                                               --
-- Credits:                                                                                      --
--   Part of this code was written by stravant                                                   --
---------------------------------------------------------------------------------------------------

local DEFAULT_SETTINGS = {} do
&#9;DEFAULT_SETTINGS.yieldable = true
&#9;DEFAULT_SETTINGS.keepOrder = false

&#9;if game.ReplicatedStorage:FindFirstChild(&apos;config&apos;) then
&#9;&#9;local Config = require(game.ReplicatedStorage.config)

&#9;&#9;if Config.AdvancedSignal then
&#9;&#9;&#9;for i, v in pairs(Config.AdvancedSignal) do
&#9;&#9;&#9;&#9;if type(v) == &apos;boolean&apos; then
&#9;&#9;&#9;&#9;&#9;DEFAULT_SETTINGS[i] = v
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

export type Connection = {
&#9;connected: boolean,
&#9;signal: Signal,
&#9;callback: (...any) -&gt; (),
&#9;new: (signal: Signal, callback: (...any) -&gt; ()) -&gt; Connection,
&#9;Unbind: (self: Connection) -&gt; ()
}

export type Signal = {
&#9;yieldable: boolean,
&#9;keepOrder: boolean,
&#9;connections: {[Connection]: boolean},
&#9;new: (yieldable: boolean?, keepOrder: boolean?) -&gt; Signal,
&#9;Bind: (self: Signal, callback: (...any) -&gt; ()) -&gt; Connection,
&#9;Once: (self: Signal, callback: (...any) -&gt; ()) -&gt; Connection,
&#9;Fire: (self: Signal, ...any) -&gt; (),
&#9;Unbind: (self: Signal, connection: Connection) -&gt; (),
&#9;UnbindAll: (self: Signal) -&gt; (),
&#9;Wait: (self: Signal) -&gt; ...any
}

local freeThread = nil

local function acquireThreadAndRunCallback(callback, ...)
&#9;local acquiredThread = freeThread
&#9;freeThread = nil

&#9;callback(...)

&#9;freeThread = acquiredThread
end

local function runCallback()
&#9;while true do
&#9;&#9;acquireThreadAndRunCallback(coroutine.yield())
&#9;end
end

local Connection: Connection = {}
Connection.__index = Connection

-- Creates new connection
function Connection.new(signal: Signal, callback: (...any) -&gt; ()): Connection
&#9;return setmetatable({
&#9;&#9;connected = true,
&#9;&#9;signal = signal,
&#9;&#9;callback = callback
&#9;}, Connection)
end

-- Disconnects connection
function Connection:Unbind()
&#9;self.connected = false
&#9;self.signal:Unbind(self)
end

local Signal: Signal = {}
Signal.__index = Signal

-- Creates new signal class with optional settings
function Signal.new(yieldable: boolean, keepOrder: boolean): Signal
&#9;return setmetatable({
&#9;&#9;yieldable = if type(yieldable) == &apos;boolean&apos; then yieldable else DEFAULT_SETTINGS.yieldable,
&#9;&#9;keepOrder = if type(keepOrder) == &apos;boolean&apos; then keepOrder else DEFAULT_SETTINGS.keepOrder,
&#9;&#9;connections = {}
&#9;}, Signal)
end

-- Binds callback to the signal, returns connection
function Signal:Bind(callback: (...any) -&gt; ()): Connection
&#9;local connection = Connection.new(self, callback)

&#9;self.connections[connection] = true

&#9;if self.keepOrder then
&#9;&#9;local connections = {}

&#9;&#9;for i in pairs(self.connections) do
&#9;&#9;&#9;connections[i] = true
&#9;&#9;end

&#9;&#9;self.connections = connections
&#9;end

&#9;return connection
end

-- Binds callback to the signal that will unbind automatically after first fire, returns connection
function Signal:Once(callback: (...any) -&gt; ()): Connection
&#9;local connection

&#9;connection = Connection.new(self, function(...)
&#9;&#9;if connection.connected then
&#9;&#9;&#9;connection:Unbind()
&#9;&#9;end

&#9;&#9;callback(...)
&#9;end)

&#9;self.connections[connection] = true

&#9;return connection
end

-- Fires signal with given arguments
function Signal:Fire(...: any)
&#9;for connection in pairs(self.connections) do
&#9;&#9;if self.yieldable then
&#9;&#9;&#9;if not freeThread then
&#9;&#9;&#9;&#9;freeThread = coroutine.create(runCallback)
&#9;&#9;&#9;&#9;coroutine.resume(freeThread)
&#9;&#9;&#9;end

&#9;&#9;&#9;task.spawn(freeThread, connection.callback, ...)
&#9;&#9;else
&#9;&#9;&#9;connection.callback(...)
&#9;&#9;end
&#9;end
end

-- Unbinds a connection from the signal
function Signal:Unbind(connection: Connection)
&#9;self.connections[connection] = nil
end

-- Unbinds all connections from the signal
function Signal:UnbindAll()
&#9;self.connections = {}
end

-- Yields current thread until signal is fired
function Signal:Wait(): ...any
&#9;local thread = coroutine.running()

&#9;self:Once(function(...)
&#9;&#9;task.spawn(thread, ...)
&#9;end)

&#9;return coroutine.yield()
end

return Signal</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a40000106a</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXF40A86F7393843B6838B355AD556FBF4">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b55</UniqueId>
						<string name="Name">boatbomber_hashlib@1.0.0</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000106b</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBXCD55B46BB7A84149936E3D811D1F8C69">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b56</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">hashlib</string>
							<string name="ScriptGuid">{58d2e66a-99e8-4546-8874-df0c19ef62fb}</string>
							<string name="Source">--[=[------------------------------------------------------------------------------------------------------------------------
-- HashLib by Egor Skriptunoff, boatbomber, and howmanysmall

Documentation here: https://devforum.roblox.com/t/open-source-hashlib/416732/1

--------------------------------------------------------------------------------------------------------------------------

Module was originally written by Egor Skriptunoff and distributed under an MIT license.
It can be found here: https://github.com/Egor-Skriptunoff/pure_lua_SHA/blob/master/sha2.lua

That version was around 3000 lines long, and supported Lua versions 5.1, 5.2, 5.3, and 5.4, and LuaJIT.
Although that is super cool, Roblox only uses Lua 5.1, so that was extreme overkill.

I, boatbomber, worked to port it to Roblox in a way that doesn&apos;t overcomplicate it with support of unreachable
cases. Then, howmanysmall did some final optimizations that really squeeze out all the performance possible.
It&apos;s gotten stupid fast, thanks to her!

After quite a bit of work and benchmarking, this is what we were left with.
Enjoy!

--------------------------------------------------------------------------------------------------------------------------

DESCRIPTION:
&#9;This module contains functions to calculate SHA digest:
&#9;&#9;MD5, SHA-1,
&#9;&#9;SHA-224, SHA-256, SHA-512/224, SHA-512/256, SHA-384, SHA-512,
&#9;&#9;SHA3-224, SHA3-256, SHA3-384, SHA3-512, SHAKE128, SHAKE256,
&#9;&#9;HMAC
&#9;Additionally, it has a few extra utility functions:
&#9;&#9;hex_to_bin
&#9;&#9;base64_to_bin
&#9;&#9;bin_to_base64
&#9;Written in pure Lua.
USAGE:
&#9;Input data should be a string
&#9;Result (SHA digest) is returned in hexadecimal representation as a string of lowercase hex digits.
&#9;Simplest usage example:
&#9;&#9;local HashLib = require(script.HashLib)
&#9;&#9;local your_hash = HashLib.sha256(&quot;your string&quot;)
API:
&#9;&#9;HashLib.md5
&#9;&#9;HashLib.sha1
&#9;SHA2 hash functions:
&#9;&#9;HashLib.sha224
&#9;&#9;HashLib.sha256
&#9;&#9;HashLib.sha512_224
&#9;&#9;HashLib.sha512_256
&#9;&#9;HashLib.sha384
&#9;&#9;HashLib.sha512
&#9;SHA3 hash functions:
&#9;&#9;HashLib.sha3_224
&#9;&#9;HashLib.sha3_256
&#9;&#9;HashLib.sha3_384
&#9;&#9;HashLib.sha3_512
&#9;&#9;HashLib.shake128
&#9;&#9;HashLib.shake256
&#9;Misc utilities:
&#9;&#9;HashLib.hmac (Applicable to any hash function from this module except SHAKE*)
&#9;&#9;HashLib.hex_to_bin
&#9;&#9;HashLib.base64_to_bin
&#9;&#9;HashLib.bin_to_base64

--]=]
---------------------------------------------------------------------------

local Base64 = require(script.Base64)

--------------------------------------------------------------------------------
-- LOCALIZATION FOR VM OPTIMIZATIONS
--------------------------------------------------------------------------------

local ipairs = ipairs

--------------------------------------------------------------------------------
-- 32-BIT BITWISE FUNCTIONS
--------------------------------------------------------------------------------
-- Only low 32 bits of function arguments matter, high bits are ignored
-- The result of all functions (except HEX) is an integer inside &quot;correct range&quot;:
-- for &quot;bit&quot; library:    (-TWO_POW_31)..(TWO_POW_31-1)
-- for &quot;bit32&quot; library:        0..(TWO_POW_32-1)
local bit32_band = bit32.band -- 2 arguments
local bit32_bor = bit32.bor -- 2 arguments
local bit32_bxor = bit32.bxor -- 2..5 arguments
local bit32_lshift = bit32.lshift -- second argument is integer 0..31
local bit32_rshift = bit32.rshift -- second argument is integer 0..31
local bit32_lrotate = bit32.lrotate -- second argument is integer 0..31
local bit32_rrotate = bit32.rrotate -- second argument is integer 0..31

--------------------------------------------------------------------------------
-- CREATING OPTIMIZED INNER LOOP
--------------------------------------------------------------------------------
-- Arrays of SHA2 &quot;magic numbers&quot; (in &quot;INT64&quot; and &quot;FFI&quot; branches &quot;*_lo&quot; arrays contain 64-bit values)
local sha2_K_lo, sha2_K_hi, sha2_H_lo, sha2_H_hi, sha3_RC_lo, sha3_RC_hi = {}, {}, {}, {}, {}, {}
local sha2_H_ext256 = {
&#9;[224] = {},
&#9;[256] = sha2_H_hi,
}

local sha2_H_ext512_lo, sha2_H_ext512_hi = {
&#9;[384] = {},
&#9;[512] = sha2_H_lo,
}, {
&#9;[384] = {},
&#9;[512] = sha2_H_hi,
}

local md5_K, md5_sha1_H = {}, { 0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0 }
local md5_next_shift = {
&#9;0,
&#9;0,
&#9;0,
&#9;0,
&#9;0,
&#9;0,
&#9;0,
&#9;0,
&#9;28,
&#9;25,
&#9;26,
&#9;27,
&#9;0,
&#9;0,
&#9;10,
&#9;9,
&#9;11,
&#9;12,
&#9;0,
&#9;15,
&#9;16,
&#9;17,
&#9;18,
&#9;0,
&#9;20,
&#9;22,
&#9;23,
&#9;21,
}
local HEX64, XOR64A5, lanes_index_base -- defined only for branches that internally use 64-bit integers: &quot;INT64&quot; and &quot;FFI&quot;
local common_W = {} -- temporary table shared between all calculations (to avoid creating new temporary table every time)
local K_lo_modulo, hi_factor, hi_factor_keccak = 4294967296, 0, 0

local TWO_POW_NEG_56 = 2 ^ -56
local TWO_POW_NEG_17 = 2 ^ -17

local TWO_POW_2 = 2 ^ 2
local TWO_POW_3 = 2 ^ 3
local TWO_POW_4 = 2 ^ 4
local TWO_POW_5 = 2 ^ 5
local TWO_POW_6 = 2 ^ 6
local TWO_POW_7 = 2 ^ 7
local TWO_POW_8 = 2 ^ 8
local TWO_POW_9 = 2 ^ 9
local TWO_POW_10 = 2 ^ 10
local TWO_POW_11 = 2 ^ 11
local TWO_POW_12 = 2 ^ 12
local TWO_POW_13 = 2 ^ 13
local TWO_POW_14 = 2 ^ 14
local TWO_POW_15 = 2 ^ 15
local TWO_POW_16 = 2 ^ 16
local TWO_POW_17 = 2 ^ 17
local TWO_POW_18 = 2 ^ 18
local TWO_POW_19 = 2 ^ 19
local TWO_POW_20 = 2 ^ 20
local TWO_POW_21 = 2 ^ 21
local TWO_POW_22 = 2 ^ 22
local TWO_POW_23 = 2 ^ 23
local TWO_POW_24 = 2 ^ 24
local TWO_POW_25 = 2 ^ 25
local TWO_POW_26 = 2 ^ 26
local TWO_POW_27 = 2 ^ 27
local TWO_POW_28 = 2 ^ 28
local TWO_POW_29 = 2 ^ 29
local TWO_POW_30 = 2 ^ 30
local TWO_POW_31 = 2 ^ 31
local TWO_POW_32 = 2 ^ 32
local TWO_POW_40 = 2 ^ 40

local TWO56_POW_7 = 256 ^ 7

-- Implementation for Lua 5.1/5.2 (with or without bitwise library available)
local function sha256_feed_64(H, str, offs, size)
&#9;-- offs &gt;= 0, size &gt;= 0, size is multiple of 64
&#9;local W, K = common_W, sha2_K_hi
&#9;local h1, h2, h3, h4, h5, h6, h7, h8 = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
&#9;for pos = offs, offs + size - 1, 64 do
&#9;&#9;for j = 1, 16 do
&#9;&#9;&#9;pos = pos + 4
&#9;&#9;&#9;local a, b, c, d = string.byte(str, pos - 3, pos)
&#9;&#9;&#9;W[j] = ((a * 256 + b) * 256 + c) * 256 + d
&#9;&#9;end

&#9;&#9;for j = 17, 64 do
&#9;&#9;&#9;local a, b = W[j - 15], W[j - 2]
&#9;&#9;&#9;W[j] = bit32_bxor(bit32_rrotate(a, 7), bit32_lrotate(a, 14), bit32_rshift(a, 3))
&#9;&#9;&#9;&#9;+ bit32_bxor(bit32_lrotate(b, 15), bit32_lrotate(b, 13), bit32_rshift(b, 10))
&#9;&#9;&#9;&#9;+ W[j - 7]
&#9;&#9;&#9;&#9;+ W[j - 16]
&#9;&#9;end

&#9;&#9;local a, b, c, d, e, f, g, h = h1, h2, h3, h4, h5, h6, h7, h8
&#9;&#9;for j = 1, 64 do
&#9;&#9;&#9;local z = bit32_bxor(bit32_rrotate(e, 6), bit32_rrotate(e, 11), bit32_lrotate(e, 7))
&#9;&#9;&#9;&#9;+ bit32_band(e, f)
&#9;&#9;&#9;&#9;+ bit32_band(-1 - e, g)
&#9;&#9;&#9;&#9;+ h
&#9;&#9;&#9;&#9;+ K[j]
&#9;&#9;&#9;&#9;+ W[j]
&#9;&#9;&#9;h = g
&#9;&#9;&#9;g = f
&#9;&#9;&#9;f = e
&#9;&#9;&#9;e = z + d
&#9;&#9;&#9;d = c
&#9;&#9;&#9;c = b
&#9;&#9;&#9;b = a
&#9;&#9;&#9;a = z
&#9;&#9;&#9;&#9;+ bit32_band(d, c)
&#9;&#9;&#9;&#9;+ bit32_band(a, bit32_bxor(d, c))
&#9;&#9;&#9;&#9;+ bit32_bxor(bit32_rrotate(a, 2), bit32_rrotate(a, 13), bit32_lrotate(a, 10))
&#9;&#9;end

&#9;&#9;h1, h2, h3, h4 = (a + h1) % 4294967296, (b + h2) % 4294967296, (c + h3) % 4294967296, (d + h4) % 4294967296
&#9;&#9;h5, h6, h7, h8 = (e + h5) % 4294967296, (f + h6) % 4294967296, (g + h7) % 4294967296, (h + h8) % 4294967296
&#9;end

&#9;H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] = h1, h2, h3, h4, h5, h6, h7, h8
end

local function sha512_feed_128(H_lo, H_hi, str, offs, size)
&#9;-- offs &gt;= 0, size &gt;= 0, size is multiple of 128
&#9;-- W1_hi, W1_lo, W2_hi, W2_lo, ...   Wk_hi = W[2*k-1], Wk_lo = W[2*k]
&#9;local W, K_lo, K_hi = common_W, sha2_K_lo, sha2_K_hi
&#9;local h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo =
&#9;&#9;H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8]
&#9;local h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi =
&#9;&#9;H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8]
&#9;for pos = offs, offs + size - 1, 128 do
&#9;&#9;for j = 1, 16 * 2 do
&#9;&#9;&#9;pos = pos + 4
&#9;&#9;&#9;local a, b, c, d = string.byte(str, pos - 3, pos)
&#9;&#9;&#9;W[j] = ((a * 256 + b) * 256 + c) * 256 + d
&#9;&#9;end

&#9;&#9;for jj = 34, 160, 2 do
&#9;&#9;&#9;local a_lo, a_hi, b_lo, b_hi = W[jj - 30], W[jj - 31], W[jj - 4], W[jj - 5]
&#9;&#9;&#9;local tmp1 = bit32_bxor(
&#9;&#9;&#9;&#9;bit32_rshift(a_lo, 1) + bit32_lshift(a_hi, 31),
&#9;&#9;&#9;&#9;bit32_rshift(a_lo, 8) + bit32_lshift(a_hi, 24),
&#9;&#9;&#9;&#9;bit32_rshift(a_lo, 7) + bit32_lshift(a_hi, 25)
&#9;&#9;&#9;) % 4294967296 + bit32_bxor(
&#9;&#9;&#9;&#9;bit32_rshift(b_lo, 19) + bit32_lshift(b_hi, 13),
&#9;&#9;&#9;&#9;bit32_lshift(b_lo, 3) + bit32_rshift(b_hi, 29),
&#9;&#9;&#9;&#9;bit32_rshift(b_lo, 6) + bit32_lshift(b_hi, 26)
&#9;&#9;&#9;) % 4294967296 + W[jj - 14] + W[jj - 32]

&#9;&#9;&#9;local tmp2 = tmp1 % 4294967296
&#9;&#9;&#9;W[jj - 1] = bit32_bxor(
&#9;&#9;&#9;&#9;bit32_rshift(a_hi, 1) + bit32_lshift(a_lo, 31),
&#9;&#9;&#9;&#9;bit32_rshift(a_hi, 8) + bit32_lshift(a_lo, 24),
&#9;&#9;&#9;&#9;bit32_rshift(a_hi, 7)
&#9;&#9;&#9;) + bit32_bxor(
&#9;&#9;&#9;&#9;bit32_rshift(b_hi, 19) + bit32_lshift(b_lo, 13),
&#9;&#9;&#9;&#9;bit32_lshift(b_hi, 3) + bit32_rshift(b_lo, 29),
&#9;&#9;&#9;&#9;bit32_rshift(b_hi, 6)
&#9;&#9;&#9;) + W[jj - 15] + W[jj - 33] + (tmp1 - tmp2) / 4294967296

&#9;&#9;&#9;W[jj] = tmp2
&#9;&#9;end

&#9;&#9;local a_lo, b_lo, c_lo, d_lo, e_lo, f_lo, g_lo, h_lo = h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
&#9;&#9;local a_hi, b_hi, c_hi, d_hi, e_hi, f_hi, g_hi, h_hi = h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
&#9;&#9;for j = 1, 80 do
&#9;&#9;&#9;local jj = 2 * j
&#9;&#9;&#9;local tmp1 = bit32_bxor(
&#9;&#9;&#9;&#9;bit32_rshift(e_lo, 14) + bit32_lshift(e_hi, 18),
&#9;&#9;&#9;&#9;bit32_rshift(e_lo, 18) + bit32_lshift(e_hi, 14),
&#9;&#9;&#9;&#9;bit32_lshift(e_lo, 23) + bit32_rshift(e_hi, 9)
&#9;&#9;&#9;) % 4294967296 + (bit32_band(e_lo, f_lo) + bit32_band(-1 - e_lo, g_lo)) % 4294967296 + h_lo + K_lo[j] + W[jj]

&#9;&#9;&#9;local z_lo = tmp1 % 4294967296
&#9;&#9;&#9;local z_hi = bit32_bxor(
&#9;&#9;&#9;&#9;bit32_rshift(e_hi, 14) + bit32_lshift(e_lo, 18),
&#9;&#9;&#9;&#9;bit32_rshift(e_hi, 18) + bit32_lshift(e_lo, 14),
&#9;&#9;&#9;&#9;bit32_lshift(e_hi, 23) + bit32_rshift(e_lo, 9)
&#9;&#9;&#9;) + bit32_band(e_hi, f_hi) + bit32_band(-1 - e_hi, g_hi) + h_hi + K_hi[j] + W[jj - 1] + (tmp1 - z_lo) / 4294967296

&#9;&#9;&#9;h_lo = g_lo
&#9;&#9;&#9;h_hi = g_hi
&#9;&#9;&#9;g_lo = f_lo
&#9;&#9;&#9;g_hi = f_hi
&#9;&#9;&#9;f_lo = e_lo
&#9;&#9;&#9;f_hi = e_hi
&#9;&#9;&#9;tmp1 = z_lo + d_lo
&#9;&#9;&#9;e_lo = tmp1 % 4294967296
&#9;&#9;&#9;e_hi = z_hi + d_hi + (tmp1 - e_lo) / 4294967296
&#9;&#9;&#9;d_lo = c_lo
&#9;&#9;&#9;d_hi = c_hi
&#9;&#9;&#9;c_lo = b_lo
&#9;&#9;&#9;c_hi = b_hi
&#9;&#9;&#9;b_lo = a_lo
&#9;&#9;&#9;b_hi = a_hi
&#9;&#9;&#9;tmp1 = z_lo
&#9;&#9;&#9;&#9;+ (bit32_band(d_lo, c_lo) + bit32_band(b_lo, bit32_bxor(d_lo, c_lo))) % 4294967296
&#9;&#9;&#9;&#9;+ bit32_bxor(
&#9;&#9;&#9;&#9;&#9;&#9;bit32_rshift(b_lo, 28) + bit32_lshift(b_hi, 4),
&#9;&#9;&#9;&#9;&#9;&#9;bit32_lshift(b_lo, 30) + bit32_rshift(b_hi, 2),
&#9;&#9;&#9;&#9;&#9;&#9;bit32_lshift(b_lo, 25) + bit32_rshift(b_hi, 7)
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;% 4294967296
&#9;&#9;&#9;a_lo = tmp1 % 4294967296
&#9;&#9;&#9;a_hi = z_hi
&#9;&#9;&#9;&#9;+ (bit32_band(d_hi, c_hi) + bit32_band(b_hi, bit32_bxor(d_hi, c_hi)))
&#9;&#9;&#9;&#9;+ bit32_bxor(
&#9;&#9;&#9;&#9;&#9;bit32_rshift(b_hi, 28) + bit32_lshift(b_lo, 4),
&#9;&#9;&#9;&#9;&#9;bit32_lshift(b_hi, 30) + bit32_rshift(b_lo, 2),
&#9;&#9;&#9;&#9;&#9;bit32_lshift(b_hi, 25) + bit32_rshift(b_lo, 7)
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;+ (tmp1 - a_lo) / 4294967296
&#9;&#9;end

&#9;&#9;a_lo = h1_lo + a_lo
&#9;&#9;h1_lo = a_lo % 4294967296
&#9;&#9;h1_hi = (h1_hi + a_hi + (a_lo - h1_lo) / 4294967296) % 4294967296
&#9;&#9;a_lo = h2_lo + b_lo
&#9;&#9;h2_lo = a_lo % 4294967296
&#9;&#9;h2_hi = (h2_hi + b_hi + (a_lo - h2_lo) / 4294967296) % 4294967296
&#9;&#9;a_lo = h3_lo + c_lo
&#9;&#9;h3_lo = a_lo % 4294967296
&#9;&#9;h3_hi = (h3_hi + c_hi + (a_lo - h3_lo) / 4294967296) % 4294967296
&#9;&#9;a_lo = h4_lo + d_lo
&#9;&#9;h4_lo = a_lo % 4294967296
&#9;&#9;h4_hi = (h4_hi + d_hi + (a_lo - h4_lo) / 4294967296) % 4294967296
&#9;&#9;a_lo = h5_lo + e_lo
&#9;&#9;h5_lo = a_lo % 4294967296
&#9;&#9;h5_hi = (h5_hi + e_hi + (a_lo - h5_lo) / 4294967296) % 4294967296
&#9;&#9;a_lo = h6_lo + f_lo
&#9;&#9;h6_lo = a_lo % 4294967296
&#9;&#9;h6_hi = (h6_hi + f_hi + (a_lo - h6_lo) / 4294967296) % 4294967296
&#9;&#9;a_lo = h7_lo + g_lo
&#9;&#9;h7_lo = a_lo % 4294967296
&#9;&#9;h7_hi = (h7_hi + g_hi + (a_lo - h7_lo) / 4294967296) % 4294967296
&#9;&#9;a_lo = h8_lo + h_lo
&#9;&#9;h8_lo = a_lo % 4294967296
&#9;&#9;h8_hi = (h8_hi + h_hi + (a_lo - h8_lo) / 4294967296) % 4294967296
&#9;end

&#9;H_lo[1], H_lo[2], H_lo[3], H_lo[4], H_lo[5], H_lo[6], H_lo[7], H_lo[8] =
&#9;&#9;h1_lo, h2_lo, h3_lo, h4_lo, h5_lo, h6_lo, h7_lo, h8_lo
&#9;H_hi[1], H_hi[2], H_hi[3], H_hi[4], H_hi[5], H_hi[6], H_hi[7], H_hi[8] =
&#9;&#9;h1_hi, h2_hi, h3_hi, h4_hi, h5_hi, h6_hi, h7_hi, h8_hi
end

local function md5_feed_64(H, str, offs, size)
&#9;-- offs &gt;= 0, size &gt;= 0, size is multiple of 64
&#9;local W, K, md5_next_shift = common_W, md5_K, md5_next_shift
&#9;local h1, h2, h3, h4 = H[1], H[2], H[3], H[4]
&#9;for pos = offs, offs + size - 1, 64 do
&#9;&#9;for j = 1, 16 do
&#9;&#9;&#9;pos = pos + 4
&#9;&#9;&#9;local a, b, c, d = string.byte(str, pos - 3, pos)
&#9;&#9;&#9;W[j] = ((d * 256 + c) * 256 + b) * 256 + a
&#9;&#9;end

&#9;&#9;local a, b, c, d = h1, h2, h3, h4
&#9;&#9;local s = 25
&#9;&#9;for j = 1, 16 do
&#9;&#9;&#9;local F = bit32_rrotate(bit32_band(b, c) + bit32_band(-1 - b, d) + a + K[j] + W[j], s) + b
&#9;&#9;&#9;s = md5_next_shift[s]
&#9;&#9;&#9;a = d
&#9;&#9;&#9;d = c
&#9;&#9;&#9;c = b
&#9;&#9;&#9;b = F
&#9;&#9;end

&#9;&#9;s = 27
&#9;&#9;for j = 17, 32 do
&#9;&#9;&#9;local F = bit32_rrotate(bit32_band(d, b) + bit32_band(-1 - d, c) + a + K[j] + W[(5 * j - 4) % 16 + 1], s)
&#9;&#9;&#9;&#9;+ b
&#9;&#9;&#9;s = md5_next_shift[s]
&#9;&#9;&#9;a = d
&#9;&#9;&#9;d = c
&#9;&#9;&#9;c = b
&#9;&#9;&#9;b = F
&#9;&#9;end

&#9;&#9;s = 28
&#9;&#9;for j = 33, 48 do
&#9;&#9;&#9;local F = bit32_rrotate(bit32_bxor(bit32_bxor(b, c), d) + a + K[j] + W[(3 * j + 2) % 16 + 1], s) + b
&#9;&#9;&#9;s = md5_next_shift[s]
&#9;&#9;&#9;a = d
&#9;&#9;&#9;d = c
&#9;&#9;&#9;c = b
&#9;&#9;&#9;b = F
&#9;&#9;end

&#9;&#9;s = 26
&#9;&#9;for j = 49, 64 do
&#9;&#9;&#9;local F = bit32_rrotate(bit32_bxor(c, bit32_bor(b, -1 - d)) + a + K[j] + W[(j * 7 - 7) % 16 + 1], s) + b
&#9;&#9;&#9;s = md5_next_shift[s]
&#9;&#9;&#9;a = d
&#9;&#9;&#9;d = c
&#9;&#9;&#9;c = b
&#9;&#9;&#9;b = F
&#9;&#9;end

&#9;&#9;h1 = (a + h1) % 4294967296
&#9;&#9;h2 = (b + h2) % 4294967296
&#9;&#9;h3 = (c + h3) % 4294967296
&#9;&#9;h4 = (d + h4) % 4294967296
&#9;end

&#9;H[1], H[2], H[3], H[4] = h1, h2, h3, h4
end

local function sha1_feed_64(H, str, offs, size)
&#9;-- offs &gt;= 0, size &gt;= 0, size is multiple of 64
&#9;local W = common_W
&#9;local h1, h2, h3, h4, h5 = H[1], H[2], H[3], H[4], H[5]
&#9;for pos = offs, offs + size - 1, 64 do
&#9;&#9;for j = 1, 16 do
&#9;&#9;&#9;pos = pos + 4
&#9;&#9;&#9;local a, b, c, d = string.byte(str, pos - 3, pos)
&#9;&#9;&#9;W[j] = ((a * 256 + b) * 256 + c) * 256 + d
&#9;&#9;end

&#9;&#9;for j = 17, 80 do
&#9;&#9;&#9;W[j] = bit32_lrotate(bit32_bxor(W[j - 3], W[j - 8], W[j - 14], W[j - 16]), 1)
&#9;&#9;end

&#9;&#9;local a, b, c, d, e = h1, h2, h3, h4, h5
&#9;&#9;for j = 1, 20 do
&#9;&#9;&#9;local z = bit32_lrotate(a, 5) + bit32_band(b, c) + bit32_band(-1 - b, d) + 0x5A827999 + W[j] + e -- constant = math.floor(TWO_POW_30 * sqrt(2))
&#9;&#9;&#9;e = d
&#9;&#9;&#9;d = c
&#9;&#9;&#9;c = bit32_rrotate(b, 2)
&#9;&#9;&#9;b = a
&#9;&#9;&#9;a = z
&#9;&#9;end

&#9;&#9;for j = 21, 40 do
&#9;&#9;&#9;local z = bit32_lrotate(a, 5) + bit32_bxor(b, c, d) + 0x6ED9EBA1 + W[j] + e -- TWO_POW_30 * sqrt(3)
&#9;&#9;&#9;e = d
&#9;&#9;&#9;d = c
&#9;&#9;&#9;c = bit32_rrotate(b, 2)
&#9;&#9;&#9;b = a
&#9;&#9;&#9;a = z
&#9;&#9;end

&#9;&#9;for j = 41, 60 do
&#9;&#9;&#9;local z = bit32_lrotate(a, 5) + bit32_band(d, c) + bit32_band(b, bit32_bxor(d, c)) + 0x8F1BBCDC + W[j] + e -- TWO_POW_30 * sqrt(5)
&#9;&#9;&#9;e = d
&#9;&#9;&#9;d = c
&#9;&#9;&#9;c = bit32_rrotate(b, 2)
&#9;&#9;&#9;b = a
&#9;&#9;&#9;a = z
&#9;&#9;end

&#9;&#9;for j = 61, 80 do
&#9;&#9;&#9;local z = bit32_lrotate(a, 5) + bit32_bxor(b, c, d) + 0xCA62C1D6 + W[j] + e -- TWO_POW_30 * sqrt(10)
&#9;&#9;&#9;e = d
&#9;&#9;&#9;d = c
&#9;&#9;&#9;c = bit32_rrotate(b, 2)
&#9;&#9;&#9;b = a
&#9;&#9;&#9;a = z
&#9;&#9;end

&#9;&#9;h1 = (a + h1) % 4294967296
&#9;&#9;h2 = (b + h2) % 4294967296
&#9;&#9;h3 = (c + h3) % 4294967296
&#9;&#9;h4 = (d + h4) % 4294967296
&#9;&#9;h5 = (e + h5) % 4294967296
&#9;end

&#9;H[1], H[2], H[3], H[4], H[5] = h1, h2, h3, h4, h5
end

local function keccak_feed(lanes_lo, lanes_hi, str, offs, size, block_size_in_bytes)
&#9;-- This is an example of a Lua function having 79 local variables :-)
&#9;-- offs &gt;= 0, size &gt;= 0, size is multiple of block_size_in_bytes, block_size_in_bytes is positive multiple of 8
&#9;local RC_lo, RC_hi = sha3_RC_lo, sha3_RC_hi
&#9;local qwords_qty = block_size_in_bytes / 8
&#9;for pos = offs, offs + size - 1, block_size_in_bytes do
&#9;&#9;for j = 1, qwords_qty do
&#9;&#9;&#9;local a, b, c, d = string.byte(str, pos + 1, pos + 4)
&#9;&#9;&#9;lanes_lo[j] = bit32_bxor(lanes_lo[j], ((d * 256 + c) * 256 + b) * 256 + a)
&#9;&#9;&#9;pos = pos + 8
&#9;&#9;&#9;a, b, c, d = string.byte(str, pos - 3, pos)
&#9;&#9;&#9;lanes_hi[j] = bit32_bxor(lanes_hi[j], ((d * 256 + c) * 256 + b) * 256 + a)
&#9;&#9;end

&#9;&#9;local L01_lo, L01_hi, L02_lo, L02_hi, L03_lo, L03_hi, L04_lo, L04_hi, L05_lo, L05_hi, L06_lo, L06_hi, L07_lo, L07_hi, L08_lo, L08_hi, L09_lo, L09_hi, L10_lo, L10_hi, L11_lo, L11_hi, L12_lo, L12_hi, L13_lo, L13_hi, L14_lo, L14_hi, L15_lo, L15_hi, L16_lo, L16_hi, L17_lo, L17_hi, L18_lo, L18_hi, L19_lo, L19_hi, L20_lo, L20_hi, L21_lo, L21_hi, L22_lo, L22_hi, L23_lo, L23_hi, L24_lo, L24_hi, L25_lo, L25_hi =
&#9;&#9;&#9;lanes_lo[1],
&#9;&#9;&#9;lanes_hi[1],
&#9;&#9;&#9;lanes_lo[2],
&#9;&#9;&#9;lanes_hi[2],
&#9;&#9;&#9;lanes_lo[3],
&#9;&#9;&#9;lanes_hi[3],
&#9;&#9;&#9;lanes_lo[4],
&#9;&#9;&#9;lanes_hi[4],
&#9;&#9;&#9;lanes_lo[5],
&#9;&#9;&#9;lanes_hi[5],
&#9;&#9;&#9;lanes_lo[6],
&#9;&#9;&#9;lanes_hi[6],
&#9;&#9;&#9;lanes_lo[7],
&#9;&#9;&#9;lanes_hi[7],
&#9;&#9;&#9;lanes_lo[8],
&#9;&#9;&#9;lanes_hi[8],
&#9;&#9;&#9;lanes_lo[9],
&#9;&#9;&#9;lanes_hi[9],
&#9;&#9;&#9;lanes_lo[10],
&#9;&#9;&#9;lanes_hi[10],
&#9;&#9;&#9;lanes_lo[11],
&#9;&#9;&#9;lanes_hi[11],
&#9;&#9;&#9;lanes_lo[12],
&#9;&#9;&#9;lanes_hi[12],
&#9;&#9;&#9;lanes_lo[13],
&#9;&#9;&#9;lanes_hi[13],
&#9;&#9;&#9;lanes_lo[14],
&#9;&#9;&#9;lanes_hi[14],
&#9;&#9;&#9;lanes_lo[15],
&#9;&#9;&#9;lanes_hi[15],
&#9;&#9;&#9;lanes_lo[16],
&#9;&#9;&#9;lanes_hi[16],
&#9;&#9;&#9;lanes_lo[17],
&#9;&#9;&#9;lanes_hi[17],
&#9;&#9;&#9;lanes_lo[18],
&#9;&#9;&#9;lanes_hi[18],
&#9;&#9;&#9;lanes_lo[19],
&#9;&#9;&#9;lanes_hi[19],
&#9;&#9;&#9;lanes_lo[20],
&#9;&#9;&#9;lanes_hi[20],
&#9;&#9;&#9;lanes_lo[21],
&#9;&#9;&#9;lanes_hi[21],
&#9;&#9;&#9;lanes_lo[22],
&#9;&#9;&#9;lanes_hi[22],
&#9;&#9;&#9;lanes_lo[23],
&#9;&#9;&#9;lanes_hi[23],
&#9;&#9;&#9;lanes_lo[24],
&#9;&#9;&#9;lanes_hi[24],
&#9;&#9;&#9;lanes_lo[25],
&#9;&#9;&#9;lanes_hi[25]

&#9;&#9;for round_idx = 1, 24 do
&#9;&#9;&#9;local C1_lo = bit32_bxor(L01_lo, L06_lo, L11_lo, L16_lo, L21_lo)
&#9;&#9;&#9;local C1_hi = bit32_bxor(L01_hi, L06_hi, L11_hi, L16_hi, L21_hi)
&#9;&#9;&#9;local C2_lo = bit32_bxor(L02_lo, L07_lo, L12_lo, L17_lo, L22_lo)
&#9;&#9;&#9;local C2_hi = bit32_bxor(L02_hi, L07_hi, L12_hi, L17_hi, L22_hi)
&#9;&#9;&#9;local C3_lo = bit32_bxor(L03_lo, L08_lo, L13_lo, L18_lo, L23_lo)
&#9;&#9;&#9;local C3_hi = bit32_bxor(L03_hi, L08_hi, L13_hi, L18_hi, L23_hi)
&#9;&#9;&#9;local C4_lo = bit32_bxor(L04_lo, L09_lo, L14_lo, L19_lo, L24_lo)
&#9;&#9;&#9;local C4_hi = bit32_bxor(L04_hi, L09_hi, L14_hi, L19_hi, L24_hi)
&#9;&#9;&#9;local C5_lo = bit32_bxor(L05_lo, L10_lo, L15_lo, L20_lo, L25_lo)
&#9;&#9;&#9;local C5_hi = bit32_bxor(L05_hi, L10_hi, L15_hi, L20_hi, L25_hi)

&#9;&#9;&#9;local D_lo = bit32_bxor(C1_lo, C3_lo * 2 + (C3_hi % TWO_POW_32 - C3_hi % TWO_POW_31) / TWO_POW_31)
&#9;&#9;&#9;local D_hi = bit32_bxor(C1_hi, C3_hi * 2 + (C3_lo % TWO_POW_32 - C3_lo % TWO_POW_31) / TWO_POW_31)

&#9;&#9;&#9;local T0_lo = bit32_bxor(D_lo, L02_lo)
&#9;&#9;&#9;local T0_hi = bit32_bxor(D_hi, L02_hi)
&#9;&#9;&#9;local T1_lo = bit32_bxor(D_lo, L07_lo)
&#9;&#9;&#9;local T1_hi = bit32_bxor(D_hi, L07_hi)
&#9;&#9;&#9;local T2_lo = bit32_bxor(D_lo, L12_lo)
&#9;&#9;&#9;local T2_hi = bit32_bxor(D_hi, L12_hi)
&#9;&#9;&#9;local T3_lo = bit32_bxor(D_lo, L17_lo)
&#9;&#9;&#9;local T3_hi = bit32_bxor(D_hi, L17_hi)
&#9;&#9;&#9;local T4_lo = bit32_bxor(D_lo, L22_lo)
&#9;&#9;&#9;local T4_hi = bit32_bxor(D_hi, L22_hi)

&#9;&#9;&#9;L02_lo = (T1_lo % TWO_POW_32 - T1_lo % TWO_POW_20) / TWO_POW_20 + T1_hi * TWO_POW_12
&#9;&#9;&#9;L02_hi = (T1_hi % TWO_POW_32 - T1_hi % TWO_POW_20) / TWO_POW_20 + T1_lo * TWO_POW_12
&#9;&#9;&#9;L07_lo = (T3_lo % TWO_POW_32 - T3_lo % TWO_POW_19) / TWO_POW_19 + T3_hi * TWO_POW_13
&#9;&#9;&#9;L07_hi = (T3_hi % TWO_POW_32 - T3_hi % TWO_POW_19) / TWO_POW_19 + T3_lo * TWO_POW_13
&#9;&#9;&#9;L12_lo = T0_lo * 2 + (T0_hi % TWO_POW_32 - T0_hi % TWO_POW_31) / TWO_POW_31
&#9;&#9;&#9;L12_hi = T0_hi * 2 + (T0_lo % TWO_POW_32 - T0_lo % TWO_POW_31) / TWO_POW_31
&#9;&#9;&#9;L17_lo = T2_lo * TWO_POW_10 + (T2_hi % TWO_POW_32 - T2_hi % TWO_POW_22) / TWO_POW_22
&#9;&#9;&#9;L17_hi = T2_hi * TWO_POW_10 + (T2_lo % TWO_POW_32 - T2_lo % TWO_POW_22) / TWO_POW_22
&#9;&#9;&#9;L22_lo = T4_lo * TWO_POW_2 + (T4_hi % TWO_POW_32 - T4_hi % TWO_POW_30) / TWO_POW_30
&#9;&#9;&#9;L22_hi = T4_hi * TWO_POW_2 + (T4_lo % TWO_POW_32 - T4_lo % TWO_POW_30) / TWO_POW_30

&#9;&#9;&#9;D_lo = bit32_bxor(C2_lo, C4_lo * 2 + (C4_hi % TWO_POW_32 - C4_hi % TWO_POW_31) / TWO_POW_31)
&#9;&#9;&#9;D_hi = bit32_bxor(C2_hi, C4_hi * 2 + (C4_lo % TWO_POW_32 - C4_lo % TWO_POW_31) / TWO_POW_31)

&#9;&#9;&#9;T0_lo = bit32_bxor(D_lo, L03_lo)
&#9;&#9;&#9;T0_hi = bit32_bxor(D_hi, L03_hi)
&#9;&#9;&#9;T1_lo = bit32_bxor(D_lo, L08_lo)
&#9;&#9;&#9;T1_hi = bit32_bxor(D_hi, L08_hi)
&#9;&#9;&#9;T2_lo = bit32_bxor(D_lo, L13_lo)
&#9;&#9;&#9;T2_hi = bit32_bxor(D_hi, L13_hi)
&#9;&#9;&#9;T3_lo = bit32_bxor(D_lo, L18_lo)
&#9;&#9;&#9;T3_hi = bit32_bxor(D_hi, L18_hi)
&#9;&#9;&#9;T4_lo = bit32_bxor(D_lo, L23_lo)
&#9;&#9;&#9;T4_hi = bit32_bxor(D_hi, L23_hi)

&#9;&#9;&#9;L03_lo = (T2_lo % TWO_POW_32 - T2_lo % TWO_POW_21) / TWO_POW_21 + T2_hi * TWO_POW_11
&#9;&#9;&#9;L03_hi = (T2_hi % TWO_POW_32 - T2_hi % TWO_POW_21) / TWO_POW_21 + T2_lo * TWO_POW_11
&#9;&#9;&#9;L08_lo = (T4_lo % TWO_POW_32 - T4_lo % TWO_POW_3) / TWO_POW_3 + T4_hi * TWO_POW_29 % TWO_POW_32
&#9;&#9;&#9;L08_hi = (T4_hi % TWO_POW_32 - T4_hi % TWO_POW_3) / TWO_POW_3 + T4_lo * TWO_POW_29 % TWO_POW_32
&#9;&#9;&#9;L13_lo = T1_lo * TWO_POW_6 + (T1_hi % TWO_POW_32 - T1_hi % TWO_POW_26) / TWO_POW_26
&#9;&#9;&#9;L13_hi = T1_hi * TWO_POW_6 + (T1_lo % TWO_POW_32 - T1_lo % TWO_POW_26) / TWO_POW_26
&#9;&#9;&#9;L18_lo = T3_lo * TWO_POW_15 + (T3_hi % TWO_POW_32 - T3_hi % TWO_POW_17) / TWO_POW_17
&#9;&#9;&#9;L18_hi = T3_hi * TWO_POW_15 + (T3_lo % TWO_POW_32 - T3_lo % TWO_POW_17) / TWO_POW_17
&#9;&#9;&#9;L23_lo = (T0_lo % TWO_POW_32 - T0_lo % TWO_POW_2) / TWO_POW_2 + T0_hi * TWO_POW_30 % TWO_POW_32
&#9;&#9;&#9;L23_hi = (T0_hi % TWO_POW_32 - T0_hi % TWO_POW_2) / TWO_POW_2 + T0_lo * TWO_POW_30 % TWO_POW_32

&#9;&#9;&#9;D_lo = bit32_bxor(C3_lo, C5_lo * 2 + (C5_hi % TWO_POW_32 - C5_hi % TWO_POW_31) / TWO_POW_31)
&#9;&#9;&#9;D_hi = bit32_bxor(C3_hi, C5_hi * 2 + (C5_lo % TWO_POW_32 - C5_lo % TWO_POW_31) / TWO_POW_31)

&#9;&#9;&#9;T0_lo = bit32_bxor(D_lo, L04_lo)
&#9;&#9;&#9;T0_hi = bit32_bxor(D_hi, L04_hi)
&#9;&#9;&#9;T1_lo = bit32_bxor(D_lo, L09_lo)
&#9;&#9;&#9;T1_hi = bit32_bxor(D_hi, L09_hi)
&#9;&#9;&#9;T2_lo = bit32_bxor(D_lo, L14_lo)
&#9;&#9;&#9;T2_hi = bit32_bxor(D_hi, L14_hi)
&#9;&#9;&#9;T3_lo = bit32_bxor(D_lo, L19_lo)
&#9;&#9;&#9;T3_hi = bit32_bxor(D_hi, L19_hi)
&#9;&#9;&#9;T4_lo = bit32_bxor(D_lo, L24_lo)
&#9;&#9;&#9;T4_hi = bit32_bxor(D_hi, L24_hi)

&#9;&#9;&#9;L04_lo = T3_lo * TWO_POW_21 % TWO_POW_32 + (T3_hi % TWO_POW_32 - T3_hi % TWO_POW_11) / TWO_POW_11
&#9;&#9;&#9;L04_hi = T3_hi * TWO_POW_21 % TWO_POW_32 + (T3_lo % TWO_POW_32 - T3_lo % TWO_POW_11) / TWO_POW_11
&#9;&#9;&#9;L09_lo = T0_lo * TWO_POW_28 % TWO_POW_32 + (T0_hi % TWO_POW_32 - T0_hi % TWO_POW_4) / TWO_POW_4
&#9;&#9;&#9;L09_hi = T0_hi * TWO_POW_28 % TWO_POW_32 + (T0_lo % TWO_POW_32 - T0_lo % TWO_POW_4) / TWO_POW_4
&#9;&#9;&#9;L14_lo = T2_lo * TWO_POW_25 % TWO_POW_32 + (T2_hi % TWO_POW_32 - T2_hi % TWO_POW_7) / TWO_POW_7
&#9;&#9;&#9;L14_hi = T2_hi * TWO_POW_25 % TWO_POW_32 + (T2_lo % TWO_POW_32 - T2_lo % TWO_POW_7) / TWO_POW_7
&#9;&#9;&#9;L19_lo = (T4_lo % TWO_POW_32 - T4_lo % TWO_POW_8) / TWO_POW_8 + T4_hi * TWO_POW_24 % TWO_POW_32
&#9;&#9;&#9;L19_hi = (T4_hi % TWO_POW_32 - T4_hi % TWO_POW_8) / TWO_POW_8 + T4_lo * TWO_POW_24 % TWO_POW_32
&#9;&#9;&#9;L24_lo = (T1_lo % TWO_POW_32 - T1_lo % TWO_POW_9) / TWO_POW_9 + T1_hi * TWO_POW_23 % TWO_POW_32
&#9;&#9;&#9;L24_hi = (T1_hi % TWO_POW_32 - T1_hi % TWO_POW_9) / TWO_POW_9 + T1_lo * TWO_POW_23 % TWO_POW_32

&#9;&#9;&#9;D_lo = bit32_bxor(C4_lo, C1_lo * 2 + (C1_hi % TWO_POW_32 - C1_hi % TWO_POW_31) / TWO_POW_31)
&#9;&#9;&#9;D_hi = bit32_bxor(C4_hi, C1_hi * 2 + (C1_lo % TWO_POW_32 - C1_lo % TWO_POW_31) / TWO_POW_31)

&#9;&#9;&#9;T0_lo = bit32_bxor(D_lo, L05_lo)
&#9;&#9;&#9;T0_hi = bit32_bxor(D_hi, L05_hi)
&#9;&#9;&#9;T1_lo = bit32_bxor(D_lo, L10_lo)
&#9;&#9;&#9;T1_hi = bit32_bxor(D_hi, L10_hi)
&#9;&#9;&#9;T2_lo = bit32_bxor(D_lo, L15_lo)
&#9;&#9;&#9;T2_hi = bit32_bxor(D_hi, L15_hi)
&#9;&#9;&#9;T3_lo = bit32_bxor(D_lo, L20_lo)
&#9;&#9;&#9;T3_hi = bit32_bxor(D_hi, L20_hi)
&#9;&#9;&#9;T4_lo = bit32_bxor(D_lo, L25_lo)
&#9;&#9;&#9;T4_hi = bit32_bxor(D_hi, L25_hi)

&#9;&#9;&#9;L05_lo = T4_lo * TWO_POW_14 + (T4_hi % TWO_POW_32 - T4_hi % TWO_POW_18) / TWO_POW_18
&#9;&#9;&#9;L05_hi = T4_hi * TWO_POW_14 + (T4_lo % TWO_POW_32 - T4_lo % TWO_POW_18) / TWO_POW_18
&#9;&#9;&#9;L10_lo = T1_lo * TWO_POW_20 % TWO_POW_32 + (T1_hi % TWO_POW_32 - T1_hi % TWO_POW_12) / TWO_POW_12
&#9;&#9;&#9;L10_hi = T1_hi * TWO_POW_20 % TWO_POW_32 + (T1_lo % TWO_POW_32 - T1_lo % TWO_POW_12) / TWO_POW_12
&#9;&#9;&#9;L15_lo = T3_lo * TWO_POW_8 + (T3_hi % TWO_POW_32 - T3_hi % TWO_POW_24) / TWO_POW_24
&#9;&#9;&#9;L15_hi = T3_hi * TWO_POW_8 + (T3_lo % TWO_POW_32 - T3_lo % TWO_POW_24) / TWO_POW_24
&#9;&#9;&#9;L20_lo = T0_lo * TWO_POW_27 % TWO_POW_32 + (T0_hi % TWO_POW_32 - T0_hi % TWO_POW_5) / TWO_POW_5
&#9;&#9;&#9;L20_hi = T0_hi * TWO_POW_27 % TWO_POW_32 + (T0_lo % TWO_POW_32 - T0_lo % TWO_POW_5) / TWO_POW_5
&#9;&#9;&#9;L25_lo = (T2_lo % TWO_POW_32 - T2_lo % TWO_POW_25) / TWO_POW_25 + T2_hi * TWO_POW_7
&#9;&#9;&#9;L25_hi = (T2_hi % TWO_POW_32 - T2_hi % TWO_POW_25) / TWO_POW_25 + T2_lo * TWO_POW_7

&#9;&#9;&#9;D_lo = bit32_bxor(C5_lo, C2_lo * 2 + (C2_hi % TWO_POW_32 - C2_hi % TWO_POW_31) / TWO_POW_31)
&#9;&#9;&#9;D_hi = bit32_bxor(C5_hi, C2_hi * 2 + (C2_lo % TWO_POW_32 - C2_lo % TWO_POW_31) / TWO_POW_31)

&#9;&#9;&#9;T1_lo = bit32_bxor(D_lo, L06_lo)
&#9;&#9;&#9;T1_hi = bit32_bxor(D_hi, L06_hi)
&#9;&#9;&#9;T2_lo = bit32_bxor(D_lo, L11_lo)
&#9;&#9;&#9;T2_hi = bit32_bxor(D_hi, L11_hi)
&#9;&#9;&#9;T3_lo = bit32_bxor(D_lo, L16_lo)
&#9;&#9;&#9;T3_hi = bit32_bxor(D_hi, L16_hi)
&#9;&#9;&#9;T4_lo = bit32_bxor(D_lo, L21_lo)
&#9;&#9;&#9;T4_hi = bit32_bxor(D_hi, L21_hi)

&#9;&#9;&#9;L06_lo = T2_lo * TWO_POW_3 + (T2_hi % TWO_POW_32 - T2_hi % TWO_POW_29) / TWO_POW_29
&#9;&#9;&#9;L06_hi = T2_hi * TWO_POW_3 + (T2_lo % TWO_POW_32 - T2_lo % TWO_POW_29) / TWO_POW_29
&#9;&#9;&#9;L11_lo = T4_lo * TWO_POW_18 + (T4_hi % TWO_POW_32 - T4_hi % TWO_POW_14) / TWO_POW_14
&#9;&#9;&#9;L11_hi = T4_hi * TWO_POW_18 + (T4_lo % TWO_POW_32 - T4_lo % TWO_POW_14) / TWO_POW_14
&#9;&#9;&#9;L16_lo = (T1_lo % TWO_POW_32 - T1_lo % TWO_POW_28) / TWO_POW_28 + T1_hi * TWO_POW_4
&#9;&#9;&#9;L16_hi = (T1_hi % TWO_POW_32 - T1_hi % TWO_POW_28) / TWO_POW_28 + T1_lo * TWO_POW_4
&#9;&#9;&#9;L21_lo = (T3_lo % TWO_POW_32 - T3_lo % TWO_POW_23) / TWO_POW_23 + T3_hi * TWO_POW_9
&#9;&#9;&#9;L21_hi = (T3_hi % TWO_POW_32 - T3_hi % TWO_POW_23) / TWO_POW_23 + T3_lo * TWO_POW_9

&#9;&#9;&#9;L01_lo = bit32_bxor(D_lo, L01_lo)
&#9;&#9;&#9;L01_hi = bit32_bxor(D_hi, L01_hi)
&#9;&#9;&#9;L01_lo, L02_lo, L03_lo, L04_lo, L05_lo =
&#9;&#9;&#9;&#9;bit32_bxor(L01_lo, bit32_band(-1 - L02_lo, L03_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L02_lo, bit32_band(-1 - L03_lo, L04_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L03_lo, bit32_band(-1 - L04_lo, L05_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L04_lo, bit32_band(-1 - L05_lo, L01_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L05_lo, bit32_band(-1 - L01_lo, L02_lo))
&#9;&#9;&#9;L01_hi, L02_hi, L03_hi, L04_hi, L05_hi =
&#9;&#9;&#9;&#9;bit32_bxor(L01_hi, bit32_band(-1 - L02_hi, L03_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L02_hi, bit32_band(-1 - L03_hi, L04_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L03_hi, bit32_band(-1 - L04_hi, L05_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L04_hi, bit32_band(-1 - L05_hi, L01_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L05_hi, bit32_band(-1 - L01_hi, L02_hi))
&#9;&#9;&#9;L06_lo, L07_lo, L08_lo, L09_lo, L10_lo =
&#9;&#9;&#9;&#9;bit32_bxor(L09_lo, bit32_band(-1 - L10_lo, L06_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L10_lo, bit32_band(-1 - L06_lo, L07_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L06_lo, bit32_band(-1 - L07_lo, L08_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L07_lo, bit32_band(-1 - L08_lo, L09_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L08_lo, bit32_band(-1 - L09_lo, L10_lo))
&#9;&#9;&#9;L06_hi, L07_hi, L08_hi, L09_hi, L10_hi =
&#9;&#9;&#9;&#9;bit32_bxor(L09_hi, bit32_band(-1 - L10_hi, L06_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L10_hi, bit32_band(-1 - L06_hi, L07_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L06_hi, bit32_band(-1 - L07_hi, L08_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L07_hi, bit32_band(-1 - L08_hi, L09_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L08_hi, bit32_band(-1 - L09_hi, L10_hi))
&#9;&#9;&#9;L11_lo, L12_lo, L13_lo, L14_lo, L15_lo =
&#9;&#9;&#9;&#9;bit32_bxor(L12_lo, bit32_band(-1 - L13_lo, L14_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L13_lo, bit32_band(-1 - L14_lo, L15_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L14_lo, bit32_band(-1 - L15_lo, L11_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L15_lo, bit32_band(-1 - L11_lo, L12_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L11_lo, bit32_band(-1 - L12_lo, L13_lo))
&#9;&#9;&#9;L11_hi, L12_hi, L13_hi, L14_hi, L15_hi =
&#9;&#9;&#9;&#9;bit32_bxor(L12_hi, bit32_band(-1 - L13_hi, L14_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L13_hi, bit32_band(-1 - L14_hi, L15_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L14_hi, bit32_band(-1 - L15_hi, L11_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L15_hi, bit32_band(-1 - L11_hi, L12_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L11_hi, bit32_band(-1 - L12_hi, L13_hi))
&#9;&#9;&#9;L16_lo, L17_lo, L18_lo, L19_lo, L20_lo =
&#9;&#9;&#9;&#9;bit32_bxor(L20_lo, bit32_band(-1 - L16_lo, L17_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L16_lo, bit32_band(-1 - L17_lo, L18_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L17_lo, bit32_band(-1 - L18_lo, L19_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L18_lo, bit32_band(-1 - L19_lo, L20_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L19_lo, bit32_band(-1 - L20_lo, L16_lo))
&#9;&#9;&#9;L16_hi, L17_hi, L18_hi, L19_hi, L20_hi =
&#9;&#9;&#9;&#9;bit32_bxor(L20_hi, bit32_band(-1 - L16_hi, L17_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L16_hi, bit32_band(-1 - L17_hi, L18_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L17_hi, bit32_band(-1 - L18_hi, L19_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L18_hi, bit32_band(-1 - L19_hi, L20_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L19_hi, bit32_band(-1 - L20_hi, L16_hi))
&#9;&#9;&#9;L21_lo, L22_lo, L23_lo, L24_lo, L25_lo =
&#9;&#9;&#9;&#9;bit32_bxor(L23_lo, bit32_band(-1 - L24_lo, L25_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L24_lo, bit32_band(-1 - L25_lo, L21_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L25_lo, bit32_band(-1 - L21_lo, L22_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L21_lo, bit32_band(-1 - L22_lo, L23_lo)),
&#9;&#9;&#9;&#9;bit32_bxor(L22_lo, bit32_band(-1 - L23_lo, L24_lo))
&#9;&#9;&#9;L21_hi, L22_hi, L23_hi, L24_hi, L25_hi =
&#9;&#9;&#9;&#9;bit32_bxor(L23_hi, bit32_band(-1 - L24_hi, L25_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L24_hi, bit32_band(-1 - L25_hi, L21_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L25_hi, bit32_band(-1 - L21_hi, L22_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L21_hi, bit32_band(-1 - L22_hi, L23_hi)),
&#9;&#9;&#9;&#9;bit32_bxor(L22_hi, bit32_band(-1 - L23_hi, L24_hi))
&#9;&#9;&#9;L01_lo = bit32_bxor(L01_lo, RC_lo[round_idx])
&#9;&#9;&#9;L01_hi = L01_hi + RC_hi[round_idx] -- RC_hi[] is either 0 or 0x80000000, so we could use fast addition instead of slow XOR
&#9;&#9;end

&#9;&#9;lanes_lo[1] = L01_lo
&#9;&#9;lanes_hi[1] = L01_hi
&#9;&#9;lanes_lo[2] = L02_lo
&#9;&#9;lanes_hi[2] = L02_hi
&#9;&#9;lanes_lo[3] = L03_lo
&#9;&#9;lanes_hi[3] = L03_hi
&#9;&#9;lanes_lo[4] = L04_lo
&#9;&#9;lanes_hi[4] = L04_hi
&#9;&#9;lanes_lo[5] = L05_lo
&#9;&#9;lanes_hi[5] = L05_hi
&#9;&#9;lanes_lo[6] = L06_lo
&#9;&#9;lanes_hi[6] = L06_hi
&#9;&#9;lanes_lo[7] = L07_lo
&#9;&#9;lanes_hi[7] = L07_hi
&#9;&#9;lanes_lo[8] = L08_lo
&#9;&#9;lanes_hi[8] = L08_hi
&#9;&#9;lanes_lo[9] = L09_lo
&#9;&#9;lanes_hi[9] = L09_hi
&#9;&#9;lanes_lo[10] = L10_lo
&#9;&#9;lanes_hi[10] = L10_hi
&#9;&#9;lanes_lo[11] = L11_lo
&#9;&#9;lanes_hi[11] = L11_hi
&#9;&#9;lanes_lo[12] = L12_lo
&#9;&#9;lanes_hi[12] = L12_hi
&#9;&#9;lanes_lo[13] = L13_lo
&#9;&#9;lanes_hi[13] = L13_hi
&#9;&#9;lanes_lo[14] = L14_lo
&#9;&#9;lanes_hi[14] = L14_hi
&#9;&#9;lanes_lo[15] = L15_lo
&#9;&#9;lanes_hi[15] = L15_hi
&#9;&#9;lanes_lo[16] = L16_lo
&#9;&#9;lanes_hi[16] = L16_hi
&#9;&#9;lanes_lo[17] = L17_lo
&#9;&#9;lanes_hi[17] = L17_hi
&#9;&#9;lanes_lo[18] = L18_lo
&#9;&#9;lanes_hi[18] = L18_hi
&#9;&#9;lanes_lo[19] = L19_lo
&#9;&#9;lanes_hi[19] = L19_hi
&#9;&#9;lanes_lo[20] = L20_lo
&#9;&#9;lanes_hi[20] = L20_hi
&#9;&#9;lanes_lo[21] = L21_lo
&#9;&#9;lanes_hi[21] = L21_hi
&#9;&#9;lanes_lo[22] = L22_lo
&#9;&#9;lanes_hi[22] = L22_hi
&#9;&#9;lanes_lo[23] = L23_lo
&#9;&#9;lanes_hi[23] = L23_hi
&#9;&#9;lanes_lo[24] = L24_lo
&#9;&#9;lanes_hi[24] = L24_hi
&#9;&#9;lanes_lo[25] = L25_lo
&#9;&#9;lanes_hi[25] = L25_hi
&#9;end
end

--------------------------------------------------------------------------------
-- MAGIC NUMBERS CALCULATOR
--------------------------------------------------------------------------------
-- Q:
--    Is 53-bit &quot;double&quot; math enough to calculate square roots and cube roots of primes with 64 correct bits after decimal point?
-- A:
--    Yes, 53-bit &quot;double&quot; arithmetic is enough.
--    We could obtain first 40 bits by direct calculation of p^(1/3) and next 40 bits by one step of Newton&apos;s method.
do
&#9;local function mul(src1, src2, factor, result_length)
&#9;&#9;-- src1, src2 - long integers (arrays of digits in base TWO_POW_24)
&#9;&#9;-- factor - small integer
&#9;&#9;-- returns long integer result (src1 * src2 * factor) and its floating point approximation
&#9;&#9;local result, carry, value, weight = table.create(result_length), 0, 0, 1
&#9;&#9;for j = 1, result_length do
&#9;&#9;&#9;for k = math.max(1, j + 1 - #src2), math.min(j, #src1) do
&#9;&#9;&#9;&#9;carry = carry + factor * src1[k] * src2[j + 1 - k] -- &quot;int32&quot; is not enough for multiplication result, that&apos;s why &quot;factor&quot; must be of type &quot;double&quot;
&#9;&#9;&#9;end

&#9;&#9;&#9;local digit = carry % TWO_POW_24
&#9;&#9;&#9;result[j] = math.floor(digit)
&#9;&#9;&#9;carry = (carry - digit) / TWO_POW_24
&#9;&#9;&#9;value = value + digit * weight
&#9;&#9;&#9;weight = weight * TWO_POW_24
&#9;&#9;end

&#9;&#9;return result, value
&#9;end

&#9;local idx, step, p, one, sqrt_hi, sqrt_lo = 0, { 4, 1, 2, -2, 2 }, 4, { 1 }, sha2_H_hi, sha2_H_lo
&#9;repeat
&#9;&#9;p = p + step[p % 6]
&#9;&#9;local d = 1
&#9;&#9;repeat
&#9;&#9;&#9;d = d + step[d % 6]
&#9;&#9;&#9;if d * d &gt; p then
&#9;&#9;&#9;&#9;-- next prime number is found
&#9;&#9;&#9;&#9;local root = p ^ (1 / 3)
&#9;&#9;&#9;&#9;local R = root * TWO_POW_40
&#9;&#9;&#9;&#9;R = mul(table.create(1, math.floor(R)), one, 1, 2)
&#9;&#9;&#9;&#9;local _, delta = mul(R, mul(R, R, 1, 4), -1, 4)
&#9;&#9;&#9;&#9;local hi = R[2] % 65536 * 65536 + math.floor(R[1] / 256)
&#9;&#9;&#9;&#9;local lo = R[1] % 256 * 16777216 + math.floor(delta * (TWO_POW_NEG_56 / 3) * root / p)

&#9;&#9;&#9;&#9;if idx &lt; 16 then
&#9;&#9;&#9;&#9;&#9;root = math.sqrt(p)
&#9;&#9;&#9;&#9;&#9;R = root * TWO_POW_40
&#9;&#9;&#9;&#9;&#9;R = mul(table.create(1, math.floor(R)), one, 1, 2)
&#9;&#9;&#9;&#9;&#9;_, delta = mul(R, R, -1, 2)
&#9;&#9;&#9;&#9;&#9;local hi = R[2] % 65536 * 65536 + math.floor(R[1] / 256)
&#9;&#9;&#9;&#9;&#9;local lo = R[1] % 256 * 16777216 + math.floor(delta * TWO_POW_NEG_17 / root)
&#9;&#9;&#9;&#9;&#9;local idx = idx % 8 + 1
&#9;&#9;&#9;&#9;&#9;sha2_H_ext256[224][idx] = lo
&#9;&#9;&#9;&#9;&#9;sqrt_hi[idx], sqrt_lo[idx] = hi, lo + hi * hi_factor
&#9;&#9;&#9;&#9;&#9;if idx &gt; 7 then
&#9;&#9;&#9;&#9;&#9;&#9;sqrt_hi, sqrt_lo = sha2_H_ext512_hi[384], sha2_H_ext512_lo[384]
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;idx = idx + 1
&#9;&#9;&#9;&#9;sha2_K_hi[idx], sha2_K_lo[idx] = hi, lo % K_lo_modulo + hi * hi_factor
&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;end
&#9;&#9;until p % d == 0
&#9;until idx &gt; 79
end

-- Calculating IVs for SHA512/224 and SHA512/256
for width = 224, 256, 32 do
&#9;local H_lo, H_hi = {}, nil
&#9;if XOR64A5 then
&#9;&#9;for j = 1, 8 do
&#9;&#9;&#9;H_lo[j] = XOR64A5(sha2_H_lo[j])
&#9;&#9;end
&#9;else
&#9;&#9;H_hi = {}
&#9;&#9;for j = 1, 8 do
&#9;&#9;&#9;H_lo[j] = bit32_bxor(sha2_H_lo[j], 0xA5A5A5A5) % 4294967296
&#9;&#9;&#9;H_hi[j] = bit32_bxor(sha2_H_hi[j], 0xA5A5A5A5) % 4294967296
&#9;&#9;end
&#9;end

&#9;sha512_feed_128(H_lo, H_hi, &quot;SHA-512/&quot; .. tostring(width) .. &quot;\128&quot; .. string.rep(&quot;\0&quot;, 115) .. &quot;\88&quot;, 0, 128)
&#9;sha2_H_ext512_lo[width] = H_lo
&#9;sha2_H_ext512_hi[width] = H_hi
end

-- Constants for MD5
do
&#9;for idx = 1, 64 do
&#9;&#9;-- we can&apos;t use formula math.floor(abs(sin(idx))*TWO_POW_32) because its result may be beyond integer range on Lua built with 32-bit integers
&#9;&#9;local hi, lo = math.modf(math.abs(math.sin(idx)) * TWO_POW_16)
&#9;&#9;md5_K[idx] = hi * 65536 + math.floor(lo * TWO_POW_16)
&#9;end
end

-- Constants for SHA3
do
&#9;local sh_reg = 29
&#9;local function next_bit()
&#9;&#9;local r = sh_reg % 2
&#9;&#9;sh_reg = bit32_bxor((sh_reg - r) / 2, 142 * r)
&#9;&#9;return r
&#9;end

&#9;for idx = 1, 24 do
&#9;&#9;local lo, m = 0, nil
&#9;&#9;for _ = 1, 6 do
&#9;&#9;&#9;m = m and m * m * 2 or 1
&#9;&#9;&#9;lo = lo + next_bit() * m
&#9;&#9;end

&#9;&#9;local hi = next_bit() * m
&#9;&#9;sha3_RC_hi[idx], sha3_RC_lo[idx] = hi, lo + hi * hi_factor_keccak
&#9;end
end

--------------------------------------------------------------------------------
-- MAIN FUNCTIONS
--------------------------------------------------------------------------------
local function sha256ext(width, message)
&#9;-- Create an instance (private objects for current calculation)
&#9;local Array256 = sha2_H_ext256[width] -- # == 8
&#9;local length, tail = 0, &quot;&quot;
&#9;local H = table.create(8)
&#9;H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8] =
&#9;&#9;Array256[1], Array256[2], Array256[3], Array256[4], Array256[5], Array256[6], Array256[7], Array256[8]

&#9;local function partial(message_part)
&#9;&#9;if message_part then
&#9;&#9;&#9;local partLength = #message_part
&#9;&#9;&#9;if tail then
&#9;&#9;&#9;&#9;length = length + partLength
&#9;&#9;&#9;&#9;local offs = 0
&#9;&#9;&#9;&#9;local tailLength = #tail
&#9;&#9;&#9;&#9;if tail ~= &quot;&quot; and tailLength + partLength &gt;= 64 then
&#9;&#9;&#9;&#9;&#9;offs = 64 - tailLength
&#9;&#9;&#9;&#9;&#9;sha256_feed_64(H, tail .. string.sub(message_part, 1, offs), 0, 64)
&#9;&#9;&#9;&#9;&#9;tail = &quot;&quot;
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local size = partLength - offs
&#9;&#9;&#9;&#9;local size_tail = size % 64
&#9;&#9;&#9;&#9;sha256_feed_64(H, message_part, offs, size - size_tail)
&#9;&#9;&#9;&#9;tail = tail .. string.sub(message_part, partLength + 1 - size_tail)
&#9;&#9;&#9;&#9;return partial
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;error(&quot;Adding more chunks is not allowed after receiving the result&quot;, 2)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;if tail then
&#9;&#9;&#9;&#9;local final_blocks = table.create(10) --{tail, &quot;\128&quot;, string.rep(&quot;\0&quot;, (-9 - length) % 64 + 1)}
&#9;&#9;&#9;&#9;final_blocks[1] = tail
&#9;&#9;&#9;&#9;final_blocks[2] = &quot;\128&quot;
&#9;&#9;&#9;&#9;final_blocks[3] = string.rep(&quot;\0&quot;, (-9 - length) % 64 + 1)

&#9;&#9;&#9;&#9;tail = nil
&#9;&#9;&#9;&#9;-- Assuming user data length is shorter than (TWO_POW_53)-9 bytes
&#9;&#9;&#9;&#9;-- Anyway, it looks very unrealistic that someone would spend more than a year of calculations to process TWO_POW_53 bytes of data by using this Lua script :-)
&#9;&#9;&#9;&#9;-- TWO_POW_53 bytes = TWO_POW_56 bits, so &quot;bit-counter&quot; fits in 7 bytes
&#9;&#9;&#9;&#9;length = length * (8 / TWO56_POW_7) -- convert &quot;byte-counter&quot; to &quot;bit-counter&quot; and move decimal point to the left
&#9;&#9;&#9;&#9;for j = 4, 10 do
&#9;&#9;&#9;&#9;&#9;length = length % 1 * 256
&#9;&#9;&#9;&#9;&#9;final_blocks[j] = string.char(math.floor(length))
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;final_blocks = table.concat(final_blocks)
&#9;&#9;&#9;&#9;sha256_feed_64(H, final_blocks, 0, #final_blocks)
&#9;&#9;&#9;&#9;local max_reg = width / 32
&#9;&#9;&#9;&#9;for j = 1, max_reg do
&#9;&#9;&#9;&#9;&#9;H[j] = string.format(&quot;%08x&quot;, H[j] % 4294967296)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;H = table.concat(H, &quot;&quot;, 1, max_reg)
&#9;&#9;&#9;end

&#9;&#9;&#9;return H
&#9;&#9;end
&#9;end

&#9;if message then
&#9;&#9;-- Actually perform calculations and return the SHA256 digest of a message
&#9;&#9;return partial(message)()
&#9;else
&#9;&#9;-- Return function for chunk-by-chunk loading
&#9;&#9;-- User should feed every chunk of input data as single argument to this function and finally get SHA256 digest by invoking this function without an argument
&#9;&#9;return partial
&#9;end
end

local function sha512ext(width, message)
&#9;-- Create an instance (private objects for current calculation)
&#9;local length, tail, H_lo, H_hi =
&#9;&#9;0,
&#9;&#9;&quot;&quot;,
&#9;&#9;table.pack(table.unpack(sha2_H_ext512_lo[width])),
&#9;&#9;not HEX64 and table.pack(table.unpack(sha2_H_ext512_hi[width]))

&#9;local function partial(message_part)
&#9;&#9;if message_part then
&#9;&#9;&#9;local partLength = #message_part
&#9;&#9;&#9;if tail then
&#9;&#9;&#9;&#9;length = length + partLength
&#9;&#9;&#9;&#9;local offs = 0
&#9;&#9;&#9;&#9;if tail ~= &quot;&quot; and #tail + partLength &gt;= 128 then
&#9;&#9;&#9;&#9;&#9;offs = 128 - #tail
&#9;&#9;&#9;&#9;&#9;sha512_feed_128(H_lo, H_hi, tail .. string.sub(message_part, 1, offs), 0, 128)
&#9;&#9;&#9;&#9;&#9;tail = &quot;&quot;
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local size = partLength - offs
&#9;&#9;&#9;&#9;local size_tail = size % 128
&#9;&#9;&#9;&#9;sha512_feed_128(H_lo, H_hi, message_part, offs, size - size_tail)
&#9;&#9;&#9;&#9;tail = tail .. string.sub(message_part, partLength + 1 - size_tail)
&#9;&#9;&#9;&#9;return partial
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;error(&quot;Adding more chunks is not allowed after receiving the result&quot;, 2)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;if tail then
&#9;&#9;&#9;&#9;local final_blocks = table.create(3) --{tail, &quot;\128&quot;, string.rep(&quot;\0&quot;, (-17-length) % 128 + 9)}
&#9;&#9;&#9;&#9;final_blocks[1] = tail
&#9;&#9;&#9;&#9;final_blocks[2] = &quot;\128&quot;
&#9;&#9;&#9;&#9;final_blocks[3] = string.rep(&quot;\0&quot;, (-17 - length) % 128 + 9)

&#9;&#9;&#9;&#9;tail = nil
&#9;&#9;&#9;&#9;-- Assuming user data length is shorter than (TWO_POW_53)-17 bytes
&#9;&#9;&#9;&#9;-- TWO_POW_53 bytes = TWO_POW_56 bits, so &quot;bit-counter&quot; fits in 7 bytes
&#9;&#9;&#9;&#9;length = length * (8 / TWO56_POW_7) -- convert &quot;byte-counter&quot; to &quot;bit-counter&quot; and move floating point to the left
&#9;&#9;&#9;&#9;for j = 4, 10 do
&#9;&#9;&#9;&#9;&#9;length = length % 1 * 256
&#9;&#9;&#9;&#9;&#9;final_blocks[j] = string.char(math.floor(length))
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;final_blocks = table.concat(final_blocks)
&#9;&#9;&#9;&#9;sha512_feed_128(H_lo, H_hi, final_blocks, 0, #final_blocks)
&#9;&#9;&#9;&#9;local max_reg = math.ceil(width / 64)

&#9;&#9;&#9;&#9;if HEX64 then
&#9;&#9;&#9;&#9;&#9;for j = 1, max_reg do
&#9;&#9;&#9;&#9;&#9;&#9;H_lo[j] = HEX64(H_lo[j])
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;for j = 1, max_reg do
&#9;&#9;&#9;&#9;&#9;&#9;H_lo[j] = string.format(&quot;%08x&quot;, H_hi[j] % 4294967296)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;.. string.format(&quot;%08x&quot;, H_lo[j] % 4294967296)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;H_hi = nil
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;H_lo = string.sub(table.concat(H_lo, &quot;&quot;, 1, max_reg), 1, width / 4)
&#9;&#9;&#9;end

&#9;&#9;&#9;return H_lo
&#9;&#9;end
&#9;end

&#9;if message then
&#9;&#9;-- Actually perform calculations and return the SHA512 digest of a message
&#9;&#9;return partial(message)()
&#9;else
&#9;&#9;-- Return function for chunk-by-chunk loading
&#9;&#9;-- User should feed every chunk of input data as single argument to this function and finally get SHA512 digest by invoking this function without an argument
&#9;&#9;return partial
&#9;end
end

local function md5(message)
&#9;-- Create an instance (private objects for current calculation)
&#9;local H, length, tail = table.create(4), 0, &quot;&quot;
&#9;H[1], H[2], H[3], H[4] = md5_sha1_H[1], md5_sha1_H[2], md5_sha1_H[3], md5_sha1_H[4]

&#9;local function partial(message_part)
&#9;&#9;if message_part then
&#9;&#9;&#9;local partLength = #message_part
&#9;&#9;&#9;if tail then
&#9;&#9;&#9;&#9;length = length + partLength
&#9;&#9;&#9;&#9;local offs = 0
&#9;&#9;&#9;&#9;if tail ~= &quot;&quot; and #tail + partLength &gt;= 64 then
&#9;&#9;&#9;&#9;&#9;offs = 64 - #tail
&#9;&#9;&#9;&#9;&#9;md5_feed_64(H, tail .. string.sub(message_part, 1, offs), 0, 64)
&#9;&#9;&#9;&#9;&#9;tail = &quot;&quot;
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local size = partLength - offs
&#9;&#9;&#9;&#9;local size_tail = size % 64
&#9;&#9;&#9;&#9;md5_feed_64(H, message_part, offs, size - size_tail)
&#9;&#9;&#9;&#9;tail = tail .. string.sub(message_part, partLength + 1 - size_tail)
&#9;&#9;&#9;&#9;return partial
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;error(&quot;Adding more chunks is not allowed after receiving the result&quot;, 2)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;if tail then
&#9;&#9;&#9;&#9;local final_blocks = table.create(3) --{tail, &quot;\128&quot;, string.rep(&quot;\0&quot;, (-9 - length) % 64)}
&#9;&#9;&#9;&#9;final_blocks[1] = tail
&#9;&#9;&#9;&#9;final_blocks[2] = &quot;\128&quot;
&#9;&#9;&#9;&#9;final_blocks[3] = string.rep(&quot;\0&quot;, (-9 - length) % 64)
&#9;&#9;&#9;&#9;tail = nil
&#9;&#9;&#9;&#9;length = length * 8 -- convert &quot;byte-counter&quot; to &quot;bit-counter&quot;
&#9;&#9;&#9;&#9;for j = 4, 11 do
&#9;&#9;&#9;&#9;&#9;local low_byte = length % 256
&#9;&#9;&#9;&#9;&#9;final_blocks[j] = string.char(low_byte)
&#9;&#9;&#9;&#9;&#9;length = (length - low_byte) / 256
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;final_blocks = table.concat(final_blocks)
&#9;&#9;&#9;&#9;md5_feed_64(H, final_blocks, 0, #final_blocks)
&#9;&#9;&#9;&#9;for j = 1, 4 do
&#9;&#9;&#9;&#9;&#9;H[j] = string.format(&quot;%08x&quot;, H[j] % 4294967296)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;H = string.gsub(table.concat(H), &quot;(..)(..)(..)(..)&quot;, &quot;%4%3%2%1&quot;)
&#9;&#9;&#9;end

&#9;&#9;&#9;return H
&#9;&#9;end
&#9;end

&#9;if message then
&#9;&#9;-- Actually perform calculations and return the MD5 digest of a message
&#9;&#9;return partial(message)()
&#9;else
&#9;&#9;-- Return function for chunk-by-chunk loading
&#9;&#9;-- User should feed every chunk of input data as single argument to this function and finally get MD5 digest by invoking this function without an argument
&#9;&#9;return partial
&#9;end
end

local function sha1(message)
&#9;-- Create an instance (private objects for current calculation)
&#9;local H, length, tail = table.pack(table.unpack(md5_sha1_H)), 0, &quot;&quot;

&#9;local function partial(message_part)
&#9;&#9;if message_part then
&#9;&#9;&#9;local partLength = #message_part
&#9;&#9;&#9;if tail then
&#9;&#9;&#9;&#9;length = length + partLength
&#9;&#9;&#9;&#9;local offs = 0
&#9;&#9;&#9;&#9;if tail ~= &quot;&quot; and #tail + partLength &gt;= 64 then
&#9;&#9;&#9;&#9;&#9;offs = 64 - #tail
&#9;&#9;&#9;&#9;&#9;sha1_feed_64(H, tail .. string.sub(message_part, 1, offs), 0, 64)
&#9;&#9;&#9;&#9;&#9;tail = &quot;&quot;
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local size = partLength - offs
&#9;&#9;&#9;&#9;local size_tail = size % 64
&#9;&#9;&#9;&#9;sha1_feed_64(H, message_part, offs, size - size_tail)
&#9;&#9;&#9;&#9;tail = tail .. string.sub(message_part, partLength + 1 - size_tail)
&#9;&#9;&#9;&#9;return partial
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;error(&quot;Adding more chunks is not allowed after receiving the result&quot;, 2)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;if tail then
&#9;&#9;&#9;&#9;local final_blocks = table.create(10) --{tail, &quot;\128&quot;, string.rep(&quot;\0&quot;, (-9 - length) % 64 + 1)}
&#9;&#9;&#9;&#9;final_blocks[1] = tail
&#9;&#9;&#9;&#9;final_blocks[2] = &quot;\128&quot;
&#9;&#9;&#9;&#9;final_blocks[3] = string.rep(&quot;\0&quot;, (-9 - length) % 64 + 1)
&#9;&#9;&#9;&#9;tail = nil

&#9;&#9;&#9;&#9;-- Assuming user data length is shorter than (TWO_POW_53)-9 bytes
&#9;&#9;&#9;&#9;-- TWO_POW_53 bytes = TWO_POW_56 bits, so &quot;bit-counter&quot; fits in 7 bytes
&#9;&#9;&#9;&#9;length = length * (8 / TWO56_POW_7) -- convert &quot;byte-counter&quot; to &quot;bit-counter&quot; and move decimal point to the left
&#9;&#9;&#9;&#9;for j = 4, 10 do
&#9;&#9;&#9;&#9;&#9;length = length % 1 * 256
&#9;&#9;&#9;&#9;&#9;final_blocks[j] = string.char(math.floor(length))
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;final_blocks = table.concat(final_blocks)
&#9;&#9;&#9;&#9;sha1_feed_64(H, final_blocks, 0, #final_blocks)
&#9;&#9;&#9;&#9;for j = 1, 5 do
&#9;&#9;&#9;&#9;&#9;H[j] = string.format(&quot;%08x&quot;, H[j] % 4294967296)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;H = table.concat(H)
&#9;&#9;&#9;end

&#9;&#9;&#9;return H
&#9;&#9;end
&#9;end

&#9;if message then
&#9;&#9;-- Actually perform calculations and return the SHA-1 digest of a message
&#9;&#9;return partial(message)()
&#9;else
&#9;&#9;-- Return function for chunk-by-chunk loading
&#9;&#9;-- User should feed every chunk of input data as single argument to this function and finally get SHA-1 digest by invoking this function without an argument
&#9;&#9;return partial
&#9;end
end

local function keccak(block_size_in_bytes, digest_size_in_bytes, is_SHAKE, message)
&#9;-- &quot;block_size_in_bytes&quot; is multiple of 8
&#9;if type(digest_size_in_bytes) ~= &quot;number&quot; then
&#9;&#9;-- arguments in SHAKE are swapped:
&#9;&#9;--    NIST FIPS 202 defines SHAKE(message,num_bits)
&#9;&#9;--    this module   defines SHAKE(num_bytes,message)
&#9;&#9;-- it&apos;s easy to forget about this swap, hence the check
&#9;&#9;error(&quot;Argument &apos;digest_size_in_bytes&apos; must be a number&quot;, 2)
&#9;end

&#9;-- Create an instance (private objects for current calculation)
&#9;local tail, lanes_lo, lanes_hi = &quot;&quot;, table.create(25, 0), hi_factor_keccak == 0 and table.create(25, 0)
&#9;local result

&#9;--~     pad the input N using the pad function, yielding a padded bit string P with a length divisible by r (such that n = len(P)/r is integer),
&#9;--~     break P into n consecutive r-bit pieces P0, ..., Pn-1 (last is zero-padded)
&#9;--~     initialize the state S to a string of b 0 bits.
&#9;--~     absorb the input into the state: For each block Pi,
&#9;--~         extend Pi at the end by a string of c 0 bits, yielding one of length b,
&#9;--~         XOR that with S and
&#9;--~         apply the block permutation f to the result, yielding a new state S
&#9;--~     initialize Z to be the empty string
&#9;--~     while the length of Z is less than d:
&#9;--~         append the first r bits of S to Z
&#9;--~         if Z is still less than d bits long, apply f to S, yielding a new state S.
&#9;--~     truncate Z to d bits
&#9;local function partial(message_part)
&#9;&#9;if message_part then
&#9;&#9;&#9;local partLength = #message_part
&#9;&#9;&#9;if tail then
&#9;&#9;&#9;&#9;local offs = 0
&#9;&#9;&#9;&#9;if tail ~= &quot;&quot; and #tail + partLength &gt;= block_size_in_bytes then
&#9;&#9;&#9;&#9;&#9;offs = block_size_in_bytes - #tail
&#9;&#9;&#9;&#9;&#9;keccak_feed(
&#9;&#9;&#9;&#9;&#9;&#9;lanes_lo,
&#9;&#9;&#9;&#9;&#9;&#9;lanes_hi,
&#9;&#9;&#9;&#9;&#9;&#9;tail .. string.sub(message_part, 1, offs),
&#9;&#9;&#9;&#9;&#9;&#9;0,
&#9;&#9;&#9;&#9;&#9;&#9;block_size_in_bytes,
&#9;&#9;&#9;&#9;&#9;&#9;block_size_in_bytes
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;tail = &quot;&quot;
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local size = partLength - offs
&#9;&#9;&#9;&#9;local size_tail = size % block_size_in_bytes
&#9;&#9;&#9;&#9;keccak_feed(lanes_lo, lanes_hi, message_part, offs, size - size_tail, block_size_in_bytes)
&#9;&#9;&#9;&#9;tail = tail .. string.sub(message_part, partLength + 1 - size_tail)
&#9;&#9;&#9;&#9;return partial
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;error(&quot;Adding more chunks is not allowed after receiving the result&quot;, 2)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;if tail then
&#9;&#9;&#9;&#9;-- append the following bits to the message: for usual SHA3: 011(0*)1, for SHAKE: 11111(0*)1
&#9;&#9;&#9;&#9;local gap_start = is_SHAKE and 31 or 6
&#9;&#9;&#9;&#9;tail = tail
&#9;&#9;&#9;&#9;&#9;.. (
&#9;&#9;&#9;&#9;&#9;&#9;#tail + 1 == block_size_in_bytes and string.char(gap_start + 128)
&#9;&#9;&#9;&#9;&#9;&#9;or string.char(gap_start) .. string.rep(&quot;\0&quot;, (-2 - #tail) % block_size_in_bytes) .. &quot;\128&quot;
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;keccak_feed(lanes_lo, lanes_hi, tail, 0, #tail, block_size_in_bytes)
&#9;&#9;&#9;&#9;tail = nil

&#9;&#9;&#9;&#9;local lanes_used = 0
&#9;&#9;&#9;&#9;local total_lanes = math.floor(block_size_in_bytes / 8)
&#9;&#9;&#9;&#9;local qwords = {}

&#9;&#9;&#9;&#9;local function get_next_qwords_of_digest(qwords_qty)
&#9;&#9;&#9;&#9;&#9;-- returns not more than &apos;qwords_qty&apos; qwords (&apos;qwords_qty&apos; might be non-integer)
&#9;&#9;&#9;&#9;&#9;-- doesn&apos;t go across keccak-buffer boundary
&#9;&#9;&#9;&#9;&#9;-- block_size_in_bytes is a multiple of 8, so, keccak-buffer contains integer number of qwords
&#9;&#9;&#9;&#9;&#9;if lanes_used &gt;= total_lanes then
&#9;&#9;&#9;&#9;&#9;&#9;keccak_feed(lanes_lo, lanes_hi, &quot;\0\0\0\0\0\0\0\0&quot;, 0, 8, 8)
&#9;&#9;&#9;&#9;&#9;&#9;lanes_used = 0
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;qwords_qty = math.floor(math.min(qwords_qty, total_lanes - lanes_used))
&#9;&#9;&#9;&#9;&#9;if hi_factor_keccak ~= 0 then
&#9;&#9;&#9;&#9;&#9;&#9;for j = 1, qwords_qty do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;qwords[j] = HEX64(lanes_lo[lanes_used + j - 1 + lanes_index_base])
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;for j = 1, qwords_qty do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;qwords[j] = string.format(&quot;%08x&quot;, lanes_hi[lanes_used + j] % 4294967296)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;.. string.format(&quot;%08x&quot;, lanes_lo[lanes_used + j] % 4294967296)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;lanes_used = lanes_used + qwords_qty
&#9;&#9;&#9;&#9;&#9;return string.gsub(
&#9;&#9;&#9;&#9;&#9;&#9;table.concat(qwords, &quot;&quot;, 1, qwords_qty),
&#9;&#9;&#9;&#9;&#9;&#9;&quot;(..)(..)(..)(..)(..)(..)(..)(..)&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&quot;%8%7%6%5%4%3%2%1&quot;
&#9;&#9;&#9;&#9;&#9;),
&#9;&#9;&#9;&#9;&#9;&#9;qwords_qty * 8
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local parts = {} -- digest parts
&#9;&#9;&#9;&#9;local last_part, last_part_size = &quot;&quot;, 0

&#9;&#9;&#9;&#9;local function get_next_part_of_digest(bytes_needed)
&#9;&#9;&#9;&#9;&#9;-- returns &apos;bytes_needed&apos; bytes, for arbitrary integer &apos;bytes_needed&apos;
&#9;&#9;&#9;&#9;&#9;bytes_needed = bytes_needed or 1
&#9;&#9;&#9;&#9;&#9;if bytes_needed &lt;= last_part_size then
&#9;&#9;&#9;&#9;&#9;&#9;last_part_size = last_part_size - bytes_needed
&#9;&#9;&#9;&#9;&#9;&#9;local part_size_in_nibbles = bytes_needed * 2
&#9;&#9;&#9;&#9;&#9;&#9;local result = string.sub(last_part, 1, part_size_in_nibbles)
&#9;&#9;&#9;&#9;&#9;&#9;last_part = string.sub(last_part, part_size_in_nibbles + 1)
&#9;&#9;&#9;&#9;&#9;&#9;return result
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;local parts_qty = 0
&#9;&#9;&#9;&#9;&#9;if last_part_size &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;parts_qty = 1
&#9;&#9;&#9;&#9;&#9;&#9;parts[parts_qty] = last_part
&#9;&#9;&#9;&#9;&#9;&#9;bytes_needed = bytes_needed - last_part_size
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;-- repeats until the length is enough
&#9;&#9;&#9;&#9;&#9;while bytes_needed &gt;= 8 do
&#9;&#9;&#9;&#9;&#9;&#9;local next_part, next_part_size = get_next_qwords_of_digest(bytes_needed / 8)
&#9;&#9;&#9;&#9;&#9;&#9;parts_qty = parts_qty + 1
&#9;&#9;&#9;&#9;&#9;&#9;parts[parts_qty] = next_part
&#9;&#9;&#9;&#9;&#9;&#9;bytes_needed = bytes_needed - next_part_size
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;if bytes_needed &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;last_part, last_part_size = get_next_qwords_of_digest(1)
&#9;&#9;&#9;&#9;&#9;&#9;parts_qty = parts_qty + 1
&#9;&#9;&#9;&#9;&#9;&#9;parts[parts_qty] = get_next_part_of_digest(bytes_needed)
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;last_part, last_part_size = &quot;&quot;, 0
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;return table.concat(parts, &quot;&quot;, 1, parts_qty)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if digest_size_in_bytes &lt; 0 then
&#9;&#9;&#9;&#9;&#9;result = get_next_part_of_digest
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;result = get_next_part_of_digest(digest_size_in_bytes)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;return result
&#9;&#9;end
&#9;end

&#9;if message then
&#9;&#9;-- Actually perform calculations and return the SHA3 digest of a message
&#9;&#9;return partial(message)()
&#9;else
&#9;&#9;-- Return function for chunk-by-chunk loading
&#9;&#9;-- User should feed every chunk of input data as single argument to this function and finally get SHA3 digest by invoking this function without an argument
&#9;&#9;return partial
&#9;end
end

local function HexToBinFunction(hh)
&#9;return string.char(tonumber(hh, 16))
end

local function hex2bin(hex_string)
&#9;return (string.gsub(hex_string, &quot;%x%x&quot;, HexToBinFunction))
end

local base64_symbols = {
&#9;[&quot;+&quot;] = 62,
&#9;[&quot;-&quot;] = 62,
&#9;[62] = &quot;+&quot;,
&#9;[&quot;/&quot;] = 63,
&#9;[&quot;_&quot;] = 63,
&#9;[63] = &quot;/&quot;,
&#9;[&quot;=&quot;] = -1,
&#9;[&quot;.&quot;] = -1,
&#9;[-1] = &quot;=&quot;,
}

local symbol_index = 0
for j, pair in ipairs({ &quot;AZ&quot;, &quot;az&quot;, &quot;09&quot; }) do
&#9;for ascii = string.byte(pair), string.byte(pair, 2) do
&#9;&#9;local ch = string.char(ascii)
&#9;&#9;base64_symbols[ch] = symbol_index
&#9;&#9;base64_symbols[symbol_index] = ch
&#9;&#9;symbol_index = symbol_index + 1
&#9;end
end

local function bin2base64(binary_string)
&#9;local stringLength = #binary_string
&#9;local result = table.create(math.ceil(stringLength / 3))
&#9;local length = 0

&#9;for pos = 1, #binary_string, 3 do
&#9;&#9;local c1, c2, c3, c4 = string.byte(string.sub(binary_string, pos, pos + 2) .. &quot;\0&quot;, 1, -1)
&#9;&#9;length = length + 1
&#9;&#9;result[length] = base64_symbols[math.floor(c1 / 4)]
&#9;&#9;&#9;.. base64_symbols[c1 % 4 * 16 + math.floor(c2 / 16)]
&#9;&#9;&#9;.. base64_symbols[c3 and c2 % 16 * 4 + math.floor(c3 / 64) or -1]
&#9;&#9;&#9;.. base64_symbols[c4 and c3 % 64 or -1]
&#9;end

&#9;return table.concat(result)
end

local function base642bin(base64_string)
&#9;local result, chars_qty = {}, 3
&#9;for pos, ch in string.gmatch(string.gsub(base64_string, &quot;%s+&quot;, &quot;&quot;), &quot;()(.)&quot;) do
&#9;&#9;local code = base64_symbols[ch]
&#9;&#9;if code &lt; 0 then
&#9;&#9;&#9;chars_qty = chars_qty - 1
&#9;&#9;&#9;code = 0
&#9;&#9;end

&#9;&#9;local idx = pos % 4
&#9;&#9;if idx &gt; 0 then
&#9;&#9;&#9;result[-idx] = code
&#9;&#9;else
&#9;&#9;&#9;local c1 = result[-1] * 4 + math.floor(result[-2] / 16)
&#9;&#9;&#9;local c2 = (result[-2] % 16) * 16 + math.floor(result[-3] / 4)
&#9;&#9;&#9;local c3 = (result[-3] % 4) * 64 + code
&#9;&#9;&#9;result[#result + 1] = string.sub(string.char(c1, c2, c3), 1, chars_qty)
&#9;&#9;end
&#9;end

&#9;return table.concat(result)
end

local block_size_for_HMAC -- this table will be initialized at the end of the module
--local function pad_and_xor(str, result_length, byte_for_xor)
--&#9;return string.gsub(str, &quot;.&quot;, function(c)
--&#9;&#9;return string.char(bit32_bxor(string.byte(c), byte_for_xor))
--&#9;end) .. string.rep(string.char(byte_for_xor), result_length - #str)
--end

-- For the sake of speed of converting hexes to strings, there&apos;s a map of the conversions here
local BinaryStringMap = {}
for Index = 0, 255 do
&#9;BinaryStringMap[string.format(&quot;%02x&quot;, Index)] = string.char(Index)
end

-- Update 02.14.20 - added AsBinary for easy GameAnalytics replacement.
local function hmac(hash_func, key, message, AsBinary)
&#9;-- Create an instance (private objects for current calculation)
&#9;local block_size = block_size_for_HMAC[hash_func]
&#9;if not block_size then
&#9;&#9;error(&quot;Unknown hash function&quot;, 2)
&#9;end

&#9;local KeyLength = #key
&#9;if KeyLength &gt; block_size then
&#9;&#9;key = string.gsub(hash_func(key), &quot;%x%x&quot;, HexToBinFunction)
&#9;&#9;KeyLength = #key
&#9;end

&#9;local append = hash_func()(string.gsub(key, &quot;.&quot;, function(c)
&#9;&#9;return string.char(bit32_bxor(string.byte(c), 0x36))
&#9;end) .. string.rep(&quot;6&quot;, block_size - KeyLength)) -- 6 = string.char(0x36)

&#9;local result

&#9;local function partial(message_part)
&#9;&#9;if not message_part then
&#9;&#9;&#9;result = result
&#9;&#9;&#9;&#9;or hash_func(
&#9;&#9;&#9;&#9;&#9;string.gsub(key, &quot;.&quot;, function(c)
&#9;&#9;&#9;&#9;&#9;&#9;return string.char(bit32_bxor(string.byte(c), 0x5c))
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;.. string.rep(&quot;\\&quot;, block_size - KeyLength) -- \ = string.char(0x5c)
&#9;&#9;&#9;&#9;&#9;&#9;.. (string.gsub(append(), &quot;%x%x&quot;, HexToBinFunction))
&#9;&#9;&#9;&#9;)

&#9;&#9;&#9;return result
&#9;&#9;elseif result then
&#9;&#9;&#9;error(&quot;Adding more chunks is not allowed after receiving the result&quot;, 2)
&#9;&#9;else
&#9;&#9;&#9;append(message_part)
&#9;&#9;&#9;return partial
&#9;&#9;end
&#9;end

&#9;if message then
&#9;&#9;-- Actually perform calculations and return the HMAC of a message
&#9;&#9;local FinalMessage = partial(message)()
&#9;&#9;return AsBinary and (string.gsub(FinalMessage, &quot;%x%x&quot;, BinaryStringMap)) or FinalMessage
&#9;else
&#9;&#9;-- Return function for chunk-by-chunk loading of a message
&#9;&#9;-- User should feed every chunk of the message as single argument to this function and finally get HMAC by invoking this function without an argument
&#9;&#9;return partial
&#9;end
end

local sha = {
&#9;md5 = md5,
&#9;sha1 = sha1,
&#9;-- SHA2 hash functions:
&#9;sha224 = function(message)
&#9;&#9;return sha256ext(224, message)
&#9;end,

&#9;sha256 = function(message)
&#9;&#9;return sha256ext(256, message)
&#9;end,

&#9;sha512_224 = function(message)
&#9;&#9;return sha512ext(224, message)
&#9;end,

&#9;sha512_256 = function(message)
&#9;&#9;return sha512ext(256, message)
&#9;end,

&#9;sha384 = function(message)
&#9;&#9;return sha512ext(384, message)
&#9;end,

&#9;sha512 = function(message)
&#9;&#9;return sha512ext(512, message)
&#9;end,

&#9;-- SHA3 hash functions:
&#9;sha3_224 = function(message)
&#9;&#9;return keccak((1600 - 2 * 224) / 8, 224 / 8, false, message)
&#9;end,

&#9;sha3_256 = function(message)
&#9;&#9;return keccak((1600 - 2 * 256) / 8, 256 / 8, false, message)
&#9;end,

&#9;sha3_384 = function(message)
&#9;&#9;return keccak((1600 - 2 * 384) / 8, 384 / 8, false, message)
&#9;end,

&#9;sha3_512 = function(message)
&#9;&#9;return keccak((1600 - 2 * 512) / 8, 512 / 8, false, message)
&#9;end,

&#9;shake128 = function(message, digest_size_in_bytes)
&#9;&#9;return keccak((1600 - 2 * 128) / 8, digest_size_in_bytes, true, message)
&#9;end,

&#9;shake256 = function(message, digest_size_in_bytes)
&#9;&#9;return keccak((1600 - 2 * 256) / 8, digest_size_in_bytes, true, message)
&#9;end,

&#9;-- misc utilities:
&#9;hmac = hmac, -- HMAC(hash_func, key, message) is applicable to any hash function from this module except SHAKE*
&#9;hex_to_bin = hex2bin, -- converts hexadecimal representation to binary string
&#9;base64_to_bin = base642bin, -- converts base64 representation to binary string
&#9;bin_to_base64 = bin2base64, -- converts binary string to base64 representation
&#9;base64_encode = Base64.Encode,
&#9;base64_decode = Base64.Decode,
}

block_size_for_HMAC = {
&#9;[sha.md5] = 64,
&#9;[sha.sha1] = 64,
&#9;[sha.sha224] = 64,
&#9;[sha.sha256] = 64,
&#9;[sha.sha512_224] = 128,
&#9;[sha.sha512_256] = 128,
&#9;[sha.sha384] = 128,
&#9;[sha.sha512] = 128,
&#9;[sha.sha3_224] = (1600 - 2 * 224) / 8,
&#9;[sha.sha3_256] = (1600 - 2 * 256) / 8,
&#9;[sha.sha3_384] = (1600 - 2 * 384) / 8,
&#9;[sha.sha3_512] = (1600 - 2 * 512) / 8,
}

return sha
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a40000106c</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBXDED65A598C25436482B6326A59784A37">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b57</UniqueId>
								<string name="LinkedSource"></string>
								<string name="Name">HashLib.spec</string>
								<string name="ScriptGuid">{a6e9013c-d1ff-4a84-99b9-88df28947bbf}</string>
								<string name="Source">local function describe(phrase, callback) end
local function it(phrase, callback) end
local function expect(value) end

return function()
&#9;local HashLib = require(script.Parent)
&#9;local sha256 = HashLib.sha256

&#9;describe(&quot;HashLib.sha256&quot;, function()
&#9;&#9;it(&quot;should properly encode strings&quot;, function()
&#9;&#9;&#9;expect(sha256(&quot;abc&quot;).to.equal(&quot;ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad&quot;))
&#9;&#9;&#9;expect(
&#9;&#9;&#9;&#9;sha256(&quot;The quick brown fox jumps over the lazy dog&quot;).to.equal(
&#9;&#9;&#9;&#9;&#9;&quot;d7a8fbb307d7809469ca9abcb0082e4f8d5651e46d3cdb762d02d0bf37c9e592&quot;
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;)
&#9;&#9;&#9;expect(sha256(&quot;123456&quot;).to.equal(&quot;8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92&quot;))
&#9;&#9;end)

&#9;&#9;it(&quot;should create a private closure that works&quot;, function()
&#9;&#9;&#9;local AppendNextChunk = sha256()
&#9;&#9;&#9;AppendNextChunk(&quot;The quick brown fox&quot;)
&#9;&#9;&#9;AppendNextChunk(&quot; jumps &quot;)
&#9;&#9;&#9;AppendNextChunk(&quot;&quot;) -- chunk may be an empty string
&#9;&#9;&#9;AppendNextChunk(&quot;over the lazy dog&quot;)
&#9;&#9;&#9;expect(AppendNextChunk()).to.equal(&quot;d7a8fbb307d7809469ca9abcb0082e4f8d5651e46d3cdb762d02d0bf37c9e592&quot;)
&#9;&#9;end)

&#9;&#9;it(&quot;should allow the private closure to work if called twice&quot;, function()
&#9;&#9;&#9;local AppendNextChunk = sha256()
&#9;&#9;&#9;AppendNextChunk(&quot;The quick brown fox&quot;)
&#9;&#9;&#9;AppendNextChunk(&quot; jumps &quot;)
&#9;&#9;&#9;AppendNextChunk(&quot;&quot;) -- chunk may be an empty string
&#9;&#9;&#9;AppendNextChunk(&quot;over the lazy dog&quot;)
&#9;&#9;&#9;AppendNextChunk()
&#9;&#9;&#9;expect(AppendNextChunk()).to.equal(&quot;d7a8fbb307d7809469ca9abcb0082e4f8d5651e46d3cdb762d02d0bf37c9e592&quot;)
&#9;&#9;end)
&#9;end)
end
</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a40000106d</UniqueId>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXD714F0DFC9A44CA295DC34D4019E93A7">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b58</UniqueId>
								<string name="LinkedSource"></string>
								<string name="Name">Base64</string>
								<string name="ScriptGuid">{eb493804-87c1-4f6e-a9f9-8cf1889c4b7f}</string>
								<string name="Source">-- @original: https://gist.github.com/Reselim/40d62b17d138cc74335a1b0709e19ce2
local Alphabet = {}
local Indexes = {}

-- A-Z
for Index = 65, 90 do
&#9;table.insert(Alphabet, Index)
end

-- a-z
for Index = 97, 122 do
&#9;table.insert(Alphabet, Index)
end

-- 0-9
for Index = 48, 57 do
&#9;table.insert(Alphabet, Index)
end

table.insert(Alphabet, 43) -- +
table.insert(Alphabet, 47) -- /

for Index, Character in ipairs(Alphabet) do
&#9;Indexes[Character] = Index
end

local Base64 = {}

local bit32_rshift = bit32.rshift
local bit32_lshift = bit32.lshift
local bit32_band = bit32.band

--[[**
&#9;Encodes a string in Base64.
&#9;@param [t:string] Input The input string to encode.
&#9;@returns [t:string] The string encoded in Base64.
**--]]
function Base64.Encode(Input)
&#9;local Output = {}
&#9;local Length = 0

&#9;for Index = 1, #Input, 3 do
&#9;&#9;local C1, C2, C3 = string.byte(Input, Index, Index + 2)

&#9;&#9;local A = bit32_rshift(C1, 2)
&#9;&#9;local B = bit32_lshift(bit32_band(C1, 3), 4) + bit32_rshift(C2 or 0, 4)
&#9;&#9;local C = bit32_lshift(bit32_band(C2 or 0, 15), 2) + bit32_rshift(C3 or 0, 6)
&#9;&#9;local D = bit32_band(C3 or 0, 63)

&#9;&#9;Length = Length + 1
&#9;&#9;Output[Length] = Alphabet[A + 1]

&#9;&#9;Length = Length + 1
&#9;&#9;Output[Length] = Alphabet[B + 1]

&#9;&#9;Length = Length + 1
&#9;&#9;Output[Length] = C2 and Alphabet[C + 1] or 61

&#9;&#9;Length = Length + 1
&#9;&#9;Output[Length] = C3 and Alphabet[D + 1] or 61
&#9;end

&#9;local NewOutput = {}
&#9;local NewLength = 0
&#9;local IndexAdd4096Sub1

&#9;for Index = 1, Length, 4096 do
&#9;&#9;NewLength = NewLength + 1
&#9;&#9;IndexAdd4096Sub1 = Index + 4096 - 1

&#9;&#9;NewOutput[NewLength] = string.char(
&#9;&#9;&#9;table.unpack(Output, Index, IndexAdd4096Sub1 &gt; Length and Length or IndexAdd4096Sub1)
&#9;&#9;)
&#9;end

&#9;return table.concat(NewOutput)
end

--[[**
&#9;Decodes a string from Base64.
&#9;@param [t:string] Input The input string to decode.
&#9;@returns [t:string] The newly decoded string.
**--]]
function Base64.Decode(Input)
&#9;local Output = {}
&#9;local Length = 0

&#9;for Index = 1, #Input, 4 do
&#9;&#9;local C1, C2, C3, C4 = string.byte(Input, Index, Index + 3)

&#9;&#9;local I1 = Indexes[C1] - 1
&#9;&#9;local I2 = Indexes[C2] - 1
&#9;&#9;local I3 = (Indexes[C3] or 1) - 1
&#9;&#9;local I4 = (Indexes[C4] or 1) - 1

&#9;&#9;local A = bit32_lshift(I1, 2) + bit32_rshift(I2, 4)
&#9;&#9;local B = bit32_lshift(bit32_band(I2, 15), 4) + bit32_rshift(I3, 2)
&#9;&#9;local C = bit32_lshift(bit32_band(I3, 3), 6) + I4

&#9;&#9;Length = Length + 1
&#9;&#9;Output[Length] = A

&#9;&#9;if C3 ~= 61 then
&#9;&#9;&#9;Length = Length + 1
&#9;&#9;&#9;Output[Length] = B
&#9;&#9;end

&#9;&#9;if C4 ~= 61 then
&#9;&#9;&#9;Length = Length + 1
&#9;&#9;&#9;Output[Length] = C
&#9;&#9;end
&#9;end

&#9;local NewOutput = {}
&#9;local NewLength = 0
&#9;local IndexAdd4096Sub1

&#9;for Index = 1, Length, 4096 do
&#9;&#9;NewLength = NewLength + 1
&#9;&#9;IndexAdd4096Sub1 = Index + 4096 - 1

&#9;&#9;NewOutput[NewLength] = string.char(
&#9;&#9;&#9;table.unpack(Output, Index, IndexAdd4096Sub1 &gt; Length and Length or IndexAdd4096Sub1)
&#9;&#9;)
&#9;end

&#9;return table.concat(NewOutput)
end

return Base64
</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a40000106e</UniqueId>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX6317D63E48694510A809BA0F0EDB2A40">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b59</UniqueId>
						<string name="Name">dervexhero_fusion-03-dev@0.3.0-dev.1</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a40000106f</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX3206C88BCE924807A96D9B90C67CA468">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b5a</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">fusion-03-dev</string>
							<string name="ScriptGuid">{e7552699-d255-4282-b2a6-26039bb5c71e}</string>
							<string name="Source">--!strict

--[[
&#9;The entry point for the Fusion library.
]]

local PubTypes = require(script.PubTypes)
local External = require(script.External)
local restrictRead = require(script.Utility.restrictRead)

-- Down the line, this will be conditional based on whether Fusion is being
-- compiled for Roblox.
do
&#9;local RobloxExternal = require(script.RobloxExternal)
&#9;External.setExternalScheduler(RobloxExternal)
end

local Fusion = restrictRead(&quot;Fusion&quot;, {
&#9;version = {major = 0, minor = 3, isRelease = false},

&#9;New = require(script.Instances.New),
&#9;Hydrate = require(script.Instances.Hydrate),
&#9;Ref = require(script.Instances.Ref),
&#9;Out = require(script.Instances.Out),
&#9;Cleanup = require(script.Instances.Cleanup),
&#9;Children = require(script.Instances.Children),
&#9;OnEvent = require(script.Instances.OnEvent),
&#9;OnChange = require(script.Instances.OnChange),
&#9;Attribute = require(script.Instances.Attribute),
&#9;AttributeChange = require(script.Instances.AttributeChange),
&#9;AttributeOut = require(script.Instances.AttributeOut),

&#9;Value = require(script.State.Value),
&#9;Computed = require(script.State.Computed),
&#9;ForPairs = require(script.State.ForPairs),
&#9;ForKeys = require(script.State.ForKeys),
&#9;ForValues = require(script.State.ForValues),
&#9;Observer = require(script.State.Observer),

&#9;Tween = require(script.Animation.Tween),
&#9;Spring = require(script.Animation.Spring),

&#9;Contextual = require(script.Utility.Contextual),
&#9;cleanup = require(script.Utility.cleanup),
&#9;doNothing = require(script.Utility.doNothing),
&#9;peek = require(script.State.peek)
}) :: Fusion

export type StateObject&lt;T&gt; = PubTypes.StateObject&lt;T&gt;
export type CanBeState&lt;T&gt; = PubTypes.CanBeState&lt;T&gt;
export type Symbol = PubTypes.Symbol
export type Value&lt;T&gt; = PubTypes.Value&lt;T&gt;
export type Computed&lt;T&gt; = PubTypes.Computed&lt;T&gt;
export type ForPairs&lt;KO, VO&gt; = PubTypes.ForPairs&lt;KO, VO&gt;
export type ForKeys&lt;KI, KO&gt; = PubTypes.ForKeys&lt;KI, KO&gt;
export type ForValues&lt;VI, VO&gt; = PubTypes.ForKeys&lt;VI, VO&gt;
export type Observer = PubTypes.Observer
export type Tween&lt;T&gt; = PubTypes.Tween&lt;T&gt;
export type Spring&lt;T&gt; = PubTypes.Spring&lt;T&gt;
export type Use = PubTypes.Use
export type Contextual&lt;T&gt; = PubTypes.Contextual&lt;T&gt;

type Fusion = {
&#9;version: PubTypes.Version,

&#9;New: (className: string) -&gt; ((propertyTable: PubTypes.PropertyTable) -&gt; Instance),
&#9;Hydrate: (target: Instance) -&gt; ((propertyTable: PubTypes.PropertyTable) -&gt; Instance),
&#9;Ref: PubTypes.SpecialKey,
&#9;Cleanup: PubTypes.SpecialKey,
&#9;Children: PubTypes.SpecialKey,
&#9;Out: (propertyName: string) -&gt; PubTypes.SpecialKey,
&#9;OnEvent: (eventName: string) -&gt; PubTypes.SpecialKey,
&#9;OnChange: (propertyName: string) -&gt; PubTypes.SpecialKey,
&#9;Attribute: (attributeName: string) -&gt; PubTypes.SpecialKey,
&#9;AttributeChange: (attributeName: string) -&gt; PubTypes.SpecialKey,
&#9;AttributeOut: (attributeName: string) -&gt; PubTypes.SpecialKey,

&#9;Value: &lt;T&gt;(initialValue: T) -&gt; Value&lt;T&gt;,
&#9;Computed: &lt;T&gt;(callback: (Use) -&gt; T, destructor: (T) -&gt; ()?) -&gt; Computed&lt;T&gt;,
&#9;ForPairs: &lt;KI, VI, KO, VO, M&gt;(inputTable: CanBeState&lt;{[KI]: VI}&gt;, processor: (Use, KI, VI) -&gt; (KO, VO, M?), destructor: (KO, VO, M?) -&gt; ()?) -&gt; ForPairs&lt;KO, VO&gt;,
&#9;ForKeys: &lt;KI, KO, M&gt;(inputTable: CanBeState&lt;{[KI]: any}&gt;, processor: (Use, KI) -&gt; (KO, M?), destructor: (KO, M?) -&gt; ()?) -&gt; ForKeys&lt;KO, any&gt;,
&#9;ForValues: &lt;VI, VO, M&gt;(inputTable: CanBeState&lt;{[any]: VI}&gt;, processor: (Use, VI) -&gt; (VO, M?), destructor: (VO, M?) -&gt; ()?) -&gt; ForValues&lt;any, VO&gt;,
&#9;Observer: (watchedState: StateObject&lt;any&gt;) -&gt; Observer,

&#9;Tween: &lt;T&gt;(goalState: StateObject&lt;T&gt;, tweenInfo: TweenInfo?) -&gt; Tween&lt;T&gt;,
&#9;Spring: &lt;T&gt;(goalState: StateObject&lt;T&gt;, speed: CanBeState&lt;number&gt;?, damping: CanBeState&lt;number&gt;?) -&gt; Spring&lt;T&gt;,

&#9;Contextual: &lt;T&gt;(defaultValue: T) -&gt; Contextual&lt;T&gt;,
&#9;cleanup: (...any) -&gt; (),
&#9;doNothing: (...any) -&gt; (),
&#9;peek: Use
}

return Fusion
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a400001070</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX63736C8774484879A6F27203097E0D68">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b5b</UniqueId>
								<string name="LinkedSource"></string>
								<string name="Name">External</string>
								<string name="ScriptGuid">{d726b622-92c5-4ed5-b1e2-38d7a68e650c}</string>
								<string name="Source">--!strict
--[[
    Abstraction layer between Fusion internals and external environments,
    allowing for flexible integration with schedulers and test mocks.
]]

local Package = script.Parent
local logError = require(Package.Logging.logError)

local External = {}

export type Scheduler = {
    doTaskImmediate: (
        resume: () -&gt; ()
    ) -&gt; (),
    doTaskDeferred: (
        resume: () -&gt; ()
    ) -&gt; (),
    startScheduler: () -&gt; (),
    stopScheduler: () -&gt; ()
}

local updateStepCallbacks = {}
local currentScheduler: Scheduler? = nil
local lastUpdateStep = 0

--[[
    Sets the external scheduler that Fusion will use for queuing async tasks.
    Returns the previous scheduler so it can be reset later.
]]
function External.setExternalScheduler(
    newScheduler: Scheduler?
): Scheduler?
    local oldScheduler = currentScheduler
    if oldScheduler ~= nil then
        oldScheduler.stopScheduler()
    end
    currentScheduler = newScheduler
    if newScheduler ~= nil then
        newScheduler.startScheduler()
    end
    return oldScheduler
end

--[[
   Sends an immediate task to the external scheduler. Throws if none is set.
]]
function External.doTaskImmediate(
    resume: () -&gt; ()
)
    if currentScheduler == nil then
        logError(&quot;noTaskScheduler&quot;)
    else
        currentScheduler.doTaskImmediate(resume)
    end
end

--[[
    Sends a deferred task to the external scheduler. Throws if none is set.
]]
function External.doTaskDeferred(
    resume: () -&gt; ()
)
    if currentScheduler == nil then
        logError(&quot;noTaskScheduler&quot;)
    else
        currentScheduler.doTaskDeferred(resume)
    end
end

--[[
    Registers a callback to the update step of the external scheduler.
    Returns a function that can be used to disconnect later.

    Callbacks are given the current number of seconds since an arbitrary epoch.
    
    TODO: This epoch may change between schedulers. We could investigate ways
    of allowing schedulers to co-operate to keep the epoch the same, so that
    monotonicity can be better preserved.
]]
function External.bindToUpdateStep(
    callback: (
        now: number
    ) -&gt; ()
): () -&gt; ()
    local uniqueIdentifier = {}
    updateStepCallbacks[uniqueIdentifier] = callback
    return function()
        updateStepCallbacks[uniqueIdentifier] = nil
    end
end

--[[
    Steps time-dependent systems with the current number of seconds since an
    arbitrary epoch. This should be called as early as possible in the external
    scheduler&apos;s update cycle.
]]
function External.performUpdateStep(
    now: number
)
    lastUpdateStep = now
    for _, callback in updateStepCallbacks do
        callback(now)
    end
end

--[[
    Returns the timestamp of the last update step.
]]
function External.lastUpdateStep()
    return lastUpdateStep
end

return External</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a400001071</UniqueId>
							</Properties>
						</Item>
						<Item class="Folder" referent="RBXCDBD97FAE85543BBB6160F82EECEA509">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b5c</UniqueId>
								<string name="Name">Animation</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a400001072</UniqueId>
							</Properties>
							<Item class="ModuleScript" referent="RBX2CF5E7F2D8B64D06ACB50FD8D20A7B55">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b5d</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">SpringScheduler</string>
									<string name="ScriptGuid">{0673ed17-6f81-41fd-aa6b-a53c7364b64b}</string>
									<string name="Source">--!strict

--[[
&#9;Manages batch updating of spring objects.
]]

local Package = script.Parent.Parent
local Types = require(Package.Types)
local External = require(Package.External)
local packType = require(Package.Animation.packType)
local springCoefficients = require(Package.Animation.springCoefficients)
local updateAll = require(Package.State.updateAll)

type Set&lt;T&gt; = {[T]: any}
type Spring = Types.Spring&lt;any&gt;

local SpringScheduler = {}

local EPSILON = 0.0001
local activeSprings: Set&lt;Spring&gt; = {}
local lastUpdateTime = External.lastUpdateStep()

function SpringScheduler.add(spring: Spring)
&#9;-- we don&apos;t necessarily want to use the most accurate time - here we snap to
&#9;-- the last update time so that springs started within the same frame have
&#9;-- identical time steps
&#9;spring._lastSchedule = lastUpdateTime
&#9;spring._startDisplacements = {}
&#9;spring._startVelocities = {}
&#9;for index, goal in ipairs(spring._springGoals) do
&#9;&#9;spring._startDisplacements[index] = spring._springPositions[index] - goal
&#9;&#9;spring._startVelocities[index] = spring._springVelocities[index]
&#9;end

&#9;activeSprings[spring] = true
end

function SpringScheduler.remove(spring: Spring)
&#9;activeSprings[spring] = nil
end

local function updateAllSprings(
&#9;now: number
)
&#9;local springsToSleep: Set&lt;Spring&gt; = {}
&#9;lastUpdateTime = now

&#9;for spring in pairs(activeSprings) do
&#9;&#9;local posPos, posVel, velPos, velVel = springCoefficients(lastUpdateTime - spring._lastSchedule, spring._currentDamping, spring._currentSpeed)

&#9;&#9;local positions = spring._springPositions
&#9;&#9;local velocities = spring._springVelocities
&#9;&#9;local startDisplacements = spring._startDisplacements
&#9;&#9;local startVelocities = spring._startVelocities
&#9;&#9;local isMoving = false

&#9;&#9;for index, goal in ipairs(spring._springGoals) do
&#9;&#9;&#9;local oldDisplacement = startDisplacements[index]
&#9;&#9;&#9;local oldVelocity = startVelocities[index]
&#9;&#9;&#9;local newDisplacement = oldDisplacement * posPos + oldVelocity * posVel
&#9;&#9;&#9;local newVelocity = oldDisplacement * velPos + oldVelocity * velVel

&#9;&#9;&#9;if math.abs(newDisplacement) &gt; EPSILON or math.abs(newVelocity) &gt; EPSILON then
&#9;&#9;&#9;&#9;isMoving = true
&#9;&#9;&#9;end

&#9;&#9;&#9;positions[index] = newDisplacement + goal
&#9;&#9;&#9;velocities[index] = newVelocity
&#9;&#9;end

&#9;&#9;if not isMoving then
&#9;&#9;&#9;springsToSleep[spring] = true
&#9;&#9;end
&#9;end

&#9;for spring in pairs(activeSprings) do
&#9;&#9;spring._currentValue = packType(spring._springPositions, spring._currentType)
&#9;&#9;updateAll(spring)
&#9;end

&#9;for spring in pairs(springsToSleep) do
&#9;&#9;activeSprings[spring] = nil
&#9;&#9;-- Guarantee that springs reach exact goals, since mathematically they only approach it infinitely
&#9;&#9;spring._currentValue = packType(spring._springGoals, spring._currentType)
&#9;end
end

External.bindToUpdateStep(updateAllSprings)

return SpringScheduler</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001073</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX5350070FE8F5475FAB37EADACD195A41">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b5e</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">packType</string>
									<string name="ScriptGuid">{2ae06528-759e-4c67-a6ce-67ced8fd0fe5}</string>
									<string name="Source">--!strict

--[[
&#9;Packs an array of numbers into a given animatable data type.
&#9;If the type is not animatable, nil will be returned.

&#9;FUTURE: When Luau supports singleton types, those could be used in
&#9;conjunction with intersection types to make this function fully statically
&#9;type checkable.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local Oklab = require(Package.Colour.Oklab)

local function packType(numbers: {number}, typeString: string): PubTypes.Animatable?
&#9;if typeString == &quot;number&quot; then
&#9;&#9;return numbers[1]

&#9;elseif typeString == &quot;CFrame&quot; then
&#9;&#9;return
&#9;&#9;&#9;CFrame.new(numbers[1], numbers[2], numbers[3]) *
&#9;&#9;&#9;CFrame.fromAxisAngle(
&#9;&#9;&#9;&#9;Vector3.new(numbers[4], numbers[5], numbers[6]).Unit,
&#9;&#9;&#9;&#9;numbers[7]
&#9;&#9;&#9;)

&#9;elseif typeString == &quot;Color3&quot; then
&#9;&#9;return Oklab.from(
&#9;&#9;&#9;Vector3.new(numbers[1], numbers[2], numbers[3]),
&#9;&#9;&#9;false
&#9;&#9;)

&#9;elseif typeString == &quot;ColorSequenceKeypoint&quot; then
&#9;&#9;return ColorSequenceKeypoint.new(
&#9;&#9;&#9;numbers[4],
&#9;&#9;&#9;Oklab.from(
&#9;&#9;&#9;&#9;Vector3.new(numbers[1], numbers[2], numbers[3]),
&#9;&#9;&#9;&#9;false
&#9;&#9;&#9;)
&#9;&#9;)

&#9;elseif typeString == &quot;DateTime&quot; then
&#9;&#9;return DateTime.fromUnixTimestampMillis(numbers[1])

&#9;elseif typeString == &quot;NumberRange&quot; then
&#9;&#9;return NumberRange.new(numbers[1], numbers[2])

&#9;elseif typeString == &quot;NumberSequenceKeypoint&quot; then
&#9;&#9;return NumberSequenceKeypoint.new(numbers[2], numbers[1], numbers[3])

&#9;elseif typeString == &quot;PhysicalProperties&quot; then
&#9;&#9;return PhysicalProperties.new(numbers[1], numbers[2], numbers[3], numbers[4], numbers[5])

&#9;elseif typeString == &quot;Ray&quot; then
&#9;&#9;return Ray.new(
&#9;&#9;&#9;Vector3.new(numbers[1], numbers[2], numbers[3]),
&#9;&#9;&#9;Vector3.new(numbers[4], numbers[5], numbers[6])
&#9;&#9;)

&#9;elseif typeString == &quot;Rect&quot; then
&#9;&#9;return Rect.new(numbers[1], numbers[2], numbers[3], numbers[4])

&#9;elseif typeString == &quot;Region3&quot; then
&#9;&#9;-- FUTURE: support rotated Region3s if/when they become constructable
&#9;&#9;local position = Vector3.new(numbers[1], numbers[2], numbers[3])
&#9;&#9;local halfSize = Vector3.new(numbers[4] / 2, numbers[5] / 2, numbers[6] / 2)
&#9;&#9;return Region3.new(position - halfSize, position + halfSize)

&#9;elseif typeString == &quot;Region3int16&quot; then
&#9;&#9;return Region3int16.new(
&#9;&#9;&#9;Vector3int16.new(numbers[1], numbers[2], numbers[3]),
&#9;&#9;&#9;Vector3int16.new(numbers[4], numbers[5], numbers[6])
&#9;&#9;)

&#9;elseif typeString == &quot;UDim&quot; then
&#9;&#9;return UDim.new(numbers[1], numbers[2])

&#9;elseif typeString == &quot;UDim2&quot; then
&#9;&#9;return UDim2.new(numbers[1], numbers[2], numbers[3], numbers[4])

&#9;elseif typeString == &quot;Vector2&quot; then
&#9;&#9;return Vector2.new(numbers[1], numbers[2])

&#9;elseif typeString == &quot;Vector2int16&quot; then
&#9;&#9;return Vector2int16.new(numbers[1], numbers[2])

&#9;elseif typeString == &quot;Vector3&quot; then
&#9;&#9;return Vector3.new(numbers[1], numbers[2], numbers[3])

&#9;elseif typeString == &quot;Vector3int16&quot; then
&#9;&#9;return Vector3int16.new(numbers[1], numbers[2], numbers[3])
&#9;else
&#9;&#9;return nil
&#9;end
end

return packType</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001074</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXD5607E30FE9E481C8FE3A26DD4726B93">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b5f</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Spring</string>
									<string name="ScriptGuid">{d0695c75-0258-4a34-91a8-fb11e8a456d7}</string>
									<string name="Source">--!nonstrict

--[[
&#9;Constructs a new computed state object, which follows the value of another
&#9;state object using a spring simulation.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local Types = require(Package.Types)
local logError = require(Package.Logging.logError)
local logErrorNonFatal = require(Package.Logging.logErrorNonFatal)
local unpackType = require(Package.Animation.unpackType)
local SpringScheduler = require(Package.Animation.SpringScheduler)
local updateAll = require(Package.State.updateAll)
local xtypeof = require(Package.Utility.xtypeof)
local peek = require(Package.State.peek)

local class = {}

local CLASS_METATABLE = {__index = class}
local WEAK_KEYS_METATABLE = {__mode = &quot;k&quot;}

--[[
&#9;Sets the position of the internal springs, meaning the value of this
&#9;Spring will jump to the given value. This doesn&apos;t affect velocity.

&#9;If the type doesn&apos;t match the current type of the spring, an error will be
&#9;thrown.
]]
function class:setPosition(newValue: PubTypes.Animatable)
&#9;local newType = typeof(newValue)
&#9;if newType ~= self._currentType then
&#9;&#9;logError(&quot;springTypeMismatch&quot;, nil, newType, self._currentType)
&#9;end

&#9;self._springPositions = unpackType(newValue, newType)
&#9;self._currentValue = newValue
&#9;SpringScheduler.add(self)
&#9;updateAll(self)
end

--[[
&#9;Sets the velocity of the internal springs, overwriting the existing velocity
&#9;of this Spring. This doesn&apos;t affect position.

&#9;If the type doesn&apos;t match the current type of the spring, an error will be
&#9;thrown.
]]
function class:setVelocity(newValue: PubTypes.Animatable)
&#9;local newType = typeof(newValue)
&#9;if newType ~= self._currentType then
&#9;&#9;logError(&quot;springTypeMismatch&quot;, nil, newType, self._currentType)
&#9;end

&#9;self._springVelocities = unpackType(newValue, newType)
&#9;SpringScheduler.add(self)
end

--[[
&#9;Adds to the velocity of the internal springs, on top of the existing
&#9;velocity of this Spring. This doesn&apos;t affect position.

&#9;If the type doesn&apos;t match the current type of the spring, an error will be
&#9;thrown.
]]
function class:addVelocity(deltaValue: PubTypes.Animatable)
&#9;local deltaType = typeof(deltaValue)
&#9;if deltaType ~= self._currentType then
&#9;&#9;logError(&quot;springTypeMismatch&quot;, nil, deltaType, self._currentType)
&#9;end

&#9;local springDeltas = unpackType(deltaValue, deltaType)
&#9;for index, delta in ipairs(springDeltas) do
&#9;&#9;self._springVelocities[index] += delta
&#9;end
&#9;SpringScheduler.add(self)
end

--[[
&#9;Called when the goal state changes value, or when the speed or damping has
&#9;changed.
]]
function class:update(): boolean
&#9;local goalValue = peek(self._goalState)

&#9;-- figure out if this was a goal change or a speed/damping change
&#9;if goalValue == self._goalValue then
&#9;&#9;-- speed/damping change
&#9;&#9;local damping = peek(self._damping)
&#9;&#9;if typeof(damping) ~= &quot;number&quot; then
&#9;&#9;&#9;logErrorNonFatal(&quot;mistypedSpringDamping&quot;, nil, typeof(damping))
&#9;&#9;elseif damping &lt; 0 then
&#9;&#9;&#9;logErrorNonFatal(&quot;invalidSpringDamping&quot;, nil, damping)
&#9;&#9;else
&#9;&#9;&#9;self._currentDamping = damping
&#9;&#9;end

&#9;&#9;local speed = peek(self._speed)
&#9;&#9;if typeof(speed) ~= &quot;number&quot; then
&#9;&#9;&#9;logErrorNonFatal(&quot;mistypedSpringSpeed&quot;, nil, typeof(speed))
&#9;&#9;elseif speed &lt; 0 then
&#9;&#9;&#9;logErrorNonFatal(&quot;invalidSpringSpeed&quot;, nil, speed)
&#9;&#9;else
&#9;&#9;&#9;self._currentSpeed = speed
&#9;&#9;end

&#9;&#9;return false
&#9;else
&#9;&#9;-- goal change - reconfigure spring to target new goal
&#9;&#9;self._goalValue = goalValue

&#9;&#9;local oldType = self._currentType
&#9;&#9;local newType = typeof(goalValue)
&#9;&#9;self._currentType = newType

&#9;&#9;local springGoals = unpackType(goalValue, newType)
&#9;&#9;local numSprings = #springGoals
&#9;&#9;self._springGoals = springGoals

&#9;&#9;if newType ~= oldType then
&#9;&#9;&#9;-- if the type changed, snap to the new value and rebuild the
&#9;&#9;&#9;-- position and velocity tables
&#9;&#9;&#9;self._currentValue = self._goalValue

&#9;&#9;&#9;local springPositions = table.create(numSprings, 0)
&#9;&#9;&#9;local springVelocities = table.create(numSprings, 0)
&#9;&#9;&#9;for index, springGoal in ipairs(springGoals) do
&#9;&#9;&#9;&#9;springPositions[index] = springGoal
&#9;&#9;&#9;end
&#9;&#9;&#9;self._springPositions = springPositions
&#9;&#9;&#9;self._springVelocities = springVelocities

&#9;&#9;&#9;-- the spring may have been animating before, so stop that
&#9;&#9;&#9;SpringScheduler.remove(self)
&#9;&#9;&#9;return true

&#9;&#9;&#9;-- otherwise, the type hasn&apos;t changed, just the goal...
&#9;&#9;elseif numSprings == 0 then
&#9;&#9;&#9;-- if the type isn&apos;t animatable, snap to the new value
&#9;&#9;&#9;self._currentValue = self._goalValue
&#9;&#9;&#9;return true

&#9;&#9;else
&#9;&#9;&#9;-- if it&apos;s animatable, let it animate to the goal
&#9;&#9;&#9;SpringScheduler.add(self)
&#9;&#9;&#9;return false
&#9;&#9;end
&#9;end
end

--[[
&#9;Returns the interior value of this state object.
]]
function class:_peek(): any
&#9;return self._currentValue
end

function class:get()
&#9;logError(&quot;stateGetWasRemoved&quot;)
end

local function Spring&lt;T&gt;(
&#9;goalState: PubTypes.Value&lt;T&gt;,
&#9;speed: PubTypes.CanBeState&lt;number&gt;?,
&#9;damping: PubTypes.CanBeState&lt;number&gt;?
): Types.Spring&lt;T&gt;
&#9;-- apply defaults for speed and damping
&#9;if speed == nil then
&#9;&#9;speed = 10
&#9;end
&#9;if damping == nil then
&#9;&#9;damping = 1
&#9;end

&#9;local dependencySet = {[goalState] = true}
&#9;if xtypeof(speed) == &quot;State&quot; then
&#9;&#9;dependencySet[speed] = true
&#9;end
&#9;if xtypeof(damping) == &quot;State&quot; then
&#9;&#9;dependencySet[damping] = true
&#9;end

&#9;local self = setmetatable({
&#9;&#9;type = &quot;State&quot;,
&#9;&#9;kind = &quot;Spring&quot;,
&#9;&#9;dependencySet = dependencySet,
&#9;&#9;-- if we held strong references to the dependents, then they wouldn&apos;t be
&#9;&#9;-- able to get garbage collected when they fall out of scope
&#9;&#9;dependentSet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;_speed = speed,
&#9;&#9;_damping = damping,

&#9;&#9;_goalState = goalState,
&#9;&#9;_goalValue = nil,

&#9;&#9;_currentType = nil,
&#9;&#9;_currentValue = nil,
&#9;&#9;_currentSpeed = peek(speed),
&#9;&#9;_currentDamping = peek(damping),

&#9;&#9;_springPositions = nil,
&#9;&#9;_springGoals = nil,
&#9;&#9;_springVelocities = nil
&#9;}, CLASS_METATABLE)

&#9;-- add this object to the goal state&apos;s dependent set
&#9;goalState.dependentSet[self] = true
&#9;self:update()

&#9;return self
end

return Spring</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001075</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXC8EDCE664FDF43C49D5609BE703BC328">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b60</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">getTweenRatio</string>
									<string name="ScriptGuid">{f78c97c9-4d35-42c4-bcbf-39353e11b60c}</string>
									<string name="Source">--!strict

--[[
&#9;Given a `tweenInfo` and `currentTime`, returns a ratio which can be used to
&#9;tween between two values over time.
]]

local TweenService = game:GetService(&quot;TweenService&quot;)

local function getTweenRatio(tweenInfo: TweenInfo, currentTime: number): number
&#9;local delay = tweenInfo.DelayTime
&#9;local duration = tweenInfo.Time
&#9;local reverses = tweenInfo.Reverses
&#9;local numCycles = 1 + tweenInfo.RepeatCount
&#9;local easeStyle = tweenInfo.EasingStyle
&#9;local easeDirection = tweenInfo.EasingDirection

&#9;local cycleDuration = delay + duration
&#9;if reverses then
&#9;&#9;cycleDuration += duration
&#9;end

&#9;if currentTime &gt;= cycleDuration * numCycles and tweenInfo.RepeatCount &gt; -1 then
&#9;&#9;return 1
&#9;end

&#9;local cycleTime = currentTime % cycleDuration

&#9;if cycleTime &lt;= delay then
&#9;&#9;return 0
&#9;end

&#9;local tweenProgress = (cycleTime - delay) / duration
&#9;if tweenProgress &gt; 1 then
&#9;&#9;tweenProgress = 2 - tweenProgress
&#9;end

&#9;local ratio = TweenService:GetValue(tweenProgress, easeStyle, easeDirection)
&#9;return ratio
end

return getTweenRatio
</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001076</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX308D36CFB8FE4991BAB2F1947BDD926E">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b61</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Tween</string>
									<string name="ScriptGuid">{e4eefa1b-feff-47af-a8b4-4d8f52e1a597}</string>
									<string name="Source">--!nonstrict

--[[
&#9;Constructs a new computed state object, which follows the value of another
&#9;state object using a tween.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local External = require(Package.External)
local Types = require(Package.Types)
local TweenScheduler = require(Package.Animation.TweenScheduler)
local logError = require(Package.Logging.logError)
local logErrorNonFatal = require(Package.Logging.logErrorNonFatal)
local xtypeof = require(Package.Utility.xtypeof)
local peek = require(Package.State.peek)

local class = {}

local CLASS_METATABLE = {__index = class}
local WEAK_KEYS_METATABLE = {__mode = &quot;k&quot;}

--[[
&#9;Called when the goal state changes value; this will initiate a new tween.
&#9;Returns false as the current value doesn&apos;t change right away.
]]
function class:update(): boolean
&#9;local goalValue = peek(self._goalState)

&#9;-- if the goal hasn&apos;t changed, then this is a TweenInfo change.
&#9;-- in that case, if we&apos;re not currently animating, we can skip everything
&#9;if goalValue == self._nextValue and not self._currentlyAnimating then
&#9;&#9;return false
&#9;end

&#9;local tweenInfo = peek(self._tweenInfo)

&#9;-- if we receive a bad TweenInfo, then error and stop the update
&#9;if typeof(tweenInfo) ~= &quot;TweenInfo&quot; then
&#9;&#9;logErrorNonFatal(&quot;mistypedTweenInfo&quot;, nil, typeof(tweenInfo))
&#9;&#9;return false
&#9;end

&#9;self._prevValue = self._currentValue
&#9;self._nextValue = goalValue

&#9;self._currentTweenStartTime = External.lastUpdateStep()
&#9;self._currentTweenInfo = tweenInfo

&#9;local tweenDuration = tweenInfo.DelayTime + tweenInfo.Time
&#9;if tweenInfo.Reverses then
&#9;&#9;tweenDuration += tweenInfo.Time
&#9;end
&#9;tweenDuration *= tweenInfo.RepeatCount + 1
&#9;self._currentTweenDuration = tweenDuration

&#9;-- start animating this tween
&#9;TweenScheduler.add(self)

&#9;return false
end

--[[
&#9;Returns the interior value of this state object.
]]
function class:_peek(): any
&#9;return self._currentValue
end

function class:get()
&#9;logError(&quot;stateGetWasRemoved&quot;)
end

local function Tween&lt;T&gt;(
&#9;goalState: PubTypes.StateObject&lt;PubTypes.Animatable&gt;,
&#9;tweenInfo: PubTypes.CanBeState&lt;TweenInfo&gt;?
): Types.Tween&lt;T&gt;
&#9;local currentValue = peek(goalState)

&#9;-- apply defaults for tween info
&#9;if tweenInfo == nil then
&#9;&#9;tweenInfo = TweenInfo.new()
&#9;end

&#9;local dependencySet = {[goalState] = true}
&#9;local tweenInfoIsState = xtypeof(tweenInfo) == &quot;State&quot;
&#9;if tweenInfoIsState then
&#9;&#9;dependencySet[tweenInfo] = true
&#9;end

&#9;local startingTweenInfo = peek(tweenInfo)
&#9;-- If we start with a bad TweenInfo, then we don&apos;t want to construct a Tween
&#9;if typeof(startingTweenInfo) ~= &quot;TweenInfo&quot; then
&#9;&#9;logError(&quot;mistypedTweenInfo&quot;, nil, typeof(startingTweenInfo))
&#9;end

&#9;local self = setmetatable({
&#9;&#9;type = &quot;State&quot;,
&#9;&#9;kind = &quot;Tween&quot;,
&#9;&#9;dependencySet = dependencySet,
&#9;&#9;-- if we held strong references to the dependents, then they wouldn&apos;t be
&#9;&#9;-- able to get garbage collected when they fall out of scope
&#9;&#9;dependentSet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;_goalState = goalState,
&#9;&#9;_tweenInfo = tweenInfo,
&#9;&#9;_tweenInfoIsState = tweenInfoIsState,

&#9;&#9;_prevValue = currentValue,
&#9;&#9;_nextValue = currentValue,
&#9;&#9;_currentValue = currentValue,

&#9;&#9;-- store current tween into separately from &apos;real&apos; tween into, so it
&#9;&#9;-- isn&apos;t affected by :setTweenInfo() until next change
&#9;&#9;_currentTweenInfo = tweenInfo,
&#9;&#9;_currentTweenDuration = 0,
&#9;&#9;_currentTweenStartTime = 0,
&#9;&#9;_currentlyAnimating = false
&#9;}, CLASS_METATABLE)

&#9;-- add this object to the goal state&apos;s dependent set
&#9;goalState.dependentSet[self] = true

&#9;return self
end

return Tween</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001077</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXA4F6E5D0CC5B40E7A8A78924DCF10F99">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b62</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">unpackType</string>
									<string name="ScriptGuid">{1fb67df2-7370-4d09-b082-e8c2b55fe311}</string>
									<string name="Source">--!strict

--[[
&#9;Unpacks an animatable type into an array of numbers.
&#9;If the type is not animatable, an empty array will be returned.

&#9;FIXME: This function uses a lot of redefinitions to suppress false positives
&#9;from the Luau typechecker - ideally these wouldn&apos;t be required

&#9;FUTURE: When Luau supports singleton types, those could be used in
&#9;conjunction with intersection types to make this function fully statically
&#9;type checkable.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local Oklab = require(Package.Colour.Oklab)

local function unpackType(value: any, typeString: string): {number}
&#9;if typeString == &quot;number&quot; then
&#9;&#9;local value = value :: number
&#9;&#9;return {value}

&#9;elseif typeString == &quot;CFrame&quot; then
&#9;&#9;-- FUTURE: is there a better way of doing this? doing distance
&#9;&#9;-- calculations on `angle` may be incorrect
&#9;&#9;local axis, angle = value:ToAxisAngle()
&#9;&#9;return {value.X, value.Y, value.Z, axis.X, axis.Y, axis.Z, angle}

&#9;elseif typeString == &quot;Color3&quot; then
&#9;&#9;local lab = Oklab.to(value)
&#9;&#9;return {lab.X, lab.Y, lab.Z}

&#9;elseif typeString == &quot;ColorSequenceKeypoint&quot; then
&#9;&#9;local lab = Oklab.to(value.Value)
&#9;&#9;return {lab.X, lab.Y, lab.Z, value.Time}

&#9;elseif typeString == &quot;DateTime&quot; then
&#9;&#9;return {value.UnixTimestampMillis}

&#9;elseif typeString == &quot;NumberRange&quot; then
&#9;&#9;return {value.Min, value.Max}

&#9;elseif typeString == &quot;NumberSequenceKeypoint&quot; then
&#9;&#9;return {value.Value, value.Time, value.Envelope}

&#9;elseif typeString == &quot;PhysicalProperties&quot; then
&#9;&#9;return {value.Density, value.Friction, value.Elasticity, value.FrictionWeight, value.ElasticityWeight}

&#9;elseif typeString == &quot;Ray&quot; then
&#9;&#9;return {value.Origin.X, value.Origin.Y, value.Origin.Z, value.Direction.X, value.Direction.Y, value.Direction.Z}

&#9;elseif typeString == &quot;Rect&quot; then
&#9;&#9;return {value.Min.X, value.Min.Y, value.Max.X, value.Max.Y}

&#9;elseif typeString == &quot;Region3&quot; then
&#9;&#9;-- FUTURE: support rotated Region3s if/when they become constructable
&#9;&#9;return {
&#9;&#9;&#9;value.CFrame.X, value.CFrame.Y, value.CFrame.Z,
&#9;&#9;&#9;value.Size.X, value.Size.Y, value.Size.Z
&#9;&#9;}

&#9;elseif typeString == &quot;Region3int16&quot; then
&#9;&#9;return {value.Min.X, value.Min.Y, value.Min.Z, value.Max.X, value.Max.Y, value.Max.Z}

&#9;elseif typeString == &quot;UDim&quot; then
&#9;&#9;return {value.Scale, value.Offset}

&#9;elseif typeString == &quot;UDim2&quot; then
&#9;&#9;return {value.X.Scale, value.X.Offset, value.Y.Scale, value.Y.Offset}

&#9;elseif typeString == &quot;Vector2&quot; then
&#9;&#9;return {value.X, value.Y}

&#9;elseif typeString == &quot;Vector2int16&quot; then
&#9;&#9;return {value.X, value.Y}

&#9;elseif typeString == &quot;Vector3&quot; then
&#9;&#9;return {value.X, value.Y, value.Z}

&#9;elseif typeString == &quot;Vector3int16&quot; then
&#9;&#9;return {value.X, value.Y, value.Z}
&#9;else
&#9;&#9;return {}
&#9;end
end

return unpackType</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001078</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXA09CD87C28BF457D99DD266D7FC4216A">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b63</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">TweenScheduler</string>
									<string name="ScriptGuid">{9f6b9939-cb8b-4dff-bd0a-08f9916c8a5a}</string>
									<string name="Source">--!strict

--[[
&#9;Manages batch updating of tween objects.
]]

local Package = script.Parent.Parent
local Types = require(Package.Types)
local External = require(Package.External)
local lerpType = require(Package.Animation.lerpType)
local getTweenRatio = require(Package.Animation.getTweenRatio)
local updateAll = require(Package.State.updateAll)

local TweenScheduler = {}

type Set&lt;T&gt; = {[T]: any}
type Tween = Types.Tween&lt;any&gt;

local WEAK_KEYS_METATABLE = {__mode = &quot;k&quot;}

-- all the tweens currently being updated
local allTweens: Set&lt;Tween&gt; = {}
setmetatable(allTweens, WEAK_KEYS_METATABLE)

--[[
&#9;Adds a Tween to be updated every render step.
]]
function TweenScheduler.add(tween: Tween)
&#9;allTweens[tween] = true
end

--[[
&#9;Removes a Tween from the scheduler.
]]
function TweenScheduler.remove(tween: Tween)
&#9;allTweens[tween] = nil
end

--[[
&#9;Updates all Tween objects.
]]
local function updateAllTweens(
&#9;now: number
)
&#9;-- FIXME: Typed Luau doesn&apos;t understand this loop yet
&#9;for tween: Tween in pairs(allTweens :: any) do
&#9;&#9;local currentTime = now - tween._currentTweenStartTime

&#9;&#9;if currentTime &gt; tween._currentTweenDuration and tween._currentTweenInfo.RepeatCount &gt; -1 then
&#9;&#9;&#9;if tween._currentTweenInfo.Reverses then
&#9;&#9;&#9;&#9;tween._currentValue = tween._prevValue
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;tween._currentValue = tween._nextValue
&#9;&#9;&#9;end
&#9;&#9;&#9;tween._currentlyAnimating = false
&#9;&#9;&#9;updateAll(tween)
&#9;&#9;&#9;TweenScheduler.remove(tween)
&#9;&#9;else
&#9;&#9;&#9;local ratio = getTweenRatio(tween._currentTweenInfo, currentTime)
&#9;&#9;&#9;local currentValue = lerpType(tween._prevValue, tween._nextValue, ratio)
&#9;&#9;&#9;tween._currentValue = currentValue
&#9;&#9;&#9;tween._currentlyAnimating = true
&#9;&#9;&#9;updateAll(tween)
&#9;&#9;end
&#9;end
end

External.bindToUpdateStep(updateAllTweens)

return TweenScheduler</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001079</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX7596BDB94F474ECB9F4CC1E6E8C4F626">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b64</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">lerpType</string>
									<string name="ScriptGuid">{97ab8588-251e-44cc-b28b-45c5e03bd771}</string>
									<string name="Source">--!strict

--[[
&#9;Linearly interpolates the given animatable types by a ratio.
&#9;If the types are different or not animatable, then the first value will be
&#9;returned for ratios below 0.5, and the second value for 0.5 and above.

&#9;FIXME: This function uses a lot of redefinitions to suppress false positives
&#9;from the Luau typechecker - ideally these wouldn&apos;t be required
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local Oklab = require(Package.Colour.Oklab)

local function lerpType(from: any, to: any, ratio: number): any
&#9;local typeString = typeof(from)

&#9;if typeof(to) == typeString then
&#9;&#9;-- both types must match for interpolation to make sense
&#9;&#9;if typeString == &quot;number&quot; then
&#9;&#9;&#9;local to, from = to :: number, from :: number
&#9;&#9;&#9;return (to - from) * ratio + from

&#9;&#9;elseif typeString == &quot;CFrame&quot; then
&#9;&#9;&#9;local to, from = to :: CFrame, from :: CFrame
&#9;&#9;&#9;return from:Lerp(to, ratio)

&#9;&#9;elseif typeString == &quot;Color3&quot; then
&#9;&#9;&#9;local to, from = to :: Color3, from :: Color3
&#9;&#9;&#9;local fromLab = Oklab.to(from)
&#9;&#9;&#9;local toLab = Oklab.to(to)
&#9;&#9;&#9;return Oklab.from(
&#9;&#9;&#9;&#9;fromLab:Lerp(toLab, ratio),
&#9;&#9;&#9;&#9;false
&#9;&#9;&#9;)

&#9;&#9;elseif typeString == &quot;ColorSequenceKeypoint&quot; then
&#9;&#9;&#9;local to, from = to :: ColorSequenceKeypoint, from :: ColorSequenceKeypoint
&#9;&#9;&#9;local fromLab = Oklab.to(from.Value)
&#9;&#9;&#9;local toLab = Oklab.to(to.Value)
&#9;&#9;&#9;return ColorSequenceKeypoint.new(
&#9;&#9;&#9;&#9;(to.Time - from.Time) * ratio + from.Time,
&#9;&#9;&#9;&#9;Oklab.from(
&#9;&#9;&#9;&#9;&#9;fromLab:Lerp(toLab, ratio),
&#9;&#9;&#9;&#9;&#9;false
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;)

&#9;&#9;elseif typeString == &quot;DateTime&quot; then
&#9;&#9;&#9;local to, from = to :: DateTime, from :: DateTime
&#9;&#9;&#9;return DateTime.fromUnixTimestampMillis(
&#9;&#9;&#9;&#9;(to.UnixTimestampMillis - from.UnixTimestampMillis) * ratio + from.UnixTimestampMillis
&#9;&#9;&#9;)

&#9;&#9;elseif typeString == &quot;NumberRange&quot; then
&#9;&#9;&#9;local to, from = to :: NumberRange, from :: NumberRange
&#9;&#9;&#9;return NumberRange.new(
&#9;&#9;&#9;&#9;(to.Min - from.Min) * ratio + from.Min,
&#9;&#9;&#9;&#9;(to.Max - from.Max) * ratio + from.Max
&#9;&#9;&#9;)

&#9;&#9;elseif typeString == &quot;NumberSequenceKeypoint&quot; then
&#9;&#9;&#9;local to, from = to :: NumberSequenceKeypoint, from :: NumberSequenceKeypoint
&#9;&#9;&#9;return NumberSequenceKeypoint.new(
&#9;&#9;&#9;&#9;(to.Time - from.Time) * ratio + from.Time,
&#9;&#9;&#9;&#9;(to.Value - from.Value) * ratio + from.Value,
&#9;&#9;&#9;&#9;(to.Envelope - from.Envelope) * ratio + from.Envelope
&#9;&#9;&#9;)

&#9;&#9;elseif typeString == &quot;PhysicalProperties&quot; then
&#9;&#9;&#9;local to, from = to :: PhysicalProperties, from :: PhysicalProperties
&#9;&#9;&#9;return PhysicalProperties.new(
&#9;&#9;&#9;&#9;(to.Density - from.Density) * ratio + from.Density,
&#9;&#9;&#9;&#9;(to.Friction - from.Friction) * ratio + from.Friction,
&#9;&#9;&#9;&#9;(to.Elasticity - from.Elasticity) * ratio + from.Elasticity,
&#9;&#9;&#9;&#9;(to.FrictionWeight - from.FrictionWeight) * ratio + from.FrictionWeight,
&#9;&#9;&#9;&#9;(to.ElasticityWeight - from.ElasticityWeight) * ratio + from.ElasticityWeight
&#9;&#9;&#9;)

&#9;&#9;elseif typeString == &quot;Ray&quot; then
&#9;&#9;&#9;local to, from = to :: Ray, from :: Ray
&#9;&#9;&#9;return Ray.new(
&#9;&#9;&#9;&#9;from.Origin:Lerp(to.Origin, ratio),
&#9;&#9;&#9;&#9;from.Direction:Lerp(to.Direction, ratio)
&#9;&#9;&#9;)

&#9;&#9;elseif typeString == &quot;Rect&quot; then
&#9;&#9;&#9;local to, from = to :: Rect, from :: Rect
&#9;&#9;&#9;return Rect.new(
&#9;&#9;&#9;&#9;from.Min:Lerp(to.Min, ratio),
&#9;&#9;&#9;&#9;from.Max:Lerp(to.Max, ratio)
&#9;&#9;&#9;)

&#9;&#9;elseif typeString == &quot;Region3&quot; then
&#9;&#9;&#9;local to, from = to :: Region3, from :: Region3
&#9;&#9;&#9;-- FUTURE: support rotated Region3s if/when they become constructable
&#9;&#9;&#9;local position = from.CFrame.Position:Lerp(to.CFrame.Position, ratio)
&#9;&#9;&#9;local halfSize = from.Size:Lerp(to.Size, ratio) / 2
&#9;&#9;&#9;return Region3.new(position - halfSize, position + halfSize)

&#9;&#9;elseif typeString == &quot;Region3int16&quot; then
&#9;&#9;&#9;local to, from = to :: Region3int16, from :: Region3int16
&#9;&#9;&#9;return Region3int16.new(
&#9;&#9;&#9;&#9;Vector3int16.new(
&#9;&#9;&#9;&#9;&#9;(to.Min.X - from.Min.X) * ratio + from.Min.X,
&#9;&#9;&#9;&#9;&#9;(to.Min.Y - from.Min.Y) * ratio + from.Min.Y,
&#9;&#9;&#9;&#9;&#9;(to.Min.Z - from.Min.Z) * ratio + from.Min.Z
&#9;&#9;&#9;&#9;),
&#9;&#9;&#9;&#9;Vector3int16.new(
&#9;&#9;&#9;&#9;&#9;(to.Max.X - from.Max.X) * ratio + from.Max.X,
&#9;&#9;&#9;&#9;&#9;(to.Max.Y - from.Max.Y) * ratio + from.Max.Y,
&#9;&#9;&#9;&#9;&#9;(to.Max.Z - from.Max.Z) * ratio + from.Max.Z
&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;)

&#9;&#9;elseif typeString == &quot;UDim&quot; then
&#9;&#9;&#9;local to, from = to :: UDim, from :: UDim
&#9;&#9;&#9;return UDim.new(
&#9;&#9;&#9;&#9;(to.Scale - from.Scale) * ratio + from.Scale,
&#9;&#9;&#9;&#9;(to.Offset - from.Offset) * ratio + from.Offset
&#9;&#9;&#9;)

&#9;&#9;elseif typeString == &quot;UDim2&quot; then
&#9;&#9;&#9;local to, from = to :: UDim2, from :: UDim2
&#9;&#9;&#9;return from:Lerp(to, ratio)

&#9;&#9;elseif typeString == &quot;Vector2&quot; then
&#9;&#9;&#9;local to, from = to :: Vector2, from :: Vector2
&#9;&#9;&#9;return from:Lerp(to, ratio)

&#9;&#9;elseif typeString == &quot;Vector2int16&quot; then
&#9;&#9;&#9;local to, from = to :: Vector2int16, from :: Vector2int16
&#9;&#9;&#9;return Vector2int16.new(
&#9;&#9;&#9;&#9;(to.X - from.X) * ratio + from.X,
&#9;&#9;&#9;&#9;(to.Y - from.Y) * ratio + from.Y
&#9;&#9;&#9;)

&#9;&#9;elseif typeString == &quot;Vector3&quot; then
&#9;&#9;&#9;local to, from = to :: Vector3, from :: Vector3
&#9;&#9;&#9;return from:Lerp(to, ratio)

&#9;&#9;elseif typeString == &quot;Vector3int16&quot; then
&#9;&#9;&#9;local to, from = to :: Vector3int16, from :: Vector3int16
&#9;&#9;&#9;return Vector3int16.new(
&#9;&#9;&#9;&#9;(to.X - from.X) * ratio + from.X,
&#9;&#9;&#9;&#9;(to.Y - from.Y) * ratio + from.Y,
&#9;&#9;&#9;&#9;(to.Z - from.Z) * ratio + from.Z
&#9;&#9;&#9;)
&#9;&#9;end
&#9;end

&#9;-- fallback case: the types are different or not animatable
&#9;if ratio &lt; 0.5 then
&#9;&#9;return from
&#9;else
&#9;&#9;return to
&#9;end
end

return lerpType</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000107a</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX69CEB229AEC940B9B588D643F5395BF3">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b65</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">springCoefficients</string>
									<string name="ScriptGuid">{e39b898f-c1fa-4c7a-a86e-1242987661de}</string>
									<string name="Source">--!strict

--[[
&#9;Returns a 2x2 matrix of coefficients for a given time, damping and speed.
&#9;Specifically, this returns four coefficients - posPos, posVel, velPos, and
&#9;velVel - which can be multiplied with position and velocity like so:

&#9;local newPosition = oldPosition * posPos + oldVelocity * posVel
&#9;local newVelocity = oldPosition * velPos + oldVelocity * velVel

&#9;Special thanks to AxisAngle for helping to improve numerical precision.
]]

local function springCoefficients(time: number, damping: number, speed: number): (number, number, number, number)
&#9;-- if time or speed is 0, then the spring won&apos;t move
&#9;if time == 0 or speed == 0 then
&#9;&#9;return 1, 0, 0, 1
&#9;end
&#9;local posPos, posVel, velPos, velVel

&#9;if damping &gt; 1 then
&#9;&#9;-- overdamped spring
&#9;&#9;-- solution to the characteristic equation:
&#9;&#9;-- z = -&#206;&#182;&#207;&#137; &#194;&#177; Sqrt[&#206;&#182;^2 - 1] &#207;&#137;
&#9;&#9;-- x[t] -&gt; x0(e^(t z2) z1 - e^(t z1) z2)/(z1 - z2)
&#9;&#9;--&#9;&#9; + v0(e^(t z1) - e^(t z2))/(z1 - z2)
&#9;&#9;-- v[t] -&gt; x0(z1 z2(-e^(t z1) + e^(t z2)))/(z1 - z2)
&#9;&#9;--&#9;&#9; + v0(z1 e^(t z1) - z2 e^(t z2))/(z1 - z2)

&#9;&#9;local scaledTime = time * speed
&#9;&#9;local alpha = math.sqrt(damping^2 - 1)
&#9;&#9;local scaledInvAlpha = -0.5 / alpha
&#9;&#9;local z1 = -alpha - damping
&#9;&#9;local z2 = 1 / z1
&#9;&#9;local expZ1 = math.exp(scaledTime * z1)
&#9;&#9;local expZ2 = math.exp(scaledTime * z2)

&#9;&#9;posPos = (expZ2*z1 - expZ1*z2) * scaledInvAlpha
&#9;&#9;posVel = (expZ1 - expZ2) * scaledInvAlpha / speed
&#9;&#9;velPos = (expZ2 - expZ1) * scaledInvAlpha * speed
&#9;&#9;velVel = (expZ1*z1 - expZ2*z2) * scaledInvAlpha

&#9;elseif damping == 1 then
&#9;&#9;-- critically damped spring
&#9;&#9;-- x[t] -&gt; x0(e^-t&#207;&#137;)(1+t&#207;&#137;) + v0(e^-t&#207;&#137;)t
&#9;&#9;-- v[t] -&gt; x0(t &#207;&#137;^2)(-e^-t&#207;&#137;) + v0(1 - t&#207;&#137;)(e^-t&#207;&#137;)

&#9;&#9;local scaledTime = time * speed
&#9;&#9;local expTerm = math.exp(-scaledTime)

&#9;&#9;posPos = expTerm * (1 + scaledTime)
&#9;&#9;posVel = expTerm * time
&#9;&#9;velPos = expTerm * (-scaledTime*speed)
&#9;&#9;velVel = expTerm * (1 - scaledTime)

&#9;else
&#9;&#9;-- underdamped spring
&#9;&#9;-- factored out of the solutions to the characteristic equation:
&#9;&#9;-- &#206;&#177; = Sqrt[1 - &#206;&#182;^2]
&#9;&#9;-- x[t] -&gt; x0(e^-t&#206;&#182;&#207;&#137;)(&#206;&#177; Cos[t&#206;&#177;] + &#206;&#182;&#207;&#137; Sin[t&#206;&#177;])/&#206;&#177;
&#9;&#9;--       + v0(e^-t&#206;&#182;&#207;&#137;)(Sin[t&#206;&#177;])/&#206;&#177;
&#9;&#9;-- v[t] -&gt; x0(-e^-t&#206;&#182;&#207;&#137;)(&#206;&#177;^2 + &#206;&#182;^2 &#207;&#137;^2)(Sin[t&#206;&#177;])/&#206;&#177;
&#9;&#9;--       + v0(e^-t&#206;&#182;&#207;&#137;)(&#206;&#177; Cos[t&#206;&#177;] - &#206;&#182;&#207;&#137; Sin[t&#206;&#177;])/&#206;&#177;

&#9;&#9;local scaledTime = time * speed
&#9;&#9;local alpha = math.sqrt(1 - damping^2)
&#9;&#9;local invAlpha = 1 / alpha
&#9;&#9;local alphaTime = alpha * scaledTime
&#9;&#9;local expTerm = math.exp(-scaledTime*damping)
&#9;&#9;local sinTerm = expTerm * math.sin(alphaTime)
&#9;&#9;local cosTerm = expTerm * math.cos(alphaTime)
&#9;&#9;local sinInvAlpha = sinTerm*invAlpha
&#9;&#9;local sinInvAlphaDamp = sinInvAlpha*damping

&#9;&#9;posPos = sinInvAlphaDamp + cosTerm
&#9;&#9;posVel = sinInvAlpha
&#9;&#9;velPos = -(sinInvAlphaDamp*damping + sinTerm*alpha)
&#9;&#9;velVel = cosTerm - sinInvAlphaDamp
&#9;end

&#9;return posPos, posVel, velPos, velVel
end

return springCoefficients
</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000107b</UniqueId>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBXFE4F5DA83A5140AD8E10030584B6645C">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b66</UniqueId>
								<string name="LinkedSource"></string>
								<string name="Name">PubTypes</string>
								<string name="ScriptGuid">{10ea2b39-fee2-4caf-9433-6478d361af2d}</string>
								<string name="Source">--!strict

--[[
&#9;Stores common public-facing type information for Fusion APIs.
]]

type Set&lt;T&gt; = {[T]: any}

--[[
&#9;General use types
]]

-- A unique symbolic value.
export type Symbol = {
&#9;type: &quot;Symbol&quot;,
&#9;name: string
}

-- Types that can be expressed as vectors of numbers, and so can be animated.
export type Animatable =
&#9;number |
&#9;CFrame |
&#9;Color3 |
&#9;ColorSequenceKeypoint |
&#9;DateTime |
&#9;NumberRange |
&#9;NumberSequenceKeypoint |
&#9;PhysicalProperties |
&#9;Ray |
&#9;Rect |
&#9;Region3 |
&#9;Region3int16 |
&#9;UDim |
&#9;UDim2 |
&#9;Vector2 |
&#9;Vector2int16 |
&#9;Vector3 |
&#9;Vector3int16

-- A task which can be accepted for cleanup.
export type Task =
&#9;Instance |
&#9;RBXScriptConnection |
&#9;() -&gt; () |
&#9;{destroy: (any) -&gt; ()} |
&#9;{Destroy: (any) -&gt; ()} |
&#9;{Task}

-- Script-readable version information.
export type Version = {
&#9;major: number,
&#9;minor: number,
&#9;isRelease: boolean
}

-- An object which stores a value scoped in time.
export type Contextual&lt;T&gt; = {
&#9;type: &quot;Contextual&quot;,
&#9;now: (Contextual&lt;T&gt;) -&gt; T,
&#9;is: (Contextual&lt;T&gt;, T) -&gt; ContextualIsMethods
}

type ContextualIsMethods = {
&#9;during: &lt;T, A...&gt;(ContextualIsMethods, (A...) -&gt; T, A...) -&gt; T
}

--[[
&#9;Generic reactive graph types
]]

-- A graph object which can have dependents.
export type Dependency = {
&#9;dependentSet: Set&lt;Dependent&gt;
}

-- A graph object which can have dependencies.
export type Dependent = {
&#9;update: (Dependent) -&gt; boolean,
&#9;dependencySet: Set&lt;Dependency&gt;
}

-- An object which stores a piece of reactive state.
export type StateObject&lt;T&gt; = Dependency &amp; {
&#9;type: &quot;State&quot;,
&#9;kind: string,
&#9;_typeIdentifier: T
}

-- Either a constant value of type T, or a state object containing type T.
export type CanBeState&lt;T&gt; = StateObject&lt;T&gt; | T

-- Function signature for use callbacks.
export type Use = &lt;T&gt;(target: CanBeState&lt;T&gt;) -&gt; T

--[[
&#9;Specific reactive graph types
]]

-- A state object whose value can be set at any time by the user.
export type Value&lt;T&gt; = StateObject&lt;T&gt; &amp; {
&#9;kind: &quot;State&quot;,
 &#9;set: (Value&lt;T&gt;, newValue: any, force: boolean?) -&gt; ()
}

-- A state object whose value is derived from other objects using a callback.
export type Computed&lt;T&gt; = StateObject&lt;T&gt; &amp; Dependent &amp; {
&#9;kind: &quot;Computed&quot;
}

-- A state object whose value is derived from other objects using a callback.
export type ForPairs&lt;KO, VO&gt; = StateObject&lt;{ [KO]: VO }&gt; &amp; Dependent &amp; {
&#9;kind: &quot;ForPairs&quot;
}
-- A state object whose value is derived from other objects using a callback.
export type ForKeys&lt;KO, V&gt; = StateObject&lt;{ [KO]: V }&gt; &amp; Dependent &amp; {
&#9;kind: &quot;ForKeys&quot;
}
-- A state object whose value is derived from other objects using a callback.
export type ForValues&lt;K, VO&gt; = StateObject&lt;{ [K]: VO }&gt; &amp; Dependent &amp; {
&#9;kind: &quot;ForKeys&quot;
}

-- A state object which follows another state object using tweens.
export type Tween&lt;T&gt; = StateObject&lt;T&gt; &amp; Dependent &amp; {
&#9;kind: &quot;Tween&quot;
}

-- A state object which follows another state object using spring simulation.
export type Spring&lt;T&gt; = StateObject&lt;T&gt; &amp; Dependent &amp; {
&#9;kind: &quot;Spring&quot;,
&#9;setPosition: (Spring&lt;T&gt;, newPosition: Animatable) -&gt; (),
&#9;setVelocity: (Spring&lt;T&gt;, newVelocity: Animatable) -&gt; (),
&#9;addVelocity: (Spring&lt;T&gt;, deltaVelocity: Animatable) -&gt; ()
}

-- An object which can listen for updates on another state object.
export type Observer = Dependent &amp; {
&#9;kind: &quot;Observer&quot;,
  &#9;onChange: (Observer, callback: () -&gt; ()) -&gt; (() -&gt; ())
}

--[[
&#9;Instance related types
]]

-- Denotes children instances in an instance or component&apos;s property table.
export type SpecialKey = {
&#9;type: &quot;SpecialKey&quot;,
&#9;kind: string,
&#9;stage: &quot;self&quot; | &quot;descendants&quot; | &quot;ancestor&quot; | &quot;observer&quot;,
&#9;apply: (SpecialKey, value: any, applyTo: Instance, cleanupTasks: {Task}) -&gt; ()
}

-- A collection of instances that may be parented to another instance.
export type Children = Instance | StateObject&lt;Children&gt; | {[any]: Children}

-- A table that defines an instance&apos;s properties, handlers and children.
export type PropertyTable = {[string | SpecialKey]: any}

return nil
</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a40000107c</UniqueId>
							</Properties>
						</Item>
						<Item class="Folder" referent="RBX76407CA2C8B148A0B7C972F310031674">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b67</UniqueId>
								<string name="Name">State</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a40000107d</UniqueId>
							</Properties>
							<Item class="ModuleScript" referent="RBX30DD174CE60841669EAEE3D57AF48164">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b68</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">ForPairs</string>
									<string name="ScriptGuid">{b0e9a8ce-4d41-48a6-a559-081032d7e01a}</string>
									<string name="Source">--!nonstrict

--[[
&#9;Constructs a new ForPairs object which maps pairs of a table using
&#9;a `processor` function.

&#9;Optionally, a `destructor` function can be specified for cleaning up values.
&#9;If omitted, the default cleanup function will be used instead.

&#9;Additionally, a `meta` table/value can optionally be returned to pass data created
&#9;when running the processor to the destructor when the created object is cleaned up.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local Types = require(Package.Types)
-- Logging
local parseError = require(Package.Logging.parseError)
local logErrorNonFatal = require(Package.Logging.logErrorNonFatal)
local logError = require(Package.Logging.logError)
local logWarn = require(Package.Logging.logWarn)
-- Utility
local cleanup = require(Package.Utility.cleanup)
local needsDestruction = require(Package.Utility.needsDestruction)
-- State
local peek = require(Package.State.peek)
local makeUseCallback = require(Package.State.makeUseCallback)
local isState = require(Package.State.isState)

local class = {}

local CLASS_METATABLE = { __index = class }
local WEAK_KEYS_METATABLE = { __mode = &quot;k&quot; }

--[[
&#9;Called when the original table is changed.

&#9;This will firstly find any keys meeting any of the following criteria:

&#9;- they were not previously present
&#9;- their associated value has changed
&#9;- a dependency used during generation of this value has changed

&#9;It will recalculate those key/value pairs, storing information about any
&#9;dependencies used in the processor callback during value generation, and
&#9;save the new key/value pair to the output array. If it is overwriting an
&#9;older key/value pair, that older pair will be passed to the destructor
&#9;for cleanup.

&#9;Finally, this function will find keys that are no longer present, and remove
&#9;their key/value pairs from the output table and pass them to the destructor.
]]
function class:update(): boolean
&#9;local inputIsState = self._inputIsState
&#9;local newInputTable = peek(self._inputTable)
&#9;local oldInputTable = self._oldInputTable

&#9;local keyIOMap = self._keyIOMap
&#9;local meta = self._meta

&#9;local didChange = false


&#9;-- clean out main dependency set
&#9;for dependency in pairs(self.dependencySet) do
&#9;&#9;dependency.dependentSet[self] = nil
&#9;end

&#9;self._oldDependencySet, self.dependencySet = self.dependencySet, self._oldDependencySet
&#9;table.clear(self.dependencySet)

&#9;-- if the input table is a state object, add it as a dependency
&#9;if inputIsState then
&#9;&#9;self._inputTable.dependentSet[self] = true
&#9;&#9;self.dependencySet[self._inputTable] = true
&#9;end

&#9;-- clean out output table
&#9;self._oldOutputTable, self._outputTable = self._outputTable, self._oldOutputTable

&#9;local oldOutputTable = self._oldOutputTable
&#9;local newOutputTable = self._outputTable
&#9;table.clear(newOutputTable)

&#9;-- Step 1: find key/value pairs that changed or were not previously present

&#9;for newInKey, newInValue in pairs(newInputTable) do
&#9;&#9;-- get or create key data
&#9;&#9;local keyData = self._keyData[newInKey]

&#9;&#9;if keyData == nil then
&#9;&#9;&#9;keyData = {
&#9;&#9;&#9;&#9;dependencySet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;&#9;&#9;oldDependencySet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;&#9;&#9;dependencyValues = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;&#9;}
&#9;&#9;&#9;self._keyData[newInKey] = keyData
&#9;&#9;end


&#9;&#9;-- check if the pair is new or changed
&#9;&#9;local shouldRecalculate = oldInputTable[newInKey] ~= newInValue

&#9;&#9;-- check if the pair&apos;s dependencies have changed
&#9;&#9;if shouldRecalculate == false then
&#9;&#9;&#9;for dependency, oldValue in pairs(keyData.dependencyValues) do
&#9;&#9;&#9;&#9;if oldValue ~= peek(dependency) then
&#9;&#9;&#9;&#9;&#9;shouldRecalculate = true
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end


&#9;&#9;-- recalculate the output pair if necessary
&#9;&#9;if shouldRecalculate then
&#9;&#9;&#9;keyData.oldDependencySet, keyData.dependencySet = keyData.dependencySet, keyData.oldDependencySet
&#9;&#9;&#9;table.clear(keyData.dependencySet)

&#9;&#9;&#9;local use = makeUseCallback(keyData.dependencySet)
&#9;&#9;&#9;local processOK, newOutKey, newOutValue, newMetaValue = xpcall(
&#9;&#9;&#9;&#9;self._processor, parseError, use, newInKey, newInValue
&#9;&#9;&#9;)

&#9;&#9;&#9;if processOK then
&#9;&#9;&#9;&#9;if self._destructor == nil and (needsDestruction(newOutKey) or needsDestruction(newOutValue) or needsDestruction(newMetaValue)) then
&#9;&#9;&#9;&#9;&#9;logWarn(&quot;destructorNeededForPairs&quot;)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- if this key was already written to on this run-through, throw a fatal error.
&#9;&#9;&#9;&#9;if newOutputTable[newOutKey] ~= nil then
&#9;&#9;&#9;&#9;&#9;-- figure out which key/value pair previously wrote to this key
&#9;&#9;&#9;&#9;&#9;local previousNewKey, previousNewValue
&#9;&#9;&#9;&#9;&#9;for inKey, outKey in pairs(keyIOMap) do
&#9;&#9;&#9;&#9;&#9;&#9;if outKey == newOutKey then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;previousNewValue = newInputTable[inKey]
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if previousNewValue ~= nil then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;previousNewKey = inKey
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;if previousNewKey ~= nil then
&#9;&#9;&#9;&#9;&#9;&#9;logError(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;forPairsKeyCollision&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;nil,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;tostring(newOutKey),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;tostring(previousNewKey),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;tostring(previousNewValue),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;tostring(newInKey),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;tostring(newInValue)
&#9;&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local oldOutValue = oldOutputTable[newOutKey]

&#9;&#9;&#9;&#9;if oldOutValue ~= newOutValue then
&#9;&#9;&#9;&#9;&#9;local oldMetaValue = meta[newOutKey]
&#9;&#9;&#9;&#9;&#9;if oldOutValue ~= nil then
&#9;&#9;&#9;&#9;&#9;&#9;local destructOK, err = xpcall(self._destructor or cleanup, parseError, newOutKey, oldOutValue, oldMetaValue)
&#9;&#9;&#9;&#9;&#9;&#9;if not destructOK then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;logErrorNonFatal(&quot;forPairsDestructorError&quot;, err)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;oldOutputTable[newOutKey] = nil
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- update the stored data for this key/value pair
&#9;&#9;&#9;&#9;oldInputTable[newInKey] = newInValue
&#9;&#9;&#9;&#9;keyIOMap[newInKey] = newOutKey
&#9;&#9;&#9;&#9;meta[newOutKey] = newMetaValue
&#9;&#9;&#9;&#9;newOutputTable[newOutKey] = newOutValue

&#9;&#9;&#9;&#9;-- if we had to recalculate the output, then we did change
&#9;&#9;&#9;&#9;didChange = true
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;-- restore old dependencies, because the new dependencies may be corrupt
&#9;&#9;&#9;&#9;keyData.oldDependencySet, keyData.dependencySet = keyData.dependencySet, keyData.oldDependencySet

&#9;&#9;&#9;&#9;logErrorNonFatal(&quot;forPairsProcessorError&quot;, newOutKey)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;local storedOutKey = keyIOMap[newInKey]

&#9;&#9;&#9;-- check for key collision
&#9;&#9;&#9;if newOutputTable[storedOutKey] ~= nil then
&#9;&#9;&#9;&#9;-- figure out which key/value pair previously wrote to this key
&#9;&#9;&#9;&#9;local previousNewKey, previousNewValue
&#9;&#9;&#9;&#9;for inKey, outKey in pairs(keyIOMap) do
&#9;&#9;&#9;&#9;&#9;if storedOutKey == outKey then
&#9;&#9;&#9;&#9;&#9;&#9;previousNewValue = newInputTable[inKey]

&#9;&#9;&#9;&#9;&#9;&#9;if previousNewValue ~= nil then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;previousNewKey = inKey
&#9;&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if previousNewKey ~= nil then
&#9;&#9;&#9;&#9;&#9;logError(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;forPairsKeyCollision&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;nil,
&#9;&#9;&#9;&#9;&#9;&#9;tostring(storedOutKey),
&#9;&#9;&#9;&#9;&#9;&#9;tostring(previousNewKey),
&#9;&#9;&#9;&#9;&#9;&#9;tostring(previousNewValue),
&#9;&#9;&#9;&#9;&#9;&#9;tostring(newInKey),
&#9;&#9;&#9;&#9;&#9;&#9;tostring(newInValue)
&#9;&#9;&#9;&#9;&#9;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;-- copy the stored key/value pair into the new output table
&#9;&#9;&#9;newOutputTable[storedOutKey] = oldOutputTable[storedOutKey]
&#9;&#9;end


&#9;&#9;-- save dependency values and add to main dependency set
&#9;&#9;for dependency in pairs(keyData.dependencySet) do
&#9;&#9;&#9;keyData.dependencyValues[dependency] = peek(dependency)

&#9;&#9;&#9;self.dependencySet[dependency] = true
&#9;&#9;&#9;dependency.dependentSet[self] = true
&#9;&#9;end
&#9;end

&#9;-- STEP 2: find keys that were removed
&#9;for oldOutKey, oldOutValue in pairs(oldOutputTable) do
&#9;&#9;-- check if this key/value pair is in the new output table
&#9;&#9;if newOutputTable[oldOutKey] ~= oldOutValue then
&#9;&#9;&#9;-- clean up the old output pair
&#9;&#9;&#9;local oldMetaValue = meta[oldOutKey]
&#9;&#9;&#9;if oldOutValue ~= nil then
&#9;&#9;&#9;&#9;local destructOK, err = xpcall(self._destructor or cleanup, parseError, oldOutKey, oldOutValue, oldMetaValue)
&#9;&#9;&#9;&#9;if not destructOK then
&#9;&#9;&#9;&#9;&#9;logErrorNonFatal(&quot;forPairsDestructorError&quot;, err)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;-- check if the key was completely removed from the output table
&#9;&#9;&#9;if newOutputTable[oldOutKey] == nil then
&#9;&#9;&#9;&#9;meta[oldOutKey] = nil
&#9;&#9;&#9;&#9;self._keyData[oldOutKey] = nil
&#9;&#9;&#9;end

&#9;&#9;&#9;didChange = true
&#9;&#9;end
&#9;end

&#9;for key in pairs(oldInputTable) do
&#9;&#9;if newInputTable[key] == nil then
&#9;&#9;&#9;oldInputTable[key] = nil
&#9;&#9;&#9;keyIOMap[key] = nil
&#9;&#9;end
&#9;end

&#9;return didChange
end

--[[
&#9;Returns the interior value of this state object.
]]
function class:_peek(): any
&#9;return self._outputTable
end

function class:get()
&#9;logError(&quot;stateGetWasRemoved&quot;)
end

local function ForPairs&lt;KI, VI, KO, VO, M&gt;(
&#9;inputTable: PubTypes.CanBeState&lt;{ [KI]: VI }&gt;,
&#9;processor: (KI, VI) -&gt; (KO, VO, M?),
&#9;destructor: (KO, VO, M?) -&gt; ()?
): Types.ForPairs&lt;KI, VI, KO, VO, M&gt;

&#9;local inputIsState = isState(inputTable)

&#9;local self = setmetatable({
&#9;&#9;type = &quot;State&quot;,
&#9;&#9;kind = &quot;ForPairs&quot;,
&#9;&#9;dependencySet = {},
&#9;&#9;-- if we held strong references to the dependents, then they wouldn&apos;t be
&#9;&#9;-- able to get garbage collected when they fall out of scope
&#9;&#9;dependentSet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;_oldDependencySet = {},

&#9;&#9;_processor = processor,
&#9;&#9;_destructor = destructor,
&#9;&#9;_inputIsState = inputIsState,

&#9;&#9;_inputTable = inputTable,
&#9;&#9;_oldInputTable = {},
&#9;&#9;_outputTable = {},
&#9;&#9;_oldOutputTable = {},
&#9;&#9;_keyIOMap = {},
&#9;&#9;_keyData = {},
&#9;&#9;_meta = {},
&#9;}, CLASS_METATABLE)

&#9;self:update()

&#9;return self
end

return ForPairs</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000107e</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX2540EA5011CE434A8F5AA1AEBBED9978">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b69</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">updateAll</string>
									<string name="ScriptGuid">{3bec0d74-b49c-48a0-934f-85ec644fac35}</string>
									<string name="Source">--!strict

--[[
&#9;Given a reactive object, updates all dependent reactive objects.
&#9;Objects are only ever updated after all of their dependencies are updated,
&#9;are only ever updated once, and won&apos;t be updated if their dependencies are
&#9;unchanged.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)

type Set&lt;T&gt; = {[T]: any}
type Descendant = (PubTypes.Dependent &amp; PubTypes.Dependency) | PubTypes.Dependent

-- Credit: https://blog.elttob.uk/2022/11/07/sets-efficient-topological-search.html
local function updateAll(root: PubTypes.Dependency)
&#9;local counters: {[Descendant]: number} = {}
&#9;local flags: {[Descendant]: boolean} = {}
&#9;local queue: {Descendant} = {}
&#9;local queueSize = 0
&#9;local queuePos = 1

&#9;for object in root.dependentSet do
&#9;&#9;queueSize += 1
&#9;&#9;queue[queueSize] = object
&#9;&#9;flags[object] = true
&#9;end

&#9;-- Pass 1: counting up
&#9;while queuePos &lt;= queueSize do
&#9;&#9;local next = queue[queuePos]
&#9;&#9;local counter = counters[next]
&#9;&#9;counters[next] = if counter == nil then 1 else counter + 1
&#9;&#9;if (next :: any).dependentSet ~= nil then
&#9;&#9;&#9;for object in (next :: any).dependentSet do
&#9;&#9;&#9;&#9;queueSize += 1
&#9;&#9;&#9;&#9;queue[queueSize] = object
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;queuePos += 1
&#9;end

&#9;-- Pass 2: counting down + processing
&#9;queuePos = 1
&#9;while queuePos &lt;= queueSize do
&#9;&#9;local next = queue[queuePos]
&#9;&#9;local counter = counters[next] - 1
&#9;&#9;counters[next] = counter
&#9;&#9;if counter == 0 and flags[next] and next:update() and (next :: any).dependentSet ~= nil then
&#9;&#9;&#9;for object in (next :: any).dependentSet do
&#9;&#9;&#9;&#9;flags[object] = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;queuePos += 1
&#9;end
end

return updateAll</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000107f</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX3BF52232E16D40098F52CC8884C87F28">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b6a</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">makeUseCallback</string>
									<string name="ScriptGuid">{ad8186a9-a798-4b13-9690-81497c875e65}</string>
									<string name="Source">--!strict

--[[
&#9;Constructs a &apos;use callback&apos; for the purposes of collecting dependencies.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local Types = require(Package.Types)
-- State
local isState = require(Package.State.isState)

type Set&lt;T&gt; = {[T]: any}

local function makeUseCallback(dependencySet: Set&lt;PubTypes.Dependency&gt;)
&#9;local function use&lt;T&gt;(target: PubTypes.CanBeState&lt;T&gt;): T
&#9;&#9;if isState(target) then
&#9;&#9;&#9;dependencySet[target] = true
&#9;&#9;&#9;return (target :: Types.StateObject&lt;T&gt;):_peek()
&#9;&#9;else
&#9;&#9;&#9;return target
&#9;&#9;end
&#9;end
&#9;return use
end

return makeUseCallback</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001080</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX72E0CD4586AC4439964BE07C3065800D">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b6b</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">isState</string>
									<string name="ScriptGuid">{76eaaae8-6ebc-431a-9b55-a2589a586d88}</string>
									<string name="Source">--!strict

--[[
&#9;Returns true if the given value can be assumed to be a valid state object.
]]

local function isState(target: any): boolean
&#9;return typeof(target) == &quot;table&quot; and typeof(target._peek) == &quot;function&quot;
end

return isState</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001081</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX6D0FE8EDFBA846BC8D6FA1296640114D">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b6c</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Value</string>
									<string name="ScriptGuid">{fd2d58a7-599c-4b8b-acf0-f0119973672f}</string>
									<string name="Source">--!nonstrict

--[[
&#9;Constructs and returns objects which can be used to model independent
&#9;reactive state.
]]

local Package = script.Parent.Parent
local Types = require(Package.Types)
-- Logging
local logError = require(Package.Logging.logError)
-- State
local updateAll = require(Package.State.updateAll)
-- Utility
local isSimilar = require(Package.Utility.isSimilar)

local class = {}

local CLASS_METATABLE = {__index = class}
local WEAK_KEYS_METATABLE = {__mode = &quot;k&quot;}

--[[
&#9;Updates the value stored in this State object.

&#9;If `force` is enabled, this will skip equality checks and always update the
&#9;state object and any dependents - use this with care as this can lead to
&#9;unnecessary updates.
]]
function class:set(newValue: any, force: boolean?)
&#9;local oldValue = self._value
&#9;if force or not isSimilar(oldValue, newValue) then
&#9;&#9;self._value = newValue
&#9;&#9;updateAll(self)
&#9;end
end

--[[
&#9;Returns the interior value of this state object.
]]
function class:_peek(): any
&#9;return self._value
end

function class:get()
&#9;logError(&quot;stateGetWasRemoved&quot;)
end

local function Value&lt;T&gt;(initialValue: T): Types.State&lt;T&gt;
&#9;local self = setmetatable({
&#9;&#9;type = &quot;State&quot;,
&#9;&#9;kind = &quot;Value&quot;,
&#9;&#9;-- if we held strong references to the dependents, then they wouldn&apos;t be
&#9;&#9;-- able to get garbage collected when they fall out of scope
&#9;&#9;dependentSet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;_value = initialValue
&#9;}, CLASS_METATABLE)

&#9;return self
end

return Value</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001082</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX4F58D00C95C34BD787A4709B2B036F4B">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b6d</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Observer</string>
									<string name="ScriptGuid">{574ed746-fa4d-48d0-9207-e09eb6173eb0}</string>
									<string name="Source">--!nonstrict

--[[
&#9;Constructs a new state object which can listen for updates on another state
&#9;object.

&#9;FIXME: enabling strict types here causes free types to leak
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local Types = require(Package.Types)
local External = require(Package.External)

type Set&lt;T&gt; = {[T]: any}

local class = {}
local CLASS_METATABLE = {__index = class}

-- Table used to hold Observer objects in memory.
local strongRefs: Set&lt;Types.Observer&gt; = {}

--[[
&#9;Called when the watched state changes value.
]]
function class:update(): boolean
&#9;for _, callback in pairs(self._changeListeners) do
&#9;&#9;External.doTaskImmediate(callback)
&#9;end
&#9;return false
end

--[[
&#9;Adds a change listener. When the watched state changes value, the listener
&#9;will be fired.

&#9;Returns a function which, when called, will disconnect the change listener.
&#9;As long as there is at least one active change listener, this Observer
&#9;will be held in memory, preventing GC, so disconnecting is important.
]]
function class:onChange(callback: () -&gt; ()): () -&gt; ()
&#9;local uniqueIdentifier = {}

&#9;self._numChangeListeners += 1
&#9;self._changeListeners[uniqueIdentifier] = callback

&#9;-- disallow gc (this is important to make sure changes are received)
&#9;strongRefs[self] = true

&#9;local disconnected = false
&#9;return function()
&#9;&#9;if disconnected then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;disconnected = true
&#9;&#9;self._changeListeners[uniqueIdentifier] = nil
&#9;&#9;self._numChangeListeners -= 1

&#9;&#9;if self._numChangeListeners == 0 then
&#9;&#9;&#9;-- allow gc if all listeners are disconnected
&#9;&#9;&#9;strongRefs[self] = nil
&#9;&#9;end
&#9;end
end

--[[
&#9;Similar to `class:onChange()`, however it runs the provided callback
&#9;immediately.
]]
function class:onBind(callback: () -&gt; ()): () -&gt; ()
&#9;External.doTaskImmediate(callback)
&#9;return self:onChange(callback)
end

local function Observer(watchedState: PubTypes.Value&lt;any&gt;): Types.Observer
&#9;local self = setmetatable({
&#9;&#9;type = &quot;State&quot;,
&#9;&#9;kind = &quot;Observer&quot;,
&#9;&#9;dependencySet = {[watchedState] = true},
&#9;&#9;dependentSet = {},
&#9;&#9;_changeListeners = {},
&#9;&#9;_numChangeListeners = 0,
&#9;}, CLASS_METATABLE)

&#9;-- add this object to the watched state&apos;s dependent set
&#9;watchedState.dependentSet[self] = true

&#9;return self
end

return Observer</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001083</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX16CABAC3D7B0446DA79E1B4D7C82CF36">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b6e</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">ForKeys</string>
									<string name="ScriptGuid">{06ce1495-6b7f-4821-bf1a-dd761637a119}</string>
									<string name="Source">--!nonstrict

--[[
&#9;Constructs a new ForKeys state object which maps keys of an array using
&#9;a `processor` function.

&#9;Optionally, a `destructor` function can be specified for cleaning up
&#9;calculated keys. If omitted, the default cleanup function will be used instead.

&#9;Optionally, a `meta` value can be returned in the processor function as the
&#9;second value to pass data from the processor to the destructor.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local Types = require(Package.Types)
-- Logging
local parseError = require(Package.Logging.parseError)
local logErrorNonFatal = require(Package.Logging.logErrorNonFatal)
local logError = require(Package.Logging.logError)
local logWarn = require(Package.Logging.logWarn)
-- Utility
local cleanup = require(Package.Utility.cleanup)
local needsDestruction = require(Package.Utility.needsDestruction)
-- State
local peek = require(Package.State.peek)
local makeUseCallback = require(Package.State.makeUseCallback)
local isState = require(Package.State.isState)

local class = {}

local CLASS_METATABLE = { __index = class }
local WEAK_KEYS_METATABLE = { __mode = &quot;k&quot; }


--[[
&#9;Called when the original table is changed.

&#9;This will firstly find any keys meeting any of the following criteria:

&#9;- they were not previously present
&#9;- a dependency used during generation of this value has changed

&#9;It will recalculate those key pairs, storing information about any
&#9;dependencies used in the processor callback during output key generation,
&#9;and save the new key to the output array with the same value. If it is
&#9;overwriting an older value, that older value will be passed to the
&#9;destructor for cleanup.

&#9;Finally, this function will find keys that are no longer present, and remove
&#9;their output keys from the output table and pass them to the destructor.
]]

function class:update(): boolean
&#9;local inputIsState = self._inputIsState
&#9;local newInputTable = peek(self._inputTable)
&#9;local oldInputTable = self._oldInputTable
&#9;local outputTable = self._outputTable

&#9;local keyOIMap = self._keyOIMap
&#9;local keyIOMap = self._keyIOMap
&#9;local meta = self._meta

&#9;local didChange = false


&#9;-- clean out main dependency set
&#9;for dependency in pairs(self.dependencySet) do
&#9;&#9;dependency.dependentSet[self] = nil
&#9;end

&#9;self._oldDependencySet, self.dependencySet = self.dependencySet, self._oldDependencySet
&#9;table.clear(self.dependencySet)

&#9;-- if the input table is a state object, add it as a dependency
&#9;if inputIsState then
&#9;&#9;self._inputTable.dependentSet[self] = true
&#9;&#9;self.dependencySet[self._inputTable] = true
&#9;end


&#9;-- STEP 1: find keys that changed or were not previously present
&#9;for newInKey, value in pairs(newInputTable) do
&#9;&#9;-- get or create key data
&#9;&#9;local keyData = self._keyData[newInKey]

&#9;&#9;if keyData == nil then
&#9;&#9;&#9;keyData = {
&#9;&#9;&#9;&#9;dependencySet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;&#9;&#9;oldDependencySet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;&#9;&#9;dependencyValues = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;&#9;}
&#9;&#9;&#9;self._keyData[newInKey] = keyData
&#9;&#9;end

&#9;&#9;-- check if the key is new
&#9;&#9;local shouldRecalculate = oldInputTable[newInKey] == nil

&#9;&#9;-- check if the key&apos;s dependencies have changed
&#9;&#9;if shouldRecalculate == false then
&#9;&#9;&#9;for dependency, oldValue in pairs(keyData.dependencyValues) do
&#9;&#9;&#9;&#9;if oldValue ~= peek(dependency) then
&#9;&#9;&#9;&#9;&#9;shouldRecalculate = true
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end


&#9;&#9;-- recalculate the output key if necessary
&#9;&#9;if shouldRecalculate then
&#9;&#9;&#9;keyData.oldDependencySet, keyData.dependencySet = keyData.dependencySet, keyData.oldDependencySet
&#9;&#9;&#9;table.clear(keyData.dependencySet)

&#9;&#9;&#9;local use = makeUseCallback(keyData.dependencySet)
&#9;&#9;&#9;local processOK, newOutKey, newMetaValue = xpcall(self._processor, parseError, use, newInKey)

&#9;&#9;&#9;if processOK then
&#9;&#9;&#9;&#9;if self._destructor == nil and (needsDestruction(newOutKey) or needsDestruction(newMetaValue)) then
&#9;&#9;&#9;&#9;&#9;logWarn(&quot;destructorNeededForKeys&quot;)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local oldInKey = keyOIMap[newOutKey]
&#9;&#9;&#9;&#9;local oldOutKey = keyIOMap[newInKey]

&#9;&#9;&#9;&#9;-- check for key collision
&#9;&#9;&#9;&#9;if oldInKey ~= newInKey and newInputTable[oldInKey] ~= nil then
&#9;&#9;&#9;&#9;&#9;logError(&quot;forKeysKeyCollision&quot;, nil, tostring(newOutKey), tostring(oldInKey), tostring(newOutKey))
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- check for a changed output key
&#9;&#9;&#9;&#9;if oldOutKey ~= newOutKey and keyOIMap[oldOutKey] == newInKey then
&#9;&#9;&#9;&#9;&#9;-- clean up the old calculated value
&#9;&#9;&#9;&#9;&#9;local oldMetaValue = meta[oldOutKey]

&#9;&#9;&#9;&#9;&#9;local destructOK, err = xpcall(self._destructor or cleanup, parseError, oldOutKey, oldMetaValue)
&#9;&#9;&#9;&#9;&#9;if not destructOK then
&#9;&#9;&#9;&#9;&#9;&#9;logErrorNonFatal(&quot;forKeysDestructorError&quot;, err)
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;keyOIMap[oldOutKey] = nil
&#9;&#9;&#9;&#9;&#9;outputTable[oldOutKey] = nil
&#9;&#9;&#9;&#9;&#9;meta[oldOutKey] = nil
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- update the stored data for this key
&#9;&#9;&#9;&#9;oldInputTable[newInKey] = value
&#9;&#9;&#9;&#9;meta[newOutKey] = newMetaValue
&#9;&#9;&#9;&#9;keyOIMap[newOutKey] = newInKey
&#9;&#9;&#9;&#9;keyIOMap[newInKey] = newOutKey
&#9;&#9;&#9;&#9;outputTable[newOutKey] = value

&#9;&#9;&#9;&#9;-- if we had to recalculate the output, then we did change
&#9;&#9;&#9;&#9;didChange = true
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;-- restore old dependencies, because the new dependencies may be corrupt
&#9;&#9;&#9;&#9;keyData.oldDependencySet, keyData.dependencySet = keyData.dependencySet, keyData.oldDependencySet

&#9;&#9;&#9;&#9;logErrorNonFatal(&quot;forKeysProcessorError&quot;, newOutKey)
&#9;&#9;&#9;end
&#9;&#9;end


&#9;&#9;-- save dependency values and add to main dependency set
&#9;&#9;for dependency in pairs(keyData.dependencySet) do
&#9;&#9;&#9;keyData.dependencyValues[dependency] = peek(dependency)

&#9;&#9;&#9;self.dependencySet[dependency] = true
&#9;&#9;&#9;dependency.dependentSet[self] = true
&#9;&#9;end
&#9;end


&#9;-- STEP 2: find keys that were removed
&#9;for outputKey, inputKey in pairs(keyOIMap) do
&#9;&#9;if newInputTable[inputKey] == nil then
&#9;&#9;&#9;-- clean up the old calculated value
&#9;&#9;&#9;local oldMetaValue = meta[outputKey]

&#9;&#9;&#9;local destructOK, err = xpcall(self._destructor or cleanup, parseError, outputKey, oldMetaValue)
&#9;&#9;&#9;if not destructOK then
&#9;&#9;&#9;&#9;logErrorNonFatal(&quot;forKeysDestructorError&quot;, err)
&#9;&#9;&#9;end

&#9;&#9;&#9;-- remove data
&#9;&#9;&#9;oldInputTable[inputKey] = nil
&#9;&#9;&#9;meta[outputKey] = nil
&#9;&#9;&#9;keyOIMap[outputKey] = nil
&#9;&#9;&#9;keyIOMap[inputKey] = nil
&#9;&#9;&#9;outputTable[outputKey] = nil
&#9;&#9;&#9;self._keyData[inputKey] = nil

&#9;&#9;&#9;-- if we removed a key, then the table/state changed
&#9;&#9;&#9;didChange = true
&#9;&#9;end
&#9;end

&#9;return didChange
end

--[[
&#9;Returns the interior value of this state object.
]]
function class:_peek(): any
&#9;return self._outputTable
end

function class:get()
&#9;logError(&quot;stateGetWasRemoved&quot;)
end

local function ForKeys&lt;KI, KO, M&gt;(
&#9;inputTable: PubTypes.CanBeState&lt;{ [KI]: any }&gt;,
&#9;processor: (KI) -&gt; (KO, M?),
&#9;destructor: (KO, M?) -&gt; ()?
): Types.ForKeys&lt;KI, KO, M&gt;

&#9;local inputIsState = isState(inputTable)

&#9;local self = setmetatable({
&#9;&#9;type = &quot;State&quot;,
&#9;&#9;kind = &quot;ForKeys&quot;,
&#9;&#9;dependencySet = {},
&#9;&#9;-- if we held strong references to the dependents, then they wouldn&apos;t be
&#9;&#9;-- able to get garbage collected when they fall out of scope
&#9;&#9;dependentSet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;_oldDependencySet = {},

&#9;&#9;_processor = processor,
&#9;&#9;_destructor = destructor,
&#9;&#9;_inputIsState = inputIsState,

&#9;&#9;_inputTable = inputTable,
&#9;&#9;_oldInputTable = {},
&#9;&#9;_outputTable = {},
&#9;&#9;_keyOIMap = {},
&#9;&#9;_keyIOMap = {},
&#9;&#9;_keyData = {},
&#9;&#9;_meta = {},
&#9;}, CLASS_METATABLE)

&#9;self:update()

&#9;return self
end

return ForKeys</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001084</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXCEDF246C019E4C21860304664C7754D1">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b6f</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Computed</string>
									<string name="ScriptGuid">{2d417e0d-cbbf-42fd-99cc-b82ce4f23c41}</string>
									<string name="Source">--!nonstrict

--[[
&#9;Constructs and returns objects which can be used to model derived reactive
&#9;state.
]]

local Package = script.Parent.Parent
local Types = require(Package.Types)
-- Logging
local logError = require(Package.Logging.logError)
local logErrorNonFatal = require(Package.Logging.logErrorNonFatal)
local logWarn = require(Package.Logging.logWarn)
local parseError = require(Package.Logging.parseError)
-- Utility
local isSimilar = require(Package.Utility.isSimilar)
local needsDestruction = require(Package.Utility.needsDestruction)
-- State
local makeUseCallback = require(Package.State.makeUseCallback)

local class = {}

local CLASS_METATABLE = {__index = class}
local WEAK_KEYS_METATABLE = {__mode = &quot;k&quot;}

--[[
&#9;Recalculates this Computed&apos;s cached value and dependencies.
&#9;Returns true if it changed, or false if it&apos;s identical.
]]
function class:update(): boolean
&#9;-- remove this object from its dependencies&apos; dependent sets
&#9;for dependency in pairs(self.dependencySet) do
&#9;&#9;dependency.dependentSet[self] = nil
&#9;end

&#9;-- we need to create a new, empty dependency set to capture dependencies
&#9;-- into, but in case there&apos;s an error, we want to restore our old set of
&#9;-- dependencies. by using this table-swapping solution, we can avoid the
&#9;-- overhead of allocating new tables each update.
&#9;self._oldDependencySet, self.dependencySet = self.dependencySet, self._oldDependencySet
&#9;table.clear(self.dependencySet)

&#9;local use = makeUseCallback(self.dependencySet)
&#9;local ok, newValue, newMetaValue = xpcall(self._processor, parseError, use)

&#9;if ok then
&#9;&#9;if self._destructor == nil and needsDestruction(newValue) then
&#9;&#9;&#9;logWarn(&quot;destructorNeededComputed&quot;)
&#9;&#9;end

&#9;&#9;if newMetaValue ~= nil then
&#9;&#9;&#9;logWarn(&quot;multiReturnComputed&quot;)
&#9;&#9;end

&#9;&#9;local oldValue = self._value
&#9;&#9;local similar = isSimilar(oldValue, newValue)
&#9;&#9;if self._destructor ~= nil then
&#9;&#9;&#9;self._destructor(oldValue)
&#9;&#9;end
&#9;&#9;self._value = newValue

&#9;&#9;-- add this object to the dependencies&apos; dependent sets
&#9;&#9;for dependency in pairs(self.dependencySet) do
&#9;&#9;&#9;dependency.dependentSet[self] = true
&#9;&#9;end

&#9;&#9;return not similar
&#9;else
&#9;&#9;-- this needs to be non-fatal, because otherwise it&apos;d disrupt the
&#9;&#9;-- update process
&#9;&#9;logErrorNonFatal(&quot;computedCallbackError&quot;, newValue)

&#9;&#9;-- restore old dependencies, because the new dependencies may be corrupt
&#9;&#9;self._oldDependencySet, self.dependencySet = self.dependencySet, self._oldDependencySet

&#9;&#9;-- restore this object in the dependencies&apos; dependent sets
&#9;&#9;for dependency in pairs(self.dependencySet) do
&#9;&#9;&#9;dependency.dependentSet[self] = true
&#9;&#9;end

&#9;&#9;return false
&#9;end
end

--[[
&#9;Returns the interior value of this state object.
]]
function class:_peek(): any
&#9;return self._value
end

function class:get()
&#9;logError(&quot;stateGetWasRemoved&quot;)
end

local function Computed&lt;T&gt;(processor: () -&gt; T, destructor: ((T) -&gt; ())?): Types.Computed&lt;T&gt;
&#9;local dependencySet = {}
&#9;local self = setmetatable({
&#9;&#9;type = &quot;State&quot;,
&#9;&#9;kind = &quot;Computed&quot;,
&#9;&#9;dependencySet = dependencySet,
&#9;&#9;-- if we held strong references to the dependents, then they wouldn&apos;t be
&#9;&#9;-- able to get garbage collected when they fall out of scope
&#9;&#9;dependentSet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;_oldDependencySet = {},
&#9;&#9;_processor = processor,
&#9;&#9;_destructor = destructor,
&#9;&#9;_value = nil
&#9;}, CLASS_METATABLE)

&#9;self:update()

&#9;return self
end

return Computed</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001085</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXAC0D1F449C2C4FDB93DEC6C9906BEF4A">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b70</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">ForValues</string>
									<string name="ScriptGuid">{04ed8356-9d7b-4e31-a31a-dccd7b66ef2d}</string>
									<string name="Source">--!nonstrict

--[[
&#9;Constructs a new ForValues object which maps values of a table using
&#9;a `processor` function.

&#9;Optionally, a `destructor` function can be specified for cleaning up values.
&#9;If omitted, the default cleanup function will be used instead.

&#9;Additionally, a `meta` table/value can optionally be returned to pass data created
&#9;when running the processor to the destructor when the created object is cleaned up.
]]
local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local Types = require(Package.Types)
-- Logging
local parseError = require(Package.Logging.parseError)
local logError = require(Package.Logging.logError)
local logErrorNonFatal = require(Package.Logging.logErrorNonFatal)
local logWarn = require(Package.Logging.logWarn)
-- Utility
local cleanup = require(Package.Utility.cleanup)
local needsDestruction = require(Package.Utility.needsDestruction)
-- State
local peek = require(Package.State.peek)
local makeUseCallback = require(Package.State.makeUseCallback)
local isState = require(Package.State.isState)

local class = {}

local CLASS_METATABLE = { __index = class }
local WEAK_KEYS_METATABLE = { __mode = &quot;k&quot; }

--[[
&#9;Called when the original table is changed.

&#9;This will firstly find any values meeting any of the following criteria:

&#9;- they were not previously present
&#9;- a dependency used during generation of this value has changed

&#9;It will recalculate those values, storing information about any dependencies
&#9;used in the processor callback during value generation, and save the new value
&#9;to the output array with the same key. If it is overwriting an older value,
&#9;that older value will be passed to the destructor for cleanup.

&#9;Finally, this function will find values that are no longer present, and remove
&#9;their values from the output table and pass them to the destructor. You can re-use
&#9;the same value multiple times and this will function will update them as little as
&#9;possible; reusing the same values where possible.
]]
function class:update(): boolean
&#9;local inputIsState = self._inputIsState
&#9;local inputTable = peek(self._inputTable)
&#9;local outputValues = {}

&#9;local didChange = false

&#9;-- clean out value cache
&#9;self._oldValueCache, self._valueCache = self._valueCache, self._oldValueCache
&#9;local newValueCache = self._valueCache
&#9;local oldValueCache = self._oldValueCache
&#9;table.clear(newValueCache)

&#9;-- clean out main dependency set
&#9;for dependency in pairs(self.dependencySet) do
&#9;&#9;dependency.dependentSet[self] = nil
&#9;end
&#9;self._oldDependencySet, self.dependencySet = self.dependencySet, self._oldDependencySet
&#9;table.clear(self.dependencySet)

&#9;-- if the input table is a state object, add it as a dependency
&#9;if inputIsState then
&#9;&#9;self._inputTable.dependentSet[self] = true
&#9;&#9;self.dependencySet[self._inputTable] = true
&#9;end


&#9;-- STEP 1: find values that changed or were not previously present
&#9;for inKey, inValue in pairs(inputTable) do
&#9;&#9;-- check if the value is new or changed
&#9;&#9;local oldCachedValues = oldValueCache[inValue]
&#9;&#9;local shouldRecalculate = oldCachedValues == nil

&#9;&#9;-- get a cached value and its dependency/meta data if available
&#9;&#9;local value, valueData, meta

&#9;&#9;if type(oldCachedValues) == &quot;table&quot; and #oldCachedValues &gt; 0 then
&#9;&#9;&#9;local valueInfo = table.remove(oldCachedValues, #oldCachedValues)
&#9;&#9;&#9;value = valueInfo.value
&#9;&#9;&#9;valueData = valueInfo.valueData
&#9;&#9;&#9;meta = valueInfo.meta

&#9;&#9;&#9;if #oldCachedValues &lt;= 0 then
&#9;&#9;&#9;&#9;oldValueCache[inValue] = nil
&#9;&#9;&#9;end
&#9;&#9;elseif oldCachedValues ~= nil then
&#9;&#9;&#9;oldValueCache[inValue] = nil
&#9;&#9;&#9;shouldRecalculate = true
&#9;&#9;end

&#9;&#9;if valueData == nil then
&#9;&#9;&#9;valueData = {
&#9;&#9;&#9;&#9;dependencySet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;&#9;&#9;oldDependencySet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;&#9;&#9;dependencyValues = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;&#9;}
&#9;&#9;end

&#9;&#9;-- check if the value&apos;s dependencies have changed
&#9;&#9;if shouldRecalculate == false then
&#9;&#9;&#9;for dependency, oldValue in pairs(valueData.dependencyValues) do
&#9;&#9;&#9;&#9;if oldValue ~= peek(dependency) then
&#9;&#9;&#9;&#9;&#9;shouldRecalculate = true
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;-- recalculate the output value if necessary
&#9;&#9;if shouldRecalculate then
&#9;&#9;&#9;valueData.oldDependencySet, valueData.dependencySet = valueData.dependencySet, valueData.oldDependencySet
&#9;&#9;&#9;table.clear(valueData.dependencySet)

&#9;&#9;&#9;local use = makeUseCallback(valueData.dependencySet)
&#9;&#9;&#9;local processOK, newOutValue, newMetaValue = xpcall(self._processor, parseError, use, inValue)

&#9;&#9;&#9;if processOK then
&#9;&#9;&#9;&#9;if self._destructor == nil and (needsDestruction(newOutValue) or needsDestruction(newMetaValue)) then
&#9;&#9;&#9;&#9;&#9;logWarn(&quot;destructorNeededForValues&quot;)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- pass the old value to the destructor if it exists
&#9;&#9;&#9;&#9;if value ~= nil then
&#9;&#9;&#9;&#9;&#9;local destructOK, err = xpcall(self._destructor or cleanup, parseError, value, meta)
&#9;&#9;&#9;&#9;&#9;if not destructOK then
&#9;&#9;&#9;&#9;&#9;&#9;logErrorNonFatal(&quot;forValuesDestructorError&quot;, err)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- store the new value and meta data
&#9;&#9;&#9;&#9;value = newOutValue
&#9;&#9;&#9;&#9;meta = newMetaValue
&#9;&#9;&#9;&#9;didChange = true
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;-- restore old dependencies, because the new dependencies may be corrupt
&#9;&#9;&#9;&#9;valueData.oldDependencySet, valueData.dependencySet = valueData.dependencySet, valueData.oldDependencySet
&#9;&#9;&#9;&#9;logErrorNonFatal(&quot;forValuesProcessorError&quot;, newOutValue)
&#9;&#9;&#9;end
&#9;&#9;end


&#9;&#9;-- store the value and its dependency/meta data
&#9;&#9;local newCachedValues = newValueCache[inValue]
&#9;&#9;if newCachedValues == nil then
&#9;&#9;&#9;newCachedValues = {}
&#9;&#9;&#9;newValueCache[inValue] = newCachedValues
&#9;&#9;end

&#9;&#9;table.insert(newCachedValues, {
&#9;&#9;&#9;value = value,
&#9;&#9;&#9;valueData = valueData,
&#9;&#9;&#9;meta = meta,
&#9;&#9;})

&#9;&#9;outputValues[inKey] = value


&#9;&#9;-- save dependency values and add to main dependency set
&#9;&#9;for dependency in pairs(valueData.dependencySet) do
&#9;&#9;&#9;valueData.dependencyValues[dependency] = peek(dependency)

&#9;&#9;&#9;self.dependencySet[dependency] = true
&#9;&#9;&#9;dependency.dependentSet[self] = true
&#9;&#9;end
&#9;end


&#9;-- STEP 2: find values that were removed
&#9;-- for tables of data, we just need to check if it&apos;s still in the cache
&#9;for _oldInValue, oldCachedValueInfo in pairs(oldValueCache) do
&#9;&#9;for _, valueInfo in ipairs(oldCachedValueInfo) do
&#9;&#9;&#9;local oldValue = valueInfo.value
&#9;&#9;&#9;local oldMetaValue = valueInfo.meta

&#9;&#9;&#9;local destructOK, err = xpcall(self._destructor or cleanup, parseError, oldValue, oldMetaValue)
&#9;&#9;&#9;if not destructOK then
&#9;&#9;&#9;&#9;logErrorNonFatal(&quot;forValuesDestructorError&quot;, err)
&#9;&#9;&#9;end

&#9;&#9;&#9;didChange = true
&#9;&#9;end

&#9;&#9;table.clear(oldCachedValueInfo)
&#9;end

&#9;self._outputTable = outputValues

&#9;return didChange
end

--[[
&#9;Returns the interior value of this state object.
]]
function class:_peek(): any
&#9;return self._outputTable
end

function class:get()
&#9;logError(&quot;stateGetWasRemoved&quot;)
end

local function ForValues&lt;VI, VO, M&gt;(
&#9;inputTable: PubTypes.CanBeState&lt;{ [any]: VI }&gt;,
&#9;processor: (VI) -&gt; (VO, M?),
&#9;destructor: (VO, M?) -&gt; ()?
): Types.ForValues&lt;VI, VO, M&gt;

&#9;local inputIsState = isState(inputTable)

&#9;local self = setmetatable({
&#9;&#9;type = &quot;State&quot;,
&#9;&#9;kind = &quot;ForValues&quot;,
&#9;&#9;dependencySet = {},
&#9;&#9;-- if we held strong references to the dependents, then they wouldn&apos;t be
&#9;&#9;-- able to get garbage collected when they fall out of scope
&#9;&#9;dependentSet = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;_oldDependencySet = {},

&#9;&#9;_processor = processor,
&#9;&#9;_destructor = destructor,
&#9;&#9;_inputIsState = inputIsState,

&#9;&#9;_inputTable = inputTable,
&#9;&#9;_outputTable = {},
&#9;&#9;_valueCache = {},
&#9;&#9;_oldValueCache = {},
&#9;}, CLASS_METATABLE)

&#9;self:update()

&#9;return self
end

return ForValues</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001086</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX387C92EDD4214933B22BC5215CCA6672">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b71</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">peek</string>
									<string name="ScriptGuid">{cd13c182-16fb-4172-a77c-b511c4727764}</string>
									<string name="Source">--!strict

--[[
&#9;A common interface for accessing the values of state objects or constants.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local Types = require(Package.Types)
-- State
local isState = require(Package.State.isState)

local function peek&lt;T&gt;(target: PubTypes.CanBeState&lt;T&gt;): T
&#9;if isState(target) then
&#9;&#9;return (target :: Types.StateObject&lt;T&gt;):_peek()
&#9;else
&#9;&#9;return target
&#9;end
end

return peek</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001087</UniqueId>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBX6925E304463544C1921EC804CABDDD8B">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b72</UniqueId>
								<string name="LinkedSource"></string>
								<string name="Name">RobloxExternal</string>
								<string name="ScriptGuid">{946c4ea6-ce83-486c-8a0a-ed70b0a6b8be}</string>
								<string name="Source">--!strict
--[[
    Roblox implementation for Fusion&apos;s abstract scheduler layer.
]]

local RunService = game:GetService(&quot;RunService&quot;)
local HttpService = game:GetService(&quot;HttpService&quot;)

local Package = script.Parent
local External = require(Package.External)

local RobloxExternal = {}

--[[
   Sends an immediate task to the external scheduler. Throws if none is set.
]]
function RobloxExternal.doTaskImmediate(
    resume: () -&gt; ()
)
   task.spawn(resume)
end

--[[
    Sends a deferred task to the external scheduler. Throws if none is set.
]]
function RobloxExternal.doTaskDeferred(
    resume: () -&gt; ()
)
    task.defer(resume)
end

--[[
    Sends an update step to Fusion using the Roblox clock time.
]]
local function performUpdateStep()
    External.performUpdateStep(os.clock())
end

--[[
    Binds Fusion&apos;s update step to RunService step events.
]]
local stopSchedulerFunc = nil
function RobloxExternal.startScheduler()
    if stopSchedulerFunc ~= nil then
        return
    end
    if RunService:IsClient() then
        -- In cases where multiple Fusion modules are running simultaneously,
        -- this prevents collisions.
        local id = &quot;FusionUpdateStep_&quot; .. HttpService:GenerateGUID()
        RunService:BindToRenderStep(
            id,
            Enum.RenderPriority.First.Value,
            performUpdateStep
        )
        stopSchedulerFunc = function()
            RunService:UnbindFromRenderStep(id)
        end
    else
        local connection = RunService.Heartbeat:Connect(performUpdateStep)
        stopSchedulerFunc = function()
            connection:Disconnect()
        end
    end
end

--[[
    Unbinds Fusion&apos;s update step from RunService step events.
]]
function RobloxExternal.stopScheduler()
    if stopSchedulerFunc ~= nil then
        stopSchedulerFunc()
        stopSchedulerFunc = nil
    end
end

return RobloxExternal</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a400001088</UniqueId>
							</Properties>
						</Item>
						<Item class="Folder" referent="RBX4ADDB281AD4149E686A66319DCF78843">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b73</UniqueId>
								<string name="Name">Instances</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a400001089</UniqueId>
							</Properties>
							<Item class="ModuleScript" referent="RBX5B99569068DE4189910B16E3E14B299A">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b74</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">AttributeOut</string>
									<string name="ScriptGuid">{35a0cfb1-4802-4124-aaa7-a74f35a37a80}</string>
									<string name="Source">--!strict

--[[
&#9;A special key for property tables, which allows users to save instance attributes
    into state objects
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local logError = require(Package.Logging.logError)
local xtypeof = require(Package.Utility.xtypeof)

local function AttributeOut(attributeName: string): PubTypes.SpecialKey
&#9;local attributeOutKey = {}
&#9;attributeOutKey.type = &quot;SpecialKey&quot;
&#9;attributeOutKey.kind = &quot;AttributeOut&quot;
&#9;attributeOutKey.stage = &quot;observer&quot;

&#9;function attributeOutKey:apply(stateObject: PubTypes.StateObject, applyTo: Instance, cleanupTasks: { PubTypes.Task })
&#9;&#9;if xtypeof(stateObject) ~= &quot;State&quot; or stateObject.kind ~= &quot;Value&quot; then
&#9;&#9;&#9;logError(&quot;invalidAttributeOutType&quot;)
&#9;&#9;end
&#9;&#9;if attributeName == nil then
&#9;&#9;&#9;logError(&quot;attributeNameNil&quot;)
&#9;&#9;end
&#9;&#9;local ok, event = pcall(applyTo.GetAttributeChangedSignal, applyTo, attributeName)
&#9;&#9;if not ok then
&#9;&#9;&#9;logError(&quot;invalidOutAttributeName&quot;, applyTo.ClassName, attributeName)
&#9;&#9;else
&#9;&#9;&#9;stateObject:set((applyTo :: any):GetAttribute(attributeName))
&#9;&#9;&#9;table.insert(cleanupTasks, event:Connect(function()&#9;
&#9;&#9;&#9;&#9;stateObject:set((applyTo :: any):GetAttribute(attributeName))
&#9;&#9;&#9;end))
&#9;&#9;&#9;table.insert(cleanupTasks, function()
&#9;&#9;&#9;&#9;stateObject:set(nil)
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end

&#9;return attributeOutKey
end

return AttributeOut
</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000108a</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXE2A3360CDFDF41558B4686867825C1CE">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b75</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Hydrate</string>
									<string name="ScriptGuid">{811d914b-691c-4319-be7e-238ab150b3bf}</string>
									<string name="Source">--!strict

--[[
&#9;Processes and returns an existing instance, with options for setting
&#9;properties, event handlers and other attributes on the instance.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local applyInstanceProps = require(Package.Instances.applyInstanceProps)

local function Hydrate(target: Instance)
&#9;return function(props: PubTypes.PropertyTable): Instance
&#9;&#9;applyInstanceProps(props, target)
&#9;&#9;return target
&#9;end
end

return Hydrate</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000108b</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXF56CE16E058F4357BDFFBEBBAFE8908E">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b76</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Cleanup</string>
									<string name="ScriptGuid">{11bcec10-95e8-4517-a287-a79fc7600518}</string>
									<string name="Source">--!strict

--[[
&#9;A special key for property tables, which adds user-specified tasks to be run
&#9;when the instance is destroyed.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)

local Cleanup = {}
Cleanup.type = &quot;SpecialKey&quot;
Cleanup.kind = &quot;Cleanup&quot;
Cleanup.stage = &quot;observer&quot;

function Cleanup:apply(userTask: any, applyTo: Instance, cleanupTasks: {PubTypes.Task})
&#9;table.insert(cleanupTasks, userTask)
end

return Cleanup</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000108c</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX4A0ABCF100AF4E90BE6F0D4973E70CE2">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b77</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Out</string>
									<string name="ScriptGuid">{f719bfce-2eba-4b17-b962-ffc40e6763e1}</string>
									<string name="Source">--!strict

--[[
&#9;A special key for property tables, which allows users to extract values from
&#9;an instance into an automatically-updated Value object.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local logError = require(Package.Logging.logError)
local xtypeof = require(Package.Utility.xtypeof)

local function Out(propertyName: string): PubTypes.SpecialKey
&#9;local outKey = {}
&#9;outKey.type = &quot;SpecialKey&quot;
&#9;outKey.kind = &quot;Out&quot;
&#9;outKey.stage = &quot;observer&quot;

&#9;function outKey:apply(outState: any, applyTo: Instance, cleanupTasks: { PubTypes.Task })
&#9;&#9;local ok, event = pcall(applyTo.GetPropertyChangedSignal, applyTo, propertyName)
&#9;&#9;if not ok then
&#9;&#9;&#9;logError(&quot;invalidOutProperty&quot;, nil, applyTo.ClassName, propertyName)
&#9;&#9;elseif xtypeof(outState) ~= &quot;State&quot; or outState.kind ~= &quot;Value&quot; then
&#9;&#9;&#9;logError(&quot;invalidOutType&quot;)
&#9;&#9;else
&#9;&#9;&#9;outState:set((applyTo :: any)[propertyName])
&#9;&#9;&#9;table.insert(
&#9;&#9;&#9;&#9;cleanupTasks,
&#9;&#9;&#9;&#9;event:Connect(function()
&#9;&#9;&#9;&#9;&#9;outState:set((applyTo :: any)[propertyName])
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;)
&#9;&#9;&#9;table.insert(cleanupTasks, function()
&#9;&#9;&#9;&#9;outState:set(nil)
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end

&#9;return outKey
end

return Out
</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000108d</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX95EB71A7CC49456F80DA1A4AF4F042B0">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b78</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">AttributeChange</string>
									<string name="ScriptGuid">{7658e1a8-5415-41d8-a0a0-837d36ebfc71}</string>
									<string name="Source">--!strict

--[[
&#9;A special key for property tables, which allows users to connect to
    an attribute change on an instance.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local logError = require(Package.Logging.logError)
local xtypeof = require(Package.Utility.xtypeof)

local function AttributeChange(attributeName: string): PubTypes.SpecialKey
&#9;local attributeKey = {}
&#9;attributeKey.type = &quot;SpecialKey&quot;
&#9;attributeKey.kind = &quot;AttributeChange&quot;
&#9;attributeKey.stage = &quot;observer&quot;

&#9;if attributeName == nil then
    &#9;logError(&quot;attributeNameNil&quot;)
&#9;end

&#9;function attributeKey:apply(callback: any, applyTo: Instance, cleanupTasks: {PubTypes.Task})
&#9;&#9;if typeof(callback) ~= &quot;function&quot; then
&#9;&#9;&#9;logError(&quot;invalidAttributeChangeHandler&quot;, nil, attributeName)
&#9;&#9;end
&#9;&#9;local ok, event = pcall(applyTo.GetAttributeChangedSignal, applyTo, attributeName)
&#9;&#9;if not ok then
&#9;&#9;&#9;logError(&quot;cannotConnectAttributeChange&quot;, nil, applyTo.ClassName, attributeName)
&#9;&#9;else
&#9;&#9;&#9;callback((applyTo :: any):GetAttribute(attributeName))
&#9;&#9;&#9;table.insert(cleanupTasks, event:Connect(function()
&#9;&#9;&#9;&#9;callback((applyTo :: any):GetAttribute(attributeName))
&#9;&#9;&#9;end))
&#9;&#9;end
&#9;end
&#9;return attributeKey
end

return AttributeChange</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000108e</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX894434B678FB459EB826C915A060DD56">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b79</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Children</string>
									<string name="ScriptGuid">{8595c26a-a752-46e5-8e27-1059b5d27fd2}</string>
									<string name="Source">--!strict

--[[
&#9;A special key for property tables, which parents any given descendants into
&#9;an instance.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local External = require(Package.External)
local logWarn = require(Package.Logging.logWarn)
local Observer = require(Package.State.Observer)
local peek = require(Package.State.peek)
local isState = require(Package.State.isState)

type Set&lt;T&gt; = {[T]: boolean}

-- Experimental flag: name children based on the key used in the [Children] table
local EXPERIMENTAL_AUTO_NAMING = false

local Children = {}
Children.type = &quot;SpecialKey&quot;
Children.kind = &quot;Children&quot;
Children.stage = &quot;descendants&quot;

function Children:apply(propValue: any, applyTo: Instance, cleanupTasks: {PubTypes.Task})
&#9;local newParented: Set&lt;Instance&gt; = {}
&#9;local oldParented: Set&lt;Instance&gt; = {}

&#9;-- save disconnection functions for state object observers
&#9;local newDisconnects: {[PubTypes.StateObject&lt;any&gt;]: () -&gt; ()} = {}
&#9;local oldDisconnects: {[PubTypes.StateObject&lt;any&gt;]: () -&gt; ()} = {}

&#9;local updateQueued = false
&#9;local queueUpdate: () -&gt; ()

&#9;-- Rescans this key&apos;s value to find new instances to parent and state objects
&#9;-- to observe for changes; then unparents instances no longer found and
&#9;-- disconnects observers for state objects no longer present.
&#9;local function updateChildren()
&#9;&#9;if not updateQueued then
&#9;&#9;&#9;return -- this update may have been canceled by destruction, etc.
&#9;&#9;end
&#9;&#9;updateQueued = false

&#9;&#9;oldParented, newParented = newParented, oldParented
&#9;&#9;oldDisconnects, newDisconnects = newDisconnects, oldDisconnects
&#9;&#9;table.clear(newParented)
&#9;&#9;table.clear(newDisconnects)

&#9;&#9;local function processChild(child: any, autoName: string?)
&#9;&#9;&#9;local childType = typeof(child)

&#9;&#9;&#9;if childType == &quot;Instance&quot; then
&#9;&#9;&#9;&#9;-- case 1; single instance

&#9;&#9;&#9;&#9;newParented[child] = true
&#9;&#9;&#9;&#9;if oldParented[child] == nil then
&#9;&#9;&#9;&#9;&#9;-- wasn&apos;t previously present

&#9;&#9;&#9;&#9;&#9;-- TODO: check for ancestry conflicts here
&#9;&#9;&#9;&#9;&#9;child.Parent = applyTo
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;-- previously here; we want to reuse, so remove from old
&#9;&#9;&#9;&#9;&#9;-- set so we don&apos;t encounter it during unparenting
&#9;&#9;&#9;&#9;&#9;oldParented[child] = nil
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;if EXPERIMENTAL_AUTO_NAMING and autoName ~= nil then
&#9;&#9;&#9;&#9;&#9;child.Name = autoName
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;elseif isState(child) then
&#9;&#9;&#9;&#9;-- case 2; state object

&#9;&#9;&#9;&#9;local value = peek(child)
&#9;&#9;&#9;&#9;-- allow nil to represent the absence of a child
&#9;&#9;&#9;&#9;if value ~= nil then
&#9;&#9;&#9;&#9;&#9;processChild(value, autoName)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;local disconnect = oldDisconnects[child]
&#9;&#9;&#9;&#9;if disconnect == nil then
&#9;&#9;&#9;&#9;&#9;-- wasn&apos;t previously present
&#9;&#9;&#9;&#9;&#9;disconnect = Observer(child):onChange(queueUpdate)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;-- previously here; we want to reuse, so remove from old
&#9;&#9;&#9;&#9;&#9;-- set so we don&apos;t encounter it during unparenting
&#9;&#9;&#9;&#9;&#9;oldDisconnects[child] = nil
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;newDisconnects[child] = disconnect

&#9;&#9;&#9;elseif childType == &quot;table&quot; then
&#9;&#9;&#9;&#9;-- case 3; table of objects

&#9;&#9;&#9;&#9;for key, subChild in pairs(child) do
&#9;&#9;&#9;&#9;&#9;local keyType = typeof(key)
&#9;&#9;&#9;&#9;&#9;local subAutoName: string? = nil

&#9;&#9;&#9;&#9;&#9;if keyType == &quot;string&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;subAutoName = key
&#9;&#9;&#9;&#9;&#9;elseif keyType == &quot;number&quot; and autoName ~= nil then
&#9;&#9;&#9;&#9;&#9;&#9;subAutoName = autoName .. &quot;_&quot; .. key
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;processChild(subChild, subAutoName)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;logWarn(&quot;unrecognisedChildType&quot;, childType)
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if propValue ~= nil then
&#9;&#9;&#9;-- `propValue` is set to nil on cleanup, so we don&apos;t process children
&#9;&#9;&#9;-- in that case
&#9;&#9;&#9;processChild(propValue)
&#9;&#9;end

&#9;&#9;-- unparent any children that are no longer present
&#9;&#9;for oldInstance in pairs(oldParented) do
&#9;&#9;&#9;oldInstance.Parent = nil
&#9;&#9;end

&#9;&#9;-- disconnect observers which weren&apos;t reused
&#9;&#9;for oldState, disconnect in pairs(oldDisconnects) do
&#9;&#9;&#9;disconnect()
&#9;&#9;end
&#9;end

&#9;queueUpdate = function()
&#9;&#9;if not updateQueued then
&#9;&#9;&#9;updateQueued = true
&#9;&#9;&#9;External.doTaskDeferred(updateChildren)
&#9;&#9;end
&#9;end

&#9;table.insert(cleanupTasks, function()
&#9;&#9;propValue = nil
&#9;&#9;updateQueued = true
&#9;&#9;updateChildren()
&#9;end)

&#9;-- perform initial child parenting
&#9;updateQueued = true
&#9;updateChildren()
end

return Children :: PubTypes.SpecialKey</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000108f</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX6500EE970F8F4F27A9D7F9AA71CF1CD0">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b7a</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">defaultProps</string>
									<string name="ScriptGuid">{09b825e6-7c07-431d-810f-3dff0338bc58}</string>
									<string name="Source">--!strict

--[[
&#9;Stores &apos;sensible default&apos; properties to be applied to instances created by
&#9;the New function.
]]

return {
&#9;ScreenGui = {
&#9;&#9;ResetOnSpawn = false,
&#9;&#9;ZIndexBehavior = Enum.ZIndexBehavior.Sibling
&#9;},

&#9;BillboardGui = {
&#9;&#9;ResetOnSpawn = false,
&#9;&#9;ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
&#9;&#9;Active = true
&#9;},

&#9;SurfaceGui = {
&#9;&#9;ResetOnSpawn = false,
&#9;&#9;ZIndexBehavior = Enum.ZIndexBehavior.Sibling,

&#9;&#9;SizingMode = Enum.SurfaceGuiSizingMode.PixelsPerStud,
&#9;&#9;PixelsPerStud = 50
&#9;},

&#9;Frame = {
&#9;&#9;BackgroundColor3 = Color3.new(1, 1, 1),
&#9;&#9;BorderColor3 = Color3.new(0, 0, 0),
&#9;&#9;BorderSizePixel = 0
&#9;},

&#9;ScrollingFrame = {
&#9;&#9;BackgroundColor3 = Color3.new(1, 1, 1),
&#9;&#9;BorderColor3 = Color3.new(0, 0, 0),
&#9;&#9;BorderSizePixel = 0,

&#9;&#9;ScrollBarImageColor3 = Color3.new(0, 0, 0)
&#9;},

&#9;TextLabel = {
&#9;&#9;BackgroundColor3 = Color3.new(1, 1, 1),
&#9;&#9;BorderColor3 = Color3.new(0, 0, 0),
&#9;&#9;BorderSizePixel = 0,

&#9;&#9;Font = Enum.Font.SourceSans,
&#9;&#9;Text = &quot;&quot;,
&#9;&#9;TextColor3 = Color3.new(0, 0, 0),
&#9;&#9;TextSize = 14
&#9;},

&#9;TextButton = {
&#9;&#9;BackgroundColor3 = Color3.new(1, 1, 1),
&#9;&#9;BorderColor3 = Color3.new(0, 0, 0),
&#9;&#9;BorderSizePixel = 0,

&#9;&#9;AutoButtonColor = false,

&#9;&#9;Font = Enum.Font.SourceSans,
&#9;&#9;Text = &quot;&quot;,
&#9;&#9;TextColor3 = Color3.new(0, 0, 0),
&#9;&#9;TextSize = 14
&#9;},

&#9;TextBox = {
&#9;&#9;BackgroundColor3 = Color3.new(1, 1, 1),
&#9;&#9;BorderColor3 = Color3.new(0, 0, 0),
&#9;&#9;BorderSizePixel = 0,

&#9;&#9;ClearTextOnFocus = false,

&#9;&#9;Font = Enum.Font.SourceSans,
&#9;&#9;Text = &quot;&quot;,
&#9;&#9;TextColor3 = Color3.new(0, 0, 0),
&#9;&#9;TextSize = 14
&#9;},

&#9;ImageLabel = {
&#9;&#9;BackgroundColor3 = Color3.new(1, 1, 1),
&#9;&#9;BorderColor3 = Color3.new(0, 0, 0),
&#9;&#9;BorderSizePixel = 0
&#9;},

&#9;ImageButton = {
&#9;&#9;BackgroundColor3 = Color3.new(1, 1, 1),
&#9;&#9;BorderColor3 = Color3.new(0, 0, 0),
&#9;&#9;BorderSizePixel = 0,

&#9;&#9;AutoButtonColor = false
&#9;},

&#9;ViewportFrame = {
&#9;&#9;BackgroundColor3 = Color3.new(1, 1, 1),
&#9;&#9;BorderColor3 = Color3.new(0, 0, 0),
&#9;&#9;BorderSizePixel = 0
&#9;},

&#9;VideoFrame = {
&#9;&#9;BackgroundColor3 = Color3.new(1, 1, 1),
&#9;&#9;BorderColor3 = Color3.new(0, 0, 0),
&#9;&#9;BorderSizePixel = 0
&#9;},
&#9;
&#9;CanvasGroup = {
&#9;&#9;BackgroundColor3 = Color3.new(1, 1, 1),
&#9;&#9;BorderColor3 = Color3.new(0, 0, 0),
&#9;&#9;BorderSizePixel = 0
&#9;},

&#9;SpawnLocation = {
&#9;&#9;Duration = 0
&#9;},

&#9;BoxHandleAdornment = {
&#9;&#9;ZIndex = 0
&#9;},
&#9;ConeHandleAdornment = {
&#9;&#9;ZIndex = 0
&#9;},
&#9;CylinderHandleAdornment = {
&#9;&#9;ZIndex = 0
&#9;},
&#9;ImageHandleAdornment = {
&#9;&#9;ZIndex = 0
&#9;},
&#9;LineHandleAdornment = {
&#9;&#9;ZIndex = 0
&#9;},
&#9;SphereHandleAdornment = {
&#9;&#9;ZIndex = 0
&#9;},
&#9;WireframeHandleAdornment = {
&#9;&#9;ZIndex = 0
&#9;},
&#9;
&#9;Part = {
&#9;&#9;Anchored = true,
&#9;&#9;Size = Vector3.one,
&#9;&#9;FrontSurface = Enum.SurfaceType.Smooth,
&#9;&#9;BackSurface = Enum.SurfaceType.Smooth,
&#9;&#9;LeftSurface = Enum.SurfaceType.Smooth,
&#9;&#9;RightSurface = Enum.SurfaceType.Smooth,
&#9;&#9;TopSurface = Enum.SurfaceType.Smooth,
&#9;&#9;BottomSurface = Enum.SurfaceType.Smooth,
&#9;},
&#9;
&#9;TrussPart = {
&#9;&#9;Anchored = true,
&#9;&#9;Size = Vector3.one * 2,
&#9;&#9;FrontSurface = Enum.SurfaceType.Smooth,
&#9;&#9;BackSurface = Enum.SurfaceType.Smooth,
&#9;&#9;LeftSurface = Enum.SurfaceType.Smooth,
&#9;&#9;RightSurface = Enum.SurfaceType.Smooth,
&#9;&#9;TopSurface = Enum.SurfaceType.Smooth,
&#9;&#9;BottomSurface = Enum.SurfaceType.Smooth,
&#9;},

&#9;MeshPart = {
&#9;&#9;Anchored = true,
&#9;&#9;Size = Vector3.one,
&#9;&#9;FrontSurface = Enum.SurfaceType.Smooth,
&#9;&#9;BackSurface = Enum.SurfaceType.Smooth,
&#9;&#9;LeftSurface = Enum.SurfaceType.Smooth,
&#9;&#9;RightSurface = Enum.SurfaceType.Smooth,
&#9;&#9;TopSurface = Enum.SurfaceType.Smooth,
&#9;&#9;BottomSurface = Enum.SurfaceType.Smooth,
&#9;},

&#9;CornerWedgePart = {
&#9;&#9;Anchored = true,
&#9;&#9;Size = Vector3.one,
&#9;&#9;FrontSurface = Enum.SurfaceType.Smooth,
&#9;&#9;BackSurface = Enum.SurfaceType.Smooth,
&#9;&#9;LeftSurface = Enum.SurfaceType.Smooth,
&#9;&#9;RightSurface = Enum.SurfaceType.Smooth,
&#9;&#9;TopSurface = Enum.SurfaceType.Smooth,
&#9;&#9;BottomSurface = Enum.SurfaceType.Smooth,
&#9;},

&#9;VehicleSeat = {
&#9;&#9;Anchored = true,
&#9;&#9;Size = Vector3.one,
&#9;&#9;FrontSurface = Enum.SurfaceType.Smooth,
&#9;&#9;BackSurface = Enum.SurfaceType.Smooth,
&#9;&#9;LeftSurface = Enum.SurfaceType.Smooth,
&#9;&#9;RightSurface = Enum.SurfaceType.Smooth,
&#9;&#9;TopSurface = Enum.SurfaceType.Smooth,
&#9;&#9;BottomSurface = Enum.SurfaceType.Smooth,
&#9;},
}
</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001090</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX8D85D12125E047718F43E2799B6D13EE">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b7b</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Attribute</string>
									<string name="ScriptGuid">{21c0a121-c293-47da-b135-9024e6016e58}</string>
									<string name="Source">--!strict

--[[
&#9;A special key for property tables, which allows users to apply custom
    attributes to instances
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local External = require(Package.External)
local logError = require(Package.Logging.logError)
local xtypeof = require(Package.Utility.xtypeof)
local Observer = require(Package.State.Observer)
local peek = require(Package.State.peek)

local function setAttribute(instance: Instance, attribute: string, value: any)
    instance:SetAttribute(attribute, value)
end

local function bindAttribute(instance: Instance, attribute: string, value: any, cleanupTasks: {PubTypes.Task})
    if xtypeof(value) == &quot;State&quot; then
        local didDefer = false
        local function update()
            if not didDefer then
                didDefer = true
                External.doTaskDeferred(function()
                    didDefer = false
                    setAttribute(instance, attribute, peek(value))
                end)
            end
        end
&#9;    setAttribute(instance, attribute, peek(value))
&#9;    table.insert(cleanupTasks, Observer(value :: any):onChange(update))
    else
        setAttribute(instance, attribute, value)
    end
end

local function Attribute(attributeName: string): PubTypes.SpecialKey
    local AttributeKey = {}
    AttributeKey.type = &quot;SpecialKey&quot;
    AttributeKey.kind = &quot;Attribute&quot;
    AttributeKey.stage = &quot;self&quot;

    if attributeName == nil then
        logError(&quot;attributeNameNil&quot;)
    end

    function AttributeKey:apply(attributeValue: any, applyTo: Instance, cleanupTasks: {PubTypes.Task})
        bindAttribute(applyTo, attributeName, attributeValue, cleanupTasks)
    end
    return AttributeKey
end

return Attribute</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001091</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX87E04387D17642B79061C0D0A89429DA">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b7c</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">OnEvent</string>
									<string name="ScriptGuid">{2cdca75b-201e-4fe2-8c70-ec26d5b5e9ad}</string>
									<string name="Source">--!strict

--[[
&#9;Constructs special keys for property tables which connect event listeners to
&#9;an instance.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local logError = require(Package.Logging.logError)

local function getProperty_unsafe(instance: Instance, property: string)
&#9;return (instance :: any)[property]
end

local function OnEvent(eventName: string): PubTypes.SpecialKey
&#9;local eventKey = {}
&#9;eventKey.type = &quot;SpecialKey&quot;
&#9;eventKey.kind = &quot;OnEvent&quot;
&#9;eventKey.stage = &quot;observer&quot;

&#9;function eventKey:apply(callback: any, applyTo: Instance, cleanupTasks: {PubTypes.Task})
&#9;&#9;local ok, event = pcall(getProperty_unsafe, applyTo, eventName)
&#9;&#9;if not ok or typeof(event) ~= &quot;RBXScriptSignal&quot; then
&#9;&#9;&#9;logError(&quot;cannotConnectEvent&quot;, nil, applyTo.ClassName, eventName)
&#9;&#9;elseif typeof(callback) ~= &quot;function&quot; then
&#9;&#9;&#9;logError(&quot;invalidEventHandler&quot;, nil, eventName)
&#9;&#9;else
&#9;&#9;&#9;table.insert(cleanupTasks, event:Connect(callback))
&#9;&#9;end
&#9;end

&#9;return eventKey
end

return OnEvent</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001092</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX4CCB45CCEE434A90B66775233F417E69">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b7d</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">applyInstanceProps</string>
									<string name="ScriptGuid">{1d54839b-85ef-4783-af95-4c87d118fc5b}</string>
									<string name="Source">--!strict

--[[
&#9;Applies a table of properties to an instance, including binding to any
&#9;given state objects and applying any special keys.

&#9;No strong reference is kept by default - special keys should take care not
&#9;to accidentally hold strong references to instances forever.

&#9;If a key is used twice, an error will be thrown. This is done to avoid
&#9;double assignments or double bindings. However, some special keys may want
&#9;to enable such assignments - in which case unique keys should be used for
&#9;each occurence.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local External = require(Package.External)
local cleanup = require(Package.Utility.cleanup)
local xtypeof = require(Package.Utility.xtypeof)
local logError = require(Package.Logging.logError)
local parseError = require(Package.Logging.parseError)
local Observer = require(Package.State.Observer)
local peek = require(Package.State.peek)

local function setProperty_unsafe(instance: Instance, property: string, value: any)
&#9;(instance :: any)[property] = value
end

local function testPropertyAssignable(instance: Instance, property: string)
&#9;(instance :: any)[property] = (instance :: any)[property]
end

local function setProperty(instance: Instance, property: string, value: any)
&#9;local success, err = xpcall(setProperty_unsafe, parseError, instance, property, value)

&#9;if not success then
&#9;&#9;if not pcall(testPropertyAssignable, instance, property) then
&#9;&#9;&#9;if instance == nil then
&#9;&#9;&#9;&#9;-- reference has been lost
&#9;&#9;&#9;&#9;logError(&quot;setPropertyNilRef&quot;, nil, property, tostring(value))
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;-- property is not assignable
&#9;&#9;&#9;&#9;logError(&quot;cannotAssignProperty&quot;, nil, instance.ClassName, property)
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;-- property is assignable, but this specific assignment failed
&#9;&#9;&#9;-- this typically implies the wrong type was received
&#9;&#9;&#9;local givenType = typeof(value)
&#9;&#9;&#9;local expectedType = typeof((instance :: any)[property])

&#9;&#9;&#9;if givenType == expectedType then
&#9;&#9;&#9;&#9;logError(&quot;propertySetError&quot;, err)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;logError(&quot;invalidPropertyType&quot;, nil, instance.ClassName, property, expectedType, givenType)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

local function bindProperty(instance: Instance, property: string, value: PubTypes.CanBeState&lt;any&gt;, cleanupTasks: {PubTypes.Task})
&#9;if xtypeof(value) == &quot;State&quot; then
&#9;&#9;-- value is a state object - assign and observe for changes
&#9;&#9;local willUpdate = false
&#9;&#9;local function updateLater()
&#9;&#9;&#9;if not willUpdate then
&#9;&#9;&#9;&#9;willUpdate = true
&#9;&#9;&#9;&#9;External.doTaskDeferred(function()
&#9;&#9;&#9;&#9;&#9;willUpdate = false
&#9;&#9;&#9;&#9;&#9;setProperty(instance, property, peek(value))
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;setProperty(instance, property, peek(value))
&#9;&#9;table.insert(cleanupTasks, Observer(value :: any):onChange(updateLater))
&#9;else
&#9;&#9;-- value is a constant - assign once only
&#9;&#9;setProperty(instance, property, value)
&#9;end
end

local function applyInstanceProps(props: PubTypes.PropertyTable, applyTo: Instance)
&#9;local specialKeys = {
&#9;&#9;self = {} :: {[PubTypes.SpecialKey]: any},
&#9;&#9;descendants = {} :: {[PubTypes.SpecialKey]: any},
&#9;&#9;ancestor = {} :: {[PubTypes.SpecialKey]: any},
&#9;&#9;observer = {} :: {[PubTypes.SpecialKey]: any}
&#9;}
&#9;local cleanupTasks = {}

&#9;for key, value in pairs(props) do
&#9;&#9;local keyType = xtypeof(key)

&#9;&#9;if keyType == &quot;string&quot; then
&#9;&#9;&#9;if key ~= &quot;Parent&quot; then
&#9;&#9;&#9;&#9;bindProperty(applyTo, key :: string, value, cleanupTasks)
&#9;&#9;&#9;end
&#9;&#9;elseif keyType == &quot;SpecialKey&quot; then
&#9;&#9;&#9;local stage = (key :: PubTypes.SpecialKey).stage
&#9;&#9;&#9;local keys = specialKeys[stage]
&#9;&#9;&#9;if keys == nil then
&#9;&#9;&#9;&#9;logError(&quot;unrecognisedPropertyStage&quot;, nil, stage)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;keys[key] = value
&#9;&#9;&#9;end
&#9;&#9;else
&#9;&#9;&#9;-- we don&apos;t recognise what this key is supposed to be
&#9;&#9;&#9;logError(&quot;unrecognisedPropertyKey&quot;, nil, xtypeof(key))
&#9;&#9;end
&#9;end

&#9;for key, value in pairs(specialKeys.self) do
&#9;&#9;key:apply(value, applyTo, cleanupTasks)
&#9;end
&#9;for key, value in pairs(specialKeys.descendants) do
&#9;&#9;key:apply(value, applyTo, cleanupTasks)
&#9;end

&#9;if props.Parent ~= nil then
&#9;&#9;bindProperty(applyTo, &quot;Parent&quot;, props.Parent, cleanupTasks)
&#9;end

&#9;for key, value in pairs(specialKeys.ancestor) do
&#9;&#9;key:apply(value, applyTo, cleanupTasks)
&#9;end
&#9;for key, value in pairs(specialKeys.observer) do
&#9;&#9;key:apply(value, applyTo, cleanupTasks)
&#9;end

&#9;applyTo.Destroying:Connect(function()
&#9;&#9;cleanup(cleanupTasks)
&#9;end)
end

return applyInstanceProps</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001093</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXF20595298DF64C6A9A113F11DEABD66E">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b7e</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">New</string>
									<string name="ScriptGuid">{59491fd6-531a-4219-a8c6-4054efbadff3}</string>
									<string name="Source">--!strict

--[[
&#9;Constructs and returns a new instance, with options for setting properties,
&#9;event handlers and other attributes on the instance right away.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local defaultProps = require(Package.Instances.defaultProps)
local applyInstanceProps = require(Package.Instances.applyInstanceProps)
local logError= require(Package.Logging.logError)

local function New(className: string)
&#9;return function(props: PubTypes.PropertyTable): Instance
&#9;&#9;local ok, instance = pcall(Instance.new, className)

&#9;&#9;if not ok then
&#9;&#9;&#9;logError(&quot;cannotCreateClass&quot;, nil, className)
&#9;&#9;end

&#9;&#9;local classDefaults = defaultProps[className]
&#9;&#9;if classDefaults ~= nil then
&#9;&#9;&#9;for defaultProp, defaultValue in pairs(classDefaults) do
&#9;&#9;&#9;&#9;instance[defaultProp] = defaultValue
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;applyInstanceProps(props, instance)

&#9;&#9;return instance
&#9;end
end

return New</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001094</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX5B683CE1407E4492942F6647793EC190">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b7f</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">OnChange</string>
									<string name="ScriptGuid">{a2b53390-e257-4729-b62a-e046dee32ca8}</string>
									<string name="Source">--!strict

--[[
&#9;Constructs special keys for property tables which connect property change
&#9;listeners to an instance.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local logError = require(Package.Logging.logError)

local function OnChange(propertyName: string): PubTypes.SpecialKey
&#9;local changeKey = {}
&#9;changeKey.type = &quot;SpecialKey&quot;
&#9;changeKey.kind = &quot;OnChange&quot;
&#9;changeKey.stage = &quot;observer&quot;

&#9;function changeKey:apply(callback: any, applyTo: Instance, cleanupTasks: {PubTypes.Task})
&#9;&#9;local ok, event = pcall(applyTo.GetPropertyChangedSignal, applyTo, propertyName)
&#9;&#9;if not ok then
&#9;&#9;&#9;logError(&quot;cannotConnectChange&quot;, nil, applyTo.ClassName, propertyName)
&#9;&#9;elseif typeof(callback) ~= &quot;function&quot; then
&#9;&#9;&#9;logError(&quot;invalidChangeHandler&quot;, nil, propertyName)
&#9;&#9;else
&#9;&#9;&#9;table.insert(cleanupTasks, event:Connect(function()
&#9;&#9;&#9;&#9;callback((applyTo :: any)[propertyName])
&#9;&#9;&#9;end))
&#9;&#9;end
&#9;end

&#9;return changeKey
end

return OnChange</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001095</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXCC676F4DEB2C4EC1A40594DC2BD47175">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b80</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Ref</string>
									<string name="ScriptGuid">{8191ce30-12b2-4123-8d1e-ce194a7a720d}</string>
									<string name="Source">--!strict

--[[
&#9;A special key for property tables, which stores a reference to the instance
&#9;in a user-provided Value object.
]]

local Package = script.Parent.Parent
local PubTypes = require(Package.PubTypes)
local logError = require(Package.Logging.logError)
local xtypeof = require(Package.Utility.xtypeof)

local Ref = {}
Ref.type = &quot;SpecialKey&quot;
Ref.kind = &quot;Ref&quot;
Ref.stage = &quot;observer&quot;

function Ref:apply(refState: any, applyTo: Instance, cleanupTasks: {PubTypes.Task})
&#9;if xtypeof(refState) ~= &quot;State&quot; or refState.kind ~= &quot;Value&quot; then
&#9;&#9;logError(&quot;invalidRefType&quot;)
&#9;else
&#9;&#9;refState:set(applyTo)
&#9;&#9;table.insert(cleanupTasks, function()
&#9;&#9;&#9;refState:set(nil)
&#9;&#9;end)
&#9;end
end

return Ref</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001096</UniqueId>
								</Properties>
							</Item>
						</Item>
						<Item class="ModuleScript" referent="RBX451008D35AA64D44A49806A7714EC7CF">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b81</UniqueId>
								<string name="LinkedSource"></string>
								<string name="Name">Types</string>
								<string name="ScriptGuid">{90cc8327-77ce-4d42-8156-fe431b164f5c}</string>
								<string name="Source">--!strict

--[[
&#9;Stores common type information used internally.

&#9;These types may be used internally so Fusion code can type-check, but
&#9;should never be exposed to public users, as these definitions are fair game
&#9;for breaking changes.
]]

local Package = script.Parent
local PubTypes = require(Package.PubTypes)

type Set&lt;T&gt; = {[T]: any}

--[[
&#9;General use types
]]

-- A symbol that represents the absence of a value.
export type None = PubTypes.Symbol &amp; {
&#9;-- name: &quot;None&quot; (add this when Luau supports singleton types)
}

-- Stores useful information about Luau errors.
export type Error = {
&#9;type: string, -- replace with &quot;Error&quot; when Luau supports singleton types
&#9;raw: string,
&#9;message: string,
&#9;trace: string
}

-- An object which stores a value scoped in time.
export type Contextual&lt;T&gt; = PubTypes.Contextual&lt;T&gt; &amp; {
&#9;_valuesNow: {[thread]: {value: T}},
&#9;_defaultValue: T
}

--[[
&#9;Generic reactive graph types
]]

export type StateObject&lt;T&gt; = PubTypes.StateObject&lt;T&gt; &amp; {
&#9;_peek: (StateObject&lt;T&gt;) -&gt; T
}

--[[
&#9;Specific reactive graph types
]]

-- A state object whose value can be set at any time by the user.
export type State&lt;T&gt; = PubTypes.Value&lt;T&gt; &amp; {
&#9;_value: T
}

-- A state object whose value is derived from other objects using a callback.
export type Computed&lt;T&gt; = PubTypes.Computed&lt;T&gt; &amp; {
&#9;_oldDependencySet: Set&lt;PubTypes.Dependency&gt;,
&#9;_callback: (PubTypes.Use) -&gt; T,
&#9;_value: T
}

-- A state object whose value is derived from other objects using a callback.
export type ForPairs&lt;KI, VI, KO, VO, M&gt; = PubTypes.ForPairs&lt;KO, VO&gt; &amp; {
&#9;_oldDependencySet: Set&lt;PubTypes.Dependency&gt;,
&#9;_processor: (PubTypes.Use, KI, VI) -&gt; (KO, VO),
&#9;_destructor: (VO, M?) -&gt; (),
&#9;_inputIsState: boolean,
&#9;_inputTable: PubTypes.CanBeState&lt;{ [KI]: VI }&gt;,
&#9;_oldInputTable: { [KI]: VI },
&#9;_outputTable: { [KO]: VO },
&#9;_oldOutputTable: { [KO]: VO },
&#9;_keyIOMap: { [KI]: KO },
&#9;_meta: { [KO]: M? },
&#9;_keyData: {
&#9;&#9;[KI]: {
&#9;&#9;&#9;dependencySet: Set&lt;PubTypes.Dependency&gt;,
&#9;&#9;&#9;oldDependencySet: Set&lt;PubTypes.Dependency&gt;,
&#9;&#9;&#9;dependencyValues: { [PubTypes.Dependency]: any },
&#9;&#9;},
&#9;},
}

-- A state object whose value is derived from other objects using a callback.
export type ForKeys&lt;KI, KO, M&gt; = PubTypes.ForKeys&lt;KO, any&gt; &amp; {
&#9;_oldDependencySet: Set&lt;PubTypes.Dependency&gt;,
&#9;_processor: (PubTypes.Use, KI) -&gt; (KO),
&#9;_destructor: (KO, M?) -&gt; (),
&#9;_inputIsState: boolean,
&#9;_inputTable: PubTypes.CanBeState&lt;{ [KI]: KO }&gt;,
&#9;_oldInputTable: { [KI]: KO },
&#9;_outputTable: { [KO]: any },
&#9;_keyOIMap: { [KO]: KI },
&#9;_meta: { [KO]: M? },
&#9;_keyData: {
&#9;&#9;[KI]: {
&#9;&#9;&#9;dependencySet: Set&lt;PubTypes.Dependency&gt;,
&#9;&#9;&#9;oldDependencySet: Set&lt;PubTypes.Dependency&gt;,
&#9;&#9;&#9;dependencyValues: { [PubTypes.Dependency]: any },
&#9;&#9;},
&#9;},
}

-- A state object whose value is derived from other objects using a callback.
export type ForValues&lt;VI, VO, M&gt; = PubTypes.ForValues&lt;any, VO&gt; &amp; {
&#9;_oldDependencySet: Set&lt;PubTypes.Dependency&gt;,
&#9;_processor: (PubTypes.Use, VI) -&gt; (VO),
&#9;_destructor: (VO, M?) -&gt; (),
&#9;_inputIsState: boolean,
&#9;_inputTable: PubTypes.CanBeState&lt;{ [VI]: VO }&gt;,
&#9;_outputTable: { [any]: VI },
&#9;_valueCache: { [VO]: any },
&#9;_oldValueCache: { [VO]: any },
&#9;_meta: { [VO]: M? },
&#9;_valueData: {
&#9;&#9;[VI]: {
&#9;&#9;&#9;dependencySet: Set&lt;PubTypes.Dependency&gt;,
&#9;&#9;&#9;oldDependencySet: Set&lt;PubTypes.Dependency&gt;,
&#9;&#9;&#9;dependencyValues: { [PubTypes.Dependency]: any },
&#9;&#9;},
&#9;},
}

-- A state object which follows another state object using tweens.
export type Tween&lt;T&gt; = PubTypes.Tween&lt;T&gt; &amp; {
&#9;_goalState: State&lt;T&gt;,
&#9;_tweenInfo: TweenInfo,
&#9;_prevValue: T,
&#9;_nextValue: T,
&#9;_currentValue: T,
&#9;_currentTweenInfo: TweenInfo,
&#9;_currentTweenDuration: number,
&#9;_currentTweenStartTime: number,
&#9;_currentlyAnimating: boolean
}

-- A state object which follows another state object using spring simulation.
export type Spring&lt;T&gt; = PubTypes.Spring&lt;T&gt; &amp; {
&#9;_speed: PubTypes.CanBeState&lt;number&gt;,
&#9;_speedIsState: boolean,
&#9;_lastSpeed: number,
&#9;_damping: PubTypes.CanBeState&lt;number&gt;,
&#9;_dampingIsState: boolean,
&#9;_lastDamping: number,
&#9;_goalState: State&lt;T&gt;,
&#9;_goalValue: T,
&#9;_currentType: string,
&#9;_currentValue: T,
&#9;_springPositions: {number},
&#9;_springGoals: {number},
&#9;_springVelocities: {number}
}

-- An object which can listen for updates on another state object.
export type Observer = PubTypes.Observer &amp; {
&#9;_changeListeners: Set&lt;() -&gt; ()&gt;,
&#9;_numChangeListeners: number
}

return nil</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a400001097</UniqueId>
							</Properties>
						</Item>
						<Item class="Folder" referent="RBXF34E0CE62F14449584F2F694ACAC7B38">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b82</UniqueId>
								<string name="Name">Logging</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a400001098</UniqueId>
							</Properties>
							<Item class="ModuleScript" referent="RBX90BC5C9E5C984CDFA75FB4A715D54A80">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b83</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">logError</string>
									<string name="ScriptGuid">{6af7a6f3-5f5c-4505-b383-4dfbf8057c24}</string>
									<string name="Source">--!strict

--[[
&#9;Utility function to log a Fusion-specific error.
]]

local Package = script.Parent.Parent
local Types = require(Package.Types)
local messages = require(Package.Logging.messages)

local function logError(messageID: string, errObj: Types.Error?, ...)
&#9;local formatString: string

&#9;if messages[messageID] ~= nil then
&#9;&#9;formatString = messages[messageID]
&#9;else
&#9;&#9;messageID = &quot;unknownMessage&quot;
&#9;&#9;formatString = messages[messageID]
&#9;end

&#9;local errorString
&#9;if errObj == nil then
&#9;&#9;errorString = string.format(&quot;[Fusion] &quot; .. formatString .. &quot;\n(ID: &quot; .. messageID .. &quot;)&quot;, ...)
&#9;else
&#9;&#9;formatString = formatString:gsub(&quot;ERROR_MESSAGE&quot;, errObj.message)
&#9;&#9;errorString = string.format(&quot;[Fusion] &quot; .. formatString .. &quot;\n(ID: &quot; .. messageID .. &quot;)\n---- Stack trace ----\n&quot; .. errObj.trace, ...)
&#9;end

&#9;error(errorString:gsub(&quot;\n&quot;, &quot;\n    &quot;), 0)
end

return logError</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a400001099</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXDECC5E824D0746A8933FC33F4AD6D858">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b84</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">parseError</string>
									<string name="ScriptGuid">{6d4574a5-4241-4e51-8fc1-406fbc79da73}</string>
									<string name="Source">--!strict

--[[
&#9;An xpcall() error handler to collect and parse useful information about
&#9;errors, such as clean messages and stack traces.
]]

local Package = script.Parent.Parent
local Types = require(Package.Types)

local function parseError(err: string): Types.Error
&#9;return {
&#9;&#9;type = &quot;Error&quot;,
&#9;&#9;raw = err,
&#9;&#9;message = err:gsub(&quot;^.+:%d+:%s*&quot;, &quot;&quot;),
&#9;&#9;trace = debug.traceback(nil, 2)
&#9;}
end

return parseError</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000109a</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX63284A107FCE4CC29532C4505BB3C93E">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b85</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">logWarn</string>
									<string name="ScriptGuid">{517aacdf-965d-4190-a6f8-b2fa68af4f7c}</string>
									<string name="Source">--!strict

--[[
&#9;Utility function to log a Fusion-specific warning.
]]

local Package = script.Parent.Parent
local messages = require(Package.Logging.messages)

local function logWarn(messageID, ...)
&#9;local formatString: string

&#9;if messages[messageID] ~= nil then
&#9;&#9;formatString = messages[messageID]
&#9;else
&#9;&#9;messageID = &quot;unknownMessage&quot;
&#9;&#9;formatString = messages[messageID]
&#9;end

&#9;warn(string.format(&quot;[Fusion] &quot; .. formatString .. &quot;\n(ID: &quot; .. messageID .. &quot;)&quot;, ...))
end

return logWarn</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000109b</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX88E6399E5FF845A2827711AF26CBF143">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b86</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">logErrorNonFatal</string>
									<string name="ScriptGuid">{5dbd2af4-8185-4ebd-a1c3-f9c36ccaa402}</string>
									<string name="Source">--!strict

--[[
&#9;Utility function to log a Fusion-specific error, without halting execution.
]]

local Package = script.Parent.Parent
local Types = require(Package.Types)
local messages = require(Package.Logging.messages)

local function logErrorNonFatal(messageID: string, errObj: Types.Error?, ...)
&#9;local formatString: string

&#9;if messages[messageID] ~= nil then
&#9;&#9;formatString = messages[messageID]
&#9;else
&#9;&#9;messageID = &quot;unknownMessage&quot;
&#9;&#9;formatString = messages[messageID]
&#9;end

&#9;local errorString
&#9;if errObj == nil then
&#9;&#9;errorString = string.format(&quot;[Fusion] &quot; .. formatString .. &quot;\n(ID: &quot; .. messageID .. &quot;)&quot;, ...)
&#9;else
&#9;&#9;formatString = formatString:gsub(&quot;ERROR_MESSAGE&quot;, errObj.message)
&#9;&#9;errorString = string.format(&quot;[Fusion] &quot; .. formatString .. &quot;\n(ID: &quot; .. messageID .. &quot;)\n---- Stack trace ----\n&quot; .. errObj.trace, ...)
&#9;end

&#9;coroutine.wrap(function()
&#9;&#9;error(errorString:gsub(&quot;\n&quot;, &quot;\n    &quot;), 0)
&#9;end)()
end

return logErrorNonFatal</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000109c</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXFCF0783CEE9344F1B0A3EDF009A775DA">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b87</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">messages</string>
									<string name="ScriptGuid">{e327ebe0-cf1e-4fe2-8494-95be4340b3eb}</string>
									<string name="Source">--!strict

--[[
&#9;Stores templates for different kinds of logging messages.
]]

return {
&#9;attributeNameNil = &quot;Attribute name cannot be nil&quot;,
&#9;cannotAssignProperty = &quot;The class type &apos;%s&apos; has no assignable property &apos;%s&apos;.&quot;,
&#9;cannotConnectChange = &quot;The %s class doesn&apos;t have a property called &apos;%s&apos;.&quot;,
&#9;cannotConnectAttributeChange = &quot;The %s class doesn&apos;t have an attribute called &apos;%s&apos;.&quot;,
&#9;cannotConnectEvent = &quot;The %s class doesn&apos;t have an event called &apos;%s&apos;.&quot;,
&#9;cannotCreateClass = &quot;Can&apos;t create a new instance of class &apos;%s&apos;.&quot;,
&#9;computedCallbackError = &quot;Computed callback error: ERROR_MESSAGE&quot;,
&#9;contextualCallbackError = &quot;Contextual callback error: ERROR_MESSAGE&quot;,
&#9;destructorNeededValue = &quot;To save instances into Values, provide a destructor function. This will be an error soon - see discussion #183 on GitHub.&quot;,
&#9;destructorNeededComputed = &quot;To return instances from Computeds, provide a destructor function. This will be an error soon - see discussion #183 on GitHub.&quot;,
&#9;multiReturnComputed = &quot;Returning multiple values from Computeds is discouraged, as behaviour will change soon - see discussion #189 on GitHub.&quot;,
&#9;destructorNeededForKeys = &quot;To return instances from ForKeys, provide a destructor function. This will be an error soon - see discussion #183 on GitHub.&quot;,
&#9;destructorNeededForValues = &quot;To return instances from ForValues, provide a destructor function. This will be an error soon - see discussion #183 on GitHub.&quot;,
&#9;destructorNeededForPairs = &quot;To return instances from ForPairs, provide a destructor function. This will be an error soon - see discussion #183 on GitHub.&quot;,
&#9;forKeysProcessorError = &quot;ForKeys callback error: ERROR_MESSAGE&quot;,
&#9;forKeysKeyCollision = &quot;ForKeys should only write to output key &apos;%s&apos; once when processing key changes, but it wrote to it twice. Previously input key: &apos;%s&apos;; New input key: &apos;%s&apos;&quot;,
&#9;forKeysDestructorError = &quot;ForKeys destructor error: ERROR_MESSAGE&quot;,
&#9;forPairsDestructorError = &quot;ForPairs destructor error: ERROR_MESSAGE&quot;,
&#9;forPairsKeyCollision = &quot;ForPairs should only write to output key &apos;%s&apos; once when processing key changes, but it wrote to it twice. Previous input pair: &apos;[%s] = %s&apos;; New input pair: &apos;[%s] = %s&apos;&quot;,
&#9;forPairsProcessorError = &quot;ForPairs callback error: ERROR_MESSAGE&quot;,
&#9;forValuesProcessorError = &quot;ForValues callback error: ERROR_MESSAGE&quot;,
&#9;forValuesDestructorError = &quot;ForValues destructor error: ERROR_MESSAGE&quot;,
&#9;invalidChangeHandler = &quot;The change handler for the &apos;%s&apos; property must be a function.&quot;,
&#9;invalidAttributeChangeHandler = &quot;The change handler for the &apos;%s&apos; attribute must be a function.&quot;,
&#9;invalidEventHandler = &quot;The handler for the &apos;%s&apos; event must be a function.&quot;,
&#9;invalidPropertyType = &quot;&apos;%s.%s&apos; expected a &apos;%s&apos; type, but got a &apos;%s&apos; type.&quot;,
&#9;invalidRefType = &quot;Instance refs must be Value objects.&quot;,
&#9;invalidOutType = &quot;[Out] properties must be given Value objects.&quot;,
&#9;invalidAttributeOutType = &quot;[AttributeOut] properties must be given Value objects.&quot;,
&#9;invalidOutProperty = &quot;The %s class doesn&apos;t have a property called &apos;%s&apos;.&quot;,
&#9;invalidOutAttributeName = &quot;The %s class doesn&apos;t have an attribute called &apos;%s&apos;.&quot;,
&#9;invalidSpringDamping = &quot;The damping ratio for a spring must be &gt;= 0. (damping was %.2f)&quot;,
&#9;invalidSpringSpeed = &quot;The speed of a spring must be &gt;= 0. (speed was %.2f)&quot;,
&#9;mistypedSpringDamping = &quot;The damping ratio for a spring must be a number. (got a %s)&quot;,
&#9;mistypedSpringSpeed = &quot;The speed of a spring must be a number. (got a %s)&quot;,
&#9;mistypedTweenInfo = &quot;The tween info of a tween must be a TweenInfo. (got a %s)&quot;,
&#9;noTaskScheduler = &quot;Fusion is not connected to an external task scheduler.&quot;,
&#9;propertySetError = &quot;Error setting property: ERROR_MESSAGE&quot;,
&#9;springTypeMismatch = &quot;The type &apos;%s&apos; doesn&apos;t match the spring&apos;s type &apos;%s&apos;.&quot;,
&#9;stateGetWasRemoved = &quot;`StateObject:get()` has been replaced by `use()` and `peek()` - see discussion #217 on GitHub.&quot;,
&#9;strictReadError = &quot;&apos;%s&apos; is not a valid member of &apos;%s&apos;.&quot;,
&#9;unknownMessage = &quot;Unknown error: ERROR_MESSAGE&quot;,
&#9;unrecognisedChildType = &quot;&apos;%s&apos; type children aren&apos;t accepted by `[Children]`.&quot;,
&#9;unrecognisedPropertyKey = &quot;&apos;%s&apos; keys aren&apos;t accepted in property tables.&quot;,
&#9;unrecognisedPropertyStage = &quot;&apos;%s&apos; isn&apos;t a valid stage for a special key to be applied at.&quot;
}</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000109d</UniqueId>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBX52819080DCEF40D8BAB83238BB9DF5F4">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b88</UniqueId>
								<string name="Name">Colour</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a40000109e</UniqueId>
							</Properties>
							<Item class="ModuleScript" referent="RBX10CAF530B48449CC9BC0CF22346F6A22">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b89</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Oklab</string>
									<string name="ScriptGuid">{276a3c8e-2958-4e55-9822-7d8b04925183}</string>
									<string name="Source">--!strict

--[[
&#9;Provides functions for converting Color3s into Oklab space, for more
&#9;perceptually uniform colour blending.

&#9;See: https://bottosson.github.io/posts/oklab/
]]

local Oklab = {}

-- Converts a Color3 in RGB space to a Vector3 in Oklab space.
function Oklab.to(rgb: Color3): Vector3
&#9;local l = rgb.R * 0.4122214708 + rgb.G * 0.5363325363 + rgb.B * 0.0514459929
&#9;local m = rgb.R * 0.2119034982 + rgb.G * 0.6806995451 + rgb.B * 0.1073969566
&#9;local s = rgb.R * 0.0883024619 + rgb.G * 0.2817188376 + rgb.B * 0.6299787005

&#9;local lRoot = l ^ (1/3)
&#9;local mRoot = m ^ (1/3)
&#9;local sRoot = s ^ (1/3)

&#9;return Vector3.new(
&#9;&#9;lRoot * 0.2104542553 + mRoot * 0.7936177850 - sRoot * 0.0040720468,
&#9;&#9;lRoot * 1.9779984951 - mRoot * 2.4285922050 + sRoot * 0.4505937099,
&#9;&#9;lRoot * 0.0259040371 + mRoot * 0.7827717662 - sRoot * 0.8086757660
&#9;)
end

-- Converts a Vector3 in CIELAB space to a Color3 in RGB space.
-- The Color3 will be clamped by default unless specified otherwise.
function Oklab.from(lab: Vector3, unclamped: boolean?): Color3
&#9;local lRoot = lab.X + lab.Y * 0.3963377774 + lab.Z * 0.2158037573
&#9;local mRoot = lab.X - lab.Y * 0.1055613458 - lab.Z * 0.0638541728
&#9;local sRoot = lab.X - lab.Y * 0.0894841775 - lab.Z * 1.2914855480

&#9;local l = lRoot ^ 3
&#9;local m = mRoot ^ 3
&#9;local s = sRoot ^ 3

&#9;local red = l * 4.0767416621 - m * 3.3077115913 + s * 0.2309699292
&#9;local green = l * -1.2684380046 + m * 2.6097574011 - s * 0.3413193965
&#9;local blue = l * -0.0041960863 - m * 0.7034186147 + s * 1.7076147010

&#9;if not unclamped then
&#9;&#9;red = math.clamp(red, 0, 1)
&#9;&#9;green = math.clamp(green, 0, 1)
&#9;&#9;blue = math.clamp(blue, 0, 1)
&#9;end

&#9;return Color3.new(red, green, blue)
end

return Oklab
</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a40000109f</UniqueId>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBX75480B0813C849A2954AD1FDB7C2C275">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b8a</UniqueId>
								<string name="Name">Utility</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010a0</UniqueId>
							</Properties>
							<Item class="ModuleScript" referent="RBXEA119FB5B57847758AD9F8AB06DD9E8F">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b8b</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">isSimilar</string>
									<string name="ScriptGuid">{80993e88-89c5-41e8-9279-dc02b9d4d39a}</string>
									<string name="Source">--!strict
--[[
    Returns true if A and B are &apos;similar&apos; - i.e. any user of A would not need
    to recompute if it changed to B.
]]

local function isSimilar(a: any, b: any): boolean
    -- HACK: because tables are mutable data structures, don&apos;t make assumptions
    -- about similarity from equality for now (see issue #44)
    if typeof(a) == &quot;table&quot; then
        return false
    else
        -- NaN does not equal itself but is the same
        return a == b or a ~= a and b ~= b
    end
end

return isSimilar
</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010a1</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXAE07487EEB484FEA8F93457D16BC6D5E">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b8c</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">xtypeof</string>
									<string name="ScriptGuid">{c9a29ce2-2977-41cd-855b-8715d953161f}</string>
									<string name="Source">--!strict

--[[
&#9;Extended typeof, designed for identifying custom objects.
&#9;If given a table with a `type` string, returns that.
&#9;Otherwise, returns `typeof()` the argument.
]]

local function xtypeof(x: any)
&#9;local typeString = typeof(x)

&#9;if typeString == &quot;table&quot; and typeof(x.type) == &quot;string&quot; then
&#9;&#9;return x.type
&#9;else
&#9;&#9;return typeString
&#9;end
end

return xtypeof</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010a2</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXE62ECE3D2E714336A8729A592676981A">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b8d</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">cleanup</string>
									<string name="ScriptGuid">{31fd62f4-66e5-45d8-bc12-251bf29359b5}</string>
									<string name="Source">--!strict

--[[
&#9;Cleans up the tasks passed in as the arguments.
&#9;A task can be any of the following:

&#9;- an Instance - will be destroyed
&#9;- an RBXScriptConnection - will be disconnected
&#9;- a function - will be run
&#9;- a table with a `Destroy` or `destroy` function - will be called
&#9;- an array - `cleanup` will be called on each item
]]

local function cleanupOne(task: any)
&#9;local taskType = typeof(task)

&#9;-- case 1: Instance
&#9;if taskType == &quot;Instance&quot; then
&#9;&#9;task:Destroy()

&#9;-- case 2: RBXScriptConnection
&#9;elseif taskType == &quot;RBXScriptConnection&quot; then
&#9;&#9;task:Disconnect()

&#9;-- case 3: callback
&#9;elseif taskType == &quot;function&quot; then
&#9;&#9;task()

&#9;elseif taskType == &quot;table&quot; then
&#9;&#9;-- case 4: destroy() function
&#9;&#9;if typeof(task.destroy) == &quot;function&quot; then
&#9;&#9;&#9;task:destroy()

&#9;&#9;-- case 5: Destroy() function
&#9;&#9;elseif typeof(task.Destroy) == &quot;function&quot; then
&#9;&#9;&#9;task:Destroy()

&#9;&#9;-- case 6: array of tasks
&#9;&#9;elseif task[1] ~= nil then
&#9;&#9;&#9;for _, subtask in ipairs(task) do
&#9;&#9;&#9;&#9;cleanupOne(subtask)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

local function cleanup(...: any)
&#9;for index = 1, select(&quot;#&quot;, ...) do
&#9;&#9;cleanupOne(select(index, ...))
&#9;end
end

return cleanup</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010a3</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX7310F0FE95304E61BCDB4CD8E83B7086">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b8e</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">restrictRead</string>
									<string name="ScriptGuid">{a71ec59e-a2ef-4111-9006-7c82b823cca3}</string>
									<string name="Source">--!strict

--[[
&#9;Restricts the reading of missing members for a table.
]]

local Package = script.Parent.Parent
local logError = require(Package.Logging.logError)

type table = {[any]: any}

local function restrictRead(tableName: string, strictTable: table): table
&#9;-- FIXME: Typed Luau doesn&apos;t recognise this correctly yet
&#9;local metatable = getmetatable(strictTable :: any)

&#9;if metatable == nil then
&#9;&#9;metatable = {}
&#9;&#9;setmetatable(strictTable, metatable)
&#9;end

&#9;function metatable:__index(memberName)
&#9;&#9;logError(&quot;strictReadError&quot;, nil, tostring(memberName), tableName)
&#9;end

&#9;return strictTable
end

return restrictRead</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010a4</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBXC5CF97549C5A405F823FF331358C464A">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b8f</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">doNothing</string>
									<string name="ScriptGuid">{5f1f61a4-bf94-4723-8297-3c2dbf1095a6}</string>
									<string name="Source">--!strict

--[[
&#9;An empty function. Often used as a destructor to indicate no destruction.
]]

local function doNothing(...: any)
end

return doNothing</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010a5</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX2C11ADDA72DE437AABC5C34D7E3CADFA">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b90</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">Contextual</string>
									<string name="ScriptGuid">{833f3049-8d0b-409b-8d73-da3a17566ed5}</string>
									<string name="Source">--!strict
--!nolint LocalShadow

--[[
    Time-based contextual values, to allow for transparently passing values down
&#9;the call stack.
]]

local Package = script.Parent.Parent
local Types = require(Package.Types)
-- Logging
local logError = require(Package.Logging.logError)
local parseError = require(Package.Logging.parseError)

local class = {}

local CLASS_METATABLE = {__index = class}
local WEAK_KEYS_METATABLE = {__mode = &quot;k&quot;}

--[[
&#9;Returns the current value of this contextual.
]]
function class:now(): unknown
&#9;local thread = coroutine.running()
&#9;local value = self._valuesNow[thread]
&#9;if typeof(value) ~= &quot;table&quot; then
&#9;&#9;return self._defaultValue
&#9;else
&#9;&#9;local value: {value: unknown} = value :: any
&#9;&#9;return value.value
&#9;end
end

--[[
&#9;Temporarily assigns a value to this contextual.
]]
function class:is(
&#9;newValue: unknown
)
&#9;local methods = {}
&#9;-- Methods use colon `:` syntax for consistency and autocomplete but we
&#9;-- actually want them to operate on the `self` from this outer lexical scope
&#9;local contextual = self
&#9;
&#9;function methods:during&lt;T, A...&gt;(
&#9;&#9;callback: (A...) -&gt; T,
&#9;&#9;...: A...
&#9;): T
&#9;&#9;local thread = coroutine.running()
&#9;&#9;local prevValue = contextual._valuesNow[thread]
&#9;&#9;-- Storing the value in this format allows us to distinguish storing
&#9;&#9;-- `nil` from not calling `:during()` at all.
&#9;&#9;contextual._valuesNow[thread] = { value = newValue }
&#9;&#9;local ok, value = xpcall(callback, parseError, ...)
&#9;&#9;contextual._valuesNow[thread] = prevValue
&#9;&#9;if ok then
&#9;&#9;&#9;return value
&#9;&#9;else
&#9;&#9;&#9;logError(&quot;contextualCallbackError&quot;, value)
&#9;&#9;end
&#9;end

&#9;return methods
end

local function Contextual&lt;T&gt;(
&#9;defaultValue: T
): Types.Contextual&lt;T&gt;
&#9;local self = setmetatable({
&#9;&#9;type = &quot;Contextual&quot;,
&#9;&#9;-- if we held strong references to threads here, then if a thread was
&#9;&#9;-- killed before this contextual had a chance to finish executing its
&#9;&#9;-- callback, it would be held strongly in this table forever
&#9;&#9;_valuesNow = setmetatable({}, WEAK_KEYS_METATABLE),
&#9;&#9;_defaultValue = defaultValue
&#9;}, CLASS_METATABLE)

&#9;return self
end

return Contextual</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010a6</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX080C0A66D0F34AC3A0E6A1D00CFBB20B">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b91</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">needsDestruction</string>
									<string name="ScriptGuid">{d693c18e-118b-4209-988b-901124e419c6}</string>
									<string name="Source">--!strict

--[[
    Returns true if the given value is not automatically memory managed, and
    requires manual cleanup.
]]

local function needsDestruction(x: any): boolean
    return typeof(x) == &quot;Instance&quot;
end

return needsDestruction</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010a7</UniqueId>
								</Properties>
							</Item>
							<Item class="ModuleScript" referent="RBX88168A12B86A41F1880A763FE22DBCE4">
								<Properties>
									<string name="AttributesSerialize"></string>
									<bool name="DefinesCapabilities">false</bool>
									<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b92</UniqueId>
									<string name="LinkedSource"></string>
									<string name="Name">None</string>
									<string name="ScriptGuid">{69dbbcc6-4893-4e03-85e1-2088986417fd}</string>
									<string name="Source">--!strict

--[[
&#9;A symbol for representing nil values in contexts where nil is not usable.
]]

local Package = script.Parent.Parent
local Types = require(Package.Types)

return {
&#9;type = &quot;Symbol&quot;,
&#9;name = &quot;None&quot;
} :: Types.None</string>
									<int64 name="SourceAssetId">-1</int64>
									<string name="Tags"></string>
									<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010a8</UniqueId>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX0A22D6C5C91E43DA86108917D23F5C3A">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b93</UniqueId>
						<string name="Name">lukadev-0_typed-promise@4.0.2</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010a9</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX7922811788634517B68A5DC3C945B4B2">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b94</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">Promise</string>
							<string name="ScriptGuid">{8655d16d-b953-4a35-b282-b300ef8d1db1}</string>
							<string name="Source">return require(script.Parent.Parent[&quot;evaera_promise@4.0.0&quot;][&quot;promise&quot;])
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010aa</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX6F12175AD99B4BBFB8B2D9BBB7BCCCCE">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b95</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">typed-promise</string>
							<string name="ScriptGuid">{cedd9dca-a17a-471b-915e-9c47056330f6}</string>
							<string name="Source">--!strict
-- Partial types for Promise

local Promise = require(script.Parent.Promise) :: any

export type Status = &quot;Started&quot; | &quot;Resolved&quot; | &quot;Rejected&quot; | &quot;Cancelled&quot;

export type Promise = {
&#9;andThen: (
&#9;&#9;self: Promise,
&#9;&#9;successHandler: (...any) -&gt; ...any,
&#9;&#9;failureHandler: ((...any) -&gt; ...any)?
&#9;) -&gt; Promise,
&#9;andThenCall: &lt;TArgs...&gt;(self: Promise, callback: (TArgs...) -&gt; ...any, TArgs...) -&gt; any,
&#9;andThenReturn: (self: Promise, ...any) -&gt; Promise,

&#9;await: (self: Promise) -&gt; (boolean, ...any),
&#9;awaitStatus: (self: Promise) -&gt; (Status, ...any),

&#9;cancel: (self: Promise) -&gt; (),
&#9;catch: (self: Promise, failureHandler: (...any) -&gt; ...any) -&gt; Promise,
&#9;expect: (self: Promise) -&gt; ...any,

&#9;finally: (self: Promise, finallyHandler: (status: Status) -&gt; ...any) -&gt; Promise,
&#9;finallyCall: &lt;TArgs...&gt;(self: Promise, callback: (TArgs...) -&gt; ...any, TArgs...) -&gt; Promise,
&#9;finallyReturn: (self: Promise, ...any) -&gt; Promise,

&#9;getStatus: (self: Promise) -&gt; Status,
&#9;now: (self: Promise, rejectionValue: any?) -&gt; Promise,
&#9;tap: (self: Promise, tapHandler: (...any) -&gt; ...any) -&gt; Promise,
&#9;timeout: (self: Promise, seconds: number, rejectionValue: any?) -&gt; Promise,
}

export type TypedPromise&lt;T...&gt; = {
&#9;andThen: (self: Promise, successHandler: (T...) -&gt; ...any, failureHandler: ((...any) -&gt; ...any)?) -&gt; Promise,
&#9;andThenCall: &lt;TArgs...&gt;(self: Promise, callback: (TArgs...) -&gt; ...any, TArgs...) -&gt; Promise,
&#9;andThenReturn: (self: Promise, ...any) -&gt; Promise,

&#9;await: (self: Promise) -&gt; (boolean, T...),
&#9;awaitStatus: (self: Promise) -&gt; (Status, T...),

&#9;cancel: (self: Promise) -&gt; (),
&#9;catch: (self: Promise, failureHandler: (...any) -&gt; ...any) -&gt; Promise,
&#9;expect: (self: Promise) -&gt; T...,

&#9;finally: (self: Promise, finallyHandler: (status: Status) -&gt; ...any) -&gt; Promise,
&#9;finallyCall: &lt;TArgs...&gt;(self: Promise, callback: (TArgs...) -&gt; ...any, TArgs...) -&gt; Promise,
&#9;finallyReturn: (self: Promise, ...any) -&gt; Promise,

&#9;getStatus: (self: Promise) -&gt; Status,
&#9;now: (self: Promise, rejectionValue: any?) -&gt; Promise,
&#9;tap: (self: Promise, tapHandler: (T...) -&gt; ...any) -&gt; Promise,
&#9;timeout: (self: Promise, seconds: number, rejectionValue: any?) -&gt; Promise,
}

type Signal&lt;T...&gt; = {
&#9;Connect: (self: Signal&lt;T...&gt;, callback: (T...) -&gt; ...any) -&gt; SignalConnection,
}

type SignalConnection = {
&#9;Disconnect: (self: SignalConnection) -&gt; ...any,
&#9;[any]: any,
}

return Promise :: {
&#9;Error: any,

&#9;all: &lt;T&gt;(promises: { TypedPromise&lt;T&gt; }) -&gt; TypedPromise&lt;{ T }&gt;,
&#9;allSettled: &lt;T&gt;(promise: { TypedPromise&lt;T&gt; }) -&gt; TypedPromise&lt;{ Status }&gt;,
&#9;any: &lt;T&gt;(promise: { TypedPromise&lt;T&gt; }) -&gt; TypedPromise&lt;T&gt;,
&#9;defer: &lt;TReturn...&gt;(
&#9;&#9;executor: (
&#9;&#9;&#9;resolve: (TReturn...) -&gt; (),
&#9;&#9;&#9;reject: (...any) -&gt; (),
&#9;&#9;&#9;onCancel: (abortHandler: (() -&gt; ())?) -&gt; boolean
&#9;&#9;) -&gt; ()
&#9;) -&gt; TypedPromise&lt;TReturn...&gt;,
&#9;delay: (seconds: number) -&gt; TypedPromise&lt;number&gt;,
&#9;each: &lt;T, TReturn&gt;(
&#9;&#9;list: { T | TypedPromise&lt;T&gt; },
&#9;&#9;predicate: (value: T, index: number) -&gt; TReturn | TypedPromise&lt;TReturn&gt;
&#9;) -&gt; TypedPromise&lt;{ TReturn }&gt;,
&#9;fold: &lt;T, TReturn&gt;(
&#9;&#9;list: { T | TypedPromise&lt;T&gt; },
&#9;&#9;reducer: (accumulator: TReturn, value: T, index: number) -&gt; TReturn | TypedPromise&lt;TReturn&gt;
&#9;) -&gt; TypedPromise&lt;TReturn&gt;,
&#9;fromEvent: &lt;TReturn...&gt;(
&#9;&#9;event: Signal&lt;TReturn...&gt;,
&#9;&#9;predicate: ((TReturn...) -&gt; boolean)?
&#9;) -&gt; TypedPromise&lt;TReturn...&gt;,
&#9;is: (object: any) -&gt; boolean,
&#9;new: &lt;TReturn...&gt;(
&#9;&#9;executor: (
&#9;&#9;&#9;resolve: (TReturn...) -&gt; (),
&#9;&#9;&#9;reject: (...any) -&gt; (),
&#9;&#9;&#9;onCancel: (abortHandler: (() -&gt; ())?) -&gt; boolean
&#9;&#9;) -&gt; ()
&#9;) -&gt; TypedPromise&lt;TReturn...&gt;,
&#9;onUnhandledRejection: (callback: (promise: TypedPromise&lt;any&gt;, ...any) -&gt; ()) -&gt; () -&gt; (),
&#9;promisify: &lt;TArgs..., TReturn...&gt;(callback: (TArgs...) -&gt; TReturn...) -&gt; (TArgs...) -&gt; TypedPromise&lt;TReturn...&gt;,
&#9;race: &lt;T&gt;(promises: { TypedPromise&lt;T&gt; }) -&gt; TypedPromise&lt;T&gt;,
&#9;reject: (...any) -&gt; TypedPromise&lt;...any&gt;,
&#9;resolve: &lt;TReturn...&gt;(TReturn...) -&gt; TypedPromise&lt;TReturn...&gt;,
&#9;retry: &lt;TArgs..., TReturn...&gt;(
&#9;&#9;callback: (TArgs...) -&gt; TypedPromise&lt;TReturn...&gt;,
&#9;&#9;times: number,
&#9;&#9;TArgs...
&#9;) -&gt; TypedPromise&lt;TReturn...&gt;,
&#9;retryWithDelay: &lt;TArgs..., TReturn...&gt;(
&#9;&#9;callback: (TArgs...) -&gt; TypedPromise&lt;TReturn...&gt;,
&#9;&#9;times: number,
&#9;&#9;seconds: number,
&#9;&#9;TArgs...
&#9;) -&gt; TypedPromise&lt;TReturn...&gt;,
&#9;some: &lt;T&gt;(promise: { TypedPromise&lt;T&gt; }, count: number) -&gt; TypedPromise&lt;{ T }&gt;,
&#9;try: &lt;TArgs..., TReturn...&gt;(callback: (TArgs...) -&gt; TReturn..., TArgs...) -&gt; TypedPromise&lt;TReturn...&gt;,
}
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010ab</UniqueId>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBX4F62CF10017F4E29AEA47FCBDD22AF38">
					<Properties>
						<string name="AttributesSerialize"></string>
						<bool name="DefinesCapabilities">false</bool>
						<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b96</UniqueId>
						<string name="Name">evaera_promise@4.0.0</string>
						<int64 name="SourceAssetId">-1</int64>
						<string name="Tags"></string>
						<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010ac</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="RBX4E60E74C75734C75A5E1551D19C33DB4">
						<Properties>
							<string name="AttributesSerialize"></string>
							<bool name="DefinesCapabilities">false</bool>
							<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b97</UniqueId>
							<string name="LinkedSource"></string>
							<string name="Name">promise</string>
							<string name="ScriptGuid">{a46a7668-a053-4fdb-81a2-3def86dcea1c}</string>
							<string name="Source">--[[
&#9;An implementation of Promises similar to Promise/A+.
]]

local ERROR_NON_PROMISE_IN_LIST = &quot;Non-promise value passed into %s at index %s&quot;
local ERROR_NON_LIST = &quot;Please pass a list of promises to %s&quot;
local ERROR_NON_FUNCTION = &quot;Please pass a handler function to %s!&quot;
local MODE_KEY_METATABLE = { __mode = &quot;k&quot; }

local function isCallable(value)
&#9;if type(value) == &quot;function&quot; then
&#9;&#9;return true
&#9;end

&#9;if type(value) == &quot;table&quot; then
&#9;&#9;local metatable = getmetatable(value)
&#9;&#9;if metatable and type(rawget(metatable, &quot;__call&quot;)) == &quot;function&quot; then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end

&#9;return false
end

--[[
&#9;Creates an enum dictionary with some metamethods to prevent common mistakes.
]]
local function makeEnum(enumName, members)
&#9;local enum = {}

&#9;for _, memberName in ipairs(members) do
&#9;&#9;enum[memberName] = memberName
&#9;end

&#9;return setmetatable(enum, {
&#9;&#9;__index = function(_, k)
&#9;&#9;&#9;error(string.format(&quot;%s is not in %s!&quot;, k, enumName), 2)
&#9;&#9;end,
&#9;&#9;__newindex = function()
&#9;&#9;&#9;error(string.format(&quot;Creating new members in %s is not allowed!&quot;, enumName), 2)
&#9;&#9;end,
&#9;})
end

--[=[
&#9;An object to represent runtime errors that occur during execution.
&#9;Promises that experience an error like this will be rejected with
&#9;an instance of this object.

&#9;@class Error
]=]
local Error
do
&#9;Error = {
&#9;&#9;Kind = makeEnum(&quot;Promise.Error.Kind&quot;, {
&#9;&#9;&#9;&quot;ExecutionError&quot;,
&#9;&#9;&#9;&quot;AlreadyCancelled&quot;,
&#9;&#9;&#9;&quot;NotResolvedInTime&quot;,
&#9;&#9;&#9;&quot;TimedOut&quot;,
&#9;&#9;}),
&#9;}
&#9;Error.__index = Error

&#9;function Error.new(options, parent)
&#9;&#9;options = options or {}
&#9;&#9;return setmetatable({
&#9;&#9;&#9;error = tostring(options.error) or &quot;[This error has no error text.]&quot;,
&#9;&#9;&#9;trace = options.trace,
&#9;&#9;&#9;context = options.context,
&#9;&#9;&#9;kind = options.kind,
&#9;&#9;&#9;parent = parent,
&#9;&#9;&#9;createdTick = os.clock(),
&#9;&#9;&#9;createdTrace = debug.traceback(),
&#9;&#9;}, Error)
&#9;end

&#9;function Error.is(anything)
&#9;&#9;if type(anything) == &quot;table&quot; then
&#9;&#9;&#9;local metatable = getmetatable(anything)

&#9;&#9;&#9;if type(metatable) == &quot;table&quot; then
&#9;&#9;&#9;&#9;return rawget(anything, &quot;error&quot;) ~= nil and type(rawget(metatable, &quot;extend&quot;)) == &quot;function&quot;
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;return false
&#9;end

&#9;function Error.isKind(anything, kind)
&#9;&#9;assert(kind ~= nil, &quot;Argument #2 to Promise.Error.isKind must not be nil&quot;)

&#9;&#9;return Error.is(anything) and anything.kind == kind
&#9;end

&#9;function Error:extend(options)
&#9;&#9;options = options or {}

&#9;&#9;options.kind = options.kind or self.kind

&#9;&#9;return Error.new(options, self)
&#9;end

&#9;function Error:getErrorChain()
&#9;&#9;local runtimeErrors = { self }

&#9;&#9;while runtimeErrors[#runtimeErrors].parent do
&#9;&#9;&#9;table.insert(runtimeErrors, runtimeErrors[#runtimeErrors].parent)
&#9;&#9;end

&#9;&#9;return runtimeErrors
&#9;end

&#9;function Error:__tostring()
&#9;&#9;local errorStrings = {
&#9;&#9;&#9;string.format(&quot;-- Promise.Error(%s) --&quot;, self.kind or &quot;?&quot;),
&#9;&#9;}

&#9;&#9;for _, runtimeError in ipairs(self:getErrorChain()) do
&#9;&#9;&#9;table.insert(
&#9;&#9;&#9;&#9;errorStrings,
&#9;&#9;&#9;&#9;table.concat({
&#9;&#9;&#9;&#9;&#9;runtimeError.trace or runtimeError.error,
&#9;&#9;&#9;&#9;&#9;runtimeError.context,
&#9;&#9;&#9;&#9;}, &quot;\n&quot;)
&#9;&#9;&#9;)
&#9;&#9;end

&#9;&#9;return table.concat(errorStrings, &quot;\n&quot;)
&#9;end
end

--[[
&#9;Packs a number of arguments into a table and returns its length.

&#9;Used to cajole varargs without dropping sparse values.
]]
local function pack(...)
&#9;return select(&quot;#&quot;, ...), { ... }
end

--[[
&#9;Returns first value (success), and packs all following values.
]]
local function packResult(success, ...)
&#9;return success, select(&quot;#&quot;, ...), { ... }
end

local function makeErrorHandler(traceback)
&#9;assert(traceback ~= nil, &quot;traceback is nil&quot;)

&#9;return function(err)
&#9;&#9;-- If the error object is already a table, forward it directly.
&#9;&#9;-- Should we extend the error here and add our own trace?

&#9;&#9;if type(err) == &quot;table&quot; then
&#9;&#9;&#9;return err
&#9;&#9;end

&#9;&#9;return Error.new({
&#9;&#9;&#9;error = err,
&#9;&#9;&#9;kind = Error.Kind.ExecutionError,
&#9;&#9;&#9;trace = debug.traceback(tostring(err), 2),
&#9;&#9;&#9;context = &quot;Promise created at:\n\n&quot; .. traceback,
&#9;&#9;})
&#9;end
end

--[[
&#9;Calls a Promise executor with error handling.
]]
local function runExecutor(traceback, callback, ...)
&#9;return packResult(xpcall(callback, makeErrorHandler(traceback), ...))
end

--[[
&#9;Creates a function that invokes a callback with correct error handling and
&#9;resolution mechanisms.
]]
local function createAdvancer(traceback, callback, resolve, reject)
&#9;return function(...)
&#9;&#9;local ok, resultLength, result = runExecutor(traceback, callback, ...)

&#9;&#9;if ok then
&#9;&#9;&#9;resolve(unpack(result, 1, resultLength))
&#9;&#9;else
&#9;&#9;&#9;reject(result[1])
&#9;&#9;end
&#9;end
end

local function isEmpty(t)
&#9;return next(t) == nil
end

--[=[
&#9;An enum value used to represent the Promise&apos;s status.
&#9;@interface Status
&#9;@tag enum
&#9;@within Promise
&#9;.Started &quot;Started&quot; -- The Promise is executing, and not settled yet.
&#9;.Resolved &quot;Resolved&quot; -- The Promise finished successfully.
&#9;.Rejected &quot;Rejected&quot; -- The Promise was rejected.
&#9;.Cancelled &quot;Cancelled&quot; -- The Promise was cancelled before it finished.
]=]
--[=[
&#9;@prop Status Status
&#9;@within Promise
&#9;@readonly
&#9;@tag enums
&#9;A table containing all members of the `Status` enum, e.g., `Promise.Status.Resolved`.
]=]
--[=[
&#9;A Promise is an object that represents a value that will exist in the future, but doesn&apos;t right now.
&#9;Promises allow you to then attach callbacks that can run once the value becomes available (known as *resolving*),
&#9;or if an error has occurred (known as *rejecting*).

&#9;@class Promise
&#9;@__index prototype
]=]
local Promise = {
&#9;Error = Error,
&#9;Status = makeEnum(&quot;Promise.Status&quot;, { &quot;Started&quot;, &quot;Resolved&quot;, &quot;Rejected&quot;, &quot;Cancelled&quot; }),
&#9;_getTime = os.clock,
&#9;_timeEvent = game:GetService(&quot;RunService&quot;).Heartbeat,
&#9;_unhandledRejectionCallbacks = {},
}
Promise.prototype = {}
Promise.__index = Promise.prototype

function Promise._new(traceback, callback, parent)
&#9;if parent ~= nil and not Promise.is(parent) then
&#9;&#9;error(&quot;Argument #2 to Promise.new must be a promise or nil&quot;, 2)
&#9;end

&#9;local self = {
&#9;&#9;-- The executor thread.
&#9;&#9;_thread = nil,

&#9;&#9;-- Used to locate where a promise was created
&#9;&#9;_source = traceback,

&#9;&#9;_status = Promise.Status.Started,

&#9;&#9;-- A table containing a list of all results, whether success or failure.
&#9;&#9;-- Only valid if _status is set to something besides Started
&#9;&#9;_values = nil,

&#9;&#9;-- Lua doesn&apos;t like sparse arrays very much, so we explicitly store the
&#9;&#9;-- length of _values to handle middle nils.
&#9;&#9;_valuesLength = -1,

&#9;&#9;-- Tracks if this Promise has no error observers..
&#9;&#9;_unhandledRejection = true,

&#9;&#9;-- Queues representing functions we should invoke when we update!
&#9;&#9;_queuedResolve = {},
&#9;&#9;_queuedReject = {},
&#9;&#9;_queuedFinally = {},

&#9;&#9;-- The function to run when/if this promise is cancelled.
&#9;&#9;_cancellationHook = nil,

&#9;&#9;-- The &quot;parent&quot; of this promise in a promise chain. Required for
&#9;&#9;-- cancellation propagation upstream.
&#9;&#9;_parent = parent,

&#9;&#9;-- Consumers are Promises that have chained onto this one.
&#9;&#9;-- We track them for cancellation propagation downstream.
&#9;&#9;_consumers = setmetatable({}, MODE_KEY_METATABLE),
&#9;}

&#9;if parent and parent._status == Promise.Status.Started then
&#9;&#9;parent._consumers[self] = true
&#9;end

&#9;setmetatable(self, Promise)

&#9;local function resolve(...)
&#9;&#9;self:_resolve(...)
&#9;end

&#9;local function reject(...)
&#9;&#9;self:_reject(...)
&#9;end

&#9;local function onCancel(cancellationHook)
&#9;&#9;if cancellationHook then
&#9;&#9;&#9;if self._status == Promise.Status.Cancelled then
&#9;&#9;&#9;&#9;cancellationHook()
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;self._cancellationHook = cancellationHook
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;return self._status == Promise.Status.Cancelled
&#9;end

&#9;self._thread = coroutine.create(function()
&#9;&#9;local ok, _, result = runExecutor(self._source, callback, resolve, reject, onCancel)

&#9;&#9;if not ok then
&#9;&#9;&#9;reject(result[1])
&#9;&#9;end
&#9;end)

&#9;task.spawn(self._thread)

&#9;return self
end

--[=[
&#9;Construct a new Promise that will be resolved or rejected with the given callbacks.

&#9;If you `resolve` with a Promise, it will be chained onto.

&#9;You can safely yield within the executor function and it will not block the creating thread.

&#9;```lua
&#9;local myFunction()
&#9;&#9;return Promise.new(function(resolve, reject, onCancel)
&#9;&#9;&#9;wait(1)
&#9;&#9;&#9;resolve(&quot;Hello world!&quot;)
&#9;&#9;end)
&#9;end

&#9;myFunction():andThen(print)
&#9;```

&#9;You do not need to use `pcall` within a Promise. Errors that occur during execution will be caught and turned into a rejection automatically. If `error()` is called with a table, that table will be the rejection value. Otherwise, string errors will be converted into `Promise.Error(Promise.Error.Kind.ExecutionError)` objects for tracking debug information.

&#9;You may register an optional cancellation hook by using the `onCancel` argument:

&#9;* This should be used to abort any ongoing operations leading up to the promise being settled.
&#9;* Call the `onCancel` function with a function callback as its only argument to set a hook which will in turn be called when/if the promise is cancelled.
&#9;* `onCancel` returns `true` if the Promise was already cancelled when you called `onCancel`.
&#9;* Calling `onCancel` with no argument will not override a previously set cancellation hook, but it will still return `true` if the Promise is currently cancelled.
&#9;* You can set the cancellation hook at any time before resolving.
&#9;* When a promise is cancelled, calls to `resolve` or `reject` will be ignored, regardless of if you set a cancellation hook or not.

&#9;:::caution
&#9;If the Promise is cancelled, the `executor` thread is closed with `coroutine.close` after the cancellation hook is called.

&#9;You must perform any cleanup code in the cancellation hook: any time your executor yields, it **may never resume**.
&#9;:::

&#9;@param executor (resolve: (...: any) -&gt; (), reject: (...: any) -&gt; (), onCancel: (abortHandler?: () -&gt; ()) -&gt; boolean) -&gt; ()
&#9;@return Promise
]=]
function Promise.new(executor)
&#9;return Promise._new(debug.traceback(nil, 2), executor)
end

function Promise:__tostring()
&#9;return string.format(&quot;Promise(%s)&quot;, self._status)
end

--[=[
&#9;The same as [Promise.new](/api/Promise#new), except execution begins after the next `Heartbeat` event.

&#9;This is a spiritual replacement for `spawn`, but it does not suffer from the same [issues](https://eryn.io/gist/3db84579866c099cdd5bb2ff37947cec) as `spawn`.

&#9;```lua
&#9;local function waitForChild(instance, childName, timeout)
&#9;  return Promise.defer(function(resolve, reject)
&#9;&#9;local child = instance:WaitForChild(childName, timeout)

&#9;&#9;;(child and resolve or reject)(child)
&#9;  end)
&#9;end
&#9;```

&#9;@param executor (resolve: (...: any) -&gt; (), reject: (...: any) -&gt; (), onCancel: (abortHandler?: () -&gt; ()) -&gt; boolean) -&gt; ()
&#9;@return Promise
]=]
function Promise.defer(executor)
&#9;local traceback = debug.traceback(nil, 2)
&#9;local promise
&#9;promise = Promise._new(traceback, function(resolve, reject, onCancel)
&#9;&#9;local connection
&#9;&#9;connection = Promise._timeEvent:Connect(function()
&#9;&#9;&#9;connection:Disconnect()
&#9;&#9;&#9;local ok, _, result = runExecutor(traceback, executor, resolve, reject, onCancel)

&#9;&#9;&#9;if not ok then
&#9;&#9;&#9;&#9;reject(result[1])
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end)

&#9;return promise
end

-- Backwards compatibility
Promise.async = Promise.defer

--[=[
&#9;Creates an immediately resolved Promise with the given value.

&#9;```lua
&#9;-- Example using Promise.resolve to deliver cached values:
&#9;function getSomething(name)
&#9;&#9;if cache[name] then
&#9;&#9;&#9;return Promise.resolve(cache[name])
&#9;&#9;else
&#9;&#9;&#9;return Promise.new(function(resolve, reject)
&#9;&#9;&#9;&#9;local thing = getTheThing()
&#9;&#9;&#9;&#9;cache[name] = thing

&#9;&#9;&#9;&#9;resolve(thing)
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end
&#9;```

&#9;@param ... any
&#9;@return Promise&lt;...any&gt;
]=]
function Promise.resolve(...)
&#9;local length, values = pack(...)
&#9;return Promise._new(debug.traceback(nil, 2), function(resolve)
&#9;&#9;resolve(unpack(values, 1, length))
&#9;end)
end

--[=[
&#9;Creates an immediately rejected Promise with the given value.

&#9;:::caution
&#9;Something needs to consume this rejection (i.e. `:catch()` it), otherwise it will emit an unhandled Promise rejection warning on the next frame. Thus, you should not create and store rejected Promises for later use. Only create them on-demand as needed.
&#9;:::

&#9;@param ... any
&#9;@return Promise&lt;...any&gt;
]=]
function Promise.reject(...)
&#9;local length, values = pack(...)
&#9;return Promise._new(debug.traceback(nil, 2), function(_, reject)
&#9;&#9;reject(unpack(values, 1, length))
&#9;end)
end

--[[
&#9;Runs a non-promise-returning function as a Promise with the
  given arguments.
]]
function Promise._try(traceback, callback, ...)
&#9;local valuesLength, values = pack(...)

&#9;return Promise._new(traceback, function(resolve)
&#9;&#9;resolve(callback(unpack(values, 1, valuesLength)))
&#9;end)
end

--[=[
&#9;Begins a Promise chain, calling a function and returning a Promise resolving with its return value. If the function errors, the returned Promise will be rejected with the error. You can safely yield within the Promise.try callback.

&#9;:::info
&#9;`Promise.try` is similar to [Promise.promisify](#promisify), except the callback is invoked immediately instead of returning a new function.
&#9;:::

&#9;```lua
&#9;Promise.try(function()
&#9;&#9;return math.random(1, 2) == 1 and &quot;ok&quot; or error(&quot;Oh an error!&quot;)
&#9;end)
&#9;&#9;:andThen(function(text)
&#9;&#9;&#9;print(text)
&#9;&#9;end)
&#9;&#9;:catch(function(err)
&#9;&#9;&#9;warn(&quot;Something went wrong&quot;)
&#9;&#9;end)
&#9;```

&#9;@param callback (...: T...) -&gt; ...any
&#9;@param ... T... -- Additional arguments passed to `callback`
&#9;@return Promise
]=]
function Promise.try(callback, ...)
&#9;return Promise._try(debug.traceback(nil, 2), callback, ...)
end

--[[
&#9;Returns a new promise that:
&#9;&#9;* is resolved when all input promises resolve
&#9;&#9;* is rejected if ANY input promises reject
]]
function Promise._all(traceback, promises, amount)
&#9;if type(promises) ~= &quot;table&quot; then
&#9;&#9;error(string.format(ERROR_NON_LIST, &quot;Promise.all&quot;), 3)
&#9;end

&#9;-- We need to check that each value is a promise here so that we can produce
&#9;-- a proper error rather than a rejected promise with our error.
&#9;for i, promise in pairs(promises) do
&#9;&#9;if not Promise.is(promise) then
&#9;&#9;&#9;error(string.format(ERROR_NON_PROMISE_IN_LIST, &quot;Promise.all&quot;, tostring(i)), 3)
&#9;&#9;end
&#9;end

&#9;-- If there are no values then return an already resolved promise.
&#9;if #promises == 0 or amount == 0 then
&#9;&#9;return Promise.resolve({})
&#9;end

&#9;return Promise._new(traceback, function(resolve, reject, onCancel)
&#9;&#9;-- An array to contain our resolved values from the given promises.
&#9;&#9;local resolvedValues = {}
&#9;&#9;local newPromises = {}

&#9;&#9;-- Keep a count of resolved promises because just checking the resolved
&#9;&#9;-- values length wouldn&apos;t account for promises that resolve with nil.
&#9;&#9;local resolvedCount = 0
&#9;&#9;local rejectedCount = 0
&#9;&#9;local done = false

&#9;&#9;local function cancel()
&#9;&#9;&#9;for _, promise in ipairs(newPromises) do
&#9;&#9;&#9;&#9;promise:cancel()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;-- Called when a single value is resolved and resolves if all are done.
&#9;&#9;local function resolveOne(i, ...)
&#9;&#9;&#9;if done then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end

&#9;&#9;&#9;resolvedCount = resolvedCount + 1

&#9;&#9;&#9;if amount == nil then
&#9;&#9;&#9;&#9;resolvedValues[i] = ...
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;resolvedValues[resolvedCount] = ...
&#9;&#9;&#9;end

&#9;&#9;&#9;if resolvedCount &gt;= (amount or #promises) then
&#9;&#9;&#9;&#9;done = true
&#9;&#9;&#9;&#9;resolve(resolvedValues)
&#9;&#9;&#9;&#9;cancel()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;onCancel(cancel)

&#9;&#9;-- We can assume the values inside `promises` are all promises since we
&#9;&#9;-- checked above.
&#9;&#9;for i, promise in ipairs(promises) do
&#9;&#9;&#9;newPromises[i] = promise:andThen(function(...)
&#9;&#9;&#9;&#9;resolveOne(i, ...)
&#9;&#9;&#9;end, function(...)
&#9;&#9;&#9;&#9;rejectedCount = rejectedCount + 1

&#9;&#9;&#9;&#9;if amount == nil or #promises - rejectedCount &lt; amount then
&#9;&#9;&#9;&#9;&#9;cancel()
&#9;&#9;&#9;&#9;&#9;done = true

&#9;&#9;&#9;&#9;&#9;reject(...)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;end

&#9;&#9;if done then
&#9;&#9;&#9;cancel()
&#9;&#9;end
&#9;end)
end

--[=[
&#9;Accepts an array of Promises and returns a new promise that:
&#9;* is resolved after all input promises resolve.
&#9;* is rejected if *any* input promises reject.

&#9;:::info
&#9;Only the first return value from each promise will be present in the resulting array.
&#9;:::

&#9;After any input Promise rejects, all other input Promises that are still pending will be cancelled if they have no other consumers.

&#9;```lua
&#9;local promises = {
&#9;&#9;returnsAPromise(&quot;example 1&quot;),
&#9;&#9;returnsAPromise(&quot;example 2&quot;),
&#9;&#9;returnsAPromise(&quot;example 3&quot;),
&#9;}

&#9;return Promise.all(promises)
&#9;```

&#9;@param promises {Promise&lt;T&gt;}
&#9;@return Promise&lt;{T}&gt;
]=]
function Promise.all(promises)
&#9;return Promise._all(debug.traceback(nil, 2), promises)
end

--[=[
&#9;Folds an array of values or promises into a single value. The array is traversed sequentially.

&#9;The reducer function can return a promise or value directly. Each iteration receives the resolved value from the previous, and the first receives your defined initial value.

&#9;The folding will stop at the first rejection encountered.
&#9;```lua
&#9;local basket = {&quot;blueberry&quot;, &quot;melon&quot;, &quot;pear&quot;, &quot;melon&quot;}
&#9;Promise.fold(basket, function(cost, fruit)
&#9;&#9;if fruit == &quot;blueberry&quot; then
&#9;&#9;&#9;return cost -- blueberries are free!
&#9;&#9;else
&#9;&#9;&#9;-- call a function that returns a promise with the fruit price
&#9;&#9;&#9;return fetchPrice(fruit):andThen(function(fruitCost)
&#9;&#9;&#9;&#9;return cost + fruitCost
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end, 0)
&#9;```

&#9;@since v3.1.0
&#9;@param list {T | Promise&lt;T&gt;}
&#9;@param reducer (accumulator: U, value: T, index: number) -&gt; U | Promise&lt;U&gt;
&#9;@param initialValue U
]=]
function Promise.fold(list, reducer, initialValue)
&#9;assert(type(list) == &quot;table&quot;, &quot;Bad argument #1 to Promise.fold: must be a table&quot;)
&#9;assert(isCallable(reducer), &quot;Bad argument #2 to Promise.fold: must be a function&quot;)

&#9;local accumulator = Promise.resolve(initialValue)
&#9;return Promise.each(list, function(resolvedElement, i)
&#9;&#9;accumulator = accumulator:andThen(function(previousValueResolved)
&#9;&#9;&#9;return reducer(previousValueResolved, resolvedElement, i)
&#9;&#9;end)
&#9;end):andThen(function()
&#9;&#9;return accumulator
&#9;end)
end

--[=[
&#9;Accepts an array of Promises and returns a Promise that is resolved as soon as `count` Promises are resolved from the input array. The resolved array values are in the order that the Promises resolved in. When this Promise resolves, all other pending Promises are cancelled if they have no other consumers.

&#9;`count` 0 results in an empty array. The resultant array will never have more than `count` elements.

&#9;```lua
&#9;local promises = {
&#9;&#9;returnsAPromise(&quot;example 1&quot;),
&#9;&#9;returnsAPromise(&quot;example 2&quot;),
&#9;&#9;returnsAPromise(&quot;example 3&quot;),
&#9;}

&#9;return Promise.some(promises, 2) -- Only resolves with first 2 promises to resolve
&#9;```

&#9;@param promises {Promise&lt;T&gt;}
&#9;@param count number
&#9;@return Promise&lt;{T}&gt;
]=]
function Promise.some(promises, count)
&#9;assert(type(count) == &quot;number&quot;, &quot;Bad argument #2 to Promise.some: must be a number&quot;)

&#9;return Promise._all(debug.traceback(nil, 2), promises, count)
end

--[=[
&#9;Accepts an array of Promises and returns a Promise that is resolved as soon as *any* of the input Promises resolves. It will reject only if *all* input Promises reject. As soon as one Promises resolves, all other pending Promises are cancelled if they have no other consumers.

&#9;Resolves directly with the value of the first resolved Promise. This is essentially [[Promise.some]] with `1` count, except the Promise resolves with the value directly instead of an array with one element.

&#9;```lua
&#9;local promises = {
&#9;&#9;returnsAPromise(&quot;example 1&quot;),
&#9;&#9;returnsAPromise(&quot;example 2&quot;),
&#9;&#9;returnsAPromise(&quot;example 3&quot;),
&#9;}

&#9;return Promise.any(promises) -- Resolves with first value to resolve (only rejects if all 3 rejected)
&#9;```

&#9;@param promises {Promise&lt;T&gt;}
&#9;@return Promise&lt;T&gt;
]=]
function Promise.any(promises)
&#9;return Promise._all(debug.traceback(nil, 2), promises, 1):andThen(function(values)
&#9;&#9;return values[1]
&#9;end)
end

--[=[
&#9;Accepts an array of Promises and returns a new Promise that resolves with an array of in-place Statuses when all input Promises have settled. This is equivalent to mapping `promise:finally` over the array of Promises.

&#9;```lua
&#9;local promises = {
&#9;&#9;returnsAPromise(&quot;example 1&quot;),
&#9;&#9;returnsAPromise(&quot;example 2&quot;),
&#9;&#9;returnsAPromise(&quot;example 3&quot;),
&#9;}

&#9;return Promise.allSettled(promises)
&#9;```

&#9;@param promises {Promise&lt;T&gt;}
&#9;@return Promise&lt;{Status}&gt;
]=]
function Promise.allSettled(promises)
&#9;if type(promises) ~= &quot;table&quot; then
&#9;&#9;error(string.format(ERROR_NON_LIST, &quot;Promise.allSettled&quot;), 2)
&#9;end

&#9;-- We need to check that each value is a promise here so that we can produce
&#9;-- a proper error rather than a rejected promise with our error.
&#9;for i, promise in pairs(promises) do
&#9;&#9;if not Promise.is(promise) then
&#9;&#9;&#9;error(string.format(ERROR_NON_PROMISE_IN_LIST, &quot;Promise.allSettled&quot;, tostring(i)), 2)
&#9;&#9;end
&#9;end

&#9;-- If there are no values then return an already resolved promise.
&#9;if #promises == 0 then
&#9;&#9;return Promise.resolve({})
&#9;end

&#9;return Promise._new(debug.traceback(nil, 2), function(resolve, _, onCancel)
&#9;&#9;-- An array to contain our resolved values from the given promises.
&#9;&#9;local fates = {}
&#9;&#9;local newPromises = {}

&#9;&#9;-- Keep a count of resolved promises because just checking the resolved
&#9;&#9;-- values length wouldn&apos;t account for promises that resolve with nil.
&#9;&#9;local finishedCount = 0

&#9;&#9;-- Called when a single value is resolved and resolves if all are done.
&#9;&#9;local function resolveOne(i, ...)
&#9;&#9;&#9;finishedCount = finishedCount + 1

&#9;&#9;&#9;fates[i] = ...

&#9;&#9;&#9;if finishedCount &gt;= #promises then
&#9;&#9;&#9;&#9;resolve(fates)
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;onCancel(function()
&#9;&#9;&#9;for _, promise in ipairs(newPromises) do
&#9;&#9;&#9;&#9;promise:cancel()
&#9;&#9;&#9;end
&#9;&#9;end)

&#9;&#9;-- We can assume the values inside `promises` are all promises since we
&#9;&#9;-- checked above.
&#9;&#9;for i, promise in ipairs(promises) do
&#9;&#9;&#9;newPromises[i] = promise:finally(function(...)
&#9;&#9;&#9;&#9;resolveOne(i, ...)
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end)
end

--[=[
&#9;Accepts an array of Promises and returns a new promise that is resolved or rejected as soon as any Promise in the array resolves or rejects.

&#9;:::warning
&#9;If the first Promise to settle from the array settles with a rejection, the resulting Promise from `race` will reject.

&#9;If you instead want to tolerate rejections, and only care about at least one Promise resolving, you should use [Promise.any](#any) or [Promise.some](#some) instead.
&#9;:::

&#9;All other Promises that don&apos;t win the race will be cancelled if they have no other consumers.

&#9;```lua
&#9;local promises = {
&#9;&#9;returnsAPromise(&quot;example 1&quot;),
&#9;&#9;returnsAPromise(&quot;example 2&quot;),
&#9;&#9;returnsAPromise(&quot;example 3&quot;),
&#9;}

&#9;return Promise.race(promises) -- Only returns 1st value to resolve or reject
&#9;```

&#9;@param promises {Promise&lt;T&gt;}
&#9;@return Promise&lt;T&gt;
]=]
function Promise.race(promises)
&#9;assert(type(promises) == &quot;table&quot;, string.format(ERROR_NON_LIST, &quot;Promise.race&quot;))

&#9;for i, promise in pairs(promises) do
&#9;&#9;assert(Promise.is(promise), string.format(ERROR_NON_PROMISE_IN_LIST, &quot;Promise.race&quot;, tostring(i)))
&#9;end

&#9;return Promise._new(debug.traceback(nil, 2), function(resolve, reject, onCancel)
&#9;&#9;local newPromises = {}
&#9;&#9;local finished = false

&#9;&#9;local function cancel()
&#9;&#9;&#9;for _, promise in ipairs(newPromises) do
&#9;&#9;&#9;&#9;promise:cancel()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;local function finalize(callback)
&#9;&#9;&#9;return function(...)
&#9;&#9;&#9;&#9;cancel()
&#9;&#9;&#9;&#9;finished = true
&#9;&#9;&#9;&#9;return callback(...)
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if onCancel(finalize(reject)) then
&#9;&#9;&#9;return
&#9;&#9;end

&#9;&#9;for i, promise in ipairs(promises) do
&#9;&#9;&#9;newPromises[i] = promise:andThen(finalize(resolve), finalize(reject))
&#9;&#9;end

&#9;&#9;if finished then
&#9;&#9;&#9;cancel()
&#9;&#9;end
&#9;end)
end

--[=[
&#9;Iterates serially over the given an array of values, calling the predicate callback on each value before continuing.

&#9;If the predicate returns a Promise, we wait for that Promise to resolve before moving on to the next item
&#9;in the array.

&#9;:::info
&#9;`Promise.each` is similar to `Promise.all`, except the Promises are ran in order instead of all at once.

&#9;But because Promises are eager, by the time they are created, they&apos;re already running. Thus, we need a way to defer creation of each Promise until a later time.

&#9;The predicate function exists as a way for us to operate on our data instead of creating a new closure for each Promise. If you would prefer, you can pass in an array of functions, and in the predicate, call the function and return its return value.
&#9;:::

&#9;```lua
&#9;Promise.each({
&#9;&#9;&quot;foo&quot;,
&#9;&#9;&quot;bar&quot;,
&#9;&#9;&quot;baz&quot;,
&#9;&#9;&quot;qux&quot;
&#9;}, function(value, index)
&#9;&#9;return Promise.delay(1):andThen(function()
&#9;&#9;print((&quot;%d) Got %s!&quot;):format(index, value))
&#9;&#9;end)
&#9;end)

&#9;--[[
&#9;&#9;(1 second passes)
&#9;&#9;&gt; 1) Got foo!
&#9;&#9;(1 second passes)
&#9;&#9;&gt; 2) Got bar!
&#9;&#9;(1 second passes)
&#9;&#9;&gt; 3) Got baz!
&#9;&#9;(1 second passes)
&#9;&#9;&gt; 4) Got qux!
&#9;]]
&#9;```

&#9;If the Promise a predicate returns rejects, the Promise from `Promise.each` is also rejected with the same value.

&#9;If the array of values contains a Promise, when we get to that point in the list, we wait for the Promise to resolve before calling the predicate with the value.

&#9;If a Promise in the array of values is already Rejected when `Promise.each` is called, `Promise.each` rejects with that value immediately (the predicate callback will never be called even once). If a Promise in the list is already Cancelled when `Promise.each` is called, `Promise.each` rejects with `Promise.Error(Promise.Error.Kind.AlreadyCancelled`). If a Promise in the array of values is Started at first, but later rejects, `Promise.each` will reject with that value and iteration will not continue once iteration encounters that value.

&#9;Returns a Promise containing an array of the returned/resolved values from the predicate for each item in the array of values.

&#9;If this Promise returned from `Promise.each` rejects or is cancelled for any reason, the following are true:
&#9;- Iteration will not continue.
&#9;- Any Promises within the array of values will now be cancelled if they have no other consumers.
&#9;- The Promise returned from the currently active predicate will be cancelled if it hasn&apos;t resolved yet.

&#9;@since 3.0.0
&#9;@param list {T | Promise&lt;T&gt;}
&#9;@param predicate (value: T, index: number) -&gt; U | Promise&lt;U&gt;
&#9;@return Promise&lt;{U}&gt;
]=]
function Promise.each(list, predicate)
&#9;assert(type(list) == &quot;table&quot;, string.format(ERROR_NON_LIST, &quot;Promise.each&quot;))
&#9;assert(isCallable(predicate), string.format(ERROR_NON_FUNCTION, &quot;Promise.each&quot;))

&#9;return Promise._new(debug.traceback(nil, 2), function(resolve, reject, onCancel)
&#9;&#9;local results = {}
&#9;&#9;local promisesToCancel = {}

&#9;&#9;local cancelled = false

&#9;&#9;local function cancel()
&#9;&#9;&#9;for _, promiseToCancel in ipairs(promisesToCancel) do
&#9;&#9;&#9;&#9;promiseToCancel:cancel()
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;onCancel(function()
&#9;&#9;&#9;cancelled = true

&#9;&#9;&#9;cancel()
&#9;&#9;end)

&#9;&#9;-- We need to preprocess the list of values and look for Promises.
&#9;&#9;-- If we find some, we must register our andThen calls now, so that those Promises have a consumer
&#9;&#9;-- from us registered. If we don&apos;t do this, those Promises might get cancelled by something else
&#9;&#9;-- before we get to them in the series because it&apos;s not possible to tell that we plan to use it
&#9;&#9;-- unless we indicate it here.

&#9;&#9;local preprocessedList = {}

&#9;&#9;for index, value in ipairs(list) do
&#9;&#9;&#9;if Promise.is(value) then
&#9;&#9;&#9;&#9;if value:getStatus() == Promise.Status.Cancelled then
&#9;&#9;&#9;&#9;&#9;cancel()
&#9;&#9;&#9;&#9;&#9;return reject(Error.new({
&#9;&#9;&#9;&#9;&#9;&#9;error = &quot;Promise is cancelled&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;kind = Error.Kind.AlreadyCancelled,
&#9;&#9;&#9;&#9;&#9;&#9;context = string.format(
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&quot;The Promise that was part of the array at index %d passed into Promise.each was already cancelled when Promise.each began.\n\nThat Promise was created at:\n\n%s&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;index,
&#9;&#9;&#9;&#9;&#9;&#9;&#9;value._source
&#9;&#9;&#9;&#9;&#9;&#9;),
&#9;&#9;&#9;&#9;&#9;}))
&#9;&#9;&#9;&#9;elseif value:getStatus() == Promise.Status.Rejected then
&#9;&#9;&#9;&#9;&#9;cancel()
&#9;&#9;&#9;&#9;&#9;return reject(select(2, value:await()))
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;-- Chain a new Promise from this one so we only cancel ours
&#9;&#9;&#9;&#9;local ourPromise = value:andThen(function(...)
&#9;&#9;&#9;&#9;&#9;return ...
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;&#9;table.insert(promisesToCancel, ourPromise)
&#9;&#9;&#9;&#9;preprocessedList[index] = ourPromise
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;preprocessedList[index] = value
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;for index, value in ipairs(preprocessedList) do
&#9;&#9;&#9;if Promise.is(value) then
&#9;&#9;&#9;&#9;local success
&#9;&#9;&#9;&#9;success, value = value:await()

&#9;&#9;&#9;&#9;if not success then
&#9;&#9;&#9;&#9;&#9;cancel()
&#9;&#9;&#9;&#9;&#9;return reject(value)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;if cancelled then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end

&#9;&#9;&#9;local predicatePromise = Promise.resolve(predicate(value, index))

&#9;&#9;&#9;table.insert(promisesToCancel, predicatePromise)

&#9;&#9;&#9;local success, result = predicatePromise:await()

&#9;&#9;&#9;if not success then
&#9;&#9;&#9;&#9;cancel()
&#9;&#9;&#9;&#9;return reject(result)
&#9;&#9;&#9;end

&#9;&#9;&#9;results[index] = result
&#9;&#9;end

&#9;&#9;resolve(results)
&#9;end)
end

--[=[
&#9;Checks whether the given object is a Promise via duck typing. This only checks if the object is a table and has an `andThen` method.

&#9;@param object any
&#9;@return boolean -- `true` if the given `object` is a Promise.
]=]
function Promise.is(object)
&#9;if type(object) ~= &quot;table&quot; then
&#9;&#9;return false
&#9;end

&#9;local objectMetatable = getmetatable(object)

&#9;if objectMetatable == Promise then
&#9;&#9;-- The Promise came from this library.
&#9;&#9;return true
&#9;elseif objectMetatable == nil then
&#9;&#9;-- No metatable, but we should still chain onto tables with andThen methods
&#9;&#9;return isCallable(object.andThen)
&#9;elseif
&#9;&#9;type(objectMetatable) == &quot;table&quot;
&#9;&#9;and type(rawget(objectMetatable, &quot;__index&quot;)) == &quot;table&quot;
&#9;&#9;and isCallable(rawget(rawget(objectMetatable, &quot;__index&quot;), &quot;andThen&quot;))
&#9;then
&#9;&#9;-- Maybe this came from a different or older Promise library.
&#9;&#9;return true
&#9;end

&#9;return false
end

--[=[
&#9;Wraps a function that yields into one that returns a Promise.

&#9;Any errors that occur while executing the function will be turned into rejections.

&#9;:::info
&#9;`Promise.promisify` is similar to [Promise.try](#try), except the callback is returned as a callable function instead of being invoked immediately.
&#9;:::

&#9;```lua
&#9;local sleep = Promise.promisify(wait)

&#9;sleep(1):andThen(print)
&#9;```

&#9;```lua
&#9;local isPlayerInGroup = Promise.promisify(function(player, groupId)
&#9;&#9;return player:IsInGroup(groupId)
&#9;end)
&#9;```

&#9;@param callback (...: any) -&gt; ...any
&#9;@return (...: any) -&gt; Promise
]=]
function Promise.promisify(callback)
&#9;return function(...)
&#9;&#9;return Promise._try(debug.traceback(nil, 2), callback, ...)
&#9;end
end

--[=[
&#9;Returns a Promise that resolves after `seconds` seconds have passed. The Promise resolves with the actual amount of time that was waited.

&#9;This function is **not** a wrapper around `wait`. `Promise.delay` uses a custom scheduler which provides more accurate timing. As an optimization, cancelling this Promise instantly removes the task from the scheduler.

&#9;:::warning
&#9;Passing `NaN`, infinity, or a number less than 1/60 is equivalent to passing 1/60.
&#9;:::

&#9;```lua
&#9;&#9;Promise.delay(5):andThenCall(print, &quot;This prints after 5 seconds&quot;)
&#9;```

&#9;@function delay
&#9;@within Promise
&#9;@param seconds number
&#9;@return Promise&lt;number&gt;
]=]
do
&#9;-- uses a sorted doubly linked list (queue) to achieve O(1) remove operations and O(n) for insert

&#9;-- the initial node in the linked list
&#9;local first
&#9;local connection

&#9;function Promise.delay(seconds)
&#9;&#9;assert(type(seconds) == &quot;number&quot;, &quot;Bad argument #1 to Promise.delay, must be a number.&quot;)
&#9;&#9;-- If seconds is -INF, INF, NaN, or less than 1 / 60, assume seconds is 1 / 60.
&#9;&#9;-- This mirrors the behavior of wait()
&#9;&#9;if not (seconds &gt;= 1 / 60) or seconds == math.huge then
&#9;&#9;&#9;seconds = 1 / 60
&#9;&#9;end

&#9;&#9;return Promise._new(debug.traceback(nil, 2), function(resolve, _, onCancel)
&#9;&#9;&#9;local startTime = Promise._getTime()
&#9;&#9;&#9;local endTime = startTime + seconds

&#9;&#9;&#9;local node = {
&#9;&#9;&#9;&#9;resolve = resolve,
&#9;&#9;&#9;&#9;startTime = startTime,
&#9;&#9;&#9;&#9;endTime = endTime,
&#9;&#9;&#9;}

&#9;&#9;&#9;if connection == nil then -- first is nil when connection is nil
&#9;&#9;&#9;&#9;first = node
&#9;&#9;&#9;&#9;connection = Promise._timeEvent:Connect(function()
&#9;&#9;&#9;&#9;&#9;local threadStart = Promise._getTime()

&#9;&#9;&#9;&#9;&#9;while first ~= nil and first.endTime &lt; threadStart do
&#9;&#9;&#9;&#9;&#9;&#9;local current = first
&#9;&#9;&#9;&#9;&#9;&#9;first = current.next

&#9;&#9;&#9;&#9;&#9;&#9;if first == nil then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;connection:Disconnect()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;connection = nil
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;first.previous = nil
&#9;&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;&#9;current.resolve(Promise._getTime() - current.startTime)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;else -- first is non-nil
&#9;&#9;&#9;&#9;if first.endTime &lt; endTime then -- if `node` should be placed after `first`
&#9;&#9;&#9;&#9;&#9;-- we will insert `node` between `current` and `next`
&#9;&#9;&#9;&#9;&#9;-- (i.e. after `current` if `next` is nil)
&#9;&#9;&#9;&#9;&#9;local current = first
&#9;&#9;&#9;&#9;&#9;local next = current.next

&#9;&#9;&#9;&#9;&#9;while next ~= nil and next.endTime &lt; endTime do
&#9;&#9;&#9;&#9;&#9;&#9;current = next
&#9;&#9;&#9;&#9;&#9;&#9;next = current.next
&#9;&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;&#9;-- `current` must be non-nil, but `next` could be `nil` (i.e. last item in list)
&#9;&#9;&#9;&#9;&#9;current.next = node
&#9;&#9;&#9;&#9;&#9;node.previous = current

&#9;&#9;&#9;&#9;&#9;if next ~= nil then
&#9;&#9;&#9;&#9;&#9;&#9;node.next = next
&#9;&#9;&#9;&#9;&#9;&#9;next.previous = node
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;-- set `node` to `first`
&#9;&#9;&#9;&#9;&#9;node.next = first
&#9;&#9;&#9;&#9;&#9;first.previous = node
&#9;&#9;&#9;&#9;&#9;first = node
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end

&#9;&#9;&#9;onCancel(function()
&#9;&#9;&#9;&#9;-- remove node from queue
&#9;&#9;&#9;&#9;local next = node.next

&#9;&#9;&#9;&#9;if first == node then
&#9;&#9;&#9;&#9;&#9;if next == nil then -- if `node` is the first and last
&#9;&#9;&#9;&#9;&#9;&#9;connection:Disconnect()
&#9;&#9;&#9;&#9;&#9;&#9;connection = nil
&#9;&#9;&#9;&#9;&#9;else -- if `node` is `first` and not the last
&#9;&#9;&#9;&#9;&#9;&#9;next.previous = nil
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;first = next
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;local previous = node.previous
&#9;&#9;&#9;&#9;&#9;-- since `node` is not `first`, then we know `previous` is non-nil
&#9;&#9;&#9;&#9;&#9;previous.next = next

&#9;&#9;&#9;&#9;&#9;if next ~= nil then
&#9;&#9;&#9;&#9;&#9;&#9;next.previous = previous
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;end)
&#9;end
end

--[=[
&#9;Returns a new Promise that resolves if the chained Promise resolves within `seconds` seconds, or rejects if execution time exceeds `seconds`. The chained Promise will be cancelled if the timeout is reached.

&#9;Rejects with `rejectionValue` if it is non-nil. If a `rejectionValue` is not given, it will reject with a `Promise.Error(Promise.Error.Kind.TimedOut)`. This can be checked with [[Error.isKind]].

&#9;```lua
&#9;getSomething():timeout(5):andThen(function(something)
&#9;&#9;-- got something and it only took at max 5 seconds
&#9;end):catch(function(e)
&#9;&#9;-- Either getting something failed or the time was exceeded.

&#9;&#9;if Promise.Error.isKind(e, Promise.Error.Kind.TimedOut) then
&#9;&#9;&#9;warn(&quot;Operation timed out!&quot;)
&#9;&#9;else
&#9;&#9;&#9;warn(&quot;Operation encountered an error!&quot;)
&#9;&#9;end
&#9;end)
&#9;```

&#9;Sugar for:

&#9;```lua
&#9;Promise.race({
&#9;&#9;Promise.delay(seconds):andThen(function()
&#9;&#9;&#9;return Promise.reject(
&#9;&#9;&#9;&#9;rejectionValue == nil
&#9;&#9;&#9;&#9;and Promise.Error.new({ kind = Promise.Error.Kind.TimedOut })
&#9;&#9;&#9;&#9;or rejectionValue
&#9;&#9;&#9;)
&#9;&#9;end),
&#9;&#9;promise
&#9;})
&#9;```

&#9;@param seconds number
&#9;@param rejectionValue? any -- The value to reject with if the timeout is reached
&#9;@return Promise
]=]
function Promise.prototype:timeout(seconds, rejectionValue)
&#9;local traceback = debug.traceback(nil, 2)

&#9;return Promise.race({
&#9;&#9;Promise.delay(seconds):andThen(function()
&#9;&#9;&#9;return Promise.reject(rejectionValue == nil and Error.new({
&#9;&#9;&#9;&#9;kind = Error.Kind.TimedOut,
&#9;&#9;&#9;&#9;error = &quot;Timed out&quot;,
&#9;&#9;&#9;&#9;context = string.format(
&#9;&#9;&#9;&#9;&#9;&quot;Timeout of %d seconds exceeded.\n:timeout() called at:\n\n%s&quot;,
&#9;&#9;&#9;&#9;&#9;seconds,
&#9;&#9;&#9;&#9;&#9;traceback
&#9;&#9;&#9;&#9;),
&#9;&#9;&#9;}) or rejectionValue)
&#9;&#9;end),
&#9;&#9;self,
&#9;})
end

--[=[
&#9;Returns the current Promise status.

&#9;@return Status
]=]
function Promise.prototype:getStatus()
&#9;return self._status
end

--[[
&#9;Creates a new promise that receives the result of this promise.

&#9;The given callbacks are invoked depending on that result.
]]
function Promise.prototype:_andThen(traceback, successHandler, failureHandler)
&#9;self._unhandledRejection = false

&#9;-- If we are already cancelled, we return a cancelled Promise
&#9;if self._status == Promise.Status.Cancelled then
&#9;&#9;local promise = Promise.new(function() end)
&#9;&#9;promise:cancel()

&#9;&#9;return promise
&#9;end

&#9;-- Create a new promise to follow this part of the chain
&#9;return Promise._new(traceback, function(resolve, reject, onCancel)
&#9;&#9;-- Our default callbacks just pass values onto the next promise.
&#9;&#9;-- This lets success and failure cascade correctly!

&#9;&#9;local successCallback = resolve
&#9;&#9;if successHandler then
&#9;&#9;&#9;successCallback = createAdvancer(traceback, successHandler, resolve, reject)
&#9;&#9;end

&#9;&#9;local failureCallback = reject
&#9;&#9;if failureHandler then
&#9;&#9;&#9;failureCallback = createAdvancer(traceback, failureHandler, resolve, reject)
&#9;&#9;end

&#9;&#9;if self._status == Promise.Status.Started then
&#9;&#9;&#9;-- If we haven&apos;t resolved yet, put ourselves into the queue
&#9;&#9;&#9;table.insert(self._queuedResolve, successCallback)
&#9;&#9;&#9;table.insert(self._queuedReject, failureCallback)

&#9;&#9;&#9;onCancel(function()
&#9;&#9;&#9;&#9;-- These are guaranteed to exist because the cancellation handler is guaranteed to only
&#9;&#9;&#9;&#9;-- be called at most once
&#9;&#9;&#9;&#9;if self._status == Promise.Status.Started then
&#9;&#9;&#9;&#9;&#9;table.remove(self._queuedResolve, table.find(self._queuedResolve, successCallback))
&#9;&#9;&#9;&#9;&#9;table.remove(self._queuedReject, table.find(self._queuedReject, failureCallback))
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;elseif self._status == Promise.Status.Resolved then
&#9;&#9;&#9;-- This promise has already resolved! Trigger success immediately.
&#9;&#9;&#9;successCallback(unpack(self._values, 1, self._valuesLength))
&#9;&#9;elseif self._status == Promise.Status.Rejected then
&#9;&#9;&#9;-- This promise died a terrible death! Trigger failure immediately.
&#9;&#9;&#9;failureCallback(unpack(self._values, 1, self._valuesLength))
&#9;&#9;end
&#9;end, self)
end

--[=[
&#9;Chains onto an existing Promise and returns a new Promise.

&#9;:::warning
&#9;Within the failure handler, you should never assume that the rejection value is a string. Some rejections within the Promise library are represented by [[Error]] objects. If you want to treat it as a string for debugging, you should call `tostring` on it first.
&#9;:::

&#9;You can return a Promise from the success or failure handler and it will be chained onto.

&#9;Calling `andThen` on a cancelled Promise returns a cancelled Promise.

&#9;:::tip
&#9;If the Promise returned by `andThen` is cancelled, `successHandler` and `failureHandler` will not run.

&#9;To run code no matter what, use [Promise:finally].
&#9;:::

&#9;@param successHandler (...: any) -&gt; ...any
&#9;@param failureHandler? (...: any) -&gt; ...any
&#9;@return Promise&lt;...any&gt;
]=]
function Promise.prototype:andThen(successHandler, failureHandler)
&#9;assert(successHandler == nil or isCallable(successHandler), string.format(ERROR_NON_FUNCTION, &quot;Promise:andThen&quot;))
&#9;assert(failureHandler == nil or isCallable(failureHandler), string.format(ERROR_NON_FUNCTION, &quot;Promise:andThen&quot;))

&#9;return self:_andThen(debug.traceback(nil, 2), successHandler, failureHandler)
end

--[=[
&#9;Shorthand for `Promise:andThen(nil, failureHandler)`.

&#9;Returns a Promise that resolves if the `failureHandler` worked without encountering an additional error.

&#9;:::warning
&#9;Within the failure handler, you should never assume that the rejection value is a string. Some rejections within the Promise library are represented by [[Error]] objects. If you want to treat it as a string for debugging, you should call `tostring` on it first.
&#9;:::

&#9;Calling `catch` on a cancelled Promise returns a cancelled Promise.

&#9;:::tip
&#9;If the Promise returned by `catch` is cancelled,  `failureHandler` will not run.

&#9;To run code no matter what, use [Promise:finally].
&#9;:::

&#9;@param failureHandler (...: any) -&gt; ...any
&#9;@return Promise&lt;...any&gt;
]=]
function Promise.prototype:catch(failureHandler)
&#9;assert(failureHandler == nil or isCallable(failureHandler), string.format(ERROR_NON_FUNCTION, &quot;Promise:catch&quot;))
&#9;return self:_andThen(debug.traceback(nil, 2), nil, failureHandler)
end

--[=[
&#9;Similar to [Promise.andThen](#andThen), except the return value is the same as the value passed to the handler. In other words, you can insert a `:tap` into a Promise chain without affecting the value that downstream Promises receive.

&#9;```lua
&#9;&#9;getTheValue()
&#9;&#9;:tap(print)
&#9;&#9;:andThen(function(theValue)
&#9;&#9;&#9;print(&quot;Got&quot;, theValue, &quot;even though print returns nil!&quot;)
&#9;&#9;end)
&#9;```

&#9;If you return a Promise from the tap handler callback, its value will be discarded but `tap` will still wait until it resolves before passing the original value through.

&#9;@param tapHandler (...: any) -&gt; ...any
&#9;@return Promise&lt;...any&gt;
]=]
function Promise.prototype:tap(tapHandler)
&#9;assert(isCallable(tapHandler), string.format(ERROR_NON_FUNCTION, &quot;Promise:tap&quot;))
&#9;return self:_andThen(debug.traceback(nil, 2), function(...)
&#9;&#9;local callbackReturn = tapHandler(...)

&#9;&#9;if Promise.is(callbackReturn) then
&#9;&#9;&#9;local length, values = pack(...)
&#9;&#9;&#9;return callbackReturn:andThen(function()
&#9;&#9;&#9;&#9;return unpack(values, 1, length)
&#9;&#9;&#9;end)
&#9;&#9;end

&#9;&#9;return ...
&#9;end)
end

--[=[
&#9;Attaches an `andThen` handler to this Promise that calls the given callback with the predefined arguments. The resolved value is discarded.

&#9;```lua
&#9;&#9;promise:andThenCall(someFunction, &quot;some&quot;, &quot;arguments&quot;)
&#9;```

&#9;This is sugar for

&#9;```lua
&#9;&#9;promise:andThen(function()
&#9;&#9;return someFunction(&quot;some&quot;, &quot;arguments&quot;)
&#9;&#9;end)
&#9;```

&#9;@param callback (...: any) -&gt; any
&#9;@param ...? any -- Additional arguments which will be passed to `callback`
&#9;@return Promise
]=]
function Promise.prototype:andThenCall(callback, ...)
&#9;assert(isCallable(callback), string.format(ERROR_NON_FUNCTION, &quot;Promise:andThenCall&quot;))
&#9;local length, values = pack(...)
&#9;return self:_andThen(debug.traceback(nil, 2), function()
&#9;&#9;return callback(unpack(values, 1, length))
&#9;end)
end

--[=[
&#9;Attaches an `andThen` handler to this Promise that discards the resolved value and returns the given value from it.

&#9;```lua
&#9;&#9;promise:andThenReturn(&quot;some&quot;, &quot;values&quot;)
&#9;```

&#9;This is sugar for

&#9;```lua
&#9;&#9;promise:andThen(function()
&#9;&#9;&#9;return &quot;some&quot;, &quot;values&quot;
&#9;&#9;end)
&#9;```

&#9;:::caution
&#9;Promises are eager, so if you pass a Promise to `andThenReturn`, it will begin executing before `andThenReturn` is reached in the chain. Likewise, if you pass a Promise created from [[Promise.reject]] into `andThenReturn`, it&apos;s possible that this will trigger the unhandled rejection warning. If you need to return a Promise, it&apos;s usually best practice to use [[Promise.andThen]].
&#9;:::

&#9;@param ... any -- Values to return from the function
&#9;@return Promise
]=]
function Promise.prototype:andThenReturn(...)
&#9;local length, values = pack(...)
&#9;return self:_andThen(debug.traceback(nil, 2), function()
&#9;&#9;return unpack(values, 1, length)
&#9;end)
end

--[=[
&#9;Cancels this promise, preventing the promise from resolving or rejecting. Does not do anything if the promise is already settled.

&#9;Cancellations will propagate upwards and downwards through chained promises.

&#9;Promises will only be cancelled if all of their consumers are also cancelled. This is to say that if you call `andThen` twice on the same promise, and you cancel only one of the child promises, it will not cancel the parent promise until the other child promise is also cancelled.

&#9;```lua
&#9;&#9;promise:cancel()
&#9;```
]=]
function Promise.prototype:cancel()
&#9;if self._status ~= Promise.Status.Started then
&#9;&#9;return
&#9;end

&#9;self._status = Promise.Status.Cancelled

&#9;if self._cancellationHook then
&#9;&#9;self._cancellationHook()
&#9;end

&#9;coroutine.close(self._thread)

&#9;if self._parent then
&#9;&#9;self._parent:_consumerCancelled(self)
&#9;end

&#9;for child in pairs(self._consumers) do
&#9;&#9;child:cancel()
&#9;end

&#9;self:_finalize()
end

--[[
&#9;Used to decrease the number of consumers by 1, and if there are no more,
&#9;cancel this promise.
]]
function Promise.prototype:_consumerCancelled(consumer)
&#9;if self._status ~= Promise.Status.Started then
&#9;&#9;return
&#9;end

&#9;self._consumers[consumer] = nil

&#9;if next(self._consumers) == nil then
&#9;&#9;self:cancel()
&#9;end
end

--[[
&#9;Used to set a handler for when the promise resolves, rejects, or is
&#9;cancelled.
]]
function Promise.prototype:_finally(traceback, finallyHandler)
&#9;self._unhandledRejection = false

&#9;local promise = Promise._new(traceback, function(resolve, reject, onCancel)
&#9;&#9;local handlerPromise

&#9;&#9;onCancel(function()
&#9;&#9;&#9;-- The finally Promise is not a proper consumer of self. We don&apos;t care about the resolved value.
&#9;&#9;&#9;-- All we care about is running at the end. Therefore, if self has no other consumers, it&apos;s safe to
&#9;&#9;&#9;-- cancel. We don&apos;t need to hold out cancelling just because there&apos;s a finally handler.
&#9;&#9;&#9;self:_consumerCancelled(self)

&#9;&#9;&#9;if handlerPromise then
&#9;&#9;&#9;&#9;handlerPromise:cancel()
&#9;&#9;&#9;end
&#9;&#9;end)

&#9;&#9;local finallyCallback = resolve
&#9;&#9;if finallyHandler then
&#9;&#9;&#9;finallyCallback = function(...)
&#9;&#9;&#9;&#9;local callbackReturn = finallyHandler(...)

&#9;&#9;&#9;&#9;if Promise.is(callbackReturn) then
&#9;&#9;&#9;&#9;&#9;handlerPromise = callbackReturn

&#9;&#9;&#9;&#9;&#9;callbackReturn
&#9;&#9;&#9;&#9;&#9;&#9;:finally(function(status)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if status ~= Promise.Status.Rejected then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;resolve(self)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;:catch(function(...)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;reject(...)
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;resolve(self)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end

&#9;&#9;if self._status == Promise.Status.Started then
&#9;&#9;&#9;-- The promise is not settled, so queue this.
&#9;&#9;&#9;table.insert(self._queuedFinally, finallyCallback)
&#9;&#9;else
&#9;&#9;&#9;-- The promise already settled or was cancelled, run the callback now.
&#9;&#9;&#9;finallyCallback(self._status)
&#9;&#9;end
&#9;end)

&#9;return promise
end

--[=[
&#9;Set a handler that will be called regardless of the promise&apos;s fate. The handler is called when the promise is
&#9;resolved, rejected, *or* cancelled.

&#9;Returns a new Promise that:
&#9;- resolves with the same values that this Promise resolves with.
&#9;- rejects with the same values that this Promise rejects with.
&#9;- is cancelled if this Promise is cancelled.

&#9;If the value you return from the handler is a Promise:
&#9;- We wait for the Promise to resolve, but we ultimately discard the resolved value.
&#9;- If the returned Promise rejects, the Promise returned from `finally` will reject with the rejected value from the
&#9;*returned* promise.
&#9;- If the `finally` Promise is cancelled, and you returned a Promise from the handler, we cancel that Promise too.

&#9;Otherwise, the return value from the `finally` handler is entirely discarded.

&#9;:::note Cancellation
&#9;As of Promise v4, `Promise:finally` does not count as a consumer of the parent Promise for cancellation purposes.
&#9;This means that if all of a Promise&apos;s consumers are cancelled and the only remaining callbacks are finally handlers,
&#9;the Promise is cancelled and the finally callbacks run then and there.

&#9;Cancellation still propagates through the `finally` Promise though: if you cancel the `finally` Promise, it can cancel
&#9;its parent Promise if it had no other consumers. Likewise, if the parent Promise is cancelled, the `finally` Promise
&#9;will also be cancelled.
&#9;:::

&#9;```lua
&#9;local thing = createSomething()

&#9;doSomethingWith(thing)
&#9;&#9;:andThen(function()
&#9;&#9;&#9;print(&quot;It worked!&quot;)
&#9;&#9;&#9;-- do something..
&#9;&#9;end)
&#9;&#9;:catch(function()
&#9;&#9;&#9;warn(&quot;Oh no it failed!&quot;)
&#9;&#9;end)
&#9;&#9;:finally(function()
&#9;&#9;&#9;-- either way, destroy thing

&#9;&#9;&#9;thing:Destroy()
&#9;&#9;end)

&#9;```

&#9;@param finallyHandler (status: Status) -&gt; ...any
&#9;@return Promise&lt;...any&gt;
]=]
function Promise.prototype:finally(finallyHandler)
&#9;assert(finallyHandler == nil or isCallable(finallyHandler), string.format(ERROR_NON_FUNCTION, &quot;Promise:finally&quot;))
&#9;return self:_finally(debug.traceback(nil, 2), finallyHandler)
end

--[=[
&#9;Same as `andThenCall`, except for `finally`.

&#9;Attaches a `finally` handler to this Promise that calls the given callback with the predefined arguments.

&#9;@param callback (...: any) -&gt; any
&#9;@param ...? any -- Additional arguments which will be passed to `callback`
&#9;@return Promise
]=]
function Promise.prototype:finallyCall(callback, ...)
&#9;assert(isCallable(callback), string.format(ERROR_NON_FUNCTION, &quot;Promise:finallyCall&quot;))
&#9;local length, values = pack(...)
&#9;return self:_finally(debug.traceback(nil, 2), function()
&#9;&#9;return callback(unpack(values, 1, length))
&#9;end)
end

--[=[
&#9;Attaches a `finally` handler to this Promise that discards the resolved value and returns the given value from it.

&#9;```lua
&#9;&#9;promise:finallyReturn(&quot;some&quot;, &quot;values&quot;)
&#9;```

&#9;This is sugar for

&#9;```lua
&#9;&#9;promise:finally(function()
&#9;&#9;&#9;return &quot;some&quot;, &quot;values&quot;
&#9;&#9;end)
&#9;```

&#9;@param ... any -- Values to return from the function
&#9;@return Promise
]=]
function Promise.prototype:finallyReturn(...)
&#9;local length, values = pack(...)
&#9;return self:_finally(debug.traceback(nil, 2), function()
&#9;&#9;return unpack(values, 1, length)
&#9;end)
end

--[=[
&#9;Yields the current thread until the given Promise completes. Returns the Promise&apos;s status, followed by the values that the promise resolved or rejected with.

&#9;@yields
&#9;@return Status -- The Status representing the fate of the Promise
&#9;@return ...any -- The values the Promise resolved or rejected with.
]=]
function Promise.prototype:awaitStatus()
&#9;self._unhandledRejection = false

&#9;if self._status == Promise.Status.Started then
&#9;&#9;local thread = coroutine.running()

&#9;&#9;self
&#9;&#9;&#9;:finally(function()
&#9;&#9;&#9;&#9;task.spawn(thread)
&#9;&#9;&#9;end)
&#9;&#9;&#9;-- The finally promise can propagate rejections, so we attach a catch handler to prevent the unhandled
&#9;&#9;&#9;-- rejection warning from appearing
&#9;&#9;&#9;:catch(
&#9;&#9;&#9;&#9;function() end
&#9;&#9;&#9;)

&#9;&#9;coroutine.yield()
&#9;end

&#9;if self._status == Promise.Status.Resolved then
&#9;&#9;return self._status, unpack(self._values, 1, self._valuesLength)
&#9;elseif self._status == Promise.Status.Rejected then
&#9;&#9;return self._status, unpack(self._values, 1, self._valuesLength)
&#9;end

&#9;return self._status
end

local function awaitHelper(status, ...)
&#9;return status == Promise.Status.Resolved, ...
end

--[=[
&#9;Yields the current thread until the given Promise completes. Returns true if the Promise resolved, followed by the values that the promise resolved or rejected with.

&#9;:::caution
&#9;If the Promise gets cancelled, this function will return `false`, which is indistinguishable from a rejection. If you need to differentiate, you should use [[Promise.awaitStatus]] instead.
&#9;:::

&#9;```lua
&#9;&#9;local worked, value = getTheValue():await()

&#9;if worked then
&#9;&#9;print(&quot;got&quot;, value)
&#9;else
&#9;&#9;warn(&quot;it failed&quot;)
&#9;end
&#9;```

&#9;@yields
&#9;@return boolean -- `true` if the Promise successfully resolved
&#9;@return ...any -- The values the Promise resolved or rejected with.
]=]
function Promise.prototype:await()
&#9;return awaitHelper(self:awaitStatus())
end

local function expectHelper(status, ...)
&#9;if status ~= Promise.Status.Resolved then
&#9;&#9;error((...) == nil and &quot;Expected Promise rejected with no value.&quot; or (...), 3)
&#9;end

&#9;return ...
end

--[=[
&#9;Yields the current thread until the given Promise completes. Returns the values that the promise resolved with.

&#9;```lua
&#9;local worked = pcall(function()
&#9;&#9;print(&quot;got&quot;, getTheValue():expect())
&#9;end)

&#9;if not worked then
&#9;&#9;warn(&quot;it failed&quot;)
&#9;end
&#9;```

&#9;This is essentially sugar for:

&#9;```lua
&#9;select(2, assert(promise:await()))
&#9;```

&#9;**Errors** if the Promise rejects or gets cancelled.

&#9;@error any -- Errors with the rejection value if this Promise rejects or gets cancelled.
&#9;@yields
&#9;@return ...any -- The values the Promise resolved with.
]=]
function Promise.prototype:expect()
&#9;return expectHelper(self:awaitStatus())
end

-- Backwards compatibility
Promise.prototype.awaitValue = Promise.prototype.expect

--[[
&#9;Intended for use in tests.

&#9;Similar to await(), but instead of yielding if the promise is unresolved,
&#9;_unwrap will throw. This indicates an assumption that a promise has
&#9;resolved.
]]
function Promise.prototype:_unwrap()
&#9;if self._status == Promise.Status.Started then
&#9;&#9;error(&quot;Promise has not resolved or rejected.&quot;, 2)
&#9;end

&#9;local success = self._status == Promise.Status.Resolved

&#9;return success, unpack(self._values, 1, self._valuesLength)
end

function Promise.prototype:_resolve(...)
&#9;if self._status ~= Promise.Status.Started then
&#9;&#9;if Promise.is((...)) then
&#9;&#9;&#9;(...):_consumerCancelled(self)
&#9;&#9;end
&#9;&#9;return
&#9;end

&#9;-- If the resolved value was a Promise, we chain onto it!
&#9;if Promise.is((...)) then
&#9;&#9;-- Without this warning, arguments sometimes mysteriously disappear
&#9;&#9;if select(&quot;#&quot;, ...) &gt; 1 then
&#9;&#9;&#9;local message = string.format(
&#9;&#9;&#9;&#9;&quot;When returning a Promise from andThen, extra arguments are &quot; .. &quot;discarded! See:\n\n%s&quot;,
&#9;&#9;&#9;&#9;self._source
&#9;&#9;&#9;)
&#9;&#9;&#9;warn(message)
&#9;&#9;end

&#9;&#9;local chainedPromise = ...

&#9;&#9;local promise = chainedPromise:andThen(function(...)
&#9;&#9;&#9;self:_resolve(...)
&#9;&#9;end, function(...)
&#9;&#9;&#9;local maybeRuntimeError = chainedPromise._values[1]

&#9;&#9;&#9;-- Backwards compatibility &lt; v2
&#9;&#9;&#9;if chainedPromise._error then
&#9;&#9;&#9;&#9;maybeRuntimeError = Error.new({
&#9;&#9;&#9;&#9;&#9;error = chainedPromise._error,
&#9;&#9;&#9;&#9;&#9;kind = Error.Kind.ExecutionError,
&#9;&#9;&#9;&#9;&#9;context = &quot;[No stack trace available as this Promise originated from an older version of the Promise library (&lt; v2)]&quot;,
&#9;&#9;&#9;&#9;})
&#9;&#9;&#9;end

&#9;&#9;&#9;if Error.isKind(maybeRuntimeError, Error.Kind.ExecutionError) then
&#9;&#9;&#9;&#9;return self:_reject(maybeRuntimeError:extend({
&#9;&#9;&#9;&#9;&#9;error = &quot;This Promise was chained to a Promise that errored.&quot;,
&#9;&#9;&#9;&#9;&#9;trace = &quot;&quot;,
&#9;&#9;&#9;&#9;&#9;context = string.format(
&#9;&#9;&#9;&#9;&#9;&#9;&quot;The Promise at:\n\n%s\n...Rejected because it was chained to the following Promise, which encountered an error:\n&quot;,
&#9;&#9;&#9;&#9;&#9;&#9;self._source
&#9;&#9;&#9;&#9;&#9;),
&#9;&#9;&#9;&#9;}))
&#9;&#9;&#9;end

&#9;&#9;&#9;self:_reject(...)
&#9;&#9;end)

&#9;&#9;if promise._status == Promise.Status.Cancelled then
&#9;&#9;&#9;self:cancel()
&#9;&#9;elseif promise._status == Promise.Status.Started then
&#9;&#9;&#9;-- Adopt ourselves into promise for cancellation propagation.
&#9;&#9;&#9;self._parent = promise
&#9;&#9;&#9;promise._consumers[self] = true
&#9;&#9;end

&#9;&#9;return
&#9;end

&#9;self._status = Promise.Status.Resolved
&#9;self._valuesLength, self._values = pack(...)

&#9;-- We assume that these callbacks will not throw errors.
&#9;for _, callback in ipairs(self._queuedResolve) do
&#9;&#9;coroutine.wrap(callback)(...)
&#9;end

&#9;self:_finalize()
end

function Promise.prototype:_reject(...)
&#9;if self._status ~= Promise.Status.Started then
&#9;&#9;return
&#9;end

&#9;self._status = Promise.Status.Rejected
&#9;self._valuesLength, self._values = pack(...)

&#9;-- If there are any rejection handlers, call those!
&#9;if not isEmpty(self._queuedReject) then
&#9;&#9;-- We assume that these callbacks will not throw errors.
&#9;&#9;for _, callback in ipairs(self._queuedReject) do
&#9;&#9;&#9;coroutine.wrap(callback)(...)
&#9;&#9;end
&#9;else
&#9;&#9;-- At this point, no one was able to observe the error.
&#9;&#9;-- An error handler might still be attached if the error occurred
&#9;&#9;-- synchronously. We&apos;ll wait one tick, and if there are still no
&#9;&#9;-- observers, then we should put a message in the console.

&#9;&#9;local err = tostring((...))

&#9;&#9;coroutine.wrap(function()
&#9;&#9;&#9;Promise._timeEvent:Wait()

&#9;&#9;&#9;-- Someone observed the error, hooray!
&#9;&#9;&#9;if not self._unhandledRejection then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Build a reasonable message
&#9;&#9;&#9;local message = string.format(&quot;Unhandled Promise rejection:\n\n%s\n\n%s&quot;, err, self._source)

&#9;&#9;&#9;for _, callback in ipairs(Promise._unhandledRejectionCallbacks) do
&#9;&#9;&#9;&#9;task.spawn(callback, self, unpack(self._values, 1, self._valuesLength))
&#9;&#9;&#9;end

&#9;&#9;&#9;if Promise.TEST then
&#9;&#9;&#9;&#9;-- Don&apos;t spam output when we&apos;re running tests.
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end

&#9;&#9;&#9;warn(message)
&#9;&#9;end)()
&#9;end

&#9;self:_finalize()
end

--[[
&#9;Calls any :finally handlers. We need this to be a separate method and
&#9;queue because we must call all of the finally callbacks upon a success,
&#9;failure, *and* cancellation.
]]
function Promise.prototype:_finalize()
&#9;for _, callback in ipairs(self._queuedFinally) do
&#9;&#9;-- Purposefully not passing values to callbacks here, as it could be the
&#9;&#9;-- resolved values, or rejected errors. If the developer needs the values,
&#9;&#9;-- they should use :andThen or :catch explicitly.
&#9;&#9;coroutine.wrap(callback)(self._status)
&#9;end

&#9;self._queuedFinally = nil
&#9;self._queuedReject = nil
&#9;self._queuedResolve = nil

&#9;-- Clear references to other Promises to allow gc
&#9;if not Promise.TEST then
&#9;&#9;self._parent = nil
&#9;&#9;self._consumers = nil
&#9;end

&#9;task.defer(coroutine.close, self._thread)
end

--[=[
&#9;Chains a Promise from this one that is resolved if this Promise is already resolved, and rejected if it is not resolved at the time of calling `:now()`. This can be used to ensure your `andThen` handler occurs on the same frame as the root Promise execution.

&#9;```lua
&#9;doSomething()
&#9;&#9;:now()
&#9;&#9;:andThen(function(value)
&#9;&#9;&#9;print(&quot;Got&quot;, value, &quot;synchronously.&quot;)
&#9;&#9;end)
&#9;```

&#9;If this Promise is still running, Rejected, or Cancelled, the Promise returned from `:now()` will reject with the `rejectionValue` if passed, otherwise with a `Promise.Error(Promise.Error.Kind.NotResolvedInTime)`. This can be checked with [[Error.isKind]].

&#9;@param rejectionValue? any -- The value to reject with if the Promise isn&apos;t resolved
&#9;@return Promise
]=]
function Promise.prototype:now(rejectionValue)
&#9;local traceback = debug.traceback(nil, 2)
&#9;if self._status == Promise.Status.Resolved then
&#9;&#9;return self:_andThen(traceback, function(...)
&#9;&#9;&#9;return ...
&#9;&#9;end)
&#9;else
&#9;&#9;return Promise.reject(rejectionValue == nil and Error.new({
&#9;&#9;&#9;kind = Error.Kind.NotResolvedInTime,
&#9;&#9;&#9;error = &quot;This Promise was not resolved in time for :now()&quot;,
&#9;&#9;&#9;context = &quot;:now() was called at:\n\n&quot; .. traceback,
&#9;&#9;}) or rejectionValue)
&#9;end
end

--[=[
&#9;Repeatedly calls a Promise-returning function up to `times` number of times, until the returned Promise resolves.

&#9;If the amount of retries is exceeded, the function will return the latest rejected Promise.

&#9;```lua
&#9;local function canFail(a, b, c)
&#9;&#9;return Promise.new(function(resolve, reject)
&#9;&#9;&#9;-- do something that can fail

&#9;&#9;&#9;local failed, thing = doSomethingThatCanFail(a, b, c)

&#9;&#9;&#9;if failed then
&#9;&#9;&#9;&#9;reject(&quot;it failed&quot;)
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;resolve(thing)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end

&#9;local MAX_RETRIES = 10
&#9;local value = Promise.retry(canFail, MAX_RETRIES, &quot;foo&quot;, &quot;bar&quot;, &quot;baz&quot;) -- args to send to canFail
&#9;```

&#9;@since 3.0.0
&#9;@param callback (...: P) -&gt; Promise&lt;T&gt;
&#9;@param times number
&#9;@param ...? P
&#9;@return Promise&lt;T&gt;
]=]
function Promise.retry(callback, times, ...)
&#9;assert(isCallable(callback), &quot;Parameter #1 to Promise.retry must be a function&quot;)
&#9;assert(type(times) == &quot;number&quot;, &quot;Parameter #2 to Promise.retry must be a number&quot;)

&#9;local args, length = { ... }, select(&quot;#&quot;, ...)

&#9;return Promise.resolve(callback(...)):catch(function(...)
&#9;&#9;if times &gt; 0 then
&#9;&#9;&#9;return Promise.retry(callback, times - 1, unpack(args, 1, length))
&#9;&#9;else
&#9;&#9;&#9;return Promise.reject(...)
&#9;&#9;end
&#9;end)
end

--[=[
&#9;Repeatedly calls a Promise-returning function up to `times` number of times, waiting `seconds` seconds between each
&#9;retry, until the returned Promise resolves.

&#9;If the amount of retries is exceeded, the function will return the latest rejected Promise.

&#9;@since v3.2.0
&#9;@param callback (...: P) -&gt; Promise&lt;T&gt;
&#9;@param times number
&#9;@param seconds number
&#9;@param ...? P
&#9;@return Promise&lt;T&gt;
]=]
function Promise.retryWithDelay(callback, times, seconds, ...)
&#9;assert(isCallable(callback), &quot;Parameter #1 to Promise.retry must be a function&quot;)
&#9;assert(type(times) == &quot;number&quot;, &quot;Parameter #2 (times) to Promise.retry must be a number&quot;)
&#9;assert(type(seconds) == &quot;number&quot;, &quot;Parameter #3 (seconds) to Promise.retry must be a number&quot;)

&#9;local args, length = { ... }, select(&quot;#&quot;, ...)

&#9;return Promise.resolve(callback(...)):catch(function(...)
&#9;&#9;if times &gt; 0 then
&#9;&#9;&#9;Promise.delay(seconds):await()

&#9;&#9;&#9;return Promise.retryWithDelay(callback, times - 1, seconds, unpack(args, 1, length))
&#9;&#9;else
&#9;&#9;&#9;return Promise.reject(...)
&#9;&#9;end
&#9;end)
end

--[=[
&#9;Converts an event into a Promise which resolves the next time the event fires.

&#9;The optional `predicate` callback, if passed, will receive the event arguments and should return `true` or `false`, based on if this fired event should resolve the Promise or not. If `true`, the Promise resolves. If `false`, nothing happens and the predicate will be rerun the next time the event fires.

&#9;The Promise will resolve with the event arguments.

&#9;:::tip
&#9;This function will work given any object with a `Connect` method. This includes all Roblox events.
&#9;:::

&#9;```lua
&#9;-- Creates a Promise which only resolves when `somePart` is touched
&#9;-- by a part named `&quot;Something specific&quot;`.
&#9;return Promise.fromEvent(somePart.Touched, function(part)
&#9;&#9;return part.Name == &quot;Something specific&quot;
&#9;end)
&#9;```

&#9;@since 3.0.0
&#9;@param event Event -- Any object with a `Connect` method. This includes all Roblox events.
&#9;@param predicate? (...: P) -&gt; boolean -- A function which determines if the Promise should resolve with the given value, or wait for the next event to check again.
&#9;@return Promise&lt;P&gt;
]=]
function Promise.fromEvent(event, predicate)
&#9;predicate = predicate or function()
&#9;&#9;return true
&#9;end

&#9;return Promise._new(debug.traceback(nil, 2), function(resolve, _, onCancel)
&#9;&#9;local connection
&#9;&#9;local shouldDisconnect = false

&#9;&#9;local function disconnect()
&#9;&#9;&#9;connection:Disconnect()
&#9;&#9;&#9;connection = nil
&#9;&#9;end

&#9;&#9;-- We use shouldDisconnect because if the callback given to Connect is called before
&#9;&#9;-- Connect returns, connection will still be nil. This happens with events that queue up
&#9;&#9;-- events when there&apos;s nothing connected, such as RemoteEvents

&#9;&#9;connection = event:Connect(function(...)
&#9;&#9;&#9;local callbackValue = predicate(...)

&#9;&#9;&#9;if callbackValue == true then
&#9;&#9;&#9;&#9;resolve(...)

&#9;&#9;&#9;&#9;if connection then
&#9;&#9;&#9;&#9;&#9;disconnect()
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;shouldDisconnect = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif type(callbackValue) ~= &quot;boolean&quot; then
&#9;&#9;&#9;&#9;error(&quot;Promise.fromEvent predicate should always return a boolean&quot;)
&#9;&#9;&#9;end
&#9;&#9;end)

&#9;&#9;if shouldDisconnect and connection then
&#9;&#9;&#9;return disconnect()
&#9;&#9;end

&#9;&#9;onCancel(disconnect)
&#9;end)
end

--[=[
&#9;Registers a callback that runs when an unhandled rejection happens. An unhandled rejection happens when a Promise
&#9;is rejected, and the rejection is not observed with `:catch`.

&#9;The callback is called with the actual promise that rejected, followed by the rejection values.

&#9;@since v3.2.0
&#9;@param callback (promise: Promise, ...: any) -- A callback that runs when an unhandled rejection happens.
&#9;@return () -&gt; () -- Function that unregisters the `callback` when called
]=]
function Promise.onUnhandledRejection(callback)
&#9;table.insert(Promise._unhandledRejectionCallbacks, callback)

&#9;return function()
&#9;&#9;local index = table.find(Promise._unhandledRejectionCallbacks, callback)

&#9;&#9;if index then
&#9;&#9;&#9;table.remove(Promise._unhandledRejectionCallbacks, index)
&#9;&#9;end
&#9;end
end

return Promise
</string>
							<int64 name="SourceAssetId">-1</int64>
							<string name="Tags"></string>
							<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010ad</UniqueId>
						</Properties>
						<Item class="ModuleScript" referent="RBX1112CD0778204B7B8E1220A08777BD80">
							<Properties>
								<string name="AttributesSerialize"></string>
								<bool name="DefinesCapabilities">false</bool>
								<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b98</UniqueId>
								<string name="LinkedSource"></string>
								<string name="Name">init.spec</string>
								<string name="ScriptGuid">{8bc1d461-9364-44c9-8bc3-36deb1aedaa9}</string>
								<string name="Source">return function()
&#9;local Promise = require(script.Parent)
&#9;Promise.TEST = true

&#9;local timeEvent = Instance.new(&quot;BindableEvent&quot;)
&#9;Promise._timeEvent = timeEvent.Event

&#9;local advanceTime
&#9;do
&#9;&#9;local injectedPromiseTime = 0

&#9;&#9;Promise._getTime = function()
&#9;&#9;&#9;return injectedPromiseTime
&#9;&#9;end

&#9;&#9;function advanceTime(delta)
&#9;&#9;&#9;delta = delta or (1 / 60)

&#9;&#9;&#9;injectedPromiseTime = injectedPromiseTime + delta
&#9;&#9;&#9;timeEvent:Fire(delta)
&#9;&#9;end
&#9;end

&#9;local function pack(...)
&#9;&#9;local len = select(&quot;#&quot;, ...)

&#9;&#9;return len, { ... }
&#9;end

&#9;describe(&quot;Promise.Status&quot;, function()
&#9;&#9;it(&quot;should error if indexing nil value&quot;, function()
&#9;&#9;&#9;expect(function()
&#9;&#9;&#9;&#9;local _ = Promise.Status.wrong
&#9;&#9;&#9;end).to.throw()
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Unhandled rejection signal&quot;, function()
&#9;&#9;it(&quot;should call unhandled rejection callbacks&quot;, function()
&#9;&#9;&#9;local badPromise = Promise.new(function(_resolve, reject)
&#9;&#9;&#9;&#9;reject(1, 2)
&#9;&#9;&#9;end)

&#9;&#9;&#9;local callCount = 0

&#9;&#9;&#9;local function callback(promise, rejectionA, rejectionB)
&#9;&#9;&#9;&#9;callCount += 1

&#9;&#9;&#9;&#9;expect(promise).to.equal(badPromise)
&#9;&#9;&#9;&#9;expect(rejectionA).to.equal(1)
&#9;&#9;&#9;&#9;expect(rejectionB).to.equal(2)
&#9;&#9;&#9;end

&#9;&#9;&#9;local unregister = Promise.onUnhandledRejection(callback)

&#9;&#9;&#9;advanceTime()

&#9;&#9;&#9;expect(callCount).to.equal(1)

&#9;&#9;&#9;unregister()

&#9;&#9;&#9;Promise.new(function(_resolve, reject)
&#9;&#9;&#9;&#9;reject(3, 4)
&#9;&#9;&#9;end)

&#9;&#9;&#9;advanceTime()

&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.new&quot;, function()
&#9;&#9;it(&quot;should instantiate with a callback&quot;, function()
&#9;&#9;&#9;local promise = Promise.new(function() end)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;end)

&#9;&#9;it(&quot;should invoke the given callback with resolve and reject&quot;, function()
&#9;&#9;&#9;local callCount = 0
&#9;&#9;&#9;local resolveArg
&#9;&#9;&#9;local rejectArg

&#9;&#9;&#9;local promise = Promise.new(function(resolve, reject)
&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;&#9;resolveArg = resolve
&#9;&#9;&#9;&#9;rejectArg = reject
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise).to.be.ok()

&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;&#9;expect(resolveArg).to.be.a(&quot;function&quot;)
&#9;&#9;&#9;expect(rejectArg).to.be.a(&quot;function&quot;)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;end)

&#9;&#9;it(&quot;should resolve promises on resolve()&quot;, function()
&#9;&#9;&#9;local callCount = 0

&#9;&#9;&#9;local promise = Promise.new(function(resolve)
&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;&#9;resolve()
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;end)

&#9;&#9;it(&quot;should reject promises on reject()&quot;, function()
&#9;&#9;&#9;local callCount = 0

&#9;&#9;&#9;local promise = Promise.new(function(resolve, reject)
&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;&#9;reject()
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;end)

&#9;&#9;it(&quot;should reject on error in callback&quot;, function()
&#9;&#9;&#9;local callCount = 0

&#9;&#9;&#9;local promise = Promise.new(function()
&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;&#9;error(&quot;hahah&quot;)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(tostring(promise._values[1]):find(&quot;hahah&quot;)).to.be.ok()

&#9;&#9;&#9;-- Loosely check for the pieces of the stack trace we expect
&#9;&#9;&#9;expect(tostring(promise._values[1]):find(&quot;init.spec&quot;)).to.be.ok()
&#9;&#9;&#9;expect(tostring(promise._values[1]):find(&quot;runExecutor&quot;)).to.be.ok()
&#9;&#9;end)

&#9;&#9;it(&quot;should work with C functions&quot;, function()
&#9;&#9;&#9;expect(function()
&#9;&#9;&#9;&#9;Promise.new(tick):andThen(tick)
&#9;&#9;&#9;end).to.never.throw()
&#9;&#9;end)

&#9;&#9;it(&quot;should have a nice tostring&quot;, function()
&#9;&#9;&#9;expect(tostring(Promise.resolve()):gmatch(&quot;Promise(Resolved)&quot;)).to.be.ok()
&#9;&#9;end)

&#9;&#9;it(&quot;should allow yielding&quot;, function()
&#9;&#9;&#9;local bindable = Instance.new(&quot;BindableEvent&quot;)
&#9;&#9;&#9;local promise = Promise.new(function(resolve)
&#9;&#9;&#9;&#9;bindable.Event:Wait()
&#9;&#9;&#9;&#9;resolve(5)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;bindable:Fire()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(5)
&#9;&#9;end)

&#9;&#9;it(&quot;should preserve stack traces of resolve-chained promises&quot;, function()
&#9;&#9;&#9;local function nestedCall(text)
&#9;&#9;&#9;&#9;error(text)
&#9;&#9;&#9;end

&#9;&#9;&#9;local promise = Promise.new(function(resolve)
&#9;&#9;&#9;&#9;resolve(Promise.new(function()
&#9;&#9;&#9;&#9;&#9;nestedCall(&quot;sample text&quot;)
&#9;&#9;&#9;&#9;end))
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)

&#9;&#9;&#9;local trace = tostring(promise._values[1])
&#9;&#9;&#9;expect(trace:find(&quot;sample text&quot;)).to.be.ok()
&#9;&#9;&#9;expect(trace:find(&quot;nestedCall&quot;)).to.be.ok()
&#9;&#9;&#9;expect(trace:find(&quot;runExecutor&quot;)).to.be.ok()
&#9;&#9;&#9;expect(trace:find(&quot;runPlanNode&quot;)).to.be.ok()
&#9;&#9;&#9;expect(
&#9;&#9;&#9;&#9;trace:find(&quot;...Rejected because it was chained to the following Promise, which encountered an error:&quot;)
&#9;&#9;&#9;).to.be.ok()
&#9;&#9;end)

&#9;&#9;it(&quot;should report errors from Promises with _error (&lt; v2)&quot;, function()
&#9;&#9;&#9;local oldPromise = Promise.reject()
&#9;&#9;&#9;oldPromise._error = &quot;Sample error&quot;

&#9;&#9;&#9;local newPromise = Promise.resolve():andThenReturn(oldPromise)

&#9;&#9;&#9;expect(newPromise:getStatus()).to.equal(Promise.Status.Rejected)

&#9;&#9;&#9;local trace = tostring(newPromise._values[1])
&#9;&#9;&#9;expect(trace:find(&quot;Sample error&quot;)).to.be.ok()
&#9;&#9;&#9;expect(
&#9;&#9;&#9;&#9;trace:find(&quot;...Rejected because it was chained to the following Promise, which encountered an error:&quot;)
&#9;&#9;&#9;).to.be.ok()
&#9;&#9;&#9;expect(trace:find(&quot;%[No stack trace available&quot;)).to.be.ok()
&#9;&#9;end)

&#9;&#9;it(&quot;should allow callable tables&quot;, function()
&#9;&#9;&#9;local promise = Promise.new(setmetatable({}, {
&#9;&#9;&#9;&#9;__call = function(_, resolve)
&#9;&#9;&#9;&#9;&#9;resolve(1)
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;}))

&#9;&#9;&#9;local called = false
&#9;&#9;&#9;promise:andThen(setmetatable({}, {
&#9;&#9;&#9;&#9;__call = function(_, var)
&#9;&#9;&#9;&#9;&#9;expect(var).to.equal(1)
&#9;&#9;&#9;&#9;&#9;called = true
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;}))

&#9;&#9;&#9;expect(called).to.equal(true)
&#9;&#9;end)

&#9;&#9;itSKIP(&quot;should close the thread after resolve&quot;, function()
&#9;&#9;&#9;local count = 0
&#9;&#9;&#9;Promise.new(function(resolve)
&#9;&#9;&#9;&#9;count += 1
&#9;&#9;&#9;&#9;resolve()
&#9;&#9;&#9;&#9;Promise.delay(1):await()
&#9;&#9;&#9;&#9;count += 1
&#9;&#9;&#9;end)

&#9;&#9;&#9;task.wait(1)

&#9;&#9;&#9;expect(count).to.equal(1)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.defer&quot;, function()
&#9;&#9;it(&quot;should execute after the time event&quot;, function()
&#9;&#9;&#9;local callCount = 0
&#9;&#9;&#9;local promise = Promise.defer(function(resolve, reject, onCancel, nothing)
&#9;&#9;&#9;&#9;expect(type(resolve)).to.equal(&quot;function&quot;)
&#9;&#9;&#9;&#9;expect(type(reject)).to.equal(&quot;function&quot;)
&#9;&#9;&#9;&#9;expect(type(onCancel)).to.equal(&quot;function&quot;)
&#9;&#9;&#9;&#9;expect(type(nothing)).to.equal(&quot;nil&quot;)

&#9;&#9;&#9;&#9;callCount = callCount + 1

&#9;&#9;&#9;&#9;resolve(&quot;foo&quot;)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(callCount).to.equal(0)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;advanceTime()
&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)

&#9;&#9;&#9;advanceTime()
&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.delay&quot;, function()
&#9;&#9;it(&quot;should schedule promise resolution&quot;, function()
&#9;&#9;&#9;local promise = Promise.delay(1)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;advanceTime()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;advanceTime(1)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;end)

&#9;&#9;it(&quot;should allow for delays to be cancelled&quot;, function()
&#9;&#9;&#9;local promise = Promise.delay(2)

&#9;&#9;&#9;Promise.delay(1):andThen(function()
&#9;&#9;&#9;&#9;promise:cancel()
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;advanceTime()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;advanceTime(1)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;advanceTime(1)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.resolve&quot;, function()
&#9;&#9;it(&quot;should immediately resolve with a value&quot;, function()
&#9;&#9;&#9;local promise = Promise.resolve(5, 6)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(5)
&#9;&#9;&#9;expect(promise._values[2]).to.equal(6)
&#9;&#9;end)

&#9;&#9;it(&quot;should chain onto passed promises&quot;, function()
&#9;&#9;&#9;local promise = Promise.resolve(Promise.new(function(_, reject)
&#9;&#9;&#9;&#9;reject(7)
&#9;&#9;&#9;end))

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(7)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.reject&quot;, function()
&#9;&#9;it(&quot;should immediately reject with a value&quot;, function()
&#9;&#9;&#9;local promise = Promise.reject(6, 7)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(6)
&#9;&#9;&#9;expect(promise._values[2]).to.equal(7)
&#9;&#9;end)

&#9;&#9;it(&quot;should pass a promise as-is as an error&quot;, function()
&#9;&#9;&#9;local innerPromise = Promise.new(function(resolve)
&#9;&#9;&#9;&#9;resolve(6)
&#9;&#9;&#9;end)

&#9;&#9;&#9;local promise = Promise.reject(innerPromise)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(innerPromise)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise:andThen&quot;, function()
&#9;&#9;it(&quot;should allow yielding&quot;, function()
&#9;&#9;&#9;local bindable = Instance.new(&quot;BindableEvent&quot;)
&#9;&#9;&#9;local promise = Promise.resolve():andThen(function()
&#9;&#9;&#9;&#9;bindable.Event:Wait()
&#9;&#9;&#9;&#9;return 5
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;bindable:Fire()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(5)
&#9;&#9;end)

&#9;&#9;it(&quot;should run andThens on a new thread&quot;, function()
&#9;&#9;&#9;local bindable = Instance.new(&quot;BindableEvent&quot;)

&#9;&#9;&#9;local resolve
&#9;&#9;&#9;local parentPromise = Promise.new(function(_resolve)
&#9;&#9;&#9;&#9;resolve = _resolve
&#9;&#9;&#9;end)

&#9;&#9;&#9;local deadlockedPromise = parentPromise:andThen(function()
&#9;&#9;&#9;&#9;bindable.Event:Wait()
&#9;&#9;&#9;&#9;return 5
&#9;&#9;&#9;end)

&#9;&#9;&#9;local successfulPromise = parentPromise:andThen(function()
&#9;&#9;&#9;&#9;return &quot;foo&quot;
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(parentPromise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;resolve()
&#9;&#9;&#9;expect(successfulPromise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(successfulPromise._values[1]).to.equal(&quot;foo&quot;)
&#9;&#9;&#9;expect(deadlockedPromise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;end)

&#9;&#9;it(&quot;should chain onto resolved promises&quot;, function()
&#9;&#9;&#9;local args
&#9;&#9;&#9;local argsLength
&#9;&#9;&#9;local callCount = 0
&#9;&#9;&#9;local badCallCount = 0

&#9;&#9;&#9;local promise = Promise.resolve(5)

&#9;&#9;&#9;local chained = promise:andThen(function(...)
&#9;&#9;&#9;&#9;argsLength, args = pack(...)
&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;end, function()
&#9;&#9;&#9;&#9;badCallCount = badCallCount + 1
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(badCallCount).to.equal(0)

&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;&#9;expect(argsLength).to.equal(1)
&#9;&#9;&#9;expect(args[1]).to.equal(5)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(5)

&#9;&#9;&#9;expect(chained).to.be.ok()
&#9;&#9;&#9;expect(chained).never.to.equal(promise)
&#9;&#9;&#9;expect(chained:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(#chained._values).to.equal(0)
&#9;&#9;end)

&#9;&#9;it(&quot;should chain onto rejected promises&quot;, function()
&#9;&#9;&#9;local args
&#9;&#9;&#9;local argsLength
&#9;&#9;&#9;local callCount = 0
&#9;&#9;&#9;local badCallCount = 0

&#9;&#9;&#9;local promise = Promise.reject(5)

&#9;&#9;&#9;local chained = promise:andThen(function(...)
&#9;&#9;&#9;&#9;badCallCount = badCallCount + 1
&#9;&#9;&#9;end, function(...)
&#9;&#9;&#9;&#9;argsLength, args = pack(...)
&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(badCallCount).to.equal(0)

&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;&#9;expect(argsLength).to.equal(1)
&#9;&#9;&#9;expect(args[1]).to.equal(5)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(5)

&#9;&#9;&#9;expect(chained).to.be.ok()
&#9;&#9;&#9;expect(chained).never.to.equal(promise)
&#9;&#9;&#9;expect(chained:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(#chained._values).to.equal(0)
&#9;&#9;end)

&#9;&#9;it(&quot;should reject on error in callback&quot;, function()
&#9;&#9;&#9;local callCount = 0

&#9;&#9;&#9;local promise = Promise.resolve(1):andThen(function()
&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;&#9;error(&quot;hahah&quot;)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(tostring(promise._values[1]):find(&quot;hahah&quot;)).to.be.ok()

&#9;&#9;&#9;-- Loosely check for the pieces of the stack trace we expect
&#9;&#9;&#9;expect(tostring(promise._values[1]):find(&quot;init.spec&quot;)).to.be.ok()
&#9;&#9;&#9;expect(tostring(promise._values[1]):find(&quot;runExecutor&quot;)).to.be.ok()
&#9;&#9;end)

&#9;&#9;it(&quot;should chain onto asynchronously resolved promises&quot;, function()
&#9;&#9;&#9;local args
&#9;&#9;&#9;local argsLength
&#9;&#9;&#9;local callCount = 0
&#9;&#9;&#9;local badCallCount = 0

&#9;&#9;&#9;local startResolution
&#9;&#9;&#9;local promise = Promise.new(function(resolve)
&#9;&#9;&#9;&#9;startResolution = resolve
&#9;&#9;&#9;end)

&#9;&#9;&#9;local chained = promise:andThen(function(...)
&#9;&#9;&#9;&#9;args = { ... }
&#9;&#9;&#9;&#9;argsLength = select(&quot;#&quot;, ...)
&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;end, function()
&#9;&#9;&#9;&#9;badCallCount = badCallCount + 1
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(callCount).to.equal(0)
&#9;&#9;&#9;expect(badCallCount).to.equal(0)

&#9;&#9;&#9;startResolution(6)

&#9;&#9;&#9;expect(badCallCount).to.equal(0)

&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;&#9;expect(argsLength).to.equal(1)
&#9;&#9;&#9;expect(args[1]).to.equal(6)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(6)

&#9;&#9;&#9;expect(chained).to.be.ok()
&#9;&#9;&#9;expect(chained).never.to.equal(promise)
&#9;&#9;&#9;expect(chained:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(#chained._values).to.equal(0)
&#9;&#9;end)

&#9;&#9;it(&quot;should chain onto asynchronously rejected promises&quot;, function()
&#9;&#9;&#9;local args
&#9;&#9;&#9;local argsLength
&#9;&#9;&#9;local callCount = 0
&#9;&#9;&#9;local badCallCount = 0

&#9;&#9;&#9;local startResolution
&#9;&#9;&#9;local promise = Promise.new(function(_, reject)
&#9;&#9;&#9;&#9;startResolution = reject
&#9;&#9;&#9;end)

&#9;&#9;&#9;local chained = promise:andThen(function()
&#9;&#9;&#9;&#9;badCallCount = badCallCount + 1
&#9;&#9;&#9;end, function(...)
&#9;&#9;&#9;&#9;args = { ... }
&#9;&#9;&#9;&#9;argsLength = select(&quot;#&quot;, ...)
&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(callCount).to.equal(0)
&#9;&#9;&#9;expect(badCallCount).to.equal(0)

&#9;&#9;&#9;startResolution(6)

&#9;&#9;&#9;expect(badCallCount).to.equal(0)

&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;&#9;expect(argsLength).to.equal(1)
&#9;&#9;&#9;expect(args[1]).to.equal(6)

&#9;&#9;&#9;expect(promise).to.be.ok()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(6)

&#9;&#9;&#9;expect(chained).to.be.ok()
&#9;&#9;&#9;expect(chained).never.to.equal(promise)
&#9;&#9;&#9;expect(chained:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(#chained._values).to.equal(0)
&#9;&#9;end)

&#9;&#9;it(&quot;should propagate errors through multiple levels&quot;, function()
&#9;&#9;&#9;local x, y, z
&#9;&#9;&#9;Promise.new(function(resolve, reject)
&#9;&#9;&#9;&#9;reject(1, 2, 3)
&#9;&#9;&#9;end):andThen(function() end):catch(function(a, b, c)
&#9;&#9;&#9;&#9;x, y, z = a, b, c
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(x).to.equal(1)
&#9;&#9;&#9;expect(y).to.equal(2)
&#9;&#9;&#9;expect(z).to.equal(3)
&#9;&#9;end)

&#9;&#9;it(&quot;should not call queued callbacks from a cancelled sub-promise&quot;, function()
&#9;&#9;&#9;local resolve
&#9;&#9;&#9;local count = 0

&#9;&#9;&#9;local root = Promise.new(function(r)
&#9;&#9;&#9;&#9;resolve = r
&#9;&#9;&#9;end)

&#9;&#9;&#9;root:andThen(function()
&#9;&#9;&#9;&#9;count += 1
&#9;&#9;&#9;end)

&#9;&#9;&#9;root
&#9;&#9;&#9;&#9;:andThen(function()
&#9;&#9;&#9;&#9;&#9;count += 1
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;:cancel()

&#9;&#9;&#9;resolve(&quot;foo&quot;)

&#9;&#9;&#9;expect(count).to.equal(1)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise:cancel&quot;, function()
&#9;&#9;it(&quot;should mark promises as cancelled and not resolve or reject them&quot;, function()
&#9;&#9;&#9;local callCount = 0
&#9;&#9;&#9;local finallyCallCount = 0
&#9;&#9;&#9;local promise = Promise.new(function() end)
&#9;&#9;&#9;&#9;:andThen(function()
&#9;&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;:finally(function()
&#9;&#9;&#9;&#9;&#9;finallyCallCount = finallyCallCount + 1
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;promise:cancel()
&#9;&#9;&#9;promise:cancel() -- Twice to check call counts

&#9;&#9;&#9;expect(callCount).to.equal(0)
&#9;&#9;&#9;expect(finallyCallCount).to.equal(1)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;end)

&#9;&#9;it(&quot;should call the cancellation hook once&quot;, function()
&#9;&#9;&#9;local callCount = 0

&#9;&#9;&#9;local promise = Promise.new(function(resolve, reject, onCancel)
&#9;&#9;&#9;&#9;onCancel(function()
&#9;&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end)

&#9;&#9;&#9;promise:cancel()
&#9;&#9;&#9;promise:cancel() -- Twice to check call count

&#9;&#9;&#9;expect(callCount).to.equal(1)
&#9;&#9;end)

&#9;&#9;it(&quot;should propagate cancellations&quot;, function()
&#9;&#9;&#9;local promise = Promise.new(function() end)

&#9;&#9;&#9;local consumer1 = promise:andThen()
&#9;&#9;&#9;local consumer2 = promise:andThen()

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;expect(consumer1:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;expect(consumer2:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;consumer1:cancel()

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;expect(consumer1:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(consumer2:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;consumer2:cancel()

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(consumer1:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(consumer2:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;end)

&#9;&#9;it(&quot;should affect downstream promises&quot;, function()
&#9;&#9;&#9;local promise = Promise.new(function() end)
&#9;&#9;&#9;local consumer = promise:andThen()

&#9;&#9;&#9;promise:cancel()

&#9;&#9;&#9;expect(consumer:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;end)

&#9;&#9;it(&quot;should track consumers&quot;, function()
&#9;&#9;&#9;local pending = Promise.new(function() end)
&#9;&#9;&#9;local p0 = Promise.resolve()
&#9;&#9;&#9;local p1 = p0:andThen(function()
&#9;&#9;&#9;&#9;return pending
&#9;&#9;&#9;end)
&#9;&#9;&#9;local p2 = Promise.new(function(resolve)
&#9;&#9;&#9;&#9;resolve(p1)
&#9;&#9;&#9;end)
&#9;&#9;&#9;local p3 = p2:andThen(function() end)

&#9;&#9;&#9;expect(p1._parent).to.never.equal(p0)
&#9;&#9;&#9;expect(p2._parent).to.never.equal(p1)
&#9;&#9;&#9;expect(p2._consumers[p3]).to.be.ok()
&#9;&#9;&#9;expect(p3._parent).to.equal(p2)
&#9;&#9;end)

&#9;&#9;it(&quot;should cancel resolved pending promises&quot;, function()
&#9;&#9;&#9;local p1 = Promise.new(function() end)

&#9;&#9;&#9;local p2 = Promise.new(function(resolve)
&#9;&#9;&#9;&#9;resolve(p1)
&#9;&#9;&#9;end):finally(function() end)

&#9;&#9;&#9;p2:cancel()

&#9;&#9;&#9;expect(p1._status).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(p2._status).to.equal(Promise.Status.Cancelled)
&#9;&#9;end)

&#9;&#9;it(&quot;should close the promise thread&quot;, function()
&#9;&#9;&#9;local count = 0
&#9;&#9;&#9;local promise = Promise.new(function()
&#9;&#9;&#9;&#9;count += 1
&#9;&#9;&#9;&#9;Promise.delay(1):await()
&#9;&#9;&#9;&#9;count += 1
&#9;&#9;&#9;end)

&#9;&#9;&#9;promise:cancel()
&#9;&#9;&#9;advanceTime(2)

&#9;&#9;&#9;expect(count).to.equal(1)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise:finally&quot;, function()
&#9;&#9;it(&quot;should be called upon resolve, reject, or cancel&quot;, function()
&#9;&#9;&#9;local callCount = 0

&#9;&#9;&#9;local function finally()
&#9;&#9;&#9;&#9;callCount = callCount + 1
&#9;&#9;&#9;end

&#9;&#9;&#9;-- Resolved promise
&#9;&#9;&#9;Promise.new(function(resolve, reject)
&#9;&#9;&#9;&#9;resolve()
&#9;&#9;&#9;end):finally(finally)

&#9;&#9;&#9;-- Chained promise
&#9;&#9;&#9;Promise.resolve():andThen(function() end):finally(finally):finally(finally)

&#9;&#9;&#9;-- Rejected promise
&#9;&#9;&#9;Promise.reject():finally(finally)

&#9;&#9;&#9;local cancelledPromise = Promise.new(function() end):finally(finally)
&#9;&#9;&#9;cancelledPromise:cancel()

&#9;&#9;&#9;expect(callCount).to.equal(5)
&#9;&#9;end)

&#9;&#9;it(&quot;should not forward return values&quot;, function()
&#9;&#9;&#9;local value

&#9;&#9;&#9;Promise.resolve(2)
&#9;&#9;&#9;&#9;:finally(function()
&#9;&#9;&#9;&#9;&#9;return 1
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;:andThen(function(v)
&#9;&#9;&#9;&#9;&#9;value = v
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(value).to.equal(2)
&#9;&#9;end)

&#9;&#9;it(&quot;should not consume rejections&quot;, function()
&#9;&#9;&#9;local catchRan = false
&#9;&#9;&#9;local thenRan = false
&#9;&#9;&#9;Promise.reject(5)
&#9;&#9;&#9;&#9;:finally(function()
&#9;&#9;&#9;&#9;&#9;return 42
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;:andThen(function()
&#9;&#9;&#9;&#9;&#9;thenRan = true
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;:catch(function(value)
&#9;&#9;&#9;&#9;&#9;catchRan = true
&#9;&#9;&#9;&#9;&#9;expect(value).to.equal(5)
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(catchRan).to.equal(true)
&#9;&#9;&#9;expect(thenRan).to.equal(false)
&#9;&#9;end)

&#9;&#9;it(&quot;should wait for returned promises&quot;, function()
&#9;&#9;&#9;local resolve
&#9;&#9;&#9;local promise = Promise.reject(&quot;foo&quot;):finally(function()
&#9;&#9;&#9;&#9;return Promise.new(function(r)
&#9;&#9;&#9;&#9;&#9;resolve = r
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;resolve()

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;local _, value = promise:_unwrap()
&#9;&#9;&#9;expect(value).to.equal(&quot;foo&quot;)
&#9;&#9;end)

&#9;&#9;it(&quot;should reject with a returned rejected promise&apos;s value&quot;, function()
&#9;&#9;&#9;local reject
&#9;&#9;&#9;local promise = Promise.reject(&quot;foo&quot;):finally(function()
&#9;&#9;&#9;&#9;return Promise.new(function(_, r)
&#9;&#9;&#9;&#9;&#9;reject = r
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;reject(&quot;bar&quot;)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;local _, value = promise:_unwrap()
&#9;&#9;&#9;expect(value).to.equal(&quot;bar&quot;)
&#9;&#9;end)

&#9;&#9;it(&quot;should reject when handler errors&quot;, function()
&#9;&#9;&#9;local errorValue = {}
&#9;&#9;&#9;local promise = Promise.reject(&quot;bar&quot;):finally(function()
&#9;&#9;&#9;&#9;error(errorValue)
&#9;&#9;&#9;end)

&#9;&#9;&#9;local ok, value = promise:_unwrap()

&#9;&#9;&#9;expect(ok).to.equal(false)
&#9;&#9;&#9;expect(value).to.equal(errorValue)
&#9;&#9;end)

&#9;&#9;it(&quot;should not prevent cancellation&quot;, function()
&#9;&#9;&#9;local promise = Promise.new(function() end)

&#9;&#9;&#9;local finallyRan = false
&#9;&#9;&#9;promise:finally(function()
&#9;&#9;&#9;&#9;finallyRan = true
&#9;&#9;&#9;end)

&#9;&#9;&#9;local consumer = promise:andThen(function() end)

&#9;&#9;&#9;consumer:cancel()

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(finallyRan).to.equal(true)
&#9;&#9;end)

&#9;&#9;it(&quot;should propagate cancellation downwards&quot;, function()
&#9;&#9;&#9;local finallyRan = false
&#9;&#9;&#9;local andThenRan = false
&#9;&#9;&#9;local root = Promise.new(function() end)

&#9;&#9;&#9;local consumer = root:finally(function()
&#9;&#9;&#9;&#9;finallyRan = true
&#9;&#9;&#9;end)

&#9;&#9;&#9;root:cancel()

&#9;&#9;&#9;expect(root:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(consumer:getStatus()).to.equal(Promise.Status.Cancelled)

&#9;&#9;&#9;expect(finallyRan).to.equal(true)
&#9;&#9;&#9;expect(andThenRan).to.equal(false)
&#9;&#9;end)

&#9;&#9;it(&quot;should propagate cancellation upwards&quot;, function()
&#9;&#9;&#9;local finallyRan = false
&#9;&#9;&#9;local andThenRan = false
&#9;&#9;&#9;local root = Promise.new(function() end)

&#9;&#9;&#9;local consumer = root:finally(function()
&#9;&#9;&#9;&#9;finallyRan = true
&#9;&#9;&#9;end)

&#9;&#9;&#9;consumer:cancel()

&#9;&#9;&#9;expect(root:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(consumer:getStatus()).to.equal(Promise.Status.Cancelled)

&#9;&#9;&#9;expect(finallyRan).to.equal(true)
&#9;&#9;&#9;expect(andThenRan).to.equal(false)
&#9;&#9;end)

&#9;&#9;it(&quot;should cancel returned promise if cancelled&quot;, function()
&#9;&#9;&#9;local internal = Promise.new(function() end)

&#9;&#9;&#9;local promise = Promise.resolve():finally(function()
&#9;&#9;&#9;&#9;return internal
&#9;&#9;&#9;end)

&#9;&#9;&#9;promise:cancel()

&#9;&#9;&#9;expect(internal:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.all&quot;, function()
&#9;&#9;it(&quot;should error if given something other than a table&quot;, function()
&#9;&#9;&#9;expect(function()
&#9;&#9;&#9;&#9;Promise.all(1)
&#9;&#9;&#9;end).to.throw()
&#9;&#9;end)

&#9;&#9;it(&quot;should resolve instantly with an empty table if given no promises&quot;, function()
&#9;&#9;&#9;local promise = Promise.all({})
&#9;&#9;&#9;local success, value = promise:_unwrap()

&#9;&#9;&#9;expect(success).to.equal(true)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(value).to.be.a(&quot;table&quot;)
&#9;&#9;&#9;expect(next(value)).to.equal(nil)
&#9;&#9;end)

&#9;&#9;it(&quot;should error if given non-promise values&quot;, function()
&#9;&#9;&#9;expect(function()
&#9;&#9;&#9;&#9;Promise.all({ {}, {}, {} })
&#9;&#9;&#9;end).to.throw()
&#9;&#9;end)

&#9;&#9;it(&quot;should wait for all promises to be resolved and return their values&quot;, function()
&#9;&#9;&#9;local resolveFunctions = {}

&#9;&#9;&#9;local testValuesLength, testValues = pack(1, &quot;A string&quot;, nil, false)

&#9;&#9;&#9;local promises = {}

&#9;&#9;&#9;for i = 1, testValuesLength do
&#9;&#9;&#9;&#9;promises[i] = Promise.new(function(resolve)
&#9;&#9;&#9;&#9;&#9;resolveFunctions[i] = { resolve, testValues[i] }
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end

&#9;&#9;&#9;local combinedPromise = Promise.all(promises)

&#9;&#9;&#9;for _, resolve in ipairs(resolveFunctions) do
&#9;&#9;&#9;&#9;expect(combinedPromise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;&#9;resolve[1](resolve[2])
&#9;&#9;&#9;end

&#9;&#9;&#9;local resultLength, result = pack(combinedPromise:_unwrap())
&#9;&#9;&#9;local success, resolved = unpack(result, 1, resultLength)

&#9;&#9;&#9;expect(resultLength).to.equal(2)
&#9;&#9;&#9;expect(success).to.equal(true)
&#9;&#9;&#9;expect(resolved).to.be.a(&quot;table&quot;)
&#9;&#9;&#9;expect(#resolved).to.equal(#promises)

&#9;&#9;&#9;for i = 1, testValuesLength do
&#9;&#9;&#9;&#9;expect(resolved[i]).to.equal(testValues[i])
&#9;&#9;&#9;end
&#9;&#9;end)

&#9;&#9;it(&quot;should reject if any individual promise rejected&quot;, function()
&#9;&#9;&#9;local rejectA
&#9;&#9;&#9;local resolveB

&#9;&#9;&#9;local a = Promise.new(function(_, reject)
&#9;&#9;&#9;&#9;rejectA = reject
&#9;&#9;&#9;end)

&#9;&#9;&#9;local b = Promise.new(function(resolve)
&#9;&#9;&#9;&#9;resolveB = resolve
&#9;&#9;&#9;end)

&#9;&#9;&#9;local combinedPromise = Promise.all({ a, b })

&#9;&#9;&#9;expect(combinedPromise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;rejectA(&quot;baz&quot;, &quot;qux&quot;)
&#9;&#9;&#9;resolveB(&quot;foo&quot;, &quot;bar&quot;)

&#9;&#9;&#9;local resultLength, result = pack(combinedPromise:_unwrap())
&#9;&#9;&#9;local success, first, second = unpack(result, 1, resultLength)

&#9;&#9;&#9;expect(resultLength).to.equal(3)
&#9;&#9;&#9;expect(success).to.equal(false)
&#9;&#9;&#9;expect(first).to.equal(&quot;baz&quot;)
&#9;&#9;&#9;expect(second).to.equal(&quot;qux&quot;)
&#9;&#9;&#9;expect(b:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;end)

&#9;&#9;it(&quot;should not resolve if resolved after rejecting&quot;, function()
&#9;&#9;&#9;local rejectA
&#9;&#9;&#9;local resolveB

&#9;&#9;&#9;local a = Promise.new(function(_, reject)
&#9;&#9;&#9;&#9;rejectA = reject
&#9;&#9;&#9;end)

&#9;&#9;&#9;local b = Promise.new(function(resolve)
&#9;&#9;&#9;&#9;resolveB = resolve
&#9;&#9;&#9;end)

&#9;&#9;&#9;local combinedPromise = Promise.all({ a, b })

&#9;&#9;&#9;expect(combinedPromise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;rejectA(&quot;baz&quot;, &quot;qux&quot;)
&#9;&#9;&#9;resolveB(&quot;foo&quot;, &quot;bar&quot;)

&#9;&#9;&#9;local resultLength, result = pack(combinedPromise:_unwrap())
&#9;&#9;&#9;local success, first, second = unpack(result, 1, resultLength)

&#9;&#9;&#9;expect(resultLength).to.equal(3)
&#9;&#9;&#9;expect(success).to.equal(false)
&#9;&#9;&#9;expect(first).to.equal(&quot;baz&quot;)
&#9;&#9;&#9;expect(second).to.equal(&quot;qux&quot;)
&#9;&#9;end)

&#9;&#9;it(&quot;should only reject once&quot;, function()
&#9;&#9;&#9;local rejectA
&#9;&#9;&#9;local rejectB

&#9;&#9;&#9;local a = Promise.new(function(_, reject)
&#9;&#9;&#9;&#9;rejectA = reject
&#9;&#9;&#9;end)

&#9;&#9;&#9;local b = Promise.new(function(_, reject)
&#9;&#9;&#9;&#9;rejectB = reject
&#9;&#9;&#9;end)

&#9;&#9;&#9;local combinedPromise = Promise.all({ a, b })

&#9;&#9;&#9;expect(combinedPromise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;rejectA(&quot;foo&quot;, &quot;bar&quot;)

&#9;&#9;&#9;expect(combinedPromise:getStatus()).to.equal(Promise.Status.Rejected)

&#9;&#9;&#9;rejectB(&quot;baz&quot;, &quot;qux&quot;)

&#9;&#9;&#9;local resultLength, result = pack(combinedPromise:_unwrap())
&#9;&#9;&#9;local success, first, second = unpack(result, 1, resultLength)

&#9;&#9;&#9;expect(resultLength).to.equal(3)
&#9;&#9;&#9;expect(success).to.equal(false)
&#9;&#9;&#9;expect(first).to.equal(&quot;foo&quot;)
&#9;&#9;&#9;expect(second).to.equal(&quot;bar&quot;)
&#9;&#9;end)

&#9;&#9;it(&quot;should error if a non-array table is passed in&quot;, function()
&#9;&#9;&#9;local ok, err = pcall(function()
&#9;&#9;&#9;&#9;Promise.all(Promise.new(function() end))
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(ok).to.be.ok()
&#9;&#9;&#9;expect(err:find(&quot;Non%-promise&quot;)).to.be.ok()
&#9;&#9;end)

&#9;&#9;it(&quot;should cancel pending promises if one rejects&quot;, function()
&#9;&#9;&#9;local p = Promise.new(function() end)
&#9;&#9;&#9;expect(Promise.all({
&#9;&#9;&#9;&#9;Promise.resolve(),
&#9;&#9;&#9;&#9;Promise.reject(),
&#9;&#9;&#9;&#9;p,
&#9;&#9;&#9;}):getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(p:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;end)

&#9;&#9;it(&quot;should cancel promises if it is cancelled&quot;, function()
&#9;&#9;&#9;local p = Promise.new(function() end)
&#9;&#9;&#9;p:andThen(function() end)

&#9;&#9;&#9;local promises = {
&#9;&#9;&#9;&#9;Promise.new(function() end),
&#9;&#9;&#9;&#9;Promise.new(function() end),
&#9;&#9;&#9;&#9;p,
&#9;&#9;&#9;}

&#9;&#9;&#9;Promise.all(promises):cancel()

&#9;&#9;&#9;expect(promises[1]:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(promises[2]:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(promises[3]:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.fold&quot;, function()
&#9;&#9;it(&quot;should return the initial value in a promise when the list is empty&quot;, function()
&#9;&#9;&#9;local initialValue = {}
&#9;&#9;&#9;local result = Promise.fold({}, function()
&#9;&#9;&#9;&#9;error(&quot;should not be called&quot;)
&#9;&#9;&#9;end, initialValue)

&#9;&#9;&#9;expect(Promise.is(result)).to.equal(true)
&#9;&#9;&#9;expect(result:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(result:expect()).to.equal(initialValue)
&#9;&#9;end)

&#9;&#9;it(&quot;should accept promises in the list&quot;, function()
&#9;&#9;&#9;local resolve

&#9;&#9;&#9;local sum = Promise.fold({ Promise.new(function(r)
&#9;&#9;&#9;&#9;resolve = r
&#9;&#9;&#9;end), 2, 3 }, function(sum, element)
&#9;&#9;&#9;&#9;return sum + element
&#9;&#9;&#9;end, 0)

&#9;&#9;&#9;resolve(1)

&#9;&#9;&#9;expect(Promise.is(sum)).to.equal(true)
&#9;&#9;&#9;expect(sum:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(sum:expect()).to.equal(6)
&#9;&#9;end)

&#9;&#9;it(&quot;should always return a promise even if the list or reducer don&apos;t use them&quot;, function()
&#9;&#9;&#9;local sum = Promise.fold({ 1, 2, 3 }, function(sum, element, index)
&#9;&#9;&#9;&#9;if index == 2 then
&#9;&#9;&#9;&#9;&#9;return Promise.delay(1):andThenReturn(sum + element)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;return sum + element
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end, 0)
&#9;&#9;&#9;expect(Promise.is(sum)).to.equal(true)
&#9;&#9;&#9;expect(sum:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;advanceTime(2)
&#9;&#9;&#9;expect(sum:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(sum:expect()).to.equal(6)
&#9;&#9;end)

&#9;&#9;it(&quot;should return the first rejected promise&quot;, function()
&#9;&#9;&#9;local errorMessage = &quot;foo&quot;
&#9;&#9;&#9;local sum = Promise.fold({ 1, 2, 3 }, function(sum, element, index)
&#9;&#9;&#9;&#9;if index == 2 then
&#9;&#9;&#9;&#9;&#9;return Promise.reject(errorMessage)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;return sum + element
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end, 0)
&#9;&#9;&#9;expect(Promise.is(sum)).to.equal(true)
&#9;&#9;&#9;local status, rejection = sum:awaitStatus()
&#9;&#9;&#9;expect(status).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(rejection).to.equal(errorMessage)
&#9;&#9;end)

&#9;&#9;it(&quot;should return the first canceled promise&quot;, function()
&#9;&#9;&#9;local secondPromise
&#9;&#9;&#9;local sum = Promise.fold({ 1, 2, 3 }, function(sum, element, index)
&#9;&#9;&#9;&#9;if index == 1 then
&#9;&#9;&#9;&#9;&#9;return sum + element
&#9;&#9;&#9;&#9;elseif index == 2 then
&#9;&#9;&#9;&#9;&#9;secondPromise = Promise.delay(1):andThenReturn(sum + element)
&#9;&#9;&#9;&#9;&#9;return secondPromise
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;error(&quot;this should not run if the promise is cancelled&quot;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end, 0)
&#9;&#9;&#9;expect(Promise.is(sum)).to.equal(true)
&#9;&#9;&#9;expect(sum:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;secondPromise:cancel()
&#9;&#9;&#9;expect(sum:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.race&quot;, function()
&#9;&#9;it(&quot;should resolve with the first settled value&quot;, function()
&#9;&#9;&#9;local promise = Promise.race({
&#9;&#9;&#9;&#9;Promise.resolve(1),
&#9;&#9;&#9;&#9;Promise.resolve(2),
&#9;&#9;&#9;}):andThen(function(value)
&#9;&#9;&#9;&#9;expect(value).to.equal(1)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;end)

&#9;&#9;it(&quot;should cancel other promises&quot;, function()
&#9;&#9;&#9;local promise = Promise.new(function() end)
&#9;&#9;&#9;promise:andThen(function() end)
&#9;&#9;&#9;local promises = {
&#9;&#9;&#9;&#9;promise,
&#9;&#9;&#9;&#9;Promise.new(function() end),
&#9;&#9;&#9;&#9;Promise.new(function(resolve)
&#9;&#9;&#9;&#9;&#9;resolve(2)
&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;}

&#9;&#9;&#9;local promise = Promise.race(promises)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(2)
&#9;&#9;&#9;expect(promises[1]:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;expect(promises[2]:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(promises[3]:getStatus()).to.equal(Promise.Status.Resolved)

&#9;&#9;&#9;local p = Promise.new(function() end)
&#9;&#9;&#9;expect(Promise.race({
&#9;&#9;&#9;&#9;Promise.reject(),
&#9;&#9;&#9;&#9;Promise.resolve(),
&#9;&#9;&#9;&#9;p,
&#9;&#9;&#9;}):getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(p:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;end)

&#9;&#9;it(&quot;should error if a non-array table is passed in&quot;, function()
&#9;&#9;&#9;local ok, err = pcall(function()
&#9;&#9;&#9;&#9;Promise.race(Promise.new(function() end))
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(ok).to.be.ok()
&#9;&#9;&#9;expect(err:find(&quot;Non%-promise&quot;)).to.be.ok()
&#9;&#9;end)

&#9;&#9;it(&quot;should cancel promises if it is cancelled&quot;, function()
&#9;&#9;&#9;local p = Promise.new(function() end)
&#9;&#9;&#9;p:andThen(function() end)

&#9;&#9;&#9;local promises = {
&#9;&#9;&#9;&#9;Promise.new(function() end),
&#9;&#9;&#9;&#9;Promise.new(function() end),
&#9;&#9;&#9;&#9;p,
&#9;&#9;&#9;}

&#9;&#9;&#9;Promise.race(promises):cancel()

&#9;&#9;&#9;expect(promises[1]:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(promises[2]:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(promises[3]:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.promisify&quot;, function()
&#9;&#9;it(&quot;should wrap functions&quot;, function()
&#9;&#9;&#9;local function test(n)
&#9;&#9;&#9;&#9;return n + 1
&#9;&#9;&#9;end

&#9;&#9;&#9;local promisified = Promise.promisify(test)
&#9;&#9;&#9;local promise = promisified(1)
&#9;&#9;&#9;local success, result = promise:_unwrap()

&#9;&#9;&#9;expect(success).to.equal(true)
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(result).to.equal(2)
&#9;&#9;end)

&#9;&#9;it(&quot;should catch errors after a yield&quot;, function()
&#9;&#9;&#9;local bindable = Instance.new(&quot;BindableEvent&quot;)
&#9;&#9;&#9;local test = Promise.promisify(function()
&#9;&#9;&#9;&#9;bindable.Event:Wait()
&#9;&#9;&#9;&#9;error(&quot;errortext&quot;)
&#9;&#9;&#9;end)

&#9;&#9;&#9;local promise = test()

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;bindable:Fire()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(tostring(promise._values[1]):find(&quot;errortext&quot;)).to.be.ok()
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.tap&quot;, function()
&#9;&#9;it(&quot;should thread through values&quot;, function()
&#9;&#9;&#9;local first, second

&#9;&#9;&#9;Promise.resolve(1)
&#9;&#9;&#9;&#9;:andThen(function(v)
&#9;&#9;&#9;&#9;&#9;return v + 1
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;:tap(function(v)
&#9;&#9;&#9;&#9;&#9;first = v
&#9;&#9;&#9;&#9;&#9;return v + 1
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;:andThen(function(v)
&#9;&#9;&#9;&#9;&#9;second = v
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(first).to.equal(2)
&#9;&#9;&#9;expect(second).to.equal(2)
&#9;&#9;end)

&#9;&#9;it(&quot;should chain onto promises&quot;, function()
&#9;&#9;&#9;local resolveInner, finalValue

&#9;&#9;&#9;local promise = Promise.resolve(1)
&#9;&#9;&#9;&#9;:tap(function()
&#9;&#9;&#9;&#9;&#9;return Promise.new(function(resolve)
&#9;&#9;&#9;&#9;&#9;&#9;resolveInner = resolve
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;:andThen(function(v)
&#9;&#9;&#9;&#9;&#9;finalValue = v
&#9;&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;expect(finalValue).to.never.be.ok()

&#9;&#9;&#9;resolveInner(1)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(finalValue).to.equal(1)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.try&quot;, function()
&#9;&#9;it(&quot;should catch synchronous errors&quot;, function()
&#9;&#9;&#9;local errorText
&#9;&#9;&#9;Promise.try(function()
&#9;&#9;&#9;&#9;error(&quot;errortext&quot;)
&#9;&#9;&#9;end):catch(function(e)
&#9;&#9;&#9;&#9;errorText = tostring(e)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(errorText:find(&quot;errortext&quot;)).to.be.ok()
&#9;&#9;end)

&#9;&#9;it(&quot;should reject with error objects&quot;, function()
&#9;&#9;&#9;local object = {}
&#9;&#9;&#9;local success, value = Promise.try(function()
&#9;&#9;&#9;&#9;error(object)
&#9;&#9;&#9;end):_unwrap()

&#9;&#9;&#9;expect(success).to.equal(false)
&#9;&#9;&#9;expect(value).to.equal(object)
&#9;&#9;end)

&#9;&#9;it(&quot;should catch asynchronous errors&quot;, function()
&#9;&#9;&#9;local bindable = Instance.new(&quot;BindableEvent&quot;)
&#9;&#9;&#9;local promise = Promise.try(function()
&#9;&#9;&#9;&#9;bindable.Event:Wait()
&#9;&#9;&#9;&#9;error(&quot;errortext&quot;)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;bindable:Fire()
&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(tostring(promise._values[1]):find(&quot;errortext&quot;)).to.be.ok()
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise:andThenReturn&quot;, function()
&#9;&#9;it(&quot;should return the given values&quot;, function()
&#9;&#9;&#9;local value1, value2

&#9;&#9;&#9;Promise.resolve():andThenReturn(1, 2):andThen(function(one, two)
&#9;&#9;&#9;&#9;value1 = one
&#9;&#9;&#9;&#9;value2 = two
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(value1).to.equal(1)
&#9;&#9;&#9;expect(value2).to.equal(2)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise:andThenCall&quot;, function()
&#9;&#9;it(&quot;should call the given function with arguments&quot;, function()
&#9;&#9;&#9;local value1, value2
&#9;&#9;&#9;Promise.resolve():andThenCall(function(a, b)
&#9;&#9;&#9;&#9;value1 = a
&#9;&#9;&#9;&#9;value2 = b
&#9;&#9;&#9;end, 3, 4)

&#9;&#9;&#9;expect(value1).to.equal(3)
&#9;&#9;&#9;expect(value2).to.equal(4)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.some&quot;, function()
&#9;&#9;it(&quot;should resolve once the goal is reached&quot;, function()
&#9;&#9;&#9;local p = Promise.some({
&#9;&#9;&#9;&#9;Promise.resolve(1),
&#9;&#9;&#9;&#9;Promise.reject(),
&#9;&#9;&#9;&#9;Promise.resolve(2),
&#9;&#9;&#9;}, 2)
&#9;&#9;&#9;expect(p:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(p._values[1][1]).to.equal(1)
&#9;&#9;&#9;expect(p._values[1][2]).to.equal(2)
&#9;&#9;end)

&#9;&#9;it(&quot;should error if the goal can&apos;t be reached&quot;, function()
&#9;&#9;&#9;expect(Promise.some({
&#9;&#9;&#9;&#9;Promise.resolve(),
&#9;&#9;&#9;&#9;Promise.reject(),
&#9;&#9;&#9;}, 2):getStatus()).to.equal(Promise.Status.Rejected)

&#9;&#9;&#9;local reject
&#9;&#9;&#9;local p = Promise.some({
&#9;&#9;&#9;&#9;Promise.resolve(),
&#9;&#9;&#9;&#9;Promise.new(function(_, r)
&#9;&#9;&#9;&#9;&#9;reject = r
&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;}, 2)

&#9;&#9;&#9;expect(p:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;reject(&quot;foo&quot;)
&#9;&#9;&#9;expect(p:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(p._values[1]).to.equal(&quot;foo&quot;)
&#9;&#9;end)

&#9;&#9;it(&quot;should cancel pending Promises once the goal is reached&quot;, function()
&#9;&#9;&#9;local resolve
&#9;&#9;&#9;local pending1 = Promise.new(function() end)
&#9;&#9;&#9;local pending2 = Promise.new(function(r)
&#9;&#9;&#9;&#9;resolve = r
&#9;&#9;&#9;end)

&#9;&#9;&#9;local some = Promise.some({
&#9;&#9;&#9;&#9;pending1,
&#9;&#9;&#9;&#9;pending2,
&#9;&#9;&#9;&#9;Promise.resolve(),
&#9;&#9;&#9;}, 2)

&#9;&#9;&#9;expect(some:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;expect(pending1:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;expect(pending2:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;resolve()

&#9;&#9;&#9;expect(some:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(pending1:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(pending2:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;end)

&#9;&#9;it(&quot;should error if passed a non-number&quot;, function()
&#9;&#9;&#9;expect(function()
&#9;&#9;&#9;&#9;Promise.some({}, &quot;non-number&quot;)
&#9;&#9;&#9;end).to.throw()
&#9;&#9;end)

&#9;&#9;it(&quot;should return an empty array if amount is 0&quot;, function()
&#9;&#9;&#9;local p = Promise.some({
&#9;&#9;&#9;&#9;Promise.resolve(2),
&#9;&#9;&#9;}, 0)

&#9;&#9;&#9;expect(p:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(#p._values[1]).to.equal(0)
&#9;&#9;end)

&#9;&#9;it(&quot;should not return extra values&quot;, function()
&#9;&#9;&#9;local p = Promise.some({
&#9;&#9;&#9;&#9;Promise.resolve(1),
&#9;&#9;&#9;&#9;Promise.resolve(2),
&#9;&#9;&#9;&#9;Promise.resolve(3),
&#9;&#9;&#9;&#9;Promise.resolve(4),
&#9;&#9;&#9;}, 2)

&#9;&#9;&#9;expect(p:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(#p._values[1]).to.equal(2)
&#9;&#9;&#9;expect(p._values[1][1]).to.equal(1)
&#9;&#9;&#9;expect(p._values[1][2]).to.equal(2)
&#9;&#9;end)

&#9;&#9;it(&quot;should cancel promises if it is cancelled&quot;, function()
&#9;&#9;&#9;local p = Promise.new(function() end)
&#9;&#9;&#9;p:andThen(function() end)

&#9;&#9;&#9;local promises = {
&#9;&#9;&#9;&#9;Promise.new(function() end),
&#9;&#9;&#9;&#9;Promise.new(function() end),
&#9;&#9;&#9;&#9;p,
&#9;&#9;&#9;}

&#9;&#9;&#9;Promise.some(promises, 3):cancel()

&#9;&#9;&#9;expect(promises[1]:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(promises[2]:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(promises[3]:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;end)

&#9;&#9;describe(&quot;Promise.any&quot;, function()
&#9;&#9;&#9;it(&quot;should return the value directly&quot;, function()
&#9;&#9;&#9;&#9;local p = Promise.any({
&#9;&#9;&#9;&#9;&#9;Promise.reject(),
&#9;&#9;&#9;&#9;&#9;Promise.reject(),
&#9;&#9;&#9;&#9;&#9;Promise.resolve(1),
&#9;&#9;&#9;&#9;})

&#9;&#9;&#9;&#9;expect(p:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;&#9;expect(p._values[1]).to.equal(1)
&#9;&#9;&#9;end)

&#9;&#9;&#9;it(&quot;should error if all are rejected&quot;, function()
&#9;&#9;&#9;&#9;expect(Promise.any({
&#9;&#9;&#9;&#9;&#9;Promise.reject(),
&#9;&#9;&#9;&#9;&#9;Promise.reject(),
&#9;&#9;&#9;&#9;&#9;Promise.reject(),
&#9;&#9;&#9;&#9;}):getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;end)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.allSettled&quot;, function()
&#9;&#9;it(&quot;should resolve with an array of PromiseStatuses&quot;, function()
&#9;&#9;&#9;local reject
&#9;&#9;&#9;local p = Promise.allSettled({
&#9;&#9;&#9;&#9;Promise.resolve(),
&#9;&#9;&#9;&#9;Promise.reject(),
&#9;&#9;&#9;&#9;Promise.resolve(),
&#9;&#9;&#9;&#9;Promise.new(function(_, r)
&#9;&#9;&#9;&#9;&#9;reject = r
&#9;&#9;&#9;&#9;end),
&#9;&#9;&#9;})

&#9;&#9;&#9;expect(p:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;reject()
&#9;&#9;&#9;expect(p:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(p._values[1][1]).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(p._values[1][2]).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(p._values[1][3]).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(p._values[1][4]).to.equal(Promise.Status.Rejected)
&#9;&#9;end)

&#9;&#9;it(&quot;should cancel promises if it is cancelled&quot;, function()
&#9;&#9;&#9;local p = Promise.new(function() end)
&#9;&#9;&#9;p:andThen(function() end)

&#9;&#9;&#9;local promises = {
&#9;&#9;&#9;&#9;Promise.new(function() end),
&#9;&#9;&#9;&#9;Promise.new(function() end),
&#9;&#9;&#9;&#9;p,
&#9;&#9;&#9;}

&#9;&#9;&#9;Promise.allSettled(promises):cancel()

&#9;&#9;&#9;expect(promises[1]:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(promises[2]:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(promises[3]:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise:await&quot;, function()
&#9;&#9;it(&quot;should return the correct values&quot;, function()
&#9;&#9;&#9;local promise = Promise.resolve(5, 6, nil, 7)

&#9;&#9;&#9;local a, b, c, d, e = promise:await()

&#9;&#9;&#9;expect(a).to.equal(true)
&#9;&#9;&#9;expect(b).to.equal(5)
&#9;&#9;&#9;expect(c).to.equal(6)
&#9;&#9;&#9;expect(d).to.equal(nil)
&#9;&#9;&#9;expect(e).to.equal(7)
&#9;&#9;end)

&#9;&#9;it(&quot;should work if yielding is needed&quot;, function()
&#9;&#9;&#9;local ran = false
&#9;&#9;&#9;task.spawn(function()
&#9;&#9;&#9;&#9;local _, actualTime = Promise.delay(1):await()
&#9;&#9;&#9;&#9;expect(type(actualTime)).to.equal(&quot;number&quot;)
&#9;&#9;&#9;&#9;ran = true
&#9;&#9;&#9;end)

&#9;&#9;&#9;advanceTime(2)
&#9;&#9;&#9;expect(ran).to.equal(true)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise:expect&quot;, function()
&#9;&#9;it(&quot;should throw the correct values&quot;, function()
&#9;&#9;&#9;local rejectionValue = {}
&#9;&#9;&#9;local promise = Promise.reject(rejectionValue)

&#9;&#9;&#9;local success, value = pcall(function()
&#9;&#9;&#9;&#9;promise:expect()
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(success).to.equal(false)
&#9;&#9;&#9;expect(value).to.equal(rejectionValue)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise:now&quot;, function()
&#9;&#9;it(&quot;should resolve if the Promise is resolved&quot;, function()
&#9;&#9;&#9;local success, value = Promise.resolve(&quot;foo&quot;):now():_unwrap()

&#9;&#9;&#9;expect(success).to.equal(true)
&#9;&#9;&#9;expect(value).to.equal(&quot;foo&quot;)
&#9;&#9;end)

&#9;&#9;it(&quot;should reject if the Promise is not resolved&quot;, function()
&#9;&#9;&#9;local success, value = Promise.new(function() end):now():_unwrap()

&#9;&#9;&#9;expect(success).to.equal(false)
&#9;&#9;&#9;expect(Promise.Error.isKind(value, &quot;NotResolvedInTime&quot;)).to.equal(true)
&#9;&#9;end)

&#9;&#9;it(&quot;should reject with a custom rejection value&quot;, function()
&#9;&#9;&#9;local success, value = Promise.new(function() end):now(&quot;foo&quot;):_unwrap()

&#9;&#9;&#9;expect(success).to.equal(false)
&#9;&#9;&#9;expect(value).to.equal(&quot;foo&quot;)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.each&quot;, function()
&#9;&#9;it(&quot;should iterate&quot;, function()
&#9;&#9;&#9;local ok, result = Promise.each({
&#9;&#9;&#9;&#9;&quot;foo&quot;,
&#9;&#9;&#9;&#9;&quot;bar&quot;,
&#9;&#9;&#9;&#9;&quot;baz&quot;,
&#9;&#9;&#9;&#9;&quot;qux&quot;,
&#9;&#9;&#9;}, function(...)
&#9;&#9;&#9;&#9;return { ... }
&#9;&#9;&#9;end):_unwrap()

&#9;&#9;&#9;expect(ok).to.equal(true)
&#9;&#9;&#9;expect(result[1][1]).to.equal(&quot;foo&quot;)
&#9;&#9;&#9;expect(result[1][2]).to.equal(1)
&#9;&#9;&#9;expect(result[2][1]).to.equal(&quot;bar&quot;)
&#9;&#9;&#9;expect(result[2][2]).to.equal(2)
&#9;&#9;&#9;expect(result[3][1]).to.equal(&quot;baz&quot;)
&#9;&#9;&#9;expect(result[3][2]).to.equal(3)
&#9;&#9;&#9;expect(result[4][1]).to.equal(&quot;qux&quot;)
&#9;&#9;&#9;expect(result[4][2]).to.equal(4)
&#9;&#9;end)

&#9;&#9;it(&quot;should iterate serially&quot;, function()
&#9;&#9;&#9;local resolves = {}
&#9;&#9;&#9;local callCounts = {}

&#9;&#9;&#9;local promise = Promise.each({
&#9;&#9;&#9;&#9;&quot;foo&quot;,
&#9;&#9;&#9;&#9;&quot;bar&quot;,
&#9;&#9;&#9;&#9;&quot;baz&quot;,
&#9;&#9;&#9;}, function(value, index)
&#9;&#9;&#9;&#9;callCounts[index] = (callCounts[index] or 0) + 1

&#9;&#9;&#9;&#9;return Promise.new(function(resolve)
&#9;&#9;&#9;&#9;&#9;table.insert(resolves, function()
&#9;&#9;&#9;&#9;&#9;&#9;resolve(value:upper())
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;expect(#resolves).to.equal(1)
&#9;&#9;&#9;expect(callCounts[1]).to.equal(1)
&#9;&#9;&#9;expect(callCounts[2]).to.never.be.ok()

&#9;&#9;&#9;table.remove(resolves, 1)()

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;expect(#resolves).to.equal(1)
&#9;&#9;&#9;expect(callCounts[1]).to.equal(1)
&#9;&#9;&#9;expect(callCounts[2]).to.equal(1)
&#9;&#9;&#9;expect(callCounts[3]).to.never.be.ok()

&#9;&#9;&#9;table.remove(resolves, 1)()

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;expect(callCounts[1]).to.equal(1)
&#9;&#9;&#9;expect(callCounts[2]).to.equal(1)
&#9;&#9;&#9;expect(callCounts[3]).to.equal(1)

&#9;&#9;&#9;table.remove(resolves, 1)()

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(type(promise._values[1])).to.equal(&quot;table&quot;)
&#9;&#9;&#9;expect(type(promise._values[2])).to.equal(&quot;nil&quot;)

&#9;&#9;&#9;local result = promise._values[1]

&#9;&#9;&#9;expect(result[1]).to.equal(&quot;FOO&quot;)
&#9;&#9;&#9;expect(result[2]).to.equal(&quot;BAR&quot;)
&#9;&#9;&#9;expect(result[3]).to.equal(&quot;BAZ&quot;)
&#9;&#9;end)

&#9;&#9;it(&quot;should reject with the value if the predicate promise rejects&quot;, function()
&#9;&#9;&#9;local promise = Promise.each({ 1, 2, 3 }, function()
&#9;&#9;&#9;&#9;return Promise.reject(&quot;foobar&quot;)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(&quot;foobar&quot;)
&#9;&#9;end)

&#9;&#9;it(&quot;should allow Promises to be in the list and wait when it gets to them&quot;, function()
&#9;&#9;&#9;local innerResolve
&#9;&#9;&#9;local innerPromise = Promise.new(function(resolve)
&#9;&#9;&#9;&#9;innerResolve = resolve
&#9;&#9;&#9;end)

&#9;&#9;&#9;local promise = Promise.each({
&#9;&#9;&#9;&#9;innerPromise,
&#9;&#9;&#9;}, function(value)
&#9;&#9;&#9;&#9;return value * 2
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;innerResolve(2)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(promise._values[1][1]).to.equal(4)
&#9;&#9;end)

&#9;&#9;it(&quot;should reject with the value if a Promise from the list rejects&quot;, function()
&#9;&#9;&#9;local called = false
&#9;&#9;&#9;local promise = Promise.each({ 1, 2, Promise.reject(&quot;foobar&quot;) }, function(value)
&#9;&#9;&#9;&#9;called = true
&#9;&#9;&#9;&#9;return &quot;never&quot;
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(&quot;foobar&quot;)
&#9;&#9;&#9;expect(called).to.equal(false)
&#9;&#9;end)

&#9;&#9;it(&quot;should reject immediately if there&apos;s a cancelled Promise in the list initially&quot;, function()
&#9;&#9;&#9;local cancelled = Promise.new(function() end)
&#9;&#9;&#9;cancelled:cancel()

&#9;&#9;&#9;local called = false
&#9;&#9;&#9;local promise = Promise.each({ 1, 2, cancelled }, function()
&#9;&#9;&#9;&#9;called = true
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(called).to.equal(false)
&#9;&#9;&#9;expect(promise._values[1].kind).to.equal(Promise.Error.Kind.AlreadyCancelled)
&#9;&#9;end)

&#9;&#9;it(&quot;should stop iteration if Promise.each is cancelled&quot;, function()
&#9;&#9;&#9;local callCounts = {}

&#9;&#9;&#9;local promise = Promise.each({
&#9;&#9;&#9;&#9;&quot;foo&quot;,
&#9;&#9;&#9;&#9;&quot;bar&quot;,
&#9;&#9;&#9;&#9;&quot;baz&quot;,
&#9;&#9;&#9;}, function(value, index)
&#9;&#9;&#9;&#9;callCounts[index] = (callCounts[index] or 0) + 1

&#9;&#9;&#9;&#9;return Promise.new(function() end)
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)
&#9;&#9;&#9;expect(callCounts[1]).to.equal(1)
&#9;&#9;&#9;expect(callCounts[2]).to.never.be.ok()

&#9;&#9;&#9;promise:cancel()

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;&#9;expect(callCounts[1]).to.equal(1)
&#9;&#9;&#9;expect(callCounts[2]).to.never.be.ok()
&#9;&#9;end)

&#9;&#9;it(&quot;should cancel the Promise returned from the predicate if Promise.each is cancelled&quot;, function()
&#9;&#9;&#9;local innerPromise

&#9;&#9;&#9;local promise = Promise.each({
&#9;&#9;&#9;&#9;&quot;foo&quot;,
&#9;&#9;&#9;&#9;&quot;bar&quot;,
&#9;&#9;&#9;&#9;&quot;baz&quot;,
&#9;&#9;&#9;}, function(value, index)
&#9;&#9;&#9;&#9;innerPromise = Promise.new(function() end)
&#9;&#9;&#9;&#9;return innerPromise
&#9;&#9;&#9;end)

&#9;&#9;&#9;promise:cancel()

&#9;&#9;&#9;expect(innerPromise:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;end)

&#9;&#9;it(&quot;should cancel Promises in the list if Promise.each is cancelled&quot;, function()
&#9;&#9;&#9;local innerPromise = Promise.new(function() end)

&#9;&#9;&#9;local promise = Promise.each({ innerPromise }, function() end)

&#9;&#9;&#9;promise:cancel()

&#9;&#9;&#9;expect(innerPromise:getStatus()).to.equal(Promise.Status.Cancelled)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.retry&quot;, function()
&#9;&#9;it(&quot;should retry N times&quot;, function()
&#9;&#9;&#9;local counter = 0

&#9;&#9;&#9;local promise = Promise.retry(function(parameter)
&#9;&#9;&#9;&#9;expect(parameter).to.equal(&quot;foo&quot;)

&#9;&#9;&#9;&#9;counter = counter + 1

&#9;&#9;&#9;&#9;if counter == 5 then
&#9;&#9;&#9;&#9;&#9;return Promise.resolve(&quot;ok&quot;)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;return Promise.reject(&quot;fail&quot;)
&#9;&#9;&#9;end, 5, &quot;foo&quot;)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(&quot;ok&quot;)
&#9;&#9;end)

&#9;&#9;it(&quot;should reject if threshold is exceeded&quot;, function()
&#9;&#9;&#9;local promise = Promise.retry(function()
&#9;&#9;&#9;&#9;return Promise.reject(&quot;fail&quot;)
&#9;&#9;&#9;end, 5)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Rejected)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(&quot;fail&quot;)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.retryWithDelay&quot;, function()
&#9;&#9;it(&quot;should retry after a delay&quot;, function()
&#9;&#9;&#9;local counter = 0

&#9;&#9;&#9;local promise = Promise.retryWithDelay(function(parameter)
&#9;&#9;&#9;&#9;expect(parameter).to.equal(&quot;foo&quot;)

&#9;&#9;&#9;&#9;counter = counter + 1

&#9;&#9;&#9;&#9;if counter == 3 then
&#9;&#9;&#9;&#9;&#9;return Promise.resolve(&quot;ok&quot;)
&#9;&#9;&#9;&#9;end

&#9;&#9;&#9;&#9;return Promise.reject(&quot;fail&quot;)
&#9;&#9;&#9;end, 3, 10, &quot;foo&quot;)

&#9;&#9;&#9;expect(counter).to.equal(1)

&#9;&#9;&#9;advanceTime(11)

&#9;&#9;&#9;expect(counter).to.equal(2)

&#9;&#9;&#9;advanceTime(11)

&#9;&#9;&#9;expect(counter).to.equal(3)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(&quot;ok&quot;)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.fromEvent&quot;, function()
&#9;&#9;it(&quot;should convert a Promise into an event&quot;, function()
&#9;&#9;&#9;local event = Instance.new(&quot;BindableEvent&quot;)

&#9;&#9;&#9;local promise = Promise.fromEvent(event.Event)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;event:Fire(&quot;foo&quot;)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(&quot;foo&quot;)
&#9;&#9;end)

&#9;&#9;it(&quot;should convert a Promise into an event with the predicate&quot;, function()
&#9;&#9;&#9;local event = Instance.new(&quot;BindableEvent&quot;)

&#9;&#9;&#9;local promise = Promise.fromEvent(event.Event, function(param)
&#9;&#9;&#9;&#9;return param == &quot;foo&quot;
&#9;&#9;&#9;end)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;event:Fire(&quot;bar&quot;)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Started)

&#9;&#9;&#9;event:Fire(&quot;foo&quot;)

&#9;&#9;&#9;expect(promise:getStatus()).to.equal(Promise.Status.Resolved)
&#9;&#9;&#9;expect(promise._values[1]).to.equal(&quot;foo&quot;)
&#9;&#9;end)
&#9;end)

&#9;describe(&quot;Promise.is&quot;, function()
&#9;&#9;it(&quot;should work with current version&quot;, function()
&#9;&#9;&#9;local promise = Promise.resolve(1)

&#9;&#9;&#9;expect(Promise.is(promise)).to.equal(true)
&#9;&#9;end)

&#9;&#9;it(&quot;should work with any object with an andThen&quot;, function()
&#9;&#9;&#9;local obj = {
&#9;&#9;&#9;&#9;andThen = function()
&#9;&#9;&#9;&#9;&#9;return 1
&#9;&#9;&#9;&#9;end,
&#9;&#9;&#9;}

&#9;&#9;&#9;expect(Promise.is(obj)).to.equal(true)
&#9;&#9;end)

&#9;&#9;it(&quot;should work with older promises&quot;, function()
&#9;&#9;&#9;local OldPromise = {}
&#9;&#9;&#9;OldPromise.prototype = {}
&#9;&#9;&#9;OldPromise.__index = OldPromise.prototype

&#9;&#9;&#9;function OldPromise.prototype:andThen() end

&#9;&#9;&#9;local oldPromise = setmetatable({}, OldPromise)

&#9;&#9;&#9;expect(Promise.is(oldPromise)).to.equal(true)
&#9;&#9;end)
&#9;end)
end
</string>
								<int64 name="SourceAssetId">-1</int64>
								<string name="Tags"></string>
								<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010ae</UniqueId>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBXFB1475031F2E4C0E949EEDF73C87FB46">
			<Properties>
				<string name="AttributesSerialize"></string>
				<bool name="DefinesCapabilities">false</bool>
				<UniqueId name="HistoryId">793a702cfff58dd608f229a400000b99</UniqueId>
				<string name="LinkedSource"></string>
				<string name="Name">manifest</string>
				<string name="ScriptGuid">{c8a98e62-a673-4d1b-a148-4c4b06c79f35}</string>
				<string name="Source">return {
&#9;[&quot;package&quot;] = {
&#9;&#9;[&quot;authors&quot;] = {
&#9;&#9;&#9;&quot;Dervex&quot;,
&#9;&#9;},
&#9;&#9;[&quot;description&quot;] = &quot;Full featured tool for Roblox development&quot;,
&#9;&#9;[&quot;license&quot;] = &quot;Apache-2.0&quot;,
&#9;&#9;[&quot;name&quot;] = &quot;lemonade-rbx/lemonade&quot;,
&#9;&#9;[&quot;private&quot;] = true,
&#9;&#9;[&quot;realm&quot;] = &quot;shared&quot;,
&#9;&#9;[&quot;registry&quot;] = &quot;https://github.com/UpliftGames/wally-index&quot;,
&#9;&#9;[&quot;version&quot;] = &quot;1.5.1&quot;,
&#9;},
&#9;[&quot;dependencies&quot;] = {
&#9;&#9;[&quot;Fusion&quot;] = &quot;dervexhero/fusion-03-dev@0.3.0-dev.1&quot;,
&#9;&#9;[&quot;Promise&quot;] = &quot;lukadev-0/typed-promise@4.0.2&quot;,
&#9;&#9;[&quot;Signal&quot;] = &quot;dervexhero/advancedsignal@1.0.1&quot;,
&#9;&#9;[&quot;hashlib&quot;] = &quot;boatbomber/hashlib@^1.0.0&quot;,
&#9;},
}</string>
				<int64 name="SourceAssetId">-1</int64>
				<string name="Tags"></string>
				<UniqueId name="UniqueId">793a702cfff58dd608f229a4000010af</UniqueId>
			</Properties>
		</Item>
	</Item>
</roblox>
